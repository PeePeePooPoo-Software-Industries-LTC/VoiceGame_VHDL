
gameconsole.elf:     file format elf32-littlenios2
gameconsole.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x01080248

Program Header:
    LOAD off    0x00001000 vaddr 0x01080000 paddr 0x01080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x01080020 paddr 0x01080020 align 2**12
         filesz 0x0000f58c memsz 0x0000f58c flags r-x
    LOAD off    0x000105ac vaddr 0x0108f5ac paddr 0x010910c8 align 2**12
         filesz 0x00001b1c memsz 0x00001b1c flags rw-
    LOAD off    0x00012be4 vaddr 0x01092be4 paddr 0x01092be4 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  01080000  01080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  01080020  01080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f01c  01080248  01080248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000348  0108f264  0108f264  00010264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b1c  0108f5ac  010910c8  000105ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  01092be4  01092be4  00012be4  2**2
                  ALLOC, SMALL_DATA
  6 .new_sdram_controller_0 00000000  00800000  00800000  000120c8  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  01092d44  01092d44  000120c8  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000120c8  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000e78  00000000  00000000  000120f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00023245  00000000  00000000  00012f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008e09  00000000  00000000  000361ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b4e6  00000000  00000000  0003efb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001f88  00000000  00000000  0004a49c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003707  00000000  00000000  0004c424  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017868  00000000  00000000  0004fb2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  00067394  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018c0  00000000  00000000  000673c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006bc62  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006bc65  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006bc71  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006bc72  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  0006bc73  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  0006bc7e  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  0006bc89  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000b  00000000  00000000  0006bc94  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000034  00000000  00000000  0006bc9f  2**0
                  CONTENTS, READONLY
 27 .jdi          00005da1  00000000  00000000  0006bcd3  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0004ffbb  00000000  00000000  00071a74  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01080000 l    d  .entry	00000000 .entry
01080020 l    d  .exceptions	00000000 .exceptions
01080248 l    d  .text	00000000 .text
0108f264 l    d  .rodata	00000000 .rodata
0108f5ac l    d  .rwdata	00000000 .rwdata
01092be4 l    d  .bss	00000000 .bss
00800000 l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
01092d44 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../gameconsole_bsp//obj/HAL/src/crt0.o
01080290 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0108f2e2 l     O .rodata	00000010 zeroes.4404
010827ac l     F .text	000000bc __sbprintf
0108f2f2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
010829bc l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
010844ec l     F .text	00000008 __fp_unlock
01084500 l     F .text	0000019c __sinit.part.1
0108469c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0108f5ac l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0108f9f0 l     O .rwdata	00000020 lc_ctype_charset
0108f9d0 l     O .rwdata	00000020 lc_message_charset
0108fa10 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0108f324 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
01087a98 l     F .text	000000fc __sprint_r.part.0
0108f458 l     O .rodata	00000010 blanks.4348
0108f448 l     O .rodata	00000010 zeroes.4349
01089024 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0108cce0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0108cdec l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0108ce18 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0108d084 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0108d164 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0108d250 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0108d424 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
010910bc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0108d670 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0108d7a4 l     F .text	00000034 alt_dev_reg
0108fff8 l     O .rwdata	00001060 jtag_uart_0
01091058 l     O .rwdata	00000030 audio_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0108da7c l     F .text	00000210 altera_avalon_jtag_uart_irq
0108dc8c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0108e438 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0108e60c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0108e74c l     F .text	0000003c alt_get_errno
0108e788 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
01092c18 g     O .bss	00000004 alt_instruction_exception_handler
010870dc g     F .text	00000074 _mprec_log10
010871c8 g     F .text	0000008c __any_on
010895c0 g     F .text	00000054 _isatty_r
0108f330 g     O .rodata	00000028 __mprec_tinytens
0108d360 g     F .text	0000007c alt_main
0108042c g     F .text	000000c0 _puts_r
01092c44 g     O .bss	00000100 alt_irq
01089614 g     F .text	00000060 _lseek_r
010910c8 g       *ABS*	00000000 __flash_rwdata_start
0108b80c g     F .text	00000088 .hidden __eqdf2
01092d44 g       *ABS*	00000000 __alt_heap_start
010803f0 g     F .text	0000003c printf
0108982c g     F .text	0000009c _wcrtomb_r
01087958 g     F .text	0000005c __sseek
0108483c g     F .text	00000010 __sinit
010896d4 g     F .text	00000140 __swbuf_r
01085304 g     F .text	0000007c _setlocale_r
010846a4 g     F .text	00000068 __sfmoreglue
0108d400 g     F .text	00000024 __malloc_unlock
01085fd4 g     F .text	0000015c memmove
01084824 g     F .text	00000018 _cleanup
01086258 g     F .text	000000a8 _Balloc
0108b894 g     F .text	000000dc .hidden __gtdf2
0108eb44 g     F .text	00000024 altera_nios2_gen2_irq_init
01080000 g     F .entry	0000001c __reset
01080020 g       *ABS*	00000000 __flash_exceptions_start
01089564 g     F .text	0000005c _fstat_r
01092bfc g     O .bss	00000004 errno
010878d4 g     F .text	00000008 __seofread
01092c08 g     O .bss	00000004 alt_argv
01099088 g       *ABS*	00000000 _gp
0108fe78 g     O .rwdata	00000180 alt_fd_list
0108eb68 g     F .text	00000090 alt_find_dev
01085e8c g     F .text	00000148 memcpy
010844f4 g     F .text	0000000c _cleanup_r
0108caf8 g     F .text	000000dc .hidden __floatsidf
0108e6d0 g     F .text	0000007c alt_io_redirect
0108b970 g     F .text	000000f4 .hidden __ltdf2
0108f264 g       *ABS*	00000000 __DTOR_END__
010804ec g     F .text	00000014 puts
0108ee34 g     F .text	0000009c alt_exception_cause_generated_bad_addr
010877b8 g     F .text	00000074 __fpclassifyd
01087038 g     F .text	000000a4 __ratio
01089008 g     F .text	0000001c __vfiprintf_internal
0108de84 g     F .text	0000021c altera_avalon_jtag_uart_read
010803c0 g     F .text	00000030 _printf_r
01080000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0108a5bc g     F .text	00000064 .hidden __udivsi3
0108d0c0 g     F .text	000000a4 isatty
0108f380 g     O .rodata	000000c8 __mprec_tens
01085380 g     F .text	0000000c __locale_charset
0108eda4 g     F .text	00000090 alt_icache_flush
01092bf8 g     O .bss	00000004 __malloc_top_pad
01091090 g     O .rwdata	00000004 __mb_cur_max
010853b0 g     F .text	0000000c _localeconv_r
01086664 g     F .text	0000003c __i2b
01084cc0 g     F .text	000004bc __sfvwrite_r
0108782c g     F .text	00000054 _sbrk_r
01089674 g     F .text	00000060 _read_r
010910b0 g     O .rwdata	00000004 alt_max_fd
01089258 g     F .text	000000f0 _fclose_r
010844bc g     F .text	00000030 fflush
01092bf4 g     O .bss	00000004 __malloc_max_sbrked_mem
0108cf04 g     F .text	00000180 alt_irq_register
0108a678 g     F .text	000008ac .hidden __adddf3
01086de0 g     F .text	0000010c __b2d
01089f8c g     F .text	00000538 .hidden __umoddi3
0108d28c g     F .text	000000d4 lseek
01091088 g     O .rwdata	00000004 _global_impure_ptr
01087254 g     F .text	00000564 _realloc_r
01092d44 g       *ABS*	00000000 __bss_end
0108ea3c g     F .text	00000108 alt_tick
01089a14 g     F .text	00000578 .hidden __udivdi3
010894c0 g     F .text	00000024 _fputwc_r
0108f358 g     O .rodata	00000028 __mprec_bigtens
01086448 g     F .text	00000104 __s2b
0108cbd4 g     F .text	000000a8 .hidden __floatunsidf
01086b20 g     F .text	00000060 __mcmp
0108485c g     F .text	00000018 __fp_lock_all
0108e9a0 g     F .text	0000009c alt_alarm_stop
01092c00 g     O .bss	00000004 alt_irq_active
010800fc g     F .exceptions	000000d8 alt_irq_handler
0108fe50 g     O .rwdata	00000028 alt_dev_null
0108e3f0 g     F .text	00000048 alt_dcache_flush_all
0108654c g     F .text	00000068 __hi0bits
0108ca78 g     F .text	00000080 .hidden __fixdfsi
010910c8 g       *ABS*	00000000 __ram_rwdata_end
010910a8 g     O .rwdata	00000008 alt_dev_list
0108d6ac g     F .text	000000f8 write
0108f5ac g       *ABS*	00000000 __ram_rodata_end
0108ce54 g     F .text	000000b0 fstat
0108b970 g     F .text	000000f4 .hidden __ledf2
01086898 g     F .text	00000140 __pow5mult
01087bac g     F .text	0000145c ___vfiprintf_internal_r
01092bec g     O .bss	00000004 __nlocale_changed
0108a620 g     F .text	00000058 .hidden __umodsi3
01092d44 g       *ABS*	00000000 end
0108d9c8 g     F .text	000000b4 altera_avalon_jtag_uart_init
010801d4 g     F .exceptions	00000074 alt_instruction_exception_entry
0108f264 g       *ABS*	00000000 __CTOR_LIST__
010e1a80 g       *ABS*	00000000 __alt_stack_pointer
0108cc7c g     F .text	00000064 .hidden __clzsi2
0108e0a0 g     F .text	00000224 altera_avalon_jtag_uart_write
0108484c g     F .text	00000004 __sfp_lock_acquire
01085da8 g     F .text	000000e4 memchr
01080598 g     F .text	000021f8 ___vfprintf_internal_r
010849b0 g     F .text	00000310 _free_r
0108538c g     F .text	00000010 __locale_mb_cur_max
0108f0b0 g     F .text	00000180 __call_exitprocs
01092be8 g     O .bss	00000004 __mlocale_changed
01091094 g     O .rwdata	00000004 __malloc_sbrk_base
01080248 g     F .text	0000004c _start
01092c10 g     O .bss	00000004 _alt_tick_rate
010869d8 g     F .text	00000148 __lshift
01092c14 g     O .bss	00000004 _alt_nticks
0108d460 g     F .text	000000fc read
0108d810 g     F .text	00000054 alt_sys_init
0108ef98 g     F .text	00000118 __register_exitproc
010866a0 g     F .text	000001f8 __multiply
0108dd2c g     F .text	00000068 altera_avalon_jtag_uart_close
0108f5ac g       *ABS*	00000000 __ram_rwdata_start
0108f264 g       *ABS*	00000000 __ram_rodata_start
01092c1c g     O .bss	00000028 __malloc_current_mallinfo
01086eec g     F .text	0000014c __d2b
0108d864 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0108ed00 g     F .text	000000a4 alt_get_fd
01089140 g     F .text	00000054 _close_r
0108ef1c g     F .text	0000007c memcmp
0108d924 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
01092d44 g       *ABS*	00000000 __alt_stack_base
0108d974 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
01082868 g     F .text	00000154 __swsetup_r
0108af24 g     F .text	000008e8 .hidden __divdf3
0108470c g     F .text	00000118 __sfp
01087150 g     F .text	00000078 __copybits
0108fa48 g     O .rwdata	00000408 __malloc_av_
01084858 g     F .text	00000004 __sinit_lock_release
0108ba64 g     F .text	00000718 .hidden __muldf3
01087880 g     F .text	00000054 __sread
0108ebf8 g     F .text	00000108 alt_find_file
0108e474 g     F .text	000000a4 alt_dev_llist_insert
0108d3dc g     F .text	00000024 __malloc_lock
0108d5c0 g     F .text	000000b0 sbrk
01084460 g     F .text	0000005c _fflush_r
01089194 g     F .text	000000c4 _calloc_r
01092be4 g       *ABS*	00000000 __bss_start
01086130 g     F .text	00000128 memset
010802ec g     F .text	000000d4 main
01092c0c g     O .bss	00000004 alt_envp
01092bf0 g     O .bss	00000004 __malloc_max_total_mem
0108d8c4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
01089814 g     F .text	00000018 __swbuf
010879b4 g     F .text	00000008 __sclose
010e1a80 g       *ABS*	00000000 __alt_heap_limit
01089348 g     F .text	00000014 fclose
01082bbc g     F .text	00001688 _dtoa_r
0108559c g     F .text	0000080c _malloc_r
01089988 g     F .text	00000030 __ascii_wctomb
010910b4 g     O .rwdata	00000004 alt_errno
0108517c g     F .text	000000c4 _fwalk
0108a4c4 g     F .text	00000084 .hidden __divsi3
0108488c g     F .text	00000124 _malloc_trim_r
0108f264 g       *ABS*	00000000 __CTOR_END__
010879bc g     F .text	000000dc strcmp
0108f264 g       *ABS*	00000000 __flash_rodata_start
0108f264 g       *ABS*	00000000 __DTOR_LIST__
0108b80c g     F .text	00000088 .hidden __nedf2
0108d7d8 g     F .text	00000038 alt_irq_init
0108d55c g     F .text	00000064 alt_release_fd
01080294 g     F .text	00000058 return_color_irq
0108f468 g     O .rodata	00000100 .hidden __clz_tab
01092be4 g     O .bss	00000004 _PathLocale
0108eed0 g     F .text	00000014 atexit
010890e0 g     F .text	00000060 _write_r
010853bc g     F .text	00000018 setlocale
0109108c g     O .rwdata	00000004 _impure_ptr
01092c04 g     O .bss	00000004 alt_argc
01084244 g     F .text	0000021c __sflush_r
0108e578 g     F .text	00000060 _do_dtors
010853a8 g     F .text	00000008 __locale_cjk_lang
01080020 g       .exceptions	00000000 alt_irq_entry
01086d7c g     F .text	00000064 __ulp
01084874 g     F .text	00000018 __fp_unlock_all
010910a0 g     O .rwdata	00000008 alt_fs_list
01080020 g       *ABS*	00000000 __ram_exceptions_start
010853d4 g     F .text	0000000c localeconv
00800000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
010910c8 g       *ABS*	00000000 _edata
01092d44 g       *ABS*	00000000 _end
0108935c g     F .text	00000164 __fputwc
01080248 g       *ABS*	00000000 __ram_exceptions_end
0108dd94 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
010878dc g     F .text	0000007c __swrite
01091098 g     O .rwdata	00000004 __malloc_trim_threshold
0108539c g     F .text	0000000c __locale_msgcharset
0108eee4 g     F .text	00000038 exit
01085240 g     F .text	000000c4 _fwalk_reent
01086b80 g     F .text	000001fc __mdiff
0108a548 g     F .text	00000074 .hidden __modsi3
010e1a80 g       *ABS*	00000000 __alt_data_end
01080020 g     F .exceptions	00000000 alt_exception
01084850 g     F .text	00000004 __sfp_lock_release
0108f230 g     F .text	00000034 _exit
0108e2c4 g     F .text	0000012c alt_alarm_start
010853e0 g     F .text	000001bc __smakebuf_r
01080500 g     F .text	00000098 strlen
0108e84c g     F .text	00000154 open
0108b894 g     F .text	000000dc .hidden __gedf2
0109109c g     O .rwdata	00000004 __wctomb
01087b94 g     F .text	00000018 __sprint_r
0108e5d8 g     F .text	00000034 alt_icache_flush_all
010910b8 g     O .rwdata	00000004 alt_priority_mask
01082790 g     F .text	0000001c __vfprintf_internal
010899b8 g     F .text	0000005c _wctomb_r
0108c17c g     F .text	000008fc .hidden __subdf3
010865b4 g     F .text	000000b0 __lo0bits
010910c0 g     O .rwdata	00000008 alt_alarm_list
0108e518 g     F .text	00000060 _do_ctors
010898c8 g     F .text	000000c0 wcrtomb
0108cd1c g     F .text	000000d0 close
0108d1cc g     F .text	00000084 alt_load
010894e4 g     F .text	00000080 fputwc
01084854 g     F .text	00000004 __sinit_lock_acquire
01086328 g     F .text	00000120 __multadd
01086300 g     F .text	00000028 _Bfree



Disassembly of section .entry:

01080000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 1080000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 1080004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 1080008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 108000c:	00bffd16 	blt	zero,r2,1080004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 1080010:	00404234 	movhi	at,264
    ori r1, r1, %lo(_start)
 1080014:	08409214 	ori	at,at,584
    jmp r1
 1080018:	0800683a 	jmp	at
 108001c:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x800000>

Disassembly of section .exceptions:

01080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1080020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1080024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1080028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 108002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1080030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1080034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1080038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 108003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1080040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1080044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1080048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 108004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1080050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1080054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1080058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 108005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1080060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1080064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1080068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 108006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1080070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1080074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1080078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 108007c:	10000326 	beq	r2,zero,108008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1080080:	20000226 	beq	r4,zero,108008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1080084:	10800fc0 	call	10800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1080088:	00000706 	br	10800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 108008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 1080090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 1080094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 1080098:	10801d40 	call	10801d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 108009c:	1000021e 	bne	r2,zero,10800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 10800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 10800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 10800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 10800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 10800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 10800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 10800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 10800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 10800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 10800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 10800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 10800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 10800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 10800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 10800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 10800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 10800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 10800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 10800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 10800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 10800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 10800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 10800f8:	ef80083a 	eret

010800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 10800fc:	defff904 	addi	sp,sp,-28
 1080100:	dfc00615 	stw	ra,24(sp)
 1080104:	df000515 	stw	fp,20(sp)
 1080108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 108010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1080110:	0005313a 	rdctl	r2,ipending
 1080114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1080118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 108011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1080120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1080124:	00800044 	movi	r2,1
 1080128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 108012c:	e0fffb17 	ldw	r3,-20(fp)
 1080130:	e0bffc17 	ldw	r2,-16(fp)
 1080134:	1884703a 	and	r2,r3,r2
 1080138:	10001526 	beq	r2,zero,1080190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 108013c:	00804274 	movhi	r2,265
 1080140:	108b1104 	addi	r2,r2,11332
 1080144:	e0fffd17 	ldw	r3,-12(fp)
 1080148:	180690fa 	slli	r3,r3,3
 108014c:	10c5883a 	add	r2,r2,r3
 1080150:	10c00017 	ldw	r3,0(r2)
 1080154:	00804274 	movhi	r2,265
 1080158:	108b1104 	addi	r2,r2,11332
 108015c:	e13ffd17 	ldw	r4,-12(fp)
 1080160:	200890fa 	slli	r4,r4,3
 1080164:	1105883a 	add	r2,r2,r4
 1080168:	10800104 	addi	r2,r2,4
 108016c:	10800017 	ldw	r2,0(r2)
 1080170:	e17ffd17 	ldw	r5,-12(fp)
 1080174:	1009883a 	mov	r4,r2
 1080178:	183ee83a 	callr	r3
#endif
        break;
 108017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1080180:	0005313a 	rdctl	r2,ipending
 1080184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1080188:	e0bfff17 	ldw	r2,-4(fp)
 108018c:	00000706 	br	10801ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 1080190:	e0bffc17 	ldw	r2,-16(fp)
 1080194:	1085883a 	add	r2,r2,r2
 1080198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 108019c:	e0bffd17 	ldw	r2,-12(fp)
 10801a0:	10800044 	addi	r2,r2,1
 10801a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 10801a8:	003fe006 	br	108012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
 10801ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 10801b0:	e0bffb17 	ldw	r2,-20(fp)
 10801b4:	103fda1e 	bne	r2,zero,1080120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 10801b8:	0001883a 	nop
}
 10801bc:	0001883a 	nop
 10801c0:	e037883a 	mov	sp,fp
 10801c4:	dfc00117 	ldw	ra,4(sp)
 10801c8:	df000017 	ldw	fp,0(sp)
 10801cc:	dec00204 	addi	sp,sp,8
 10801d0:	f800283a 	ret

010801d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 10801d4:	defffb04 	addi	sp,sp,-20
 10801d8:	dfc00415 	stw	ra,16(sp)
 10801dc:	df000315 	stw	fp,12(sp)
 10801e0:	df000304 	addi	fp,sp,12
 10801e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 10801e8:	000531fa 	rdctl	r2,exception
 10801ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 10801f0:	e0bffd17 	ldw	r2,-12(fp)
 10801f4:	10801f0c 	andi	r2,r2,124
 10801f8:	1004d0ba 	srli	r2,r2,2
 10801fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 1080200:	0005333a 	rdctl	r2,badaddr
 1080204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1080208:	d0a6e417 	ldw	r2,-25712(gp)
 108020c:	10000726 	beq	r2,zero,108022c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1080210:	d0a6e417 	ldw	r2,-25712(gp)
 1080214:	e0fffd17 	ldw	r3,-12(fp)
 1080218:	e1bffe17 	ldw	r6,-8(fp)
 108021c:	e17fff17 	ldw	r5,-4(fp)
 1080220:	1809883a 	mov	r4,r3
 1080224:	103ee83a 	callr	r2
 1080228:	00000206 	br	1080234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 108022c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 1080230:	0005883a 	mov	r2,zero
}
 1080234:	e037883a 	mov	sp,fp
 1080238:	dfc00117 	ldw	ra,4(sp)
 108023c:	df000017 	ldw	fp,0(sp)
 1080240:	dec00204 	addi	sp,sp,8
 1080244:	f800283a 	ret

Disassembly of section .text:

01080248 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 1080248:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 108024c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 1080250:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 1080254:	00bffd16 	blt	zero,r2,108024c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 1080258:	06c043b4 	movhi	sp,270
    ori sp, sp, %lo(__alt_stack_pointer)
 108025c:	dec6a014 	ori	sp,sp,6784
    movhi gp, %hi(_gp)
 1080260:	06804274 	movhi	gp,265
    ori gp, gp, %lo(_gp)
 1080264:	d6a42214 	ori	gp,gp,37000
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 1080268:	00804274 	movhi	r2,265
    ori r2, r2, %lo(__bss_start)
 108026c:	108af914 	ori	r2,r2,11236

    movhi r3, %hi(__bss_end)
 1080270:	00c04274 	movhi	r3,265
    ori r3, r3, %lo(__bss_end)
 1080274:	18cb5114 	ori	r3,r3,11588

    beq r2, r3, 1f
 1080278:	10c00326 	beq	r2,r3,1080288 <_start+0x40>

0:
    stw zero, (r2)
 108027c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 1080280:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 1080284:	10fffd36 	bltu	r2,r3,108027c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 1080288:	108d1cc0 	call	108d1cc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 108028c:	108d3600 	call	108d360 <alt_main>

01080290 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 1080290:	003fff06 	br	1080290 <alt_after_alt_main>

01080294 <return_color_irq>:
#include "sys/alt_irq.h"

#define WRITE_SDRAM(offset, value) *(NEW_SDRAM_CONTROLLER_0_BASE + offset) = value;
#define READ_SDRAM(offset) (*(NEW_SDRAM_CONTROLLER_0_BASE + offset))

void return_color_irq(void* irq_context, long unsigned int _) {
 1080294:	defffb04 	addi	sp,sp,-20
 1080298:	dfc00415 	stw	ra,16(sp)
 108029c:	df000315 	stw	fp,12(sp)
 10802a0:	df000304 	addi	fp,sp,12
 10802a4:	e13ffe15 	stw	r4,-8(fp)
 10802a8:	e17fff15 	stw	r5,-4(fp)
	int* pio_color = (int*)PIO_PIXEL_COLOR_BASE;
 10802ac:	00804434 	movhi	r2,272
 10802b0:	10840004 	addi	r2,r2,4096
 10802b4:	e0bffd15 	stw	r2,-12(fp)
	*pio_color = 0x00ffff0f;
 10802b8:	e0fffd17 	ldw	r3,-12(fp)
 10802bc:	00804034 	movhi	r2,256
 10802c0:	10bfc3c4 	addi	r2,r2,-241
 10802c4:	18800015 	stw	r2,0(r3)
	printf("Why are you running?\n");
 10802c8:	01004274 	movhi	r4,265
 10802cc:	213c9904 	addi	r4,r4,-3484
 10802d0:	10804ec0 	call	10804ec <puts>
}
 10802d4:	0001883a 	nop
 10802d8:	e037883a 	mov	sp,fp
 10802dc:	dfc00117 	ldw	ra,4(sp)
 10802e0:	df000017 	ldw	fp,0(sp)
 10802e4:	dec00204 	addi	sp,sp,8
 10802e8:	f800283a 	ret

010802ec <main>:

int main() {
 10802ec:	defffa04 	addi	sp,sp,-24
 10802f0:	dfc00515 	stw	ra,20(sp)
 10802f4:	df000415 	stw	fp,16(sp)
 10802f8:	df000404 	addi	fp,sp,16
	alt_irq_init(0);
 10802fc:	0009883a 	mov	r4,zero
 1080300:	108d7d80 	call	108d7d8 <alt_irq_init>

	alt_irq_register(
 1080304:	01804234 	movhi	r6,264
 1080308:	3180a504 	addi	r6,r6,660
 108030c:	000b883a 	mov	r5,zero
 1080310:	01000084 	movi	r4,2
 1080314:	108cf040 	call	108cf04 <alt_irq_register>
		PIO_REQUEST_IRQ,
		0,
		return_color_irq
	);

	int* pio_color = (int*)PIO_PIXEL_COLOR_BASE;
 1080318:	00804434 	movhi	r2,272
 108031c:	10840004 	addi	r2,r2,4096
 1080320:	e0bffd15 	stw	r2,-12(fp)
	int* pio_pixel_bundle = (int*)PIO_PIXEL_POSITION_BASE;
 1080324:	00804434 	movhi	r2,272
 1080328:	10840804 	addi	r2,r2,4128
 108032c:	e0bffe15 	stw	r2,-8(fp)

	printf("(%u, %u)\n", *pio_pixel_bundle >> 16, *pio_pixel_bundle & 0xffff);
 1080330:	e0bffe17 	ldw	r2,-8(fp)
 1080334:	10800017 	ldw	r2,0(r2)
 1080338:	1007d43a 	srai	r3,r2,16
 108033c:	e0bffe17 	ldw	r2,-8(fp)
 1080340:	10800017 	ldw	r2,0(r2)
 1080344:	10bfffcc 	andi	r2,r2,65535
 1080348:	100d883a 	mov	r6,r2
 108034c:	180b883a 	mov	r5,r3
 1080350:	01004274 	movhi	r4,265
 1080354:	213c9f04 	addi	r4,r4,-3460
 1080358:	10803f00 	call	10803f0 <printf>
	*pio_color = 0x00ffff03;
 108035c:	e0fffd17 	ldw	r3,-12(fp)
 1080360:	00804034 	movhi	r2,256
 1080364:	10bfc0c4 	addi	r2,r2,-253
 1080368:	18800015 	stw	r2,0(r3)
	printf("why\n");
 108036c:	01004274 	movhi	r4,265
 1080370:	213ca204 	addi	r4,r4,-3448
 1080374:	10804ec0 	call	10804ec <puts>

	int prev_value = *(int*)PIO_REQUEST_BASE;
 1080378:	00804434 	movhi	r2,272
 108037c:	10840404 	addi	r2,r2,4112
 1080380:	10800017 	ldw	r2,0(r2)
 1080384:	e0bffc15 	stw	r2,-16(fp)
	while (1) {
		int current_value = *(int*)PIO_REQUEST_BASE;
 1080388:	00804434 	movhi	r2,272
 108038c:	10840404 	addi	r2,r2,4112
 1080390:	10800017 	ldw	r2,0(r2)
 1080394:	e0bfff15 	stw	r2,-4(fp)
//		if (current_value == 1) {
//			printf("You should INTERRUPT yourself NOW!\n");
//		}
		if (prev_value != current_value) {
 1080398:	e0fffc17 	ldw	r3,-16(fp)
 108039c:	e0bfff17 	ldw	r2,-4(fp)
 10803a0:	18bff926 	beq	r3,r2,1080388 <main+0x9c>
			prev_value = current_value;
 10803a4:	e0bfff17 	ldw	r2,-4(fp)
 10803a8:	e0bffc15 	stw	r2,-16(fp)
			printf("Current: %i\n", current_value);
 10803ac:	e17fff17 	ldw	r5,-4(fp)
 10803b0:	01004274 	movhi	r4,265
 10803b4:	213ca304 	addi	r4,r4,-3444
 10803b8:	10803f00 	call	10803f0 <printf>
		}
	}
 10803bc:	003ff206 	br	1080388 <main+0x9c>

010803c0 <_printf_r>:
 10803c0:	defffd04 	addi	sp,sp,-12
 10803c4:	2805883a 	mov	r2,r5
 10803c8:	dfc00015 	stw	ra,0(sp)
 10803cc:	d9800115 	stw	r6,4(sp)
 10803d0:	d9c00215 	stw	r7,8(sp)
 10803d4:	21400217 	ldw	r5,8(r4)
 10803d8:	d9c00104 	addi	r7,sp,4
 10803dc:	100d883a 	mov	r6,r2
 10803e0:	10805980 	call	1080598 <___vfprintf_internal_r>
 10803e4:	dfc00017 	ldw	ra,0(sp)
 10803e8:	dec00304 	addi	sp,sp,12
 10803ec:	f800283a 	ret

010803f0 <printf>:
 10803f0:	defffc04 	addi	sp,sp,-16
 10803f4:	dfc00015 	stw	ra,0(sp)
 10803f8:	d9400115 	stw	r5,4(sp)
 10803fc:	d9800215 	stw	r6,8(sp)
 1080400:	d9c00315 	stw	r7,12(sp)
 1080404:	00804274 	movhi	r2,265
 1080408:	10842304 	addi	r2,r2,4236
 108040c:	10800017 	ldw	r2,0(r2)
 1080410:	200b883a 	mov	r5,r4
 1080414:	d9800104 	addi	r6,sp,4
 1080418:	11000217 	ldw	r4,8(r2)
 108041c:	10827900 	call	1082790 <__vfprintf_internal>
 1080420:	dfc00017 	ldw	ra,0(sp)
 1080424:	dec00404 	addi	sp,sp,16
 1080428:	f800283a 	ret

0108042c <_puts_r>:
 108042c:	defff604 	addi	sp,sp,-40
 1080430:	dc000715 	stw	r16,28(sp)
 1080434:	2021883a 	mov	r16,r4
 1080438:	2809883a 	mov	r4,r5
 108043c:	dc400815 	stw	r17,32(sp)
 1080440:	dfc00915 	stw	ra,36(sp)
 1080444:	2823883a 	mov	r17,r5
 1080448:	10805000 	call	1080500 <strlen>
 108044c:	10c00044 	addi	r3,r2,1
 1080450:	d8800115 	stw	r2,4(sp)
 1080454:	00804274 	movhi	r2,265
 1080458:	10bca704 	addi	r2,r2,-3428
 108045c:	d8800215 	stw	r2,8(sp)
 1080460:	00800044 	movi	r2,1
 1080464:	d8800315 	stw	r2,12(sp)
 1080468:	00800084 	movi	r2,2
 108046c:	dc400015 	stw	r17,0(sp)
 1080470:	d8c00615 	stw	r3,24(sp)
 1080474:	dec00415 	stw	sp,16(sp)
 1080478:	d8800515 	stw	r2,20(sp)
 108047c:	80000226 	beq	r16,zero,1080488 <_puts_r+0x5c>
 1080480:	80800e17 	ldw	r2,56(r16)
 1080484:	10001426 	beq	r2,zero,10804d8 <_puts_r+0xac>
 1080488:	81400217 	ldw	r5,8(r16)
 108048c:	2880030b 	ldhu	r2,12(r5)
 1080490:	10c8000c 	andi	r3,r2,8192
 1080494:	1800061e 	bne	r3,zero,10804b0 <_puts_r+0x84>
 1080498:	29001917 	ldw	r4,100(r5)
 108049c:	00f7ffc4 	movi	r3,-8193
 10804a0:	10880014 	ori	r2,r2,8192
 10804a4:	20c6703a 	and	r3,r4,r3
 10804a8:	2880030d 	sth	r2,12(r5)
 10804ac:	28c01915 	stw	r3,100(r5)
 10804b0:	d9800404 	addi	r6,sp,16
 10804b4:	8009883a 	mov	r4,r16
 10804b8:	1084cc00 	call	1084cc0 <__sfvwrite_r>
 10804bc:	1000091e 	bne	r2,zero,10804e4 <_puts_r+0xb8>
 10804c0:	00800284 	movi	r2,10
 10804c4:	dfc00917 	ldw	ra,36(sp)
 10804c8:	dc400817 	ldw	r17,32(sp)
 10804cc:	dc000717 	ldw	r16,28(sp)
 10804d0:	dec00a04 	addi	sp,sp,40
 10804d4:	f800283a 	ret
 10804d8:	8009883a 	mov	r4,r16
 10804dc:	108483c0 	call	108483c <__sinit>
 10804e0:	003fe906 	br	1080488 <_puts_r+0x5c>
 10804e4:	00bfffc4 	movi	r2,-1
 10804e8:	003ff606 	br	10804c4 <_puts_r+0x98>

010804ec <puts>:
 10804ec:	00804274 	movhi	r2,265
 10804f0:	10842304 	addi	r2,r2,4236
 10804f4:	200b883a 	mov	r5,r4
 10804f8:	11000017 	ldw	r4,0(r2)
 10804fc:	108042c1 	jmpi	108042c <_puts_r>

01080500 <strlen>:
 1080500:	208000cc 	andi	r2,r4,3
 1080504:	10002026 	beq	r2,zero,1080588 <strlen+0x88>
 1080508:	20800007 	ldb	r2,0(r4)
 108050c:	10002026 	beq	r2,zero,1080590 <strlen+0x90>
 1080510:	2005883a 	mov	r2,r4
 1080514:	00000206 	br	1080520 <strlen+0x20>
 1080518:	10c00007 	ldb	r3,0(r2)
 108051c:	18001826 	beq	r3,zero,1080580 <strlen+0x80>
 1080520:	10800044 	addi	r2,r2,1
 1080524:	10c000cc 	andi	r3,r2,3
 1080528:	183ffb1e 	bne	r3,zero,1080518 <strlen+0x18>
 108052c:	10c00017 	ldw	r3,0(r2)
 1080530:	01ffbff4 	movhi	r7,65279
 1080534:	39ffbfc4 	addi	r7,r7,-257
 1080538:	00ca303a 	nor	r5,zero,r3
 108053c:	01a02074 	movhi	r6,32897
 1080540:	19c7883a 	add	r3,r3,r7
 1080544:	31a02004 	addi	r6,r6,-32640
 1080548:	1946703a 	and	r3,r3,r5
 108054c:	1986703a 	and	r3,r3,r6
 1080550:	1800091e 	bne	r3,zero,1080578 <strlen+0x78>
 1080554:	10800104 	addi	r2,r2,4
 1080558:	10c00017 	ldw	r3,0(r2)
 108055c:	19cb883a 	add	r5,r3,r7
 1080560:	00c6303a 	nor	r3,zero,r3
 1080564:	28c6703a 	and	r3,r5,r3
 1080568:	1986703a 	and	r3,r3,r6
 108056c:	183ff926 	beq	r3,zero,1080554 <strlen+0x54>
 1080570:	00000106 	br	1080578 <strlen+0x78>
 1080574:	10800044 	addi	r2,r2,1
 1080578:	10c00007 	ldb	r3,0(r2)
 108057c:	183ffd1e 	bne	r3,zero,1080574 <strlen+0x74>
 1080580:	1105c83a 	sub	r2,r2,r4
 1080584:	f800283a 	ret
 1080588:	2005883a 	mov	r2,r4
 108058c:	003fe706 	br	108052c <strlen+0x2c>
 1080590:	0005883a 	mov	r2,zero
 1080594:	f800283a 	ret

01080598 <___vfprintf_internal_r>:
 1080598:	deffb804 	addi	sp,sp,-288
 108059c:	dfc04715 	stw	ra,284(sp)
 10805a0:	ddc04515 	stw	r23,276(sp)
 10805a4:	dd404315 	stw	r21,268(sp)
 10805a8:	d9002c15 	stw	r4,176(sp)
 10805ac:	282f883a 	mov	r23,r5
 10805b0:	302b883a 	mov	r21,r6
 10805b4:	d9c02d15 	stw	r7,180(sp)
 10805b8:	df004615 	stw	fp,280(sp)
 10805bc:	dd804415 	stw	r22,272(sp)
 10805c0:	dd004215 	stw	r20,264(sp)
 10805c4:	dcc04115 	stw	r19,260(sp)
 10805c8:	dc804015 	stw	r18,256(sp)
 10805cc:	dc403f15 	stw	r17,252(sp)
 10805d0:	dc003e15 	stw	r16,248(sp)
 10805d4:	10853b00 	call	10853b0 <_localeconv_r>
 10805d8:	10800017 	ldw	r2,0(r2)
 10805dc:	1009883a 	mov	r4,r2
 10805e0:	d8803415 	stw	r2,208(sp)
 10805e4:	10805000 	call	1080500 <strlen>
 10805e8:	d8803715 	stw	r2,220(sp)
 10805ec:	d8802c17 	ldw	r2,176(sp)
 10805f0:	10000226 	beq	r2,zero,10805fc <___vfprintf_internal_r+0x64>
 10805f4:	10800e17 	ldw	r2,56(r2)
 10805f8:	1000f926 	beq	r2,zero,10809e0 <___vfprintf_internal_r+0x448>
 10805fc:	b880030b 	ldhu	r2,12(r23)
 1080600:	10c8000c 	andi	r3,r2,8192
 1080604:	1800061e 	bne	r3,zero,1080620 <___vfprintf_internal_r+0x88>
 1080608:	b9001917 	ldw	r4,100(r23)
 108060c:	00f7ffc4 	movi	r3,-8193
 1080610:	10880014 	ori	r2,r2,8192
 1080614:	20c6703a 	and	r3,r4,r3
 1080618:	b880030d 	sth	r2,12(r23)
 108061c:	b8c01915 	stw	r3,100(r23)
 1080620:	10c0020c 	andi	r3,r2,8
 1080624:	1800c126 	beq	r3,zero,108092c <___vfprintf_internal_r+0x394>
 1080628:	b8c00417 	ldw	r3,16(r23)
 108062c:	1800bf26 	beq	r3,zero,108092c <___vfprintf_internal_r+0x394>
 1080630:	1080068c 	andi	r2,r2,26
 1080634:	00c00284 	movi	r3,10
 1080638:	10c0c426 	beq	r2,r3,108094c <___vfprintf_internal_r+0x3b4>
 108063c:	d8c00404 	addi	r3,sp,16
 1080640:	05004274 	movhi	r20,265
 1080644:	d9001e04 	addi	r4,sp,120
 1080648:	a53cb884 	addi	r20,r20,-3358
 108064c:	d8c01e15 	stw	r3,120(sp)
 1080650:	d8002015 	stw	zero,128(sp)
 1080654:	d8001f15 	stw	zero,124(sp)
 1080658:	d8003315 	stw	zero,204(sp)
 108065c:	d8003615 	stw	zero,216(sp)
 1080660:	d8003815 	stw	zero,224(sp)
 1080664:	1811883a 	mov	r8,r3
 1080668:	d8003915 	stw	zero,228(sp)
 108066c:	d8003a15 	stw	zero,232(sp)
 1080670:	d8002f15 	stw	zero,188(sp)
 1080674:	d9002815 	stw	r4,160(sp)
 1080678:	a8800007 	ldb	r2,0(r21)
 108067c:	10027b26 	beq	r2,zero,108106c <___vfprintf_internal_r+0xad4>
 1080680:	00c00944 	movi	r3,37
 1080684:	a821883a 	mov	r16,r21
 1080688:	10c0021e 	bne	r2,r3,1080694 <___vfprintf_internal_r+0xfc>
 108068c:	00001406 	br	10806e0 <___vfprintf_internal_r+0x148>
 1080690:	10c00326 	beq	r2,r3,10806a0 <___vfprintf_internal_r+0x108>
 1080694:	84000044 	addi	r16,r16,1
 1080698:	80800007 	ldb	r2,0(r16)
 108069c:	103ffc1e 	bne	r2,zero,1080690 <___vfprintf_internal_r+0xf8>
 10806a0:	8563c83a 	sub	r17,r16,r21
 10806a4:	88000e26 	beq	r17,zero,10806e0 <___vfprintf_internal_r+0x148>
 10806a8:	d8c02017 	ldw	r3,128(sp)
 10806ac:	d8801f17 	ldw	r2,124(sp)
 10806b0:	45400015 	stw	r21,0(r8)
 10806b4:	1c47883a 	add	r3,r3,r17
 10806b8:	10800044 	addi	r2,r2,1
 10806bc:	d8c02015 	stw	r3,128(sp)
 10806c0:	44400115 	stw	r17,4(r8)
 10806c4:	d8801f15 	stw	r2,124(sp)
 10806c8:	00c001c4 	movi	r3,7
 10806cc:	1880a716 	blt	r3,r2,108096c <___vfprintf_internal_r+0x3d4>
 10806d0:	42000204 	addi	r8,r8,8
 10806d4:	d9402f17 	ldw	r5,188(sp)
 10806d8:	2c4b883a 	add	r5,r5,r17
 10806dc:	d9402f15 	stw	r5,188(sp)
 10806e0:	80800007 	ldb	r2,0(r16)
 10806e4:	1000a826 	beq	r2,zero,1080988 <___vfprintf_internal_r+0x3f0>
 10806e8:	84400047 	ldb	r17,1(r16)
 10806ec:	00bfffc4 	movi	r2,-1
 10806f0:	85400044 	addi	r21,r16,1
 10806f4:	d8002785 	stb	zero,158(sp)
 10806f8:	0007883a 	mov	r3,zero
 10806fc:	000f883a 	mov	r7,zero
 1080700:	d8802915 	stw	r2,164(sp)
 1080704:	d8003115 	stw	zero,196(sp)
 1080708:	0025883a 	mov	r18,zero
 108070c:	01401604 	movi	r5,88
 1080710:	01800244 	movi	r6,9
 1080714:	02800a84 	movi	r10,42
 1080718:	02401b04 	movi	r9,108
 108071c:	ad400044 	addi	r21,r21,1
 1080720:	88bff804 	addi	r2,r17,-32
 1080724:	28830436 	bltu	r5,r2,1081338 <___vfprintf_internal_r+0xda0>
 1080728:	100490ba 	slli	r2,r2,2
 108072c:	01004234 	movhi	r4,264
 1080730:	2101d004 	addi	r4,r4,1856
 1080734:	1105883a 	add	r2,r2,r4
 1080738:	10800017 	ldw	r2,0(r2)
 108073c:	1000683a 	jmp	r2
 1080740:	01081258 	cmpnei	r4,zero,8265
 1080744:	01081338 	rdprs	r4,zero,8268
 1080748:	01081338 	rdprs	r4,zero,8268
 108074c:	01081278 	rdprs	r4,zero,8265
 1080750:	01081338 	rdprs	r4,zero,8268
 1080754:	01081338 	rdprs	r4,zero,8268
 1080758:	01081338 	rdprs	r4,zero,8268
 108075c:	01081338 	rdprs	r4,zero,8268
 1080760:	01081338 	rdprs	r4,zero,8268
 1080764:	01081338 	rdprs	r4,zero,8268
 1080768:	010809ec 	andhi	r4,zero,8231
 108076c:	01081194 	movui	r4,8262
 1080770:	01081338 	rdprs	r4,zero,8268
 1080774:	010808b4 	movhi	r4,8226
 1080778:	01080a14 	movui	r4,8232
 108077c:	01081338 	rdprs	r4,zero,8268
 1080780:	01080a54 	movui	r4,8233
 1080784:	01080a60 	cmpeqi	r4,zero,8233
 1080788:	01080a60 	cmpeqi	r4,zero,8233
 108078c:	01080a60 	cmpeqi	r4,zero,8233
 1080790:	01080a60 	cmpeqi	r4,zero,8233
 1080794:	01080a60 	cmpeqi	r4,zero,8233
 1080798:	01080a60 	cmpeqi	r4,zero,8233
 108079c:	01080a60 	cmpeqi	r4,zero,8233
 10807a0:	01080a60 	cmpeqi	r4,zero,8233
 10807a4:	01080a60 	cmpeqi	r4,zero,8233
 10807a8:	01081338 	rdprs	r4,zero,8268
 10807ac:	01081338 	rdprs	r4,zero,8268
 10807b0:	01081338 	rdprs	r4,zero,8268
 10807b4:	01081338 	rdprs	r4,zero,8268
 10807b8:	01081338 	rdprs	r4,zero,8268
 10807bc:	01081338 	rdprs	r4,zero,8268
 10807c0:	01081338 	rdprs	r4,zero,8268
 10807c4:	01081338 	rdprs	r4,zero,8268
 10807c8:	01081338 	rdprs	r4,zero,8268
 10807cc:	01081338 	rdprs	r4,zero,8268
 10807d0:	01080a94 	movui	r4,8234
 10807d4:	01080b50 	cmplti	r4,zero,8237
 10807d8:	01081338 	rdprs	r4,zero,8268
 10807dc:	01080b50 	cmplti	r4,zero,8237
 10807e0:	01081338 	rdprs	r4,zero,8268
 10807e4:	01081338 	rdprs	r4,zero,8268
 10807e8:	01081338 	rdprs	r4,zero,8268
 10807ec:	01081338 	rdprs	r4,zero,8268
 10807f0:	01080bf0 	cmpltui	r4,zero,8239
 10807f4:	01081338 	rdprs	r4,zero,8268
 10807f8:	01081338 	rdprs	r4,zero,8268
 10807fc:	01080bfc 	xorhi	r4,zero,8239
 1080800:	01081338 	rdprs	r4,zero,8268
 1080804:	01081338 	rdprs	r4,zero,8268
 1080808:	01081338 	rdprs	r4,zero,8268
 108080c:	01081338 	rdprs	r4,zero,8268
 1080810:	01081338 	rdprs	r4,zero,8268
 1080814:	01081074 	movhi	r4,8257
 1080818:	01081338 	rdprs	r4,zero,8268
 108081c:	01081338 	rdprs	r4,zero,8268
 1080820:	010810d4 	movui	r4,8259
 1080824:	01081338 	rdprs	r4,zero,8268
 1080828:	01081338 	rdprs	r4,zero,8268
 108082c:	01081338 	rdprs	r4,zero,8268
 1080830:	01081338 	rdprs	r4,zero,8268
 1080834:	01081338 	rdprs	r4,zero,8268
 1080838:	01081338 	rdprs	r4,zero,8268
 108083c:	01081338 	rdprs	r4,zero,8268
 1080840:	01081338 	rdprs	r4,zero,8268
 1080844:	01081338 	rdprs	r4,zero,8268
 1080848:	01081338 	rdprs	r4,zero,8268
 108084c:	010812e4 	muli	r4,zero,8267
 1080850:	01081284 	movi	r4,8266
 1080854:	01080b50 	cmplti	r4,zero,8237
 1080858:	01080b50 	cmplti	r4,zero,8237
 108085c:	01080b50 	cmplti	r4,zero,8237
 1080860:	01081294 	movui	r4,8266
 1080864:	01081284 	movi	r4,8266
 1080868:	01081338 	rdprs	r4,zero,8268
 108086c:	01081338 	rdprs	r4,zero,8268
 1080870:	010812a0 	cmpeqi	r4,zero,8266
 1080874:	01081338 	rdprs	r4,zero,8268
 1080878:	010812b0 	cmpltui	r4,zero,8266
 108087c:	01081184 	movi	r4,8262
 1080880:	010808c0 	call	10808c <__alt_mem_new_sdram_controller_0-0x6f7f74>
 1080884:	010811a4 	muli	r4,zero,8262
 1080888:	01081338 	rdprs	r4,zero,8268
 108088c:	010811b0 	cmpltui	r4,zero,8262
 1080890:	01081338 	rdprs	r4,zero,8268
 1080894:	0108120c 	andi	r4,zero,8264
 1080898:	01081338 	rdprs	r4,zero,8268
 108089c:	01081338 	rdprs	r4,zero,8268
 10808a0:	0108121c 	xori	r4,zero,8264
 10808a4:	d9003117 	ldw	r4,196(sp)
 10808a8:	d8802d15 	stw	r2,180(sp)
 10808ac:	0109c83a 	sub	r4,zero,r4
 10808b0:	d9003115 	stw	r4,196(sp)
 10808b4:	94800114 	ori	r18,r18,4
 10808b8:	ac400007 	ldb	r17,0(r21)
 10808bc:	003f9706 	br	108071c <___vfprintf_internal_r+0x184>
 10808c0:	00800c04 	movi	r2,48
 10808c4:	d9002d17 	ldw	r4,180(sp)
 10808c8:	d9402917 	ldw	r5,164(sp)
 10808cc:	d8802705 	stb	r2,156(sp)
 10808d0:	00801e04 	movi	r2,120
 10808d4:	d8802745 	stb	r2,157(sp)
 10808d8:	d8002785 	stb	zero,158(sp)
 10808dc:	20c00104 	addi	r3,r4,4
 10808e0:	24c00017 	ldw	r19,0(r4)
 10808e4:	002d883a 	mov	r22,zero
 10808e8:	90800094 	ori	r2,r18,2
 10808ec:	28029a16 	blt	r5,zero,1081358 <___vfprintf_internal_r+0xdc0>
 10808f0:	00bfdfc4 	movi	r2,-129
 10808f4:	90a4703a 	and	r18,r18,r2
 10808f8:	d8c02d15 	stw	r3,180(sp)
 10808fc:	94800094 	ori	r18,r18,2
 1080900:	9802871e 	bne	r19,zero,1081320 <___vfprintf_internal_r+0xd88>
 1080904:	00804274 	movhi	r2,265
 1080908:	10bcb104 	addi	r2,r2,-3388
 108090c:	d8803915 	stw	r2,228(sp)
 1080910:	04401e04 	movi	r17,120
 1080914:	d8802917 	ldw	r2,164(sp)
 1080918:	0039883a 	mov	fp,zero
 108091c:	1001e926 	beq	r2,zero,10810c4 <___vfprintf_internal_r+0xb2c>
 1080920:	0027883a 	mov	r19,zero
 1080924:	002d883a 	mov	r22,zero
 1080928:	00020506 	br	1081140 <___vfprintf_internal_r+0xba8>
 108092c:	d9002c17 	ldw	r4,176(sp)
 1080930:	b80b883a 	mov	r5,r23
 1080934:	10828680 	call	1082868 <__swsetup_r>
 1080938:	1005ac1e 	bne	r2,zero,1081fec <___vfprintf_internal_r+0x1a54>
 108093c:	b880030b 	ldhu	r2,12(r23)
 1080940:	00c00284 	movi	r3,10
 1080944:	1080068c 	andi	r2,r2,26
 1080948:	10ff3c1e 	bne	r2,r3,108063c <___vfprintf_internal_r+0xa4>
 108094c:	b880038f 	ldh	r2,14(r23)
 1080950:	103f3a16 	blt	r2,zero,108063c <___vfprintf_internal_r+0xa4>
 1080954:	d9c02d17 	ldw	r7,180(sp)
 1080958:	d9002c17 	ldw	r4,176(sp)
 108095c:	a80d883a 	mov	r6,r21
 1080960:	b80b883a 	mov	r5,r23
 1080964:	10827ac0 	call	10827ac <__sbprintf>
 1080968:	00001106 	br	10809b0 <___vfprintf_internal_r+0x418>
 108096c:	d9002c17 	ldw	r4,176(sp)
 1080970:	d9801e04 	addi	r6,sp,120
 1080974:	b80b883a 	mov	r5,r23
 1080978:	1087b940 	call	1087b94 <__sprint_r>
 108097c:	1000081e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1080980:	da000404 	addi	r8,sp,16
 1080984:	003f5306 	br	10806d4 <___vfprintf_internal_r+0x13c>
 1080988:	d8802017 	ldw	r2,128(sp)
 108098c:	10000426 	beq	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1080990:	d9002c17 	ldw	r4,176(sp)
 1080994:	d9801e04 	addi	r6,sp,120
 1080998:	b80b883a 	mov	r5,r23
 108099c:	1087b940 	call	1087b94 <__sprint_r>
 10809a0:	b880030b 	ldhu	r2,12(r23)
 10809a4:	1080100c 	andi	r2,r2,64
 10809a8:	1005901e 	bne	r2,zero,1081fec <___vfprintf_internal_r+0x1a54>
 10809ac:	d8802f17 	ldw	r2,188(sp)
 10809b0:	dfc04717 	ldw	ra,284(sp)
 10809b4:	df004617 	ldw	fp,280(sp)
 10809b8:	ddc04517 	ldw	r23,276(sp)
 10809bc:	dd804417 	ldw	r22,272(sp)
 10809c0:	dd404317 	ldw	r21,268(sp)
 10809c4:	dd004217 	ldw	r20,264(sp)
 10809c8:	dcc04117 	ldw	r19,260(sp)
 10809cc:	dc804017 	ldw	r18,256(sp)
 10809d0:	dc403f17 	ldw	r17,252(sp)
 10809d4:	dc003e17 	ldw	r16,248(sp)
 10809d8:	dec04804 	addi	sp,sp,288
 10809dc:	f800283a 	ret
 10809e0:	d9002c17 	ldw	r4,176(sp)
 10809e4:	108483c0 	call	108483c <__sinit>
 10809e8:	003f0406 	br	10805fc <___vfprintf_internal_r+0x64>
 10809ec:	d8802d17 	ldw	r2,180(sp)
 10809f0:	d9002d17 	ldw	r4,180(sp)
 10809f4:	10800017 	ldw	r2,0(r2)
 10809f8:	d8803115 	stw	r2,196(sp)
 10809fc:	20800104 	addi	r2,r4,4
 1080a00:	d9003117 	ldw	r4,196(sp)
 1080a04:	203fa716 	blt	r4,zero,10808a4 <___vfprintf_internal_r+0x30c>
 1080a08:	d8802d15 	stw	r2,180(sp)
 1080a0c:	ac400007 	ldb	r17,0(r21)
 1080a10:	003f4206 	br	108071c <___vfprintf_internal_r+0x184>
 1080a14:	ac400007 	ldb	r17,0(r21)
 1080a18:	aac00044 	addi	r11,r21,1
 1080a1c:	8a872826 	beq	r17,r10,10826c0 <___vfprintf_internal_r+0x2128>
 1080a20:	88bff404 	addi	r2,r17,-48
 1080a24:	0009883a 	mov	r4,zero
 1080a28:	30867d36 	bltu	r6,r2,1082420 <___vfprintf_internal_r+0x1e88>
 1080a2c:	5c400007 	ldb	r17,0(r11)
 1080a30:	210002a4 	muli	r4,r4,10
 1080a34:	5d400044 	addi	r21,r11,1
 1080a38:	a817883a 	mov	r11,r21
 1080a3c:	2089883a 	add	r4,r4,r2
 1080a40:	88bff404 	addi	r2,r17,-48
 1080a44:	30bff92e 	bgeu	r6,r2,1080a2c <___vfprintf_internal_r+0x494>
 1080a48:	2005c916 	blt	r4,zero,1082170 <___vfprintf_internal_r+0x1bd8>
 1080a4c:	d9002915 	stw	r4,164(sp)
 1080a50:	003f3306 	br	1080720 <___vfprintf_internal_r+0x188>
 1080a54:	94802014 	ori	r18,r18,128
 1080a58:	ac400007 	ldb	r17,0(r21)
 1080a5c:	003f2f06 	br	108071c <___vfprintf_internal_r+0x184>
 1080a60:	a809883a 	mov	r4,r21
 1080a64:	d8003115 	stw	zero,196(sp)
 1080a68:	88bff404 	addi	r2,r17,-48
 1080a6c:	0017883a 	mov	r11,zero
 1080a70:	24400007 	ldb	r17,0(r4)
 1080a74:	5ac002a4 	muli	r11,r11,10
 1080a78:	ad400044 	addi	r21,r21,1
 1080a7c:	a809883a 	mov	r4,r21
 1080a80:	12d7883a 	add	r11,r2,r11
 1080a84:	88bff404 	addi	r2,r17,-48
 1080a88:	30bff92e 	bgeu	r6,r2,1080a70 <___vfprintf_internal_r+0x4d8>
 1080a8c:	dac03115 	stw	r11,196(sp)
 1080a90:	003f2306 	br	1080720 <___vfprintf_internal_r+0x188>
 1080a94:	18c03fcc 	andi	r3,r3,255
 1080a98:	18072b1e 	bne	r3,zero,1082748 <___vfprintf_internal_r+0x21b0>
 1080a9c:	94800414 	ori	r18,r18,16
 1080aa0:	9080080c 	andi	r2,r18,32
 1080aa4:	10037b26 	beq	r2,zero,1081894 <___vfprintf_internal_r+0x12fc>
 1080aa8:	d9402d17 	ldw	r5,180(sp)
 1080aac:	28800117 	ldw	r2,4(r5)
 1080ab0:	2cc00017 	ldw	r19,0(r5)
 1080ab4:	29400204 	addi	r5,r5,8
 1080ab8:	d9402d15 	stw	r5,180(sp)
 1080abc:	102d883a 	mov	r22,r2
 1080ac0:	10044b16 	blt	r2,zero,1081bf0 <___vfprintf_internal_r+0x1658>
 1080ac4:	d9402917 	ldw	r5,164(sp)
 1080ac8:	df002783 	ldbu	fp,158(sp)
 1080acc:	2803bc16 	blt	r5,zero,10819c0 <___vfprintf_internal_r+0x1428>
 1080ad0:	00ffdfc4 	movi	r3,-129
 1080ad4:	9d84b03a 	or	r2,r19,r22
 1080ad8:	90e4703a 	and	r18,r18,r3
 1080adc:	10017726 	beq	r2,zero,10810bc <___vfprintf_internal_r+0xb24>
 1080ae0:	b0038326 	beq	r22,zero,10818f0 <___vfprintf_internal_r+0x1358>
 1080ae4:	dc402a15 	stw	r17,168(sp)
 1080ae8:	dc001e04 	addi	r16,sp,120
 1080aec:	b023883a 	mov	r17,r22
 1080af0:	402d883a 	mov	r22,r8
 1080af4:	9809883a 	mov	r4,r19
 1080af8:	880b883a 	mov	r5,r17
 1080afc:	01800284 	movi	r6,10
 1080b00:	000f883a 	mov	r7,zero
 1080b04:	1089f8c0 	call	1089f8c <__umoddi3>
 1080b08:	10800c04 	addi	r2,r2,48
 1080b0c:	843fffc4 	addi	r16,r16,-1
 1080b10:	9809883a 	mov	r4,r19
 1080b14:	880b883a 	mov	r5,r17
 1080b18:	80800005 	stb	r2,0(r16)
 1080b1c:	01800284 	movi	r6,10
 1080b20:	000f883a 	mov	r7,zero
 1080b24:	1089a140 	call	1089a14 <__udivdi3>
 1080b28:	1027883a 	mov	r19,r2
 1080b2c:	10c4b03a 	or	r2,r2,r3
 1080b30:	1823883a 	mov	r17,r3
 1080b34:	103fef1e 	bne	r2,zero,1080af4 <___vfprintf_internal_r+0x55c>
 1080b38:	d8c02817 	ldw	r3,160(sp)
 1080b3c:	dc402a17 	ldw	r17,168(sp)
 1080b40:	b011883a 	mov	r8,r22
 1080b44:	1c07c83a 	sub	r3,r3,r16
 1080b48:	d8c02e15 	stw	r3,184(sp)
 1080b4c:	00005906 	br	1080cb4 <___vfprintf_internal_r+0x71c>
 1080b50:	18c03fcc 	andi	r3,r3,255
 1080b54:	1806fa1e 	bne	r3,zero,1082740 <___vfprintf_internal_r+0x21a8>
 1080b58:	9080020c 	andi	r2,r18,8
 1080b5c:	10048a26 	beq	r2,zero,1081d88 <___vfprintf_internal_r+0x17f0>
 1080b60:	d8c02d17 	ldw	r3,180(sp)
 1080b64:	d9002d17 	ldw	r4,180(sp)
 1080b68:	d9402d17 	ldw	r5,180(sp)
 1080b6c:	18c00017 	ldw	r3,0(r3)
 1080b70:	21000117 	ldw	r4,4(r4)
 1080b74:	29400204 	addi	r5,r5,8
 1080b78:	d8c03615 	stw	r3,216(sp)
 1080b7c:	d9003815 	stw	r4,224(sp)
 1080b80:	d9402d15 	stw	r5,180(sp)
 1080b84:	d9003617 	ldw	r4,216(sp)
 1080b88:	d9403817 	ldw	r5,224(sp)
 1080b8c:	da003d15 	stw	r8,244(sp)
 1080b90:	04000044 	movi	r16,1
 1080b94:	10877b80 	call	10877b8 <__fpclassifyd>
 1080b98:	da003d17 	ldw	r8,244(sp)
 1080b9c:	14041f1e 	bne	r2,r16,1081c1c <___vfprintf_internal_r+0x1684>
 1080ba0:	d9003617 	ldw	r4,216(sp)
 1080ba4:	d9403817 	ldw	r5,224(sp)
 1080ba8:	000d883a 	mov	r6,zero
 1080bac:	000f883a 	mov	r7,zero
 1080bb0:	108b9700 	call	108b970 <__ledf2>
 1080bb4:	da003d17 	ldw	r8,244(sp)
 1080bb8:	1005be16 	blt	r2,zero,10822b4 <___vfprintf_internal_r+0x1d1c>
 1080bbc:	df002783 	ldbu	fp,158(sp)
 1080bc0:	008011c4 	movi	r2,71
 1080bc4:	1445330e 	bge	r2,r17,1082094 <___vfprintf_internal_r+0x1afc>
 1080bc8:	04004274 	movhi	r16,265
 1080bcc:	843ca904 	addi	r16,r16,-3420
 1080bd0:	00c000c4 	movi	r3,3
 1080bd4:	00bfdfc4 	movi	r2,-129
 1080bd8:	d8c02a15 	stw	r3,168(sp)
 1080bdc:	90a4703a 	and	r18,r18,r2
 1080be0:	d8c02e15 	stw	r3,184(sp)
 1080be4:	d8002915 	stw	zero,164(sp)
 1080be8:	d8003215 	stw	zero,200(sp)
 1080bec:	00003706 	br	1080ccc <___vfprintf_internal_r+0x734>
 1080bf0:	94800214 	ori	r18,r18,8
 1080bf4:	ac400007 	ldb	r17,0(r21)
 1080bf8:	003ec806 	br	108071c <___vfprintf_internal_r+0x184>
 1080bfc:	18c03fcc 	andi	r3,r3,255
 1080c00:	1806db1e 	bne	r3,zero,1082770 <___vfprintf_internal_r+0x21d8>
 1080c04:	94800414 	ori	r18,r18,16
 1080c08:	9080080c 	andi	r2,r18,32
 1080c0c:	1002d826 	beq	r2,zero,1081770 <___vfprintf_internal_r+0x11d8>
 1080c10:	d9402d17 	ldw	r5,180(sp)
 1080c14:	d8c02917 	ldw	r3,164(sp)
 1080c18:	d8002785 	stb	zero,158(sp)
 1080c1c:	28800204 	addi	r2,r5,8
 1080c20:	2cc00017 	ldw	r19,0(r5)
 1080c24:	2d800117 	ldw	r22,4(r5)
 1080c28:	18048f16 	blt	r3,zero,1081e68 <___vfprintf_internal_r+0x18d0>
 1080c2c:	013fdfc4 	movi	r4,-129
 1080c30:	9d86b03a 	or	r3,r19,r22
 1080c34:	d8802d15 	stw	r2,180(sp)
 1080c38:	9124703a 	and	r18,r18,r4
 1080c3c:	1802d91e 	bne	r3,zero,10817a4 <___vfprintf_internal_r+0x120c>
 1080c40:	d8c02917 	ldw	r3,164(sp)
 1080c44:	0039883a 	mov	fp,zero
 1080c48:	1805c326 	beq	r3,zero,1082358 <___vfprintf_internal_r+0x1dc0>
 1080c4c:	0027883a 	mov	r19,zero
 1080c50:	002d883a 	mov	r22,zero
 1080c54:	dc001e04 	addi	r16,sp,120
 1080c58:	9806d0fa 	srli	r3,r19,3
 1080c5c:	b008977a 	slli	r4,r22,29
 1080c60:	b02cd0fa 	srli	r22,r22,3
 1080c64:	9cc001cc 	andi	r19,r19,7
 1080c68:	98800c04 	addi	r2,r19,48
 1080c6c:	843fffc4 	addi	r16,r16,-1
 1080c70:	20e6b03a 	or	r19,r4,r3
 1080c74:	80800005 	stb	r2,0(r16)
 1080c78:	9d86b03a 	or	r3,r19,r22
 1080c7c:	183ff61e 	bne	r3,zero,1080c58 <___vfprintf_internal_r+0x6c0>
 1080c80:	90c0004c 	andi	r3,r18,1
 1080c84:	18013b26 	beq	r3,zero,1081174 <___vfprintf_internal_r+0xbdc>
 1080c88:	10803fcc 	andi	r2,r2,255
 1080c8c:	1080201c 	xori	r2,r2,128
 1080c90:	10bfe004 	addi	r2,r2,-128
 1080c94:	00c00c04 	movi	r3,48
 1080c98:	10c13626 	beq	r2,r3,1081174 <___vfprintf_internal_r+0xbdc>
 1080c9c:	80ffffc5 	stb	r3,-1(r16)
 1080ca0:	d8c02817 	ldw	r3,160(sp)
 1080ca4:	80bfffc4 	addi	r2,r16,-1
 1080ca8:	1021883a 	mov	r16,r2
 1080cac:	1887c83a 	sub	r3,r3,r2
 1080cb0:	d8c02e15 	stw	r3,184(sp)
 1080cb4:	d8802e17 	ldw	r2,184(sp)
 1080cb8:	d9002917 	ldw	r4,164(sp)
 1080cbc:	1100010e 	bge	r2,r4,1080cc4 <___vfprintf_internal_r+0x72c>
 1080cc0:	2005883a 	mov	r2,r4
 1080cc4:	d8802a15 	stw	r2,168(sp)
 1080cc8:	d8003215 	stw	zero,200(sp)
 1080ccc:	e7003fcc 	andi	fp,fp,255
 1080cd0:	e700201c 	xori	fp,fp,128
 1080cd4:	e73fe004 	addi	fp,fp,-128
 1080cd8:	e0000326 	beq	fp,zero,1080ce8 <___vfprintf_internal_r+0x750>
 1080cdc:	d8c02a17 	ldw	r3,168(sp)
 1080ce0:	18c00044 	addi	r3,r3,1
 1080ce4:	d8c02a15 	stw	r3,168(sp)
 1080ce8:	90c0008c 	andi	r3,r18,2
 1080cec:	d8c02b15 	stw	r3,172(sp)
 1080cf0:	18000326 	beq	r3,zero,1080d00 <___vfprintf_internal_r+0x768>
 1080cf4:	d8c02a17 	ldw	r3,168(sp)
 1080cf8:	18c00084 	addi	r3,r3,2
 1080cfc:	d8c02a15 	stw	r3,168(sp)
 1080d00:	90c0210c 	andi	r3,r18,132
 1080d04:	d8c03015 	stw	r3,192(sp)
 1080d08:	1801a31e 	bne	r3,zero,1081398 <___vfprintf_internal_r+0xe00>
 1080d0c:	d9003117 	ldw	r4,196(sp)
 1080d10:	d8c02a17 	ldw	r3,168(sp)
 1080d14:	20e7c83a 	sub	r19,r4,r3
 1080d18:	04c19f0e 	bge	zero,r19,1081398 <___vfprintf_internal_r+0xe00>
 1080d1c:	02400404 	movi	r9,16
 1080d20:	d8c02017 	ldw	r3,128(sp)
 1080d24:	d8801f17 	ldw	r2,124(sp)
 1080d28:	4cc50d0e 	bge	r9,r19,1082160 <___vfprintf_internal_r+0x1bc8>
 1080d2c:	01404274 	movhi	r5,265
 1080d30:	297cbc84 	addi	r5,r5,-3342
 1080d34:	dc403b15 	stw	r17,236(sp)
 1080d38:	d9403515 	stw	r5,212(sp)
 1080d3c:	9823883a 	mov	r17,r19
 1080d40:	482d883a 	mov	r22,r9
 1080d44:	9027883a 	mov	r19,r18
 1080d48:	070001c4 	movi	fp,7
 1080d4c:	8025883a 	mov	r18,r16
 1080d50:	dc002c17 	ldw	r16,176(sp)
 1080d54:	00000306 	br	1080d64 <___vfprintf_internal_r+0x7cc>
 1080d58:	8c7ffc04 	addi	r17,r17,-16
 1080d5c:	42000204 	addi	r8,r8,8
 1080d60:	b440130e 	bge	r22,r17,1080db0 <___vfprintf_internal_r+0x818>
 1080d64:	01004274 	movhi	r4,265
 1080d68:	18c00404 	addi	r3,r3,16
 1080d6c:	10800044 	addi	r2,r2,1
 1080d70:	213cbc84 	addi	r4,r4,-3342
 1080d74:	41000015 	stw	r4,0(r8)
 1080d78:	45800115 	stw	r22,4(r8)
 1080d7c:	d8c02015 	stw	r3,128(sp)
 1080d80:	d8801f15 	stw	r2,124(sp)
 1080d84:	e0bff40e 	bge	fp,r2,1080d58 <___vfprintf_internal_r+0x7c0>
 1080d88:	d9801e04 	addi	r6,sp,120
 1080d8c:	b80b883a 	mov	r5,r23
 1080d90:	8009883a 	mov	r4,r16
 1080d94:	1087b940 	call	1087b94 <__sprint_r>
 1080d98:	103f011e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1080d9c:	8c7ffc04 	addi	r17,r17,-16
 1080da0:	d8c02017 	ldw	r3,128(sp)
 1080da4:	d8801f17 	ldw	r2,124(sp)
 1080da8:	da000404 	addi	r8,sp,16
 1080dac:	b47fed16 	blt	r22,r17,1080d64 <___vfprintf_internal_r+0x7cc>
 1080db0:	9021883a 	mov	r16,r18
 1080db4:	9825883a 	mov	r18,r19
 1080db8:	8827883a 	mov	r19,r17
 1080dbc:	dc403b17 	ldw	r17,236(sp)
 1080dc0:	d9403517 	ldw	r5,212(sp)
 1080dc4:	98c7883a 	add	r3,r19,r3
 1080dc8:	10800044 	addi	r2,r2,1
 1080dcc:	41400015 	stw	r5,0(r8)
 1080dd0:	44c00115 	stw	r19,4(r8)
 1080dd4:	d8c02015 	stw	r3,128(sp)
 1080dd8:	d8801f15 	stw	r2,124(sp)
 1080ddc:	010001c4 	movi	r4,7
 1080de0:	2082a316 	blt	r4,r2,1081870 <___vfprintf_internal_r+0x12d8>
 1080de4:	df002787 	ldb	fp,158(sp)
 1080de8:	42000204 	addi	r8,r8,8
 1080dec:	e0000c26 	beq	fp,zero,1080e20 <___vfprintf_internal_r+0x888>
 1080df0:	d8801f17 	ldw	r2,124(sp)
 1080df4:	d9002784 	addi	r4,sp,158
 1080df8:	18c00044 	addi	r3,r3,1
 1080dfc:	10800044 	addi	r2,r2,1
 1080e00:	41000015 	stw	r4,0(r8)
 1080e04:	01000044 	movi	r4,1
 1080e08:	41000115 	stw	r4,4(r8)
 1080e0c:	d8c02015 	stw	r3,128(sp)
 1080e10:	d8801f15 	stw	r2,124(sp)
 1080e14:	010001c4 	movi	r4,7
 1080e18:	20823c16 	blt	r4,r2,108170c <___vfprintf_internal_r+0x1174>
 1080e1c:	42000204 	addi	r8,r8,8
 1080e20:	d8802b17 	ldw	r2,172(sp)
 1080e24:	10000c26 	beq	r2,zero,1080e58 <___vfprintf_internal_r+0x8c0>
 1080e28:	d8801f17 	ldw	r2,124(sp)
 1080e2c:	d9002704 	addi	r4,sp,156
 1080e30:	18c00084 	addi	r3,r3,2
 1080e34:	10800044 	addi	r2,r2,1
 1080e38:	41000015 	stw	r4,0(r8)
 1080e3c:	01000084 	movi	r4,2
 1080e40:	41000115 	stw	r4,4(r8)
 1080e44:	d8c02015 	stw	r3,128(sp)
 1080e48:	d8801f15 	stw	r2,124(sp)
 1080e4c:	010001c4 	movi	r4,7
 1080e50:	20823616 	blt	r4,r2,108172c <___vfprintf_internal_r+0x1194>
 1080e54:	42000204 	addi	r8,r8,8
 1080e58:	d9003017 	ldw	r4,192(sp)
 1080e5c:	00802004 	movi	r2,128
 1080e60:	20819926 	beq	r4,r2,10814c8 <___vfprintf_internal_r+0xf30>
 1080e64:	d9402917 	ldw	r5,164(sp)
 1080e68:	d8802e17 	ldw	r2,184(sp)
 1080e6c:	28adc83a 	sub	r22,r5,r2
 1080e70:	0580310e 	bge	zero,r22,1080f38 <___vfprintf_internal_r+0x9a0>
 1080e74:	07000404 	movi	fp,16
 1080e78:	d8801f17 	ldw	r2,124(sp)
 1080e7c:	e584140e 	bge	fp,r22,1081ed0 <___vfprintf_internal_r+0x1938>
 1080e80:	01404274 	movhi	r5,265
 1080e84:	297cb884 	addi	r5,r5,-3358
 1080e88:	dc402915 	stw	r17,164(sp)
 1080e8c:	d9402b15 	stw	r5,172(sp)
 1080e90:	b023883a 	mov	r17,r22
 1080e94:	04c001c4 	movi	r19,7
 1080e98:	a82d883a 	mov	r22,r21
 1080e9c:	902b883a 	mov	r21,r18
 1080ea0:	8025883a 	mov	r18,r16
 1080ea4:	dc002c17 	ldw	r16,176(sp)
 1080ea8:	00000306 	br	1080eb8 <___vfprintf_internal_r+0x920>
 1080eac:	8c7ffc04 	addi	r17,r17,-16
 1080eb0:	42000204 	addi	r8,r8,8
 1080eb4:	e440110e 	bge	fp,r17,1080efc <___vfprintf_internal_r+0x964>
 1080eb8:	18c00404 	addi	r3,r3,16
 1080ebc:	10800044 	addi	r2,r2,1
 1080ec0:	45000015 	stw	r20,0(r8)
 1080ec4:	47000115 	stw	fp,4(r8)
 1080ec8:	d8c02015 	stw	r3,128(sp)
 1080ecc:	d8801f15 	stw	r2,124(sp)
 1080ed0:	98bff60e 	bge	r19,r2,1080eac <___vfprintf_internal_r+0x914>
 1080ed4:	d9801e04 	addi	r6,sp,120
 1080ed8:	b80b883a 	mov	r5,r23
 1080edc:	8009883a 	mov	r4,r16
 1080ee0:	1087b940 	call	1087b94 <__sprint_r>
 1080ee4:	103eae1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1080ee8:	8c7ffc04 	addi	r17,r17,-16
 1080eec:	d8c02017 	ldw	r3,128(sp)
 1080ef0:	d8801f17 	ldw	r2,124(sp)
 1080ef4:	da000404 	addi	r8,sp,16
 1080ef8:	e47fef16 	blt	fp,r17,1080eb8 <___vfprintf_internal_r+0x920>
 1080efc:	9021883a 	mov	r16,r18
 1080f00:	a825883a 	mov	r18,r21
 1080f04:	b02b883a 	mov	r21,r22
 1080f08:	882d883a 	mov	r22,r17
 1080f0c:	dc402917 	ldw	r17,164(sp)
 1080f10:	d9002b17 	ldw	r4,172(sp)
 1080f14:	1d87883a 	add	r3,r3,r22
 1080f18:	10800044 	addi	r2,r2,1
 1080f1c:	41000015 	stw	r4,0(r8)
 1080f20:	45800115 	stw	r22,4(r8)
 1080f24:	d8c02015 	stw	r3,128(sp)
 1080f28:	d8801f15 	stw	r2,124(sp)
 1080f2c:	010001c4 	movi	r4,7
 1080f30:	2081ee16 	blt	r4,r2,10816ec <___vfprintf_internal_r+0x1154>
 1080f34:	42000204 	addi	r8,r8,8
 1080f38:	9080400c 	andi	r2,r18,256
 1080f3c:	1001181e 	bne	r2,zero,10813a0 <___vfprintf_internal_r+0xe08>
 1080f40:	d9402e17 	ldw	r5,184(sp)
 1080f44:	d8801f17 	ldw	r2,124(sp)
 1080f48:	44000015 	stw	r16,0(r8)
 1080f4c:	1947883a 	add	r3,r3,r5
 1080f50:	10800044 	addi	r2,r2,1
 1080f54:	41400115 	stw	r5,4(r8)
 1080f58:	d8c02015 	stw	r3,128(sp)
 1080f5c:	d8801f15 	stw	r2,124(sp)
 1080f60:	010001c4 	movi	r4,7
 1080f64:	2081d316 	blt	r4,r2,10816b4 <___vfprintf_internal_r+0x111c>
 1080f68:	42000204 	addi	r8,r8,8
 1080f6c:	9480010c 	andi	r18,r18,4
 1080f70:	90003226 	beq	r18,zero,108103c <___vfprintf_internal_r+0xaa4>
 1080f74:	d9403117 	ldw	r5,196(sp)
 1080f78:	d8802a17 	ldw	r2,168(sp)
 1080f7c:	28a1c83a 	sub	r16,r5,r2
 1080f80:	04002e0e 	bge	zero,r16,108103c <___vfprintf_internal_r+0xaa4>
 1080f84:	04400404 	movi	r17,16
 1080f88:	d8801f17 	ldw	r2,124(sp)
 1080f8c:	8c04a20e 	bge	r17,r16,1082218 <___vfprintf_internal_r+0x1c80>
 1080f90:	01404274 	movhi	r5,265
 1080f94:	297cbc84 	addi	r5,r5,-3342
 1080f98:	d9403515 	stw	r5,212(sp)
 1080f9c:	048001c4 	movi	r18,7
 1080fa0:	dcc02c17 	ldw	r19,176(sp)
 1080fa4:	00000306 	br	1080fb4 <___vfprintf_internal_r+0xa1c>
 1080fa8:	843ffc04 	addi	r16,r16,-16
 1080fac:	42000204 	addi	r8,r8,8
 1080fb0:	8c00130e 	bge	r17,r16,1081000 <___vfprintf_internal_r+0xa68>
 1080fb4:	01004274 	movhi	r4,265
 1080fb8:	18c00404 	addi	r3,r3,16
 1080fbc:	10800044 	addi	r2,r2,1
 1080fc0:	213cbc84 	addi	r4,r4,-3342
 1080fc4:	41000015 	stw	r4,0(r8)
 1080fc8:	44400115 	stw	r17,4(r8)
 1080fcc:	d8c02015 	stw	r3,128(sp)
 1080fd0:	d8801f15 	stw	r2,124(sp)
 1080fd4:	90bff40e 	bge	r18,r2,1080fa8 <___vfprintf_internal_r+0xa10>
 1080fd8:	d9801e04 	addi	r6,sp,120
 1080fdc:	b80b883a 	mov	r5,r23
 1080fe0:	9809883a 	mov	r4,r19
 1080fe4:	1087b940 	call	1087b94 <__sprint_r>
 1080fe8:	103e6d1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1080fec:	843ffc04 	addi	r16,r16,-16
 1080ff0:	d8c02017 	ldw	r3,128(sp)
 1080ff4:	d8801f17 	ldw	r2,124(sp)
 1080ff8:	da000404 	addi	r8,sp,16
 1080ffc:	8c3fed16 	blt	r17,r16,1080fb4 <___vfprintf_internal_r+0xa1c>
 1081000:	d9403517 	ldw	r5,212(sp)
 1081004:	1c07883a 	add	r3,r3,r16
 1081008:	10800044 	addi	r2,r2,1
 108100c:	41400015 	stw	r5,0(r8)
 1081010:	44000115 	stw	r16,4(r8)
 1081014:	d8c02015 	stw	r3,128(sp)
 1081018:	d8801f15 	stw	r2,124(sp)
 108101c:	010001c4 	movi	r4,7
 1081020:	2080060e 	bge	r4,r2,108103c <___vfprintf_internal_r+0xaa4>
 1081024:	d9002c17 	ldw	r4,176(sp)
 1081028:	d9801e04 	addi	r6,sp,120
 108102c:	b80b883a 	mov	r5,r23
 1081030:	1087b940 	call	1087b94 <__sprint_r>
 1081034:	103e5a1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081038:	d8c02017 	ldw	r3,128(sp)
 108103c:	d8803117 	ldw	r2,196(sp)
 1081040:	d9002a17 	ldw	r4,168(sp)
 1081044:	1100010e 	bge	r2,r4,108104c <___vfprintf_internal_r+0xab4>
 1081048:	2005883a 	mov	r2,r4
 108104c:	d9402f17 	ldw	r5,188(sp)
 1081050:	288b883a 	add	r5,r5,r2
 1081054:	d9402f15 	stw	r5,188(sp)
 1081058:	18019e1e 	bne	r3,zero,10816d4 <___vfprintf_internal_r+0x113c>
 108105c:	a8800007 	ldb	r2,0(r21)
 1081060:	d8001f15 	stw	zero,124(sp)
 1081064:	da000404 	addi	r8,sp,16
 1081068:	103d851e 	bne	r2,zero,1080680 <___vfprintf_internal_r+0xe8>
 108106c:	a821883a 	mov	r16,r21
 1081070:	003d9b06 	br	10806e0 <___vfprintf_internal_r+0x148>
 1081074:	18c03fcc 	andi	r3,r3,255
 1081078:	1805c11e 	bne	r3,zero,1082780 <___vfprintf_internal_r+0x21e8>
 108107c:	94800414 	ori	r18,r18,16
 1081080:	9080080c 	andi	r2,r18,32
 1081084:	10020c26 	beq	r2,zero,10818b8 <___vfprintf_internal_r+0x1320>
 1081088:	d8802d17 	ldw	r2,180(sp)
 108108c:	d9002917 	ldw	r4,164(sp)
 1081090:	d8002785 	stb	zero,158(sp)
 1081094:	10c00204 	addi	r3,r2,8
 1081098:	14c00017 	ldw	r19,0(r2)
 108109c:	15800117 	ldw	r22,4(r2)
 10810a0:	20040f16 	blt	r4,zero,10820e0 <___vfprintf_internal_r+0x1b48>
 10810a4:	013fdfc4 	movi	r4,-129
 10810a8:	9d84b03a 	or	r2,r19,r22
 10810ac:	d8c02d15 	stw	r3,180(sp)
 10810b0:	9124703a 	and	r18,r18,r4
 10810b4:	0039883a 	mov	fp,zero
 10810b8:	103e891e 	bne	r2,zero,1080ae0 <___vfprintf_internal_r+0x548>
 10810bc:	d9002917 	ldw	r4,164(sp)
 10810c0:	2002c11e 	bne	r4,zero,1081bc8 <___vfprintf_internal_r+0x1630>
 10810c4:	d8002915 	stw	zero,164(sp)
 10810c8:	d8002e15 	stw	zero,184(sp)
 10810cc:	dc001e04 	addi	r16,sp,120
 10810d0:	003ef806 	br	1080cb4 <___vfprintf_internal_r+0x71c>
 10810d4:	18c03fcc 	andi	r3,r3,255
 10810d8:	18059d1e 	bne	r3,zero,1082750 <___vfprintf_internal_r+0x21b8>
 10810dc:	01404274 	movhi	r5,265
 10810e0:	297cac04 	addi	r5,r5,-3408
 10810e4:	d9403915 	stw	r5,228(sp)
 10810e8:	9080080c 	andi	r2,r18,32
 10810ec:	10005226 	beq	r2,zero,1081238 <___vfprintf_internal_r+0xca0>
 10810f0:	d8802d17 	ldw	r2,180(sp)
 10810f4:	14c00017 	ldw	r19,0(r2)
 10810f8:	15800117 	ldw	r22,4(r2)
 10810fc:	10800204 	addi	r2,r2,8
 1081100:	d8802d15 	stw	r2,180(sp)
 1081104:	9080004c 	andi	r2,r18,1
 1081108:	10019026 	beq	r2,zero,108174c <___vfprintf_internal_r+0x11b4>
 108110c:	9d84b03a 	or	r2,r19,r22
 1081110:	10036926 	beq	r2,zero,1081eb8 <___vfprintf_internal_r+0x1920>
 1081114:	d8c02917 	ldw	r3,164(sp)
 1081118:	00800c04 	movi	r2,48
 108111c:	d8802705 	stb	r2,156(sp)
 1081120:	dc402745 	stb	r17,157(sp)
 1081124:	d8002785 	stb	zero,158(sp)
 1081128:	90800094 	ori	r2,r18,2
 108112c:	18045d16 	blt	r3,zero,10822a4 <___vfprintf_internal_r+0x1d0c>
 1081130:	00bfdfc4 	movi	r2,-129
 1081134:	90a4703a 	and	r18,r18,r2
 1081138:	94800094 	ori	r18,r18,2
 108113c:	0039883a 	mov	fp,zero
 1081140:	d9003917 	ldw	r4,228(sp)
 1081144:	dc001e04 	addi	r16,sp,120
 1081148:	988003cc 	andi	r2,r19,15
 108114c:	b006973a 	slli	r3,r22,28
 1081150:	2085883a 	add	r2,r4,r2
 1081154:	9826d13a 	srli	r19,r19,4
 1081158:	10800003 	ldbu	r2,0(r2)
 108115c:	b02cd13a 	srli	r22,r22,4
 1081160:	843fffc4 	addi	r16,r16,-1
 1081164:	1ce6b03a 	or	r19,r3,r19
 1081168:	80800005 	stb	r2,0(r16)
 108116c:	9d84b03a 	or	r2,r19,r22
 1081170:	103ff51e 	bne	r2,zero,1081148 <___vfprintf_internal_r+0xbb0>
 1081174:	d8c02817 	ldw	r3,160(sp)
 1081178:	1c07c83a 	sub	r3,r3,r16
 108117c:	d8c02e15 	stw	r3,184(sp)
 1081180:	003ecc06 	br	1080cb4 <___vfprintf_internal_r+0x71c>
 1081184:	18c03fcc 	andi	r3,r3,255
 1081188:	183e9f26 	beq	r3,zero,1080c08 <___vfprintf_internal_r+0x670>
 108118c:	d9c02785 	stb	r7,158(sp)
 1081190:	003e9d06 	br	1080c08 <___vfprintf_internal_r+0x670>
 1081194:	00c00044 	movi	r3,1
 1081198:	01c00ac4 	movi	r7,43
 108119c:	ac400007 	ldb	r17,0(r21)
 10811a0:	003d5e06 	br	108071c <___vfprintf_internal_r+0x184>
 10811a4:	94800814 	ori	r18,r18,32
 10811a8:	ac400007 	ldb	r17,0(r21)
 10811ac:	003d5b06 	br	108071c <___vfprintf_internal_r+0x184>
 10811b0:	d8c02d17 	ldw	r3,180(sp)
 10811b4:	d8002785 	stb	zero,158(sp)
 10811b8:	1c000017 	ldw	r16,0(r3)
 10811bc:	1cc00104 	addi	r19,r3,4
 10811c0:	80041926 	beq	r16,zero,1082228 <___vfprintf_internal_r+0x1c90>
 10811c4:	d9002917 	ldw	r4,164(sp)
 10811c8:	2003d016 	blt	r4,zero,108210c <___vfprintf_internal_r+0x1b74>
 10811cc:	200d883a 	mov	r6,r4
 10811d0:	000b883a 	mov	r5,zero
 10811d4:	8009883a 	mov	r4,r16
 10811d8:	da003d15 	stw	r8,244(sp)
 10811dc:	1085da80 	call	1085da8 <memchr>
 10811e0:	da003d17 	ldw	r8,244(sp)
 10811e4:	10045426 	beq	r2,zero,1082338 <___vfprintf_internal_r+0x1da0>
 10811e8:	1405c83a 	sub	r2,r2,r16
 10811ec:	d8802e15 	stw	r2,184(sp)
 10811f0:	1003cc16 	blt	r2,zero,1082124 <___vfprintf_internal_r+0x1b8c>
 10811f4:	df002783 	ldbu	fp,158(sp)
 10811f8:	d8802a15 	stw	r2,168(sp)
 10811fc:	dcc02d15 	stw	r19,180(sp)
 1081200:	d8002915 	stw	zero,164(sp)
 1081204:	d8003215 	stw	zero,200(sp)
 1081208:	003eb006 	br	1080ccc <___vfprintf_internal_r+0x734>
 108120c:	18c03fcc 	andi	r3,r3,255
 1081210:	183f9b26 	beq	r3,zero,1081080 <___vfprintf_internal_r+0xae8>
 1081214:	d9c02785 	stb	r7,158(sp)
 1081218:	003f9906 	br	1081080 <___vfprintf_internal_r+0xae8>
 108121c:	18c03fcc 	andi	r3,r3,255
 1081220:	1805551e 	bne	r3,zero,1082778 <___vfprintf_internal_r+0x21e0>
 1081224:	01404274 	movhi	r5,265
 1081228:	297cb104 	addi	r5,r5,-3388
 108122c:	d9403915 	stw	r5,228(sp)
 1081230:	9080080c 	andi	r2,r18,32
 1081234:	103fae1e 	bne	r2,zero,10810f0 <___vfprintf_internal_r+0xb58>
 1081238:	9080040c 	andi	r2,r18,16
 108123c:	1002de26 	beq	r2,zero,1081db8 <___vfprintf_internal_r+0x1820>
 1081240:	d8c02d17 	ldw	r3,180(sp)
 1081244:	002d883a 	mov	r22,zero
 1081248:	1cc00017 	ldw	r19,0(r3)
 108124c:	18c00104 	addi	r3,r3,4
 1081250:	d8c02d15 	stw	r3,180(sp)
 1081254:	003fab06 	br	1081104 <___vfprintf_internal_r+0xb6c>
 1081258:	38803fcc 	andi	r2,r7,255
 108125c:	1080201c 	xori	r2,r2,128
 1081260:	10bfe004 	addi	r2,r2,-128
 1081264:	1002d21e 	bne	r2,zero,1081db0 <___vfprintf_internal_r+0x1818>
 1081268:	00c00044 	movi	r3,1
 108126c:	01c00804 	movi	r7,32
 1081270:	ac400007 	ldb	r17,0(r21)
 1081274:	003d2906 	br	108071c <___vfprintf_internal_r+0x184>
 1081278:	94800054 	ori	r18,r18,1
 108127c:	ac400007 	ldb	r17,0(r21)
 1081280:	003d2606 	br	108071c <___vfprintf_internal_r+0x184>
 1081284:	18c03fcc 	andi	r3,r3,255
 1081288:	183e0526 	beq	r3,zero,1080aa0 <___vfprintf_internal_r+0x508>
 108128c:	d9c02785 	stb	r7,158(sp)
 1081290:	003e0306 	br	1080aa0 <___vfprintf_internal_r+0x508>
 1081294:	94801014 	ori	r18,r18,64
 1081298:	ac400007 	ldb	r17,0(r21)
 108129c:	003d1f06 	br	108071c <___vfprintf_internal_r+0x184>
 10812a0:	ac400007 	ldb	r17,0(r21)
 10812a4:	8a438726 	beq	r17,r9,10820c4 <___vfprintf_internal_r+0x1b2c>
 10812a8:	94800414 	ori	r18,r18,16
 10812ac:	003d1b06 	br	108071c <___vfprintf_internal_r+0x184>
 10812b0:	18c03fcc 	andi	r3,r3,255
 10812b4:	1805341e 	bne	r3,zero,1082788 <___vfprintf_internal_r+0x21f0>
 10812b8:	9080080c 	andi	r2,r18,32
 10812bc:	1002cd26 	beq	r2,zero,1081df4 <___vfprintf_internal_r+0x185c>
 10812c0:	d9402d17 	ldw	r5,180(sp)
 10812c4:	d9002f17 	ldw	r4,188(sp)
 10812c8:	28800017 	ldw	r2,0(r5)
 10812cc:	2007d7fa 	srai	r3,r4,31
 10812d0:	29400104 	addi	r5,r5,4
 10812d4:	d9402d15 	stw	r5,180(sp)
 10812d8:	11000015 	stw	r4,0(r2)
 10812dc:	10c00115 	stw	r3,4(r2)
 10812e0:	003ce506 	br	1080678 <___vfprintf_internal_r+0xe0>
 10812e4:	d8c02d17 	ldw	r3,180(sp)
 10812e8:	d9002d17 	ldw	r4,180(sp)
 10812ec:	d8002785 	stb	zero,158(sp)
 10812f0:	18800017 	ldw	r2,0(r3)
 10812f4:	21000104 	addi	r4,r4,4
 10812f8:	00c00044 	movi	r3,1
 10812fc:	d8c02a15 	stw	r3,168(sp)
 1081300:	d8801405 	stb	r2,80(sp)
 1081304:	d9002d15 	stw	r4,180(sp)
 1081308:	d8c02e15 	stw	r3,184(sp)
 108130c:	d8002915 	stw	zero,164(sp)
 1081310:	d8003215 	stw	zero,200(sp)
 1081314:	dc001404 	addi	r16,sp,80
 1081318:	0039883a 	mov	fp,zero
 108131c:	003e7206 	br	1080ce8 <___vfprintf_internal_r+0x750>
 1081320:	01004274 	movhi	r4,265
 1081324:	213cb104 	addi	r4,r4,-3388
 1081328:	0039883a 	mov	fp,zero
 108132c:	d9003915 	stw	r4,228(sp)
 1081330:	04401e04 	movi	r17,120
 1081334:	003f8206 	br	1081140 <___vfprintf_internal_r+0xba8>
 1081338:	18c03fcc 	andi	r3,r3,255
 108133c:	1805061e 	bne	r3,zero,1082758 <___vfprintf_internal_r+0x21c0>
 1081340:	883d9126 	beq	r17,zero,1080988 <___vfprintf_internal_r+0x3f0>
 1081344:	00c00044 	movi	r3,1
 1081348:	d8c02a15 	stw	r3,168(sp)
 108134c:	dc401405 	stb	r17,80(sp)
 1081350:	d8002785 	stb	zero,158(sp)
 1081354:	003fec06 	br	1081308 <___vfprintf_internal_r+0xd70>
 1081358:	01404274 	movhi	r5,265
 108135c:	297cb104 	addi	r5,r5,-3388
 1081360:	d9403915 	stw	r5,228(sp)
 1081364:	d8c02d15 	stw	r3,180(sp)
 1081368:	1025883a 	mov	r18,r2
 108136c:	04401e04 	movi	r17,120
 1081370:	9d84b03a 	or	r2,r19,r22
 1081374:	1000fc1e 	bne	r2,zero,1081768 <___vfprintf_internal_r+0x11d0>
 1081378:	0039883a 	mov	fp,zero
 108137c:	00800084 	movi	r2,2
 1081380:	10803fcc 	andi	r2,r2,255
 1081384:	00c00044 	movi	r3,1
 1081388:	10c20f26 	beq	r2,r3,1081bc8 <___vfprintf_internal_r+0x1630>
 108138c:	00c00084 	movi	r3,2
 1081390:	10fd6326 	beq	r2,r3,1080920 <___vfprintf_internal_r+0x388>
 1081394:	003e2d06 	br	1080c4c <___vfprintf_internal_r+0x6b4>
 1081398:	d8c02017 	ldw	r3,128(sp)
 108139c:	003e9306 	br	1080dec <___vfprintf_internal_r+0x854>
 10813a0:	00801944 	movi	r2,101
 10813a4:	14407e0e 	bge	r2,r17,10815a0 <___vfprintf_internal_r+0x1008>
 10813a8:	d9003617 	ldw	r4,216(sp)
 10813ac:	d9403817 	ldw	r5,224(sp)
 10813b0:	000d883a 	mov	r6,zero
 10813b4:	000f883a 	mov	r7,zero
 10813b8:	d8c03c15 	stw	r3,240(sp)
 10813bc:	da003d15 	stw	r8,244(sp)
 10813c0:	108b80c0 	call	108b80c <__eqdf2>
 10813c4:	d8c03c17 	ldw	r3,240(sp)
 10813c8:	da003d17 	ldw	r8,244(sp)
 10813cc:	1000f71e 	bne	r2,zero,10817ac <___vfprintf_internal_r+0x1214>
 10813d0:	d8801f17 	ldw	r2,124(sp)
 10813d4:	01004274 	movhi	r4,265
 10813d8:	213cb804 	addi	r4,r4,-3360
 10813dc:	18c00044 	addi	r3,r3,1
 10813e0:	10800044 	addi	r2,r2,1
 10813e4:	41000015 	stw	r4,0(r8)
 10813e8:	01000044 	movi	r4,1
 10813ec:	41000115 	stw	r4,4(r8)
 10813f0:	d8c02015 	stw	r3,128(sp)
 10813f4:	d8801f15 	stw	r2,124(sp)
 10813f8:	010001c4 	movi	r4,7
 10813fc:	2082b816 	blt	r4,r2,1081ee0 <___vfprintf_internal_r+0x1948>
 1081400:	42000204 	addi	r8,r8,8
 1081404:	d8802617 	ldw	r2,152(sp)
 1081408:	d9403317 	ldw	r5,204(sp)
 108140c:	11400216 	blt	r2,r5,1081418 <___vfprintf_internal_r+0xe80>
 1081410:	9080004c 	andi	r2,r18,1
 1081414:	103ed526 	beq	r2,zero,1080f6c <___vfprintf_internal_r+0x9d4>
 1081418:	d8803717 	ldw	r2,220(sp)
 108141c:	d9003417 	ldw	r4,208(sp)
 1081420:	d9403717 	ldw	r5,220(sp)
 1081424:	1887883a 	add	r3,r3,r2
 1081428:	d8801f17 	ldw	r2,124(sp)
 108142c:	41000015 	stw	r4,0(r8)
 1081430:	41400115 	stw	r5,4(r8)
 1081434:	10800044 	addi	r2,r2,1
 1081438:	d8c02015 	stw	r3,128(sp)
 108143c:	d8801f15 	stw	r2,124(sp)
 1081440:	010001c4 	movi	r4,7
 1081444:	20832916 	blt	r4,r2,10820ec <___vfprintf_internal_r+0x1b54>
 1081448:	42000204 	addi	r8,r8,8
 108144c:	d8803317 	ldw	r2,204(sp)
 1081450:	143fffc4 	addi	r16,r2,-1
 1081454:	043ec50e 	bge	zero,r16,1080f6c <___vfprintf_internal_r+0x9d4>
 1081458:	04400404 	movi	r17,16
 108145c:	d8801f17 	ldw	r2,124(sp)
 1081460:	8c00880e 	bge	r17,r16,1081684 <___vfprintf_internal_r+0x10ec>
 1081464:	01404274 	movhi	r5,265
 1081468:	297cb884 	addi	r5,r5,-3358
 108146c:	d9402b15 	stw	r5,172(sp)
 1081470:	058001c4 	movi	r22,7
 1081474:	dcc02c17 	ldw	r19,176(sp)
 1081478:	00000306 	br	1081488 <___vfprintf_internal_r+0xef0>
 108147c:	42000204 	addi	r8,r8,8
 1081480:	843ffc04 	addi	r16,r16,-16
 1081484:	8c00820e 	bge	r17,r16,1081690 <___vfprintf_internal_r+0x10f8>
 1081488:	18c00404 	addi	r3,r3,16
 108148c:	10800044 	addi	r2,r2,1
 1081490:	45000015 	stw	r20,0(r8)
 1081494:	44400115 	stw	r17,4(r8)
 1081498:	d8c02015 	stw	r3,128(sp)
 108149c:	d8801f15 	stw	r2,124(sp)
 10814a0:	b0bff60e 	bge	r22,r2,108147c <___vfprintf_internal_r+0xee4>
 10814a4:	d9801e04 	addi	r6,sp,120
 10814a8:	b80b883a 	mov	r5,r23
 10814ac:	9809883a 	mov	r4,r19
 10814b0:	1087b940 	call	1087b94 <__sprint_r>
 10814b4:	103d3a1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 10814b8:	d8c02017 	ldw	r3,128(sp)
 10814bc:	d8801f17 	ldw	r2,124(sp)
 10814c0:	da000404 	addi	r8,sp,16
 10814c4:	003fee06 	br	1081480 <___vfprintf_internal_r+0xee8>
 10814c8:	d9403117 	ldw	r5,196(sp)
 10814cc:	d8802a17 	ldw	r2,168(sp)
 10814d0:	28adc83a 	sub	r22,r5,r2
 10814d4:	05be630e 	bge	zero,r22,1080e64 <___vfprintf_internal_r+0x8cc>
 10814d8:	07000404 	movi	fp,16
 10814dc:	d8801f17 	ldw	r2,124(sp)
 10814e0:	e5838f0e 	bge	fp,r22,1082320 <___vfprintf_internal_r+0x1d88>
 10814e4:	01404274 	movhi	r5,265
 10814e8:	297cb884 	addi	r5,r5,-3358
 10814ec:	dc403015 	stw	r17,192(sp)
 10814f0:	d9402b15 	stw	r5,172(sp)
 10814f4:	b023883a 	mov	r17,r22
 10814f8:	04c001c4 	movi	r19,7
 10814fc:	a82d883a 	mov	r22,r21
 1081500:	902b883a 	mov	r21,r18
 1081504:	8025883a 	mov	r18,r16
 1081508:	dc002c17 	ldw	r16,176(sp)
 108150c:	00000306 	br	108151c <___vfprintf_internal_r+0xf84>
 1081510:	8c7ffc04 	addi	r17,r17,-16
 1081514:	42000204 	addi	r8,r8,8
 1081518:	e440110e 	bge	fp,r17,1081560 <___vfprintf_internal_r+0xfc8>
 108151c:	18c00404 	addi	r3,r3,16
 1081520:	10800044 	addi	r2,r2,1
 1081524:	45000015 	stw	r20,0(r8)
 1081528:	47000115 	stw	fp,4(r8)
 108152c:	d8c02015 	stw	r3,128(sp)
 1081530:	d8801f15 	stw	r2,124(sp)
 1081534:	98bff60e 	bge	r19,r2,1081510 <___vfprintf_internal_r+0xf78>
 1081538:	d9801e04 	addi	r6,sp,120
 108153c:	b80b883a 	mov	r5,r23
 1081540:	8009883a 	mov	r4,r16
 1081544:	1087b940 	call	1087b94 <__sprint_r>
 1081548:	103d151e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 108154c:	8c7ffc04 	addi	r17,r17,-16
 1081550:	d8c02017 	ldw	r3,128(sp)
 1081554:	d8801f17 	ldw	r2,124(sp)
 1081558:	da000404 	addi	r8,sp,16
 108155c:	e47fef16 	blt	fp,r17,108151c <___vfprintf_internal_r+0xf84>
 1081560:	9021883a 	mov	r16,r18
 1081564:	a825883a 	mov	r18,r21
 1081568:	b02b883a 	mov	r21,r22
 108156c:	882d883a 	mov	r22,r17
 1081570:	dc403017 	ldw	r17,192(sp)
 1081574:	d9002b17 	ldw	r4,172(sp)
 1081578:	1d87883a 	add	r3,r3,r22
 108157c:	10800044 	addi	r2,r2,1
 1081580:	41000015 	stw	r4,0(r8)
 1081584:	45800115 	stw	r22,4(r8)
 1081588:	d8c02015 	stw	r3,128(sp)
 108158c:	d8801f15 	stw	r2,124(sp)
 1081590:	010001c4 	movi	r4,7
 1081594:	20818e16 	blt	r4,r2,1081bd0 <___vfprintf_internal_r+0x1638>
 1081598:	42000204 	addi	r8,r8,8
 108159c:	003e3106 	br	1080e64 <___vfprintf_internal_r+0x8cc>
 10815a0:	d9403317 	ldw	r5,204(sp)
 10815a4:	00800044 	movi	r2,1
 10815a8:	18c00044 	addi	r3,r3,1
 10815ac:	1141530e 	bge	r2,r5,1081afc <___vfprintf_internal_r+0x1564>
 10815b0:	dc401f17 	ldw	r17,124(sp)
 10815b4:	00800044 	movi	r2,1
 10815b8:	40800115 	stw	r2,4(r8)
 10815bc:	8c400044 	addi	r17,r17,1
 10815c0:	44000015 	stw	r16,0(r8)
 10815c4:	d8c02015 	stw	r3,128(sp)
 10815c8:	dc401f15 	stw	r17,124(sp)
 10815cc:	008001c4 	movi	r2,7
 10815d0:	14416b16 	blt	r2,r17,1081b80 <___vfprintf_internal_r+0x15e8>
 10815d4:	42000204 	addi	r8,r8,8
 10815d8:	d8803717 	ldw	r2,220(sp)
 10815dc:	d9003417 	ldw	r4,208(sp)
 10815e0:	8c400044 	addi	r17,r17,1
 10815e4:	10c7883a 	add	r3,r2,r3
 10815e8:	40800115 	stw	r2,4(r8)
 10815ec:	41000015 	stw	r4,0(r8)
 10815f0:	d8c02015 	stw	r3,128(sp)
 10815f4:	dc401f15 	stw	r17,124(sp)
 10815f8:	008001c4 	movi	r2,7
 10815fc:	14416916 	blt	r2,r17,1081ba4 <___vfprintf_internal_r+0x160c>
 1081600:	45800204 	addi	r22,r8,8
 1081604:	d9003617 	ldw	r4,216(sp)
 1081608:	d9403817 	ldw	r5,224(sp)
 108160c:	000d883a 	mov	r6,zero
 1081610:	000f883a 	mov	r7,zero
 1081614:	d8c03c15 	stw	r3,240(sp)
 1081618:	108b80c0 	call	108b80c <__eqdf2>
 108161c:	d8c03c17 	ldw	r3,240(sp)
 1081620:	1000bc26 	beq	r2,zero,1081914 <___vfprintf_internal_r+0x137c>
 1081624:	d9403317 	ldw	r5,204(sp)
 1081628:	84000044 	addi	r16,r16,1
 108162c:	8c400044 	addi	r17,r17,1
 1081630:	28bfffc4 	addi	r2,r5,-1
 1081634:	1887883a 	add	r3,r3,r2
 1081638:	b0800115 	stw	r2,4(r22)
 108163c:	b4000015 	stw	r16,0(r22)
 1081640:	d8c02015 	stw	r3,128(sp)
 1081644:	dc401f15 	stw	r17,124(sp)
 1081648:	008001c4 	movi	r2,7
 108164c:	14414316 	blt	r2,r17,1081b5c <___vfprintf_internal_r+0x15c4>
 1081650:	b5800204 	addi	r22,r22,8
 1081654:	d9003a17 	ldw	r4,232(sp)
 1081658:	df0022c4 	addi	fp,sp,139
 108165c:	8c400044 	addi	r17,r17,1
 1081660:	20c7883a 	add	r3,r4,r3
 1081664:	b7000015 	stw	fp,0(r22)
 1081668:	b1000115 	stw	r4,4(r22)
 108166c:	d8c02015 	stw	r3,128(sp)
 1081670:	dc401f15 	stw	r17,124(sp)
 1081674:	008001c4 	movi	r2,7
 1081678:	14400e16 	blt	r2,r17,10816b4 <___vfprintf_internal_r+0x111c>
 108167c:	b2000204 	addi	r8,r22,8
 1081680:	003e3a06 	br	1080f6c <___vfprintf_internal_r+0x9d4>
 1081684:	01004274 	movhi	r4,265
 1081688:	213cb884 	addi	r4,r4,-3358
 108168c:	d9002b15 	stw	r4,172(sp)
 1081690:	d9002b17 	ldw	r4,172(sp)
 1081694:	1c07883a 	add	r3,r3,r16
 1081698:	44000115 	stw	r16,4(r8)
 108169c:	41000015 	stw	r4,0(r8)
 10816a0:	10800044 	addi	r2,r2,1
 10816a4:	d8c02015 	stw	r3,128(sp)
 10816a8:	d8801f15 	stw	r2,124(sp)
 10816ac:	010001c4 	movi	r4,7
 10816b0:	20be2d0e 	bge	r4,r2,1080f68 <___vfprintf_internal_r+0x9d0>
 10816b4:	d9002c17 	ldw	r4,176(sp)
 10816b8:	d9801e04 	addi	r6,sp,120
 10816bc:	b80b883a 	mov	r5,r23
 10816c0:	1087b940 	call	1087b94 <__sprint_r>
 10816c4:	103cb61e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 10816c8:	d8c02017 	ldw	r3,128(sp)
 10816cc:	da000404 	addi	r8,sp,16
 10816d0:	003e2606 	br	1080f6c <___vfprintf_internal_r+0x9d4>
 10816d4:	d9002c17 	ldw	r4,176(sp)
 10816d8:	d9801e04 	addi	r6,sp,120
 10816dc:	b80b883a 	mov	r5,r23
 10816e0:	1087b940 	call	1087b94 <__sprint_r>
 10816e4:	103e5d26 	beq	r2,zero,108105c <___vfprintf_internal_r+0xac4>
 10816e8:	003cad06 	br	10809a0 <___vfprintf_internal_r+0x408>
 10816ec:	d9002c17 	ldw	r4,176(sp)
 10816f0:	d9801e04 	addi	r6,sp,120
 10816f4:	b80b883a 	mov	r5,r23
 10816f8:	1087b940 	call	1087b94 <__sprint_r>
 10816fc:	103ca81e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081700:	d8c02017 	ldw	r3,128(sp)
 1081704:	da000404 	addi	r8,sp,16
 1081708:	003e0b06 	br	1080f38 <___vfprintf_internal_r+0x9a0>
 108170c:	d9002c17 	ldw	r4,176(sp)
 1081710:	d9801e04 	addi	r6,sp,120
 1081714:	b80b883a 	mov	r5,r23
 1081718:	1087b940 	call	1087b94 <__sprint_r>
 108171c:	103ca01e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081720:	d8c02017 	ldw	r3,128(sp)
 1081724:	da000404 	addi	r8,sp,16
 1081728:	003dbd06 	br	1080e20 <___vfprintf_internal_r+0x888>
 108172c:	d9002c17 	ldw	r4,176(sp)
 1081730:	d9801e04 	addi	r6,sp,120
 1081734:	b80b883a 	mov	r5,r23
 1081738:	1087b940 	call	1087b94 <__sprint_r>
 108173c:	103c981e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081740:	d8c02017 	ldw	r3,128(sp)
 1081744:	da000404 	addi	r8,sp,16
 1081748:	003dc306 	br	1080e58 <___vfprintf_internal_r+0x8c0>
 108174c:	d8802917 	ldw	r2,164(sp)
 1081750:	d8002785 	stb	zero,158(sp)
 1081754:	103f0616 	blt	r2,zero,1081370 <___vfprintf_internal_r+0xdd8>
 1081758:	00ffdfc4 	movi	r3,-129
 108175c:	9d84b03a 	or	r2,r19,r22
 1081760:	90e4703a 	and	r18,r18,r3
 1081764:	103c6b26 	beq	r2,zero,1080914 <___vfprintf_internal_r+0x37c>
 1081768:	0039883a 	mov	fp,zero
 108176c:	003e7406 	br	1081140 <___vfprintf_internal_r+0xba8>
 1081770:	9080040c 	andi	r2,r18,16
 1081774:	1001b326 	beq	r2,zero,1081e44 <___vfprintf_internal_r+0x18ac>
 1081778:	d9002d17 	ldw	r4,180(sp)
 108177c:	d9402917 	ldw	r5,164(sp)
 1081780:	d8002785 	stb	zero,158(sp)
 1081784:	20800104 	addi	r2,r4,4
 1081788:	24c00017 	ldw	r19,0(r4)
 108178c:	002d883a 	mov	r22,zero
 1081790:	2801b516 	blt	r5,zero,1081e68 <___vfprintf_internal_r+0x18d0>
 1081794:	00ffdfc4 	movi	r3,-129
 1081798:	d8802d15 	stw	r2,180(sp)
 108179c:	90e4703a 	and	r18,r18,r3
 10817a0:	983d2726 	beq	r19,zero,1080c40 <___vfprintf_internal_r+0x6a8>
 10817a4:	0039883a 	mov	fp,zero
 10817a8:	003d2a06 	br	1080c54 <___vfprintf_internal_r+0x6bc>
 10817ac:	dc402617 	ldw	r17,152(sp)
 10817b0:	0441d30e 	bge	zero,r17,1081f00 <___vfprintf_internal_r+0x1968>
 10817b4:	dc403217 	ldw	r17,200(sp)
 10817b8:	d8803317 	ldw	r2,204(sp)
 10817bc:	1440010e 	bge	r2,r17,10817c4 <___vfprintf_internal_r+0x122c>
 10817c0:	1023883a 	mov	r17,r2
 10817c4:	04400a0e 	bge	zero,r17,10817f0 <___vfprintf_internal_r+0x1258>
 10817c8:	d8801f17 	ldw	r2,124(sp)
 10817cc:	1c47883a 	add	r3,r3,r17
 10817d0:	44000015 	stw	r16,0(r8)
 10817d4:	10800044 	addi	r2,r2,1
 10817d8:	44400115 	stw	r17,4(r8)
 10817dc:	d8c02015 	stw	r3,128(sp)
 10817e0:	d8801f15 	stw	r2,124(sp)
 10817e4:	010001c4 	movi	r4,7
 10817e8:	20826516 	blt	r4,r2,1082180 <___vfprintf_internal_r+0x1be8>
 10817ec:	42000204 	addi	r8,r8,8
 10817f0:	88026116 	blt	r17,zero,1082178 <___vfprintf_internal_r+0x1be0>
 10817f4:	d9003217 	ldw	r4,200(sp)
 10817f8:	2463c83a 	sub	r17,r4,r17
 10817fc:	04407b0e 	bge	zero,r17,10819ec <___vfprintf_internal_r+0x1454>
 1081800:	05800404 	movi	r22,16
 1081804:	d8801f17 	ldw	r2,124(sp)
 1081808:	b4419d0e 	bge	r22,r17,1081e80 <___vfprintf_internal_r+0x18e8>
 108180c:	01004274 	movhi	r4,265
 1081810:	213cb884 	addi	r4,r4,-3358
 1081814:	d9002b15 	stw	r4,172(sp)
 1081818:	070001c4 	movi	fp,7
 108181c:	dcc02c17 	ldw	r19,176(sp)
 1081820:	00000306 	br	1081830 <___vfprintf_internal_r+0x1298>
 1081824:	42000204 	addi	r8,r8,8
 1081828:	8c7ffc04 	addi	r17,r17,-16
 108182c:	b441970e 	bge	r22,r17,1081e8c <___vfprintf_internal_r+0x18f4>
 1081830:	18c00404 	addi	r3,r3,16
 1081834:	10800044 	addi	r2,r2,1
 1081838:	45000015 	stw	r20,0(r8)
 108183c:	45800115 	stw	r22,4(r8)
 1081840:	d8c02015 	stw	r3,128(sp)
 1081844:	d8801f15 	stw	r2,124(sp)
 1081848:	e0bff60e 	bge	fp,r2,1081824 <___vfprintf_internal_r+0x128c>
 108184c:	d9801e04 	addi	r6,sp,120
 1081850:	b80b883a 	mov	r5,r23
 1081854:	9809883a 	mov	r4,r19
 1081858:	1087b940 	call	1087b94 <__sprint_r>
 108185c:	103c501e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081860:	d8c02017 	ldw	r3,128(sp)
 1081864:	d8801f17 	ldw	r2,124(sp)
 1081868:	da000404 	addi	r8,sp,16
 108186c:	003fee06 	br	1081828 <___vfprintf_internal_r+0x1290>
 1081870:	d9002c17 	ldw	r4,176(sp)
 1081874:	d9801e04 	addi	r6,sp,120
 1081878:	b80b883a 	mov	r5,r23
 108187c:	1087b940 	call	1087b94 <__sprint_r>
 1081880:	103c471e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081884:	d8c02017 	ldw	r3,128(sp)
 1081888:	df002787 	ldb	fp,158(sp)
 108188c:	da000404 	addi	r8,sp,16
 1081890:	003d5606 	br	1080dec <___vfprintf_internal_r+0x854>
 1081894:	9080040c 	andi	r2,r18,16
 1081898:	10016126 	beq	r2,zero,1081e20 <___vfprintf_internal_r+0x1888>
 108189c:	d8802d17 	ldw	r2,180(sp)
 10818a0:	14c00017 	ldw	r19,0(r2)
 10818a4:	10800104 	addi	r2,r2,4
 10818a8:	d8802d15 	stw	r2,180(sp)
 10818ac:	982dd7fa 	srai	r22,r19,31
 10818b0:	b005883a 	mov	r2,r22
 10818b4:	003c8206 	br	1080ac0 <___vfprintf_internal_r+0x528>
 10818b8:	9080040c 	andi	r2,r18,16
 10818bc:	10003526 	beq	r2,zero,1081994 <___vfprintf_internal_r+0x13fc>
 10818c0:	d9402d17 	ldw	r5,180(sp)
 10818c4:	d8c02917 	ldw	r3,164(sp)
 10818c8:	d8002785 	stb	zero,158(sp)
 10818cc:	28800104 	addi	r2,r5,4
 10818d0:	2cc00017 	ldw	r19,0(r5)
 10818d4:	002d883a 	mov	r22,zero
 10818d8:	18003716 	blt	r3,zero,10819b8 <___vfprintf_internal_r+0x1420>
 10818dc:	00ffdfc4 	movi	r3,-129
 10818e0:	d8802d15 	stw	r2,180(sp)
 10818e4:	90e4703a 	and	r18,r18,r3
 10818e8:	0039883a 	mov	fp,zero
 10818ec:	983df326 	beq	r19,zero,10810bc <___vfprintf_internal_r+0xb24>
 10818f0:	00800244 	movi	r2,9
 10818f4:	14fc7b36 	bltu	r2,r19,1080ae4 <___vfprintf_internal_r+0x54c>
 10818f8:	d8c02817 	ldw	r3,160(sp)
 10818fc:	dc001dc4 	addi	r16,sp,119
 1081900:	9cc00c04 	addi	r19,r19,48
 1081904:	1c07c83a 	sub	r3,r3,r16
 1081908:	dcc01dc5 	stb	r19,119(sp)
 108190c:	d8c02e15 	stw	r3,184(sp)
 1081910:	003ce806 	br	1080cb4 <___vfprintf_internal_r+0x71c>
 1081914:	d8803317 	ldw	r2,204(sp)
 1081918:	143fffc4 	addi	r16,r2,-1
 108191c:	043f4d0e 	bge	zero,r16,1081654 <___vfprintf_internal_r+0x10bc>
 1081920:	07000404 	movi	fp,16
 1081924:	e400810e 	bge	fp,r16,1081b2c <___vfprintf_internal_r+0x1594>
 1081928:	01404274 	movhi	r5,265
 108192c:	297cb884 	addi	r5,r5,-3358
 1081930:	d9402b15 	stw	r5,172(sp)
 1081934:	01c001c4 	movi	r7,7
 1081938:	dcc02c17 	ldw	r19,176(sp)
 108193c:	00000306 	br	108194c <___vfprintf_internal_r+0x13b4>
 1081940:	b5800204 	addi	r22,r22,8
 1081944:	843ffc04 	addi	r16,r16,-16
 1081948:	e4007b0e 	bge	fp,r16,1081b38 <___vfprintf_internal_r+0x15a0>
 108194c:	18c00404 	addi	r3,r3,16
 1081950:	8c400044 	addi	r17,r17,1
 1081954:	b5000015 	stw	r20,0(r22)
 1081958:	b7000115 	stw	fp,4(r22)
 108195c:	d8c02015 	stw	r3,128(sp)
 1081960:	dc401f15 	stw	r17,124(sp)
 1081964:	3c7ff60e 	bge	r7,r17,1081940 <___vfprintf_internal_r+0x13a8>
 1081968:	d9801e04 	addi	r6,sp,120
 108196c:	b80b883a 	mov	r5,r23
 1081970:	9809883a 	mov	r4,r19
 1081974:	d9c03c15 	stw	r7,240(sp)
 1081978:	1087b940 	call	1087b94 <__sprint_r>
 108197c:	d9c03c17 	ldw	r7,240(sp)
 1081980:	103c071e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081984:	d8c02017 	ldw	r3,128(sp)
 1081988:	dc401f17 	ldw	r17,124(sp)
 108198c:	dd800404 	addi	r22,sp,16
 1081990:	003fec06 	br	1081944 <___vfprintf_internal_r+0x13ac>
 1081994:	9080100c 	andi	r2,r18,64
 1081998:	d8002785 	stb	zero,158(sp)
 108199c:	10010e26 	beq	r2,zero,1081dd8 <___vfprintf_internal_r+0x1840>
 10819a0:	d9002d17 	ldw	r4,180(sp)
 10819a4:	d9402917 	ldw	r5,164(sp)
 10819a8:	002d883a 	mov	r22,zero
 10819ac:	20800104 	addi	r2,r4,4
 10819b0:	24c0000b 	ldhu	r19,0(r4)
 10819b4:	283fc90e 	bge	r5,zero,10818dc <___vfprintf_internal_r+0x1344>
 10819b8:	d8802d15 	stw	r2,180(sp)
 10819bc:	0039883a 	mov	fp,zero
 10819c0:	9d84b03a 	or	r2,r19,r22
 10819c4:	103c461e 	bne	r2,zero,1080ae0 <___vfprintf_internal_r+0x548>
 10819c8:	00800044 	movi	r2,1
 10819cc:	003e6c06 	br	1081380 <___vfprintf_internal_r+0xde8>
 10819d0:	d9002c17 	ldw	r4,176(sp)
 10819d4:	d9801e04 	addi	r6,sp,120
 10819d8:	b80b883a 	mov	r5,r23
 10819dc:	1087b940 	call	1087b94 <__sprint_r>
 10819e0:	103bef1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 10819e4:	d8c02017 	ldw	r3,128(sp)
 10819e8:	da000404 	addi	r8,sp,16
 10819ec:	d9003217 	ldw	r4,200(sp)
 10819f0:	d8802617 	ldw	r2,152(sp)
 10819f4:	d9403317 	ldw	r5,204(sp)
 10819f8:	8123883a 	add	r17,r16,r4
 10819fc:	11400216 	blt	r2,r5,1081a08 <___vfprintf_internal_r+0x1470>
 1081a00:	9100004c 	andi	r4,r18,1
 1081a04:	20000d26 	beq	r4,zero,1081a3c <___vfprintf_internal_r+0x14a4>
 1081a08:	d9003717 	ldw	r4,220(sp)
 1081a0c:	d9403417 	ldw	r5,208(sp)
 1081a10:	1907883a 	add	r3,r3,r4
 1081a14:	d9001f17 	ldw	r4,124(sp)
 1081a18:	41400015 	stw	r5,0(r8)
 1081a1c:	d9403717 	ldw	r5,220(sp)
 1081a20:	21000044 	addi	r4,r4,1
 1081a24:	d8c02015 	stw	r3,128(sp)
 1081a28:	41400115 	stw	r5,4(r8)
 1081a2c:	d9001f15 	stw	r4,124(sp)
 1081a30:	014001c4 	movi	r5,7
 1081a34:	2901e816 	blt	r5,r4,10821d8 <___vfprintf_internal_r+0x1c40>
 1081a38:	42000204 	addi	r8,r8,8
 1081a3c:	d9003317 	ldw	r4,204(sp)
 1081a40:	8121883a 	add	r16,r16,r4
 1081a44:	2085c83a 	sub	r2,r4,r2
 1081a48:	8461c83a 	sub	r16,r16,r17
 1081a4c:	1400010e 	bge	r2,r16,1081a54 <___vfprintf_internal_r+0x14bc>
 1081a50:	1021883a 	mov	r16,r2
 1081a54:	04000a0e 	bge	zero,r16,1081a80 <___vfprintf_internal_r+0x14e8>
 1081a58:	d9001f17 	ldw	r4,124(sp)
 1081a5c:	1c07883a 	add	r3,r3,r16
 1081a60:	44400015 	stw	r17,0(r8)
 1081a64:	21000044 	addi	r4,r4,1
 1081a68:	44000115 	stw	r16,4(r8)
 1081a6c:	d8c02015 	stw	r3,128(sp)
 1081a70:	d9001f15 	stw	r4,124(sp)
 1081a74:	014001c4 	movi	r5,7
 1081a78:	2901fb16 	blt	r5,r4,1082268 <___vfprintf_internal_r+0x1cd0>
 1081a7c:	42000204 	addi	r8,r8,8
 1081a80:	8001f716 	blt	r16,zero,1082260 <___vfprintf_internal_r+0x1cc8>
 1081a84:	1421c83a 	sub	r16,r2,r16
 1081a88:	043d380e 	bge	zero,r16,1080f6c <___vfprintf_internal_r+0x9d4>
 1081a8c:	04400404 	movi	r17,16
 1081a90:	d8801f17 	ldw	r2,124(sp)
 1081a94:	8c3efb0e 	bge	r17,r16,1081684 <___vfprintf_internal_r+0x10ec>
 1081a98:	01404274 	movhi	r5,265
 1081a9c:	297cb884 	addi	r5,r5,-3358
 1081aa0:	d9402b15 	stw	r5,172(sp)
 1081aa4:	058001c4 	movi	r22,7
 1081aa8:	dcc02c17 	ldw	r19,176(sp)
 1081aac:	00000306 	br	1081abc <___vfprintf_internal_r+0x1524>
 1081ab0:	42000204 	addi	r8,r8,8
 1081ab4:	843ffc04 	addi	r16,r16,-16
 1081ab8:	8c3ef50e 	bge	r17,r16,1081690 <___vfprintf_internal_r+0x10f8>
 1081abc:	18c00404 	addi	r3,r3,16
 1081ac0:	10800044 	addi	r2,r2,1
 1081ac4:	45000015 	stw	r20,0(r8)
 1081ac8:	44400115 	stw	r17,4(r8)
 1081acc:	d8c02015 	stw	r3,128(sp)
 1081ad0:	d8801f15 	stw	r2,124(sp)
 1081ad4:	b0bff60e 	bge	r22,r2,1081ab0 <___vfprintf_internal_r+0x1518>
 1081ad8:	d9801e04 	addi	r6,sp,120
 1081adc:	b80b883a 	mov	r5,r23
 1081ae0:	9809883a 	mov	r4,r19
 1081ae4:	1087b940 	call	1087b94 <__sprint_r>
 1081ae8:	103bad1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081aec:	d8c02017 	ldw	r3,128(sp)
 1081af0:	d8801f17 	ldw	r2,124(sp)
 1081af4:	da000404 	addi	r8,sp,16
 1081af8:	003fee06 	br	1081ab4 <___vfprintf_internal_r+0x151c>
 1081afc:	9088703a 	and	r4,r18,r2
 1081b00:	203eab1e 	bne	r4,zero,10815b0 <___vfprintf_internal_r+0x1018>
 1081b04:	dc401f17 	ldw	r17,124(sp)
 1081b08:	40800115 	stw	r2,4(r8)
 1081b0c:	44000015 	stw	r16,0(r8)
 1081b10:	8c400044 	addi	r17,r17,1
 1081b14:	d8c02015 	stw	r3,128(sp)
 1081b18:	dc401f15 	stw	r17,124(sp)
 1081b1c:	008001c4 	movi	r2,7
 1081b20:	14400e16 	blt	r2,r17,1081b5c <___vfprintf_internal_r+0x15c4>
 1081b24:	45800204 	addi	r22,r8,8
 1081b28:	003eca06 	br	1081654 <___vfprintf_internal_r+0x10bc>
 1081b2c:	01004274 	movhi	r4,265
 1081b30:	213cb884 	addi	r4,r4,-3358
 1081b34:	d9002b15 	stw	r4,172(sp)
 1081b38:	d8802b17 	ldw	r2,172(sp)
 1081b3c:	1c07883a 	add	r3,r3,r16
 1081b40:	8c400044 	addi	r17,r17,1
 1081b44:	b0800015 	stw	r2,0(r22)
 1081b48:	b4000115 	stw	r16,4(r22)
 1081b4c:	d8c02015 	stw	r3,128(sp)
 1081b50:	dc401f15 	stw	r17,124(sp)
 1081b54:	008001c4 	movi	r2,7
 1081b58:	147ebd0e 	bge	r2,r17,1081650 <___vfprintf_internal_r+0x10b8>
 1081b5c:	d9002c17 	ldw	r4,176(sp)
 1081b60:	d9801e04 	addi	r6,sp,120
 1081b64:	b80b883a 	mov	r5,r23
 1081b68:	1087b940 	call	1087b94 <__sprint_r>
 1081b6c:	103b8c1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081b70:	d8c02017 	ldw	r3,128(sp)
 1081b74:	dc401f17 	ldw	r17,124(sp)
 1081b78:	dd800404 	addi	r22,sp,16
 1081b7c:	003eb506 	br	1081654 <___vfprintf_internal_r+0x10bc>
 1081b80:	d9002c17 	ldw	r4,176(sp)
 1081b84:	d9801e04 	addi	r6,sp,120
 1081b88:	b80b883a 	mov	r5,r23
 1081b8c:	1087b940 	call	1087b94 <__sprint_r>
 1081b90:	103b831e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081b94:	d8c02017 	ldw	r3,128(sp)
 1081b98:	dc401f17 	ldw	r17,124(sp)
 1081b9c:	da000404 	addi	r8,sp,16
 1081ba0:	003e8d06 	br	10815d8 <___vfprintf_internal_r+0x1040>
 1081ba4:	d9002c17 	ldw	r4,176(sp)
 1081ba8:	d9801e04 	addi	r6,sp,120
 1081bac:	b80b883a 	mov	r5,r23
 1081bb0:	1087b940 	call	1087b94 <__sprint_r>
 1081bb4:	103b7a1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081bb8:	d8c02017 	ldw	r3,128(sp)
 1081bbc:	dc401f17 	ldw	r17,124(sp)
 1081bc0:	dd800404 	addi	r22,sp,16
 1081bc4:	003e8f06 	br	1081604 <___vfprintf_internal_r+0x106c>
 1081bc8:	0027883a 	mov	r19,zero
 1081bcc:	003f4a06 	br	10818f8 <___vfprintf_internal_r+0x1360>
 1081bd0:	d9002c17 	ldw	r4,176(sp)
 1081bd4:	d9801e04 	addi	r6,sp,120
 1081bd8:	b80b883a 	mov	r5,r23
 1081bdc:	1087b940 	call	1087b94 <__sprint_r>
 1081be0:	103b6f1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081be4:	d8c02017 	ldw	r3,128(sp)
 1081be8:	da000404 	addi	r8,sp,16
 1081bec:	003c9d06 	br	1080e64 <___vfprintf_internal_r+0x8cc>
 1081bf0:	04e7c83a 	sub	r19,zero,r19
 1081bf4:	9804c03a 	cmpne	r2,r19,zero
 1081bf8:	05adc83a 	sub	r22,zero,r22
 1081bfc:	b0adc83a 	sub	r22,r22,r2
 1081c00:	d8802917 	ldw	r2,164(sp)
 1081c04:	07000b44 	movi	fp,45
 1081c08:	df002785 	stb	fp,158(sp)
 1081c0c:	10017b16 	blt	r2,zero,10821fc <___vfprintf_internal_r+0x1c64>
 1081c10:	00bfdfc4 	movi	r2,-129
 1081c14:	90a4703a 	and	r18,r18,r2
 1081c18:	003bb106 	br	1080ae0 <___vfprintf_internal_r+0x548>
 1081c1c:	d9003617 	ldw	r4,216(sp)
 1081c20:	d9403817 	ldw	r5,224(sp)
 1081c24:	da003d15 	stw	r8,244(sp)
 1081c28:	10877b80 	call	10877b8 <__fpclassifyd>
 1081c2c:	da003d17 	ldw	r8,244(sp)
 1081c30:	1000f026 	beq	r2,zero,1081ff4 <___vfprintf_internal_r+0x1a5c>
 1081c34:	d9002917 	ldw	r4,164(sp)
 1081c38:	05bff7c4 	movi	r22,-33
 1081c3c:	00bfffc4 	movi	r2,-1
 1081c40:	8dac703a 	and	r22,r17,r22
 1081c44:	20820026 	beq	r4,r2,1082448 <___vfprintf_internal_r+0x1eb0>
 1081c48:	008011c4 	movi	r2,71
 1081c4c:	b081f726 	beq	r22,r2,108242c <___vfprintf_internal_r+0x1e94>
 1081c50:	d9003817 	ldw	r4,224(sp)
 1081c54:	90c04014 	ori	r3,r18,256
 1081c58:	d8c02b15 	stw	r3,172(sp)
 1081c5c:	20021516 	blt	r4,zero,10824b4 <___vfprintf_internal_r+0x1f1c>
 1081c60:	dcc03817 	ldw	r19,224(sp)
 1081c64:	d8002a05 	stb	zero,168(sp)
 1081c68:	00801984 	movi	r2,102
 1081c6c:	8881f926 	beq	r17,r2,1082454 <___vfprintf_internal_r+0x1ebc>
 1081c70:	00801184 	movi	r2,70
 1081c74:	88821c26 	beq	r17,r2,10824e8 <___vfprintf_internal_r+0x1f50>
 1081c78:	00801144 	movi	r2,69
 1081c7c:	b081ef26 	beq	r22,r2,108243c <___vfprintf_internal_r+0x1ea4>
 1081c80:	d8c02917 	ldw	r3,164(sp)
 1081c84:	d8802104 	addi	r2,sp,132
 1081c88:	d8800315 	stw	r2,12(sp)
 1081c8c:	d9403617 	ldw	r5,216(sp)
 1081c90:	d8802504 	addi	r2,sp,148
 1081c94:	d9002c17 	ldw	r4,176(sp)
 1081c98:	d8800215 	stw	r2,8(sp)
 1081c9c:	d8802604 	addi	r2,sp,152
 1081ca0:	d8c00015 	stw	r3,0(sp)
 1081ca4:	d8800115 	stw	r2,4(sp)
 1081ca8:	01c00084 	movi	r7,2
 1081cac:	980d883a 	mov	r6,r19
 1081cb0:	d8c03c15 	stw	r3,240(sp)
 1081cb4:	da003d15 	stw	r8,244(sp)
 1081cb8:	1082bbc0 	call	1082bbc <_dtoa_r>
 1081cbc:	1021883a 	mov	r16,r2
 1081cc0:	008019c4 	movi	r2,103
 1081cc4:	d8c03c17 	ldw	r3,240(sp)
 1081cc8:	da003d17 	ldw	r8,244(sp)
 1081ccc:	88817126 	beq	r17,r2,1082294 <___vfprintf_internal_r+0x1cfc>
 1081cd0:	008011c4 	movi	r2,71
 1081cd4:	88829226 	beq	r17,r2,1082720 <___vfprintf_internal_r+0x2188>
 1081cd8:	80f9883a 	add	fp,r16,r3
 1081cdc:	d9003617 	ldw	r4,216(sp)
 1081ce0:	000d883a 	mov	r6,zero
 1081ce4:	000f883a 	mov	r7,zero
 1081ce8:	980b883a 	mov	r5,r19
 1081cec:	da003d15 	stw	r8,244(sp)
 1081cf0:	108b80c0 	call	108b80c <__eqdf2>
 1081cf4:	da003d17 	ldw	r8,244(sp)
 1081cf8:	10018d26 	beq	r2,zero,1082330 <___vfprintf_internal_r+0x1d98>
 1081cfc:	d8802117 	ldw	r2,132(sp)
 1081d00:	1700062e 	bgeu	r2,fp,1081d1c <___vfprintf_internal_r+0x1784>
 1081d04:	01000c04 	movi	r4,48
 1081d08:	10c00044 	addi	r3,r2,1
 1081d0c:	d8c02115 	stw	r3,132(sp)
 1081d10:	11000005 	stb	r4,0(r2)
 1081d14:	d8802117 	ldw	r2,132(sp)
 1081d18:	173ffb36 	bltu	r2,fp,1081d08 <___vfprintf_internal_r+0x1770>
 1081d1c:	1405c83a 	sub	r2,r2,r16
 1081d20:	d8803315 	stw	r2,204(sp)
 1081d24:	008011c4 	movi	r2,71
 1081d28:	b0817626 	beq	r22,r2,1082304 <___vfprintf_internal_r+0x1d6c>
 1081d2c:	00801944 	movi	r2,101
 1081d30:	1442810e 	bge	r2,r17,1082738 <___vfprintf_internal_r+0x21a0>
 1081d34:	d8c02617 	ldw	r3,152(sp)
 1081d38:	00801984 	movi	r2,102
 1081d3c:	d8c03215 	stw	r3,200(sp)
 1081d40:	8881fe26 	beq	r17,r2,108253c <___vfprintf_internal_r+0x1fa4>
 1081d44:	d8c03217 	ldw	r3,200(sp)
 1081d48:	d9003317 	ldw	r4,204(sp)
 1081d4c:	1901dd16 	blt	r3,r4,10824c4 <___vfprintf_internal_r+0x1f2c>
 1081d50:	9480004c 	andi	r18,r18,1
 1081d54:	90022b1e 	bne	r18,zero,1082604 <___vfprintf_internal_r+0x206c>
 1081d58:	1805883a 	mov	r2,r3
 1081d5c:	18028016 	blt	r3,zero,1082760 <___vfprintf_internal_r+0x21c8>
 1081d60:	d8c03217 	ldw	r3,200(sp)
 1081d64:	044019c4 	movi	r17,103
 1081d68:	d8c02e15 	stw	r3,184(sp)
 1081d6c:	df002a07 	ldb	fp,168(sp)
 1081d70:	e001531e 	bne	fp,zero,10822c0 <___vfprintf_internal_r+0x1d28>
 1081d74:	df002783 	ldbu	fp,158(sp)
 1081d78:	d8802a15 	stw	r2,168(sp)
 1081d7c:	dc802b17 	ldw	r18,172(sp)
 1081d80:	d8002915 	stw	zero,164(sp)
 1081d84:	003bd106 	br	1080ccc <___vfprintf_internal_r+0x734>
 1081d88:	d8802d17 	ldw	r2,180(sp)
 1081d8c:	d8c02d17 	ldw	r3,180(sp)
 1081d90:	d9002d17 	ldw	r4,180(sp)
 1081d94:	10800017 	ldw	r2,0(r2)
 1081d98:	18c00117 	ldw	r3,4(r3)
 1081d9c:	21000204 	addi	r4,r4,8
 1081da0:	d8803615 	stw	r2,216(sp)
 1081da4:	d8c03815 	stw	r3,224(sp)
 1081da8:	d9002d15 	stw	r4,180(sp)
 1081dac:	003b7506 	br	1080b84 <___vfprintf_internal_r+0x5ec>
 1081db0:	ac400007 	ldb	r17,0(r21)
 1081db4:	003a5906 	br	108071c <___vfprintf_internal_r+0x184>
 1081db8:	9080100c 	andi	r2,r18,64
 1081dbc:	1000a826 	beq	r2,zero,1082060 <___vfprintf_internal_r+0x1ac8>
 1081dc0:	d9002d17 	ldw	r4,180(sp)
 1081dc4:	002d883a 	mov	r22,zero
 1081dc8:	24c0000b 	ldhu	r19,0(r4)
 1081dcc:	21000104 	addi	r4,r4,4
 1081dd0:	d9002d15 	stw	r4,180(sp)
 1081dd4:	003ccb06 	br	1081104 <___vfprintf_internal_r+0xb6c>
 1081dd8:	d8c02d17 	ldw	r3,180(sp)
 1081ddc:	d9002917 	ldw	r4,164(sp)
 1081de0:	002d883a 	mov	r22,zero
 1081de4:	18800104 	addi	r2,r3,4
 1081de8:	1cc00017 	ldw	r19,0(r3)
 1081dec:	203ebb0e 	bge	r4,zero,10818dc <___vfprintf_internal_r+0x1344>
 1081df0:	003ef106 	br	10819b8 <___vfprintf_internal_r+0x1420>
 1081df4:	9080040c 	andi	r2,r18,16
 1081df8:	1000921e 	bne	r2,zero,1082044 <___vfprintf_internal_r+0x1aac>
 1081dfc:	9480100c 	andi	r18,r18,64
 1081e00:	90013926 	beq	r18,zero,10822e8 <___vfprintf_internal_r+0x1d50>
 1081e04:	d9002d17 	ldw	r4,180(sp)
 1081e08:	d9402f17 	ldw	r5,188(sp)
 1081e0c:	20800017 	ldw	r2,0(r4)
 1081e10:	21000104 	addi	r4,r4,4
 1081e14:	d9002d15 	stw	r4,180(sp)
 1081e18:	1140000d 	sth	r5,0(r2)
 1081e1c:	003a1606 	br	1080678 <___vfprintf_internal_r+0xe0>
 1081e20:	9080100c 	andi	r2,r18,64
 1081e24:	10008026 	beq	r2,zero,1082028 <___vfprintf_internal_r+0x1a90>
 1081e28:	d8c02d17 	ldw	r3,180(sp)
 1081e2c:	1cc0000f 	ldh	r19,0(r3)
 1081e30:	18c00104 	addi	r3,r3,4
 1081e34:	d8c02d15 	stw	r3,180(sp)
 1081e38:	982dd7fa 	srai	r22,r19,31
 1081e3c:	b005883a 	mov	r2,r22
 1081e40:	003b1f06 	br	1080ac0 <___vfprintf_internal_r+0x528>
 1081e44:	9080100c 	andi	r2,r18,64
 1081e48:	d8002785 	stb	zero,158(sp)
 1081e4c:	10008a1e 	bne	r2,zero,1082078 <___vfprintf_internal_r+0x1ae0>
 1081e50:	d9402d17 	ldw	r5,180(sp)
 1081e54:	d8c02917 	ldw	r3,164(sp)
 1081e58:	002d883a 	mov	r22,zero
 1081e5c:	28800104 	addi	r2,r5,4
 1081e60:	2cc00017 	ldw	r19,0(r5)
 1081e64:	183e4b0e 	bge	r3,zero,1081794 <___vfprintf_internal_r+0x11fc>
 1081e68:	9d86b03a 	or	r3,r19,r22
 1081e6c:	d8802d15 	stw	r2,180(sp)
 1081e70:	183e4c1e 	bne	r3,zero,10817a4 <___vfprintf_internal_r+0x120c>
 1081e74:	0039883a 	mov	fp,zero
 1081e78:	0005883a 	mov	r2,zero
 1081e7c:	003d4006 	br	1081380 <___vfprintf_internal_r+0xde8>
 1081e80:	01404274 	movhi	r5,265
 1081e84:	297cb884 	addi	r5,r5,-3358
 1081e88:	d9402b15 	stw	r5,172(sp)
 1081e8c:	d9402b17 	ldw	r5,172(sp)
 1081e90:	1c47883a 	add	r3,r3,r17
 1081e94:	10800044 	addi	r2,r2,1
 1081e98:	41400015 	stw	r5,0(r8)
 1081e9c:	44400115 	stw	r17,4(r8)
 1081ea0:	d8c02015 	stw	r3,128(sp)
 1081ea4:	d8801f15 	stw	r2,124(sp)
 1081ea8:	010001c4 	movi	r4,7
 1081eac:	20bec816 	blt	r4,r2,10819d0 <___vfprintf_internal_r+0x1438>
 1081eb0:	42000204 	addi	r8,r8,8
 1081eb4:	003ecd06 	br	10819ec <___vfprintf_internal_r+0x1454>
 1081eb8:	d9002917 	ldw	r4,164(sp)
 1081ebc:	d8002785 	stb	zero,158(sp)
 1081ec0:	203d2d16 	blt	r4,zero,1081378 <___vfprintf_internal_r+0xde0>
 1081ec4:	00bfdfc4 	movi	r2,-129
 1081ec8:	90a4703a 	and	r18,r18,r2
 1081ecc:	003a9106 	br	1080914 <___vfprintf_internal_r+0x37c>
 1081ed0:	01004274 	movhi	r4,265
 1081ed4:	213cb884 	addi	r4,r4,-3358
 1081ed8:	d9002b15 	stw	r4,172(sp)
 1081edc:	003c0c06 	br	1080f10 <___vfprintf_internal_r+0x978>
 1081ee0:	d9002c17 	ldw	r4,176(sp)
 1081ee4:	d9801e04 	addi	r6,sp,120
 1081ee8:	b80b883a 	mov	r5,r23
 1081eec:	1087b940 	call	1087b94 <__sprint_r>
 1081ef0:	103aab1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081ef4:	d8c02017 	ldw	r3,128(sp)
 1081ef8:	da000404 	addi	r8,sp,16
 1081efc:	003d4106 	br	1081404 <___vfprintf_internal_r+0xe6c>
 1081f00:	d8801f17 	ldw	r2,124(sp)
 1081f04:	01404274 	movhi	r5,265
 1081f08:	01000044 	movi	r4,1
 1081f0c:	18c00044 	addi	r3,r3,1
 1081f10:	10800044 	addi	r2,r2,1
 1081f14:	297cb804 	addi	r5,r5,-3360
 1081f18:	41000115 	stw	r4,4(r8)
 1081f1c:	41400015 	stw	r5,0(r8)
 1081f20:	d8c02015 	stw	r3,128(sp)
 1081f24:	d8801f15 	stw	r2,124(sp)
 1081f28:	010001c4 	movi	r4,7
 1081f2c:	20805c16 	blt	r4,r2,10820a0 <___vfprintf_internal_r+0x1b08>
 1081f30:	42000204 	addi	r8,r8,8
 1081f34:	8800041e 	bne	r17,zero,1081f48 <___vfprintf_internal_r+0x19b0>
 1081f38:	d8803317 	ldw	r2,204(sp)
 1081f3c:	1000021e 	bne	r2,zero,1081f48 <___vfprintf_internal_r+0x19b0>
 1081f40:	9080004c 	andi	r2,r18,1
 1081f44:	103c0926 	beq	r2,zero,1080f6c <___vfprintf_internal_r+0x9d4>
 1081f48:	d9003717 	ldw	r4,220(sp)
 1081f4c:	d8801f17 	ldw	r2,124(sp)
 1081f50:	d9403417 	ldw	r5,208(sp)
 1081f54:	20c7883a 	add	r3,r4,r3
 1081f58:	10800044 	addi	r2,r2,1
 1081f5c:	41000115 	stw	r4,4(r8)
 1081f60:	41400015 	stw	r5,0(r8)
 1081f64:	d8c02015 	stw	r3,128(sp)
 1081f68:	d8801f15 	stw	r2,124(sp)
 1081f6c:	010001c4 	movi	r4,7
 1081f70:	20812116 	blt	r4,r2,10823f8 <___vfprintf_internal_r+0x1e60>
 1081f74:	42000204 	addi	r8,r8,8
 1081f78:	0463c83a 	sub	r17,zero,r17
 1081f7c:	0440730e 	bge	zero,r17,108214c <___vfprintf_internal_r+0x1bb4>
 1081f80:	05800404 	movi	r22,16
 1081f84:	b440860e 	bge	r22,r17,10821a0 <___vfprintf_internal_r+0x1c08>
 1081f88:	01404274 	movhi	r5,265
 1081f8c:	297cb884 	addi	r5,r5,-3358
 1081f90:	d9402b15 	stw	r5,172(sp)
 1081f94:	070001c4 	movi	fp,7
 1081f98:	dcc02c17 	ldw	r19,176(sp)
 1081f9c:	00000306 	br	1081fac <___vfprintf_internal_r+0x1a14>
 1081fa0:	42000204 	addi	r8,r8,8
 1081fa4:	8c7ffc04 	addi	r17,r17,-16
 1081fa8:	b440800e 	bge	r22,r17,10821ac <___vfprintf_internal_r+0x1c14>
 1081fac:	18c00404 	addi	r3,r3,16
 1081fb0:	10800044 	addi	r2,r2,1
 1081fb4:	45000015 	stw	r20,0(r8)
 1081fb8:	45800115 	stw	r22,4(r8)
 1081fbc:	d8c02015 	stw	r3,128(sp)
 1081fc0:	d8801f15 	stw	r2,124(sp)
 1081fc4:	e0bff60e 	bge	fp,r2,1081fa0 <___vfprintf_internal_r+0x1a08>
 1081fc8:	d9801e04 	addi	r6,sp,120
 1081fcc:	b80b883a 	mov	r5,r23
 1081fd0:	9809883a 	mov	r4,r19
 1081fd4:	1087b940 	call	1087b94 <__sprint_r>
 1081fd8:	103a711e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1081fdc:	d8c02017 	ldw	r3,128(sp)
 1081fe0:	d8801f17 	ldw	r2,124(sp)
 1081fe4:	da000404 	addi	r8,sp,16
 1081fe8:	003fee06 	br	1081fa4 <___vfprintf_internal_r+0x1a0c>
 1081fec:	00bfffc4 	movi	r2,-1
 1081ff0:	003a6f06 	br	10809b0 <___vfprintf_internal_r+0x418>
 1081ff4:	008011c4 	movi	r2,71
 1081ff8:	1440b816 	blt	r2,r17,10822dc <___vfprintf_internal_r+0x1d44>
 1081ffc:	04004274 	movhi	r16,265
 1082000:	843caa04 	addi	r16,r16,-3416
 1082004:	00c000c4 	movi	r3,3
 1082008:	00bfdfc4 	movi	r2,-129
 108200c:	d8c02a15 	stw	r3,168(sp)
 1082010:	90a4703a 	and	r18,r18,r2
 1082014:	df002783 	ldbu	fp,158(sp)
 1082018:	d8c02e15 	stw	r3,184(sp)
 108201c:	d8002915 	stw	zero,164(sp)
 1082020:	d8003215 	stw	zero,200(sp)
 1082024:	003b2906 	br	1080ccc <___vfprintf_internal_r+0x734>
 1082028:	d9002d17 	ldw	r4,180(sp)
 108202c:	24c00017 	ldw	r19,0(r4)
 1082030:	21000104 	addi	r4,r4,4
 1082034:	d9002d15 	stw	r4,180(sp)
 1082038:	982dd7fa 	srai	r22,r19,31
 108203c:	b005883a 	mov	r2,r22
 1082040:	003a9f06 	br	1080ac0 <___vfprintf_internal_r+0x528>
 1082044:	d9402d17 	ldw	r5,180(sp)
 1082048:	d8c02f17 	ldw	r3,188(sp)
 108204c:	28800017 	ldw	r2,0(r5)
 1082050:	29400104 	addi	r5,r5,4
 1082054:	d9402d15 	stw	r5,180(sp)
 1082058:	10c00015 	stw	r3,0(r2)
 108205c:	00398606 	br	1080678 <___vfprintf_internal_r+0xe0>
 1082060:	d9402d17 	ldw	r5,180(sp)
 1082064:	002d883a 	mov	r22,zero
 1082068:	2cc00017 	ldw	r19,0(r5)
 108206c:	29400104 	addi	r5,r5,4
 1082070:	d9402d15 	stw	r5,180(sp)
 1082074:	003c2306 	br	1081104 <___vfprintf_internal_r+0xb6c>
 1082078:	d8c02d17 	ldw	r3,180(sp)
 108207c:	d9002917 	ldw	r4,164(sp)
 1082080:	002d883a 	mov	r22,zero
 1082084:	18800104 	addi	r2,r3,4
 1082088:	1cc0000b 	ldhu	r19,0(r3)
 108208c:	203dc10e 	bge	r4,zero,1081794 <___vfprintf_internal_r+0x11fc>
 1082090:	003f7506 	br	1081e68 <___vfprintf_internal_r+0x18d0>
 1082094:	04004274 	movhi	r16,265
 1082098:	843ca804 	addi	r16,r16,-3424
 108209c:	003acc06 	br	1080bd0 <___vfprintf_internal_r+0x638>
 10820a0:	d9002c17 	ldw	r4,176(sp)
 10820a4:	d9801e04 	addi	r6,sp,120
 10820a8:	b80b883a 	mov	r5,r23
 10820ac:	1087b940 	call	1087b94 <__sprint_r>
 10820b0:	103a3b1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 10820b4:	dc402617 	ldw	r17,152(sp)
 10820b8:	d8c02017 	ldw	r3,128(sp)
 10820bc:	da000404 	addi	r8,sp,16
 10820c0:	003f9c06 	br	1081f34 <___vfprintf_internal_r+0x199c>
 10820c4:	ac400043 	ldbu	r17,1(r21)
 10820c8:	94800814 	ori	r18,r18,32
 10820cc:	ad400044 	addi	r21,r21,1
 10820d0:	8c403fcc 	andi	r17,r17,255
 10820d4:	8c40201c 	xori	r17,r17,128
 10820d8:	8c7fe004 	addi	r17,r17,-128
 10820dc:	00398f06 	br	108071c <___vfprintf_internal_r+0x184>
 10820e0:	d8c02d15 	stw	r3,180(sp)
 10820e4:	0039883a 	mov	fp,zero
 10820e8:	003e3506 	br	10819c0 <___vfprintf_internal_r+0x1428>
 10820ec:	d9002c17 	ldw	r4,176(sp)
 10820f0:	d9801e04 	addi	r6,sp,120
 10820f4:	b80b883a 	mov	r5,r23
 10820f8:	1087b940 	call	1087b94 <__sprint_r>
 10820fc:	103a281e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1082100:	d8c02017 	ldw	r3,128(sp)
 1082104:	da000404 	addi	r8,sp,16
 1082108:	003cd006 	br	108144c <___vfprintf_internal_r+0xeb4>
 108210c:	8009883a 	mov	r4,r16
 1082110:	da003d15 	stw	r8,244(sp)
 1082114:	10805000 	call	1080500 <strlen>
 1082118:	d8802e15 	stw	r2,184(sp)
 108211c:	da003d17 	ldw	r8,244(sp)
 1082120:	103c340e 	bge	r2,zero,10811f4 <___vfprintf_internal_r+0xc5c>
 1082124:	0005883a 	mov	r2,zero
 1082128:	003c3206 	br	10811f4 <___vfprintf_internal_r+0xc5c>
 108212c:	d9002c17 	ldw	r4,176(sp)
 1082130:	d9801e04 	addi	r6,sp,120
 1082134:	b80b883a 	mov	r5,r23
 1082138:	1087b940 	call	1087b94 <__sprint_r>
 108213c:	103a181e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1082140:	d8c02017 	ldw	r3,128(sp)
 1082144:	d8801f17 	ldw	r2,124(sp)
 1082148:	da000404 	addi	r8,sp,16
 108214c:	d9403317 	ldw	r5,204(sp)
 1082150:	10800044 	addi	r2,r2,1
 1082154:	44000015 	stw	r16,0(r8)
 1082158:	28c7883a 	add	r3,r5,r3
 108215c:	003b7d06 	br	1080f54 <___vfprintf_internal_r+0x9bc>
 1082160:	01004274 	movhi	r4,265
 1082164:	213cbc84 	addi	r4,r4,-3342
 1082168:	d9003515 	stw	r4,212(sp)
 108216c:	003b1406 	br	1080dc0 <___vfprintf_internal_r+0x828>
 1082170:	013fffc4 	movi	r4,-1
 1082174:	003a3506 	br	1080a4c <___vfprintf_internal_r+0x4b4>
 1082178:	0023883a 	mov	r17,zero
 108217c:	003d9d06 	br	10817f4 <___vfprintf_internal_r+0x125c>
 1082180:	d9002c17 	ldw	r4,176(sp)
 1082184:	d9801e04 	addi	r6,sp,120
 1082188:	b80b883a 	mov	r5,r23
 108218c:	1087b940 	call	1087b94 <__sprint_r>
 1082190:	103a031e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 1082194:	d8c02017 	ldw	r3,128(sp)
 1082198:	da000404 	addi	r8,sp,16
 108219c:	003d9406 	br	10817f0 <___vfprintf_internal_r+0x1258>
 10821a0:	01004274 	movhi	r4,265
 10821a4:	213cb884 	addi	r4,r4,-3358
 10821a8:	d9002b15 	stw	r4,172(sp)
 10821ac:	d9002b17 	ldw	r4,172(sp)
 10821b0:	1c47883a 	add	r3,r3,r17
 10821b4:	10800044 	addi	r2,r2,1
 10821b8:	41000015 	stw	r4,0(r8)
 10821bc:	44400115 	stw	r17,4(r8)
 10821c0:	d8c02015 	stw	r3,128(sp)
 10821c4:	d8801f15 	stw	r2,124(sp)
 10821c8:	010001c4 	movi	r4,7
 10821cc:	20bfd716 	blt	r4,r2,108212c <___vfprintf_internal_r+0x1b94>
 10821d0:	42000204 	addi	r8,r8,8
 10821d4:	003fdd06 	br	108214c <___vfprintf_internal_r+0x1bb4>
 10821d8:	d9002c17 	ldw	r4,176(sp)
 10821dc:	d9801e04 	addi	r6,sp,120
 10821e0:	b80b883a 	mov	r5,r23
 10821e4:	1087b940 	call	1087b94 <__sprint_r>
 10821e8:	1039ed1e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 10821ec:	d8802617 	ldw	r2,152(sp)
 10821f0:	d8c02017 	ldw	r3,128(sp)
 10821f4:	da000404 	addi	r8,sp,16
 10821f8:	003e1006 	br	1081a3c <___vfprintf_internal_r+0x14a4>
 10821fc:	00800044 	movi	r2,1
 1082200:	10803fcc 	andi	r2,r2,255
 1082204:	00c00044 	movi	r3,1
 1082208:	10fa3526 	beq	r2,r3,1080ae0 <___vfprintf_internal_r+0x548>
 108220c:	00c00084 	movi	r3,2
 1082210:	10fbcb26 	beq	r2,r3,1081140 <___vfprintf_internal_r+0xba8>
 1082214:	003a8f06 	br	1080c54 <___vfprintf_internal_r+0x6bc>
 1082218:	01004274 	movhi	r4,265
 108221c:	213cbc84 	addi	r4,r4,-3342
 1082220:	d9003515 	stw	r4,212(sp)
 1082224:	003b7606 	br	1081000 <___vfprintf_internal_r+0xa68>
 1082228:	d8802917 	ldw	r2,164(sp)
 108222c:	00c00184 	movi	r3,6
 1082230:	1880012e 	bgeu	r3,r2,1082238 <___vfprintf_internal_r+0x1ca0>
 1082234:	1805883a 	mov	r2,r3
 1082238:	d8802e15 	stw	r2,184(sp)
 108223c:	1000ef16 	blt	r2,zero,10825fc <___vfprintf_internal_r+0x2064>
 1082240:	04004274 	movhi	r16,265
 1082244:	d8802a15 	stw	r2,168(sp)
 1082248:	dcc02d15 	stw	r19,180(sp)
 108224c:	d8002915 	stw	zero,164(sp)
 1082250:	d8003215 	stw	zero,200(sp)
 1082254:	843cb604 	addi	r16,r16,-3368
 1082258:	0039883a 	mov	fp,zero
 108225c:	003aa206 	br	1080ce8 <___vfprintf_internal_r+0x750>
 1082260:	0021883a 	mov	r16,zero
 1082264:	003e0706 	br	1081a84 <___vfprintf_internal_r+0x14ec>
 1082268:	d9002c17 	ldw	r4,176(sp)
 108226c:	d9801e04 	addi	r6,sp,120
 1082270:	b80b883a 	mov	r5,r23
 1082274:	1087b940 	call	1087b94 <__sprint_r>
 1082278:	1039c91e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 108227c:	d8802617 	ldw	r2,152(sp)
 1082280:	d9403317 	ldw	r5,204(sp)
 1082284:	d8c02017 	ldw	r3,128(sp)
 1082288:	da000404 	addi	r8,sp,16
 108228c:	2885c83a 	sub	r2,r5,r2
 1082290:	003dfb06 	br	1081a80 <___vfprintf_internal_r+0x14e8>
 1082294:	9080004c 	andi	r2,r18,1
 1082298:	103e8f1e 	bne	r2,zero,1081cd8 <___vfprintf_internal_r+0x1740>
 108229c:	d8802117 	ldw	r2,132(sp)
 10822a0:	003e9e06 	br	1081d1c <___vfprintf_internal_r+0x1784>
 10822a4:	1025883a 	mov	r18,r2
 10822a8:	0039883a 	mov	fp,zero
 10822ac:	00800084 	movi	r2,2
 10822b0:	003fd306 	br	1082200 <___vfprintf_internal_r+0x1c68>
 10822b4:	07000b44 	movi	fp,45
 10822b8:	df002785 	stb	fp,158(sp)
 10822bc:	003a4006 	br	1080bc0 <___vfprintf_internal_r+0x628>
 10822c0:	00c00b44 	movi	r3,45
 10822c4:	d8c02785 	stb	r3,158(sp)
 10822c8:	d8802a15 	stw	r2,168(sp)
 10822cc:	dc802b17 	ldw	r18,172(sp)
 10822d0:	d8002915 	stw	zero,164(sp)
 10822d4:	07000b44 	movi	fp,45
 10822d8:	003a8006 	br	1080cdc <___vfprintf_internal_r+0x744>
 10822dc:	04004274 	movhi	r16,265
 10822e0:	843cab04 	addi	r16,r16,-3412
 10822e4:	003f4706 	br	1082004 <___vfprintf_internal_r+0x1a6c>
 10822e8:	d8c02d17 	ldw	r3,180(sp)
 10822ec:	d9002f17 	ldw	r4,188(sp)
 10822f0:	18800017 	ldw	r2,0(r3)
 10822f4:	18c00104 	addi	r3,r3,4
 10822f8:	d8c02d15 	stw	r3,180(sp)
 10822fc:	11000015 	stw	r4,0(r2)
 1082300:	0038dd06 	br	1080678 <___vfprintf_internal_r+0xe0>
 1082304:	dd802617 	ldw	r22,152(sp)
 1082308:	00bfff44 	movi	r2,-3
 108230c:	b0801c16 	blt	r22,r2,1082380 <___vfprintf_internal_r+0x1de8>
 1082310:	d9402917 	ldw	r5,164(sp)
 1082314:	2d801a16 	blt	r5,r22,1082380 <___vfprintf_internal_r+0x1de8>
 1082318:	dd803215 	stw	r22,200(sp)
 108231c:	003e8906 	br	1081d44 <___vfprintf_internal_r+0x17ac>
 1082320:	01004274 	movhi	r4,265
 1082324:	213cb884 	addi	r4,r4,-3358
 1082328:	d9002b15 	stw	r4,172(sp)
 108232c:	003c9106 	br	1081574 <___vfprintf_internal_r+0xfdc>
 1082330:	e005883a 	mov	r2,fp
 1082334:	003e7906 	br	1081d1c <___vfprintf_internal_r+0x1784>
 1082338:	d9402917 	ldw	r5,164(sp)
 108233c:	df002783 	ldbu	fp,158(sp)
 1082340:	dcc02d15 	stw	r19,180(sp)
 1082344:	d9402a15 	stw	r5,168(sp)
 1082348:	d9402e15 	stw	r5,184(sp)
 108234c:	d8002915 	stw	zero,164(sp)
 1082350:	d8003215 	stw	zero,200(sp)
 1082354:	003a5d06 	br	1080ccc <___vfprintf_internal_r+0x734>
 1082358:	9080004c 	andi	r2,r18,1
 108235c:	0039883a 	mov	fp,zero
 1082360:	10000426 	beq	r2,zero,1082374 <___vfprintf_internal_r+0x1ddc>
 1082364:	00800c04 	movi	r2,48
 1082368:	dc001dc4 	addi	r16,sp,119
 108236c:	d8801dc5 	stb	r2,119(sp)
 1082370:	003b8006 	br	1081174 <___vfprintf_internal_r+0xbdc>
 1082374:	d8002e15 	stw	zero,184(sp)
 1082378:	dc001e04 	addi	r16,sp,120
 108237c:	003a4d06 	br	1080cb4 <___vfprintf_internal_r+0x71c>
 1082380:	8c7fff84 	addi	r17,r17,-2
 1082384:	b5bfffc4 	addi	r22,r22,-1
 1082388:	dd802615 	stw	r22,152(sp)
 108238c:	dc4022c5 	stb	r17,139(sp)
 1082390:	b000bf16 	blt	r22,zero,1082690 <___vfprintf_internal_r+0x20f8>
 1082394:	00800ac4 	movi	r2,43
 1082398:	d8802305 	stb	r2,140(sp)
 108239c:	00800244 	movi	r2,9
 10823a0:	15807016 	blt	r2,r22,1082564 <___vfprintf_internal_r+0x1fcc>
 10823a4:	00800c04 	movi	r2,48
 10823a8:	b5800c04 	addi	r22,r22,48
 10823ac:	d8802345 	stb	r2,141(sp)
 10823b0:	dd802385 	stb	r22,142(sp)
 10823b4:	d88023c4 	addi	r2,sp,143
 10823b8:	df0022c4 	addi	fp,sp,139
 10823bc:	d8c03317 	ldw	r3,204(sp)
 10823c0:	1739c83a 	sub	fp,r2,fp
 10823c4:	d9003317 	ldw	r4,204(sp)
 10823c8:	e0c7883a 	add	r3,fp,r3
 10823cc:	df003a15 	stw	fp,232(sp)
 10823d0:	d8c02e15 	stw	r3,184(sp)
 10823d4:	00800044 	movi	r2,1
 10823d8:	1100b30e 	bge	r2,r4,10826a8 <___vfprintf_internal_r+0x2110>
 10823dc:	d8c02e17 	ldw	r3,184(sp)
 10823e0:	18c00044 	addi	r3,r3,1
 10823e4:	d8c02e15 	stw	r3,184(sp)
 10823e8:	1805883a 	mov	r2,r3
 10823ec:	1800ac16 	blt	r3,zero,10826a0 <___vfprintf_internal_r+0x2108>
 10823f0:	d8003215 	stw	zero,200(sp)
 10823f4:	003e5d06 	br	1081d6c <___vfprintf_internal_r+0x17d4>
 10823f8:	d9002c17 	ldw	r4,176(sp)
 10823fc:	d9801e04 	addi	r6,sp,120
 1082400:	b80b883a 	mov	r5,r23
 1082404:	1087b940 	call	1087b94 <__sprint_r>
 1082408:	1039651e 	bne	r2,zero,10809a0 <___vfprintf_internal_r+0x408>
 108240c:	dc402617 	ldw	r17,152(sp)
 1082410:	d8c02017 	ldw	r3,128(sp)
 1082414:	d8801f17 	ldw	r2,124(sp)
 1082418:	da000404 	addi	r8,sp,16
 108241c:	003ed606 	br	1081f78 <___vfprintf_internal_r+0x19e0>
 1082420:	582b883a 	mov	r21,r11
 1082424:	d8002915 	stw	zero,164(sp)
 1082428:	0038bd06 	br	1080720 <___vfprintf_internal_r+0x188>
 108242c:	d8802917 	ldw	r2,164(sp)
 1082430:	103e071e 	bne	r2,zero,1081c50 <___vfprintf_internal_r+0x16b8>
 1082434:	dc002915 	stw	r16,164(sp)
 1082438:	003e0506 	br	1081c50 <___vfprintf_internal_r+0x16b8>
 108243c:	d9002917 	ldw	r4,164(sp)
 1082440:	20c00044 	addi	r3,r4,1
 1082444:	003e0f06 	br	1081c84 <___vfprintf_internal_r+0x16ec>
 1082448:	01400184 	movi	r5,6
 108244c:	d9402915 	stw	r5,164(sp)
 1082450:	003dff06 	br	1081c50 <___vfprintf_internal_r+0x16b8>
 1082454:	d8802104 	addi	r2,sp,132
 1082458:	d8800315 	stw	r2,12(sp)
 108245c:	d8802504 	addi	r2,sp,148
 1082460:	d8800215 	stw	r2,8(sp)
 1082464:	d8802604 	addi	r2,sp,152
 1082468:	d8800115 	stw	r2,4(sp)
 108246c:	d8802917 	ldw	r2,164(sp)
 1082470:	d9403617 	ldw	r5,216(sp)
 1082474:	d9002c17 	ldw	r4,176(sp)
 1082478:	d8800015 	stw	r2,0(sp)
 108247c:	01c000c4 	movi	r7,3
 1082480:	980d883a 	mov	r6,r19
 1082484:	da003d15 	stw	r8,244(sp)
 1082488:	1082bbc0 	call	1082bbc <_dtoa_r>
 108248c:	d8c02917 	ldw	r3,164(sp)
 1082490:	da003d17 	ldw	r8,244(sp)
 1082494:	1021883a 	mov	r16,r2
 1082498:	10f9883a 	add	fp,r2,r3
 108249c:	81000007 	ldb	r4,0(r16)
 10824a0:	00800c04 	movi	r2,48
 10824a4:	20805e26 	beq	r4,r2,1082620 <___vfprintf_internal_r+0x2088>
 10824a8:	d8c02617 	ldw	r3,152(sp)
 10824ac:	e0f9883a 	add	fp,fp,r3
 10824b0:	003e0a06 	br	1081cdc <___vfprintf_internal_r+0x1744>
 10824b4:	00c00b44 	movi	r3,45
 10824b8:	24e0003c 	xorhi	r19,r4,32768
 10824bc:	d8c02a05 	stb	r3,168(sp)
 10824c0:	003de906 	br	1081c68 <___vfprintf_internal_r+0x16d0>
 10824c4:	d8c03217 	ldw	r3,200(sp)
 10824c8:	00c07a0e 	bge	zero,r3,10826b4 <___vfprintf_internal_r+0x211c>
 10824cc:	00800044 	movi	r2,1
 10824d0:	d9003317 	ldw	r4,204(sp)
 10824d4:	1105883a 	add	r2,r2,r4
 10824d8:	d8802e15 	stw	r2,184(sp)
 10824dc:	10004e16 	blt	r2,zero,1082618 <___vfprintf_internal_r+0x2080>
 10824e0:	044019c4 	movi	r17,103
 10824e4:	003e2106 	br	1081d6c <___vfprintf_internal_r+0x17d4>
 10824e8:	d9002917 	ldw	r4,164(sp)
 10824ec:	d8802104 	addi	r2,sp,132
 10824f0:	d8800315 	stw	r2,12(sp)
 10824f4:	d9000015 	stw	r4,0(sp)
 10824f8:	d8802504 	addi	r2,sp,148
 10824fc:	d9403617 	ldw	r5,216(sp)
 1082500:	d9002c17 	ldw	r4,176(sp)
 1082504:	d8800215 	stw	r2,8(sp)
 1082508:	d8802604 	addi	r2,sp,152
 108250c:	d8800115 	stw	r2,4(sp)
 1082510:	01c000c4 	movi	r7,3
 1082514:	980d883a 	mov	r6,r19
 1082518:	da003d15 	stw	r8,244(sp)
 108251c:	1082bbc0 	call	1082bbc <_dtoa_r>
 1082520:	d8c02917 	ldw	r3,164(sp)
 1082524:	da003d17 	ldw	r8,244(sp)
 1082528:	1021883a 	mov	r16,r2
 108252c:	00801184 	movi	r2,70
 1082530:	80f9883a 	add	fp,r16,r3
 1082534:	88bfd926 	beq	r17,r2,108249c <___vfprintf_internal_r+0x1f04>
 1082538:	003de806 	br	1081cdc <___vfprintf_internal_r+0x1744>
 108253c:	d9002917 	ldw	r4,164(sp)
 1082540:	00c04d0e 	bge	zero,r3,1082678 <___vfprintf_internal_r+0x20e0>
 1082544:	2000441e 	bne	r4,zero,1082658 <___vfprintf_internal_r+0x20c0>
 1082548:	9480004c 	andi	r18,r18,1
 108254c:	9000421e 	bne	r18,zero,1082658 <___vfprintf_internal_r+0x20c0>
 1082550:	1805883a 	mov	r2,r3
 1082554:	18007016 	blt	r3,zero,1082718 <___vfprintf_internal_r+0x2180>
 1082558:	d8c03217 	ldw	r3,200(sp)
 108255c:	d8c02e15 	stw	r3,184(sp)
 1082560:	003e0206 	br	1081d6c <___vfprintf_internal_r+0x17d4>
 1082564:	df0022c4 	addi	fp,sp,139
 1082568:	dc002915 	stw	r16,164(sp)
 108256c:	4027883a 	mov	r19,r8
 1082570:	e021883a 	mov	r16,fp
 1082574:	b009883a 	mov	r4,r22
 1082578:	01400284 	movi	r5,10
 108257c:	108a5480 	call	108a548 <__modsi3>
 1082580:	10800c04 	addi	r2,r2,48
 1082584:	843fffc4 	addi	r16,r16,-1
 1082588:	b009883a 	mov	r4,r22
 108258c:	01400284 	movi	r5,10
 1082590:	80800005 	stb	r2,0(r16)
 1082594:	108a4c40 	call	108a4c4 <__divsi3>
 1082598:	102d883a 	mov	r22,r2
 108259c:	00800244 	movi	r2,9
 10825a0:	15bff416 	blt	r2,r22,1082574 <___vfprintf_internal_r+0x1fdc>
 10825a4:	9811883a 	mov	r8,r19
 10825a8:	b0800c04 	addi	r2,r22,48
 10825ac:	8027883a 	mov	r19,r16
 10825b0:	997fffc4 	addi	r5,r19,-1
 10825b4:	98bfffc5 	stb	r2,-1(r19)
 10825b8:	dc002917 	ldw	r16,164(sp)
 10825bc:	2f006a2e 	bgeu	r5,fp,1082768 <___vfprintf_internal_r+0x21d0>
 10825c0:	d9c02384 	addi	r7,sp,142
 10825c4:	3ccfc83a 	sub	r7,r7,r19
 10825c8:	d9002344 	addi	r4,sp,141
 10825cc:	e1cf883a 	add	r7,fp,r7
 10825d0:	00000106 	br	10825d8 <___vfprintf_internal_r+0x2040>
 10825d4:	28800003 	ldbu	r2,0(r5)
 10825d8:	20800005 	stb	r2,0(r4)
 10825dc:	21000044 	addi	r4,r4,1
 10825e0:	29400044 	addi	r5,r5,1
 10825e4:	393ffb1e 	bne	r7,r4,10825d4 <___vfprintf_internal_r+0x203c>
 10825e8:	d8802304 	addi	r2,sp,140
 10825ec:	14c5c83a 	sub	r2,r2,r19
 10825f0:	d8c02344 	addi	r3,sp,141
 10825f4:	1885883a 	add	r2,r3,r2
 10825f8:	003f7006 	br	10823bc <___vfprintf_internal_r+0x1e24>
 10825fc:	0005883a 	mov	r2,zero
 1082600:	003f0f06 	br	1082240 <___vfprintf_internal_r+0x1ca8>
 1082604:	d8c03217 	ldw	r3,200(sp)
 1082608:	18c00044 	addi	r3,r3,1
 108260c:	d8c02e15 	stw	r3,184(sp)
 1082610:	1805883a 	mov	r2,r3
 1082614:	183fb20e 	bge	r3,zero,10824e0 <___vfprintf_internal_r+0x1f48>
 1082618:	0005883a 	mov	r2,zero
 108261c:	003fb006 	br	10824e0 <___vfprintf_internal_r+0x1f48>
 1082620:	d9003617 	ldw	r4,216(sp)
 1082624:	000d883a 	mov	r6,zero
 1082628:	000f883a 	mov	r7,zero
 108262c:	980b883a 	mov	r5,r19
 1082630:	d8c03c15 	stw	r3,240(sp)
 1082634:	da003d15 	stw	r8,244(sp)
 1082638:	108b80c0 	call	108b80c <__eqdf2>
 108263c:	d8c03c17 	ldw	r3,240(sp)
 1082640:	da003d17 	ldw	r8,244(sp)
 1082644:	103f9826 	beq	r2,zero,10824a8 <___vfprintf_internal_r+0x1f10>
 1082648:	00800044 	movi	r2,1
 108264c:	10c7c83a 	sub	r3,r2,r3
 1082650:	d8c02615 	stw	r3,152(sp)
 1082654:	003f9506 	br	10824ac <___vfprintf_internal_r+0x1f14>
 1082658:	d9002917 	ldw	r4,164(sp)
 108265c:	d8c03217 	ldw	r3,200(sp)
 1082660:	20800044 	addi	r2,r4,1
 1082664:	1885883a 	add	r2,r3,r2
 1082668:	d8802e15 	stw	r2,184(sp)
 108266c:	103dbf0e 	bge	r2,zero,1081d6c <___vfprintf_internal_r+0x17d4>
 1082670:	0005883a 	mov	r2,zero
 1082674:	003dbd06 	br	1081d6c <___vfprintf_internal_r+0x17d4>
 1082678:	2000211e 	bne	r4,zero,1082700 <___vfprintf_internal_r+0x2168>
 108267c:	9480004c 	andi	r18,r18,1
 1082680:	90001f1e 	bne	r18,zero,1082700 <___vfprintf_internal_r+0x2168>
 1082684:	00800044 	movi	r2,1
 1082688:	d8802e15 	stw	r2,184(sp)
 108268c:	003db706 	br	1081d6c <___vfprintf_internal_r+0x17d4>
 1082690:	00800b44 	movi	r2,45
 1082694:	05adc83a 	sub	r22,zero,r22
 1082698:	d8802305 	stb	r2,140(sp)
 108269c:	003f3f06 	br	108239c <___vfprintf_internal_r+0x1e04>
 10826a0:	0005883a 	mov	r2,zero
 10826a4:	003f5206 	br	10823f0 <___vfprintf_internal_r+0x1e58>
 10826a8:	90a4703a 	and	r18,r18,r2
 10826ac:	903f4e26 	beq	r18,zero,10823e8 <___vfprintf_internal_r+0x1e50>
 10826b0:	003f4a06 	br	10823dc <___vfprintf_internal_r+0x1e44>
 10826b4:	00800084 	movi	r2,2
 10826b8:	10c5c83a 	sub	r2,r2,r3
 10826bc:	003f8406 	br	10824d0 <___vfprintf_internal_r+0x1f38>
 10826c0:	d8802d17 	ldw	r2,180(sp)
 10826c4:	d9002d17 	ldw	r4,180(sp)
 10826c8:	ac400043 	ldbu	r17,1(r21)
 10826cc:	10800017 	ldw	r2,0(r2)
 10826d0:	582b883a 	mov	r21,r11
 10826d4:	d8802915 	stw	r2,164(sp)
 10826d8:	20800104 	addi	r2,r4,4
 10826dc:	d9002917 	ldw	r4,164(sp)
 10826e0:	d8802d15 	stw	r2,180(sp)
 10826e4:	203e7a0e 	bge	r4,zero,10820d0 <___vfprintf_internal_r+0x1b38>
 10826e8:	8c403fcc 	andi	r17,r17,255
 10826ec:	00bfffc4 	movi	r2,-1
 10826f0:	8c40201c 	xori	r17,r17,128
 10826f4:	d8802915 	stw	r2,164(sp)
 10826f8:	8c7fe004 	addi	r17,r17,-128
 10826fc:	00380706 	br	108071c <___vfprintf_internal_r+0x184>
 1082700:	d8c02917 	ldw	r3,164(sp)
 1082704:	18c00084 	addi	r3,r3,2
 1082708:	d8c02e15 	stw	r3,184(sp)
 108270c:	1805883a 	mov	r2,r3
 1082710:	183d960e 	bge	r3,zero,1081d6c <___vfprintf_internal_r+0x17d4>
 1082714:	003fd606 	br	1082670 <___vfprintf_internal_r+0x20d8>
 1082718:	0005883a 	mov	r2,zero
 108271c:	003f8e06 	br	1082558 <___vfprintf_internal_r+0x1fc0>
 1082720:	9080004c 	andi	r2,r18,1
 1082724:	103f811e 	bne	r2,zero,108252c <___vfprintf_internal_r+0x1f94>
 1082728:	d8802117 	ldw	r2,132(sp)
 108272c:	1405c83a 	sub	r2,r2,r16
 1082730:	d8803315 	stw	r2,204(sp)
 1082734:	b47ef326 	beq	r22,r17,1082304 <___vfprintf_internal_r+0x1d6c>
 1082738:	dd802617 	ldw	r22,152(sp)
 108273c:	003f1106 	br	1082384 <___vfprintf_internal_r+0x1dec>
 1082740:	d9c02785 	stb	r7,158(sp)
 1082744:	00390406 	br	1080b58 <___vfprintf_internal_r+0x5c0>
 1082748:	d9c02785 	stb	r7,158(sp)
 108274c:	0038d306 	br	1080a9c <___vfprintf_internal_r+0x504>
 1082750:	d9c02785 	stb	r7,158(sp)
 1082754:	003a6106 	br	10810dc <___vfprintf_internal_r+0xb44>
 1082758:	d9c02785 	stb	r7,158(sp)
 108275c:	003af806 	br	1081340 <___vfprintf_internal_r+0xda8>
 1082760:	0005883a 	mov	r2,zero
 1082764:	003d7e06 	br	1081d60 <___vfprintf_internal_r+0x17c8>
 1082768:	d8802344 	addi	r2,sp,141
 108276c:	003f1306 	br	10823bc <___vfprintf_internal_r+0x1e24>
 1082770:	d9c02785 	stb	r7,158(sp)
 1082774:	00392306 	br	1080c04 <___vfprintf_internal_r+0x66c>
 1082778:	d9c02785 	stb	r7,158(sp)
 108277c:	003aa906 	br	1081224 <___vfprintf_internal_r+0xc8c>
 1082780:	d9c02785 	stb	r7,158(sp)
 1082784:	003a3d06 	br	108107c <___vfprintf_internal_r+0xae4>
 1082788:	d9c02785 	stb	r7,158(sp)
 108278c:	003aca06 	br	10812b8 <___vfprintf_internal_r+0xd20>

01082790 <__vfprintf_internal>:
 1082790:	00804274 	movhi	r2,265
 1082794:	10842304 	addi	r2,r2,4236
 1082798:	300f883a 	mov	r7,r6
 108279c:	280d883a 	mov	r6,r5
 10827a0:	200b883a 	mov	r5,r4
 10827a4:	11000017 	ldw	r4,0(r2)
 10827a8:	10805981 	jmpi	1080598 <___vfprintf_internal_r>

010827ac <__sbprintf>:
 10827ac:	2880030b 	ldhu	r2,12(r5)
 10827b0:	2ac01917 	ldw	r11,100(r5)
 10827b4:	2a80038b 	ldhu	r10,14(r5)
 10827b8:	2a400717 	ldw	r9,28(r5)
 10827bc:	2a000917 	ldw	r8,36(r5)
 10827c0:	defee204 	addi	sp,sp,-1144
 10827c4:	00c10004 	movi	r3,1024
 10827c8:	dc011a15 	stw	r16,1128(sp)
 10827cc:	10bfff4c 	andi	r2,r2,65533
 10827d0:	2821883a 	mov	r16,r5
 10827d4:	d8cb883a 	add	r5,sp,r3
 10827d8:	dc811c15 	stw	r18,1136(sp)
 10827dc:	dc411b15 	stw	r17,1132(sp)
 10827e0:	dfc11d15 	stw	ra,1140(sp)
 10827e4:	2025883a 	mov	r18,r4
 10827e8:	d881030d 	sth	r2,1036(sp)
 10827ec:	dac11915 	stw	r11,1124(sp)
 10827f0:	da81038d 	sth	r10,1038(sp)
 10827f4:	da410715 	stw	r9,1052(sp)
 10827f8:	da010915 	stw	r8,1060(sp)
 10827fc:	dec10015 	stw	sp,1024(sp)
 1082800:	dec10415 	stw	sp,1040(sp)
 1082804:	d8c10215 	stw	r3,1032(sp)
 1082808:	d8c10515 	stw	r3,1044(sp)
 108280c:	d8010615 	stw	zero,1048(sp)
 1082810:	10805980 	call	1080598 <___vfprintf_internal_r>
 1082814:	1023883a 	mov	r17,r2
 1082818:	10000416 	blt	r2,zero,108282c <__sbprintf+0x80>
 108281c:	d9410004 	addi	r5,sp,1024
 1082820:	9009883a 	mov	r4,r18
 1082824:	10844600 	call	1084460 <_fflush_r>
 1082828:	10000d1e 	bne	r2,zero,1082860 <__sbprintf+0xb4>
 108282c:	d881030b 	ldhu	r2,1036(sp)
 1082830:	1080100c 	andi	r2,r2,64
 1082834:	10000326 	beq	r2,zero,1082844 <__sbprintf+0x98>
 1082838:	8080030b 	ldhu	r2,12(r16)
 108283c:	10801014 	ori	r2,r2,64
 1082840:	8080030d 	sth	r2,12(r16)
 1082844:	8805883a 	mov	r2,r17
 1082848:	dfc11d17 	ldw	ra,1140(sp)
 108284c:	dc811c17 	ldw	r18,1136(sp)
 1082850:	dc411b17 	ldw	r17,1132(sp)
 1082854:	dc011a17 	ldw	r16,1128(sp)
 1082858:	dec11e04 	addi	sp,sp,1144
 108285c:	f800283a 	ret
 1082860:	047fffc4 	movi	r17,-1
 1082864:	003ff106 	br	108282c <__sbprintf+0x80>

01082868 <__swsetup_r>:
 1082868:	00804274 	movhi	r2,265
 108286c:	defffd04 	addi	sp,sp,-12
 1082870:	10842304 	addi	r2,r2,4236
 1082874:	dc400115 	stw	r17,4(sp)
 1082878:	2023883a 	mov	r17,r4
 108287c:	11000017 	ldw	r4,0(r2)
 1082880:	dc000015 	stw	r16,0(sp)
 1082884:	dfc00215 	stw	ra,8(sp)
 1082888:	2821883a 	mov	r16,r5
 108288c:	20000226 	beq	r4,zero,1082898 <__swsetup_r+0x30>
 1082890:	20800e17 	ldw	r2,56(r4)
 1082894:	10003126 	beq	r2,zero,108295c <__swsetup_r+0xf4>
 1082898:	8080030b 	ldhu	r2,12(r16)
 108289c:	10c0020c 	andi	r3,r2,8
 10828a0:	1009883a 	mov	r4,r2
 10828a4:	18000f26 	beq	r3,zero,10828e4 <__swsetup_r+0x7c>
 10828a8:	80c00417 	ldw	r3,16(r16)
 10828ac:	18001526 	beq	r3,zero,1082904 <__swsetup_r+0x9c>
 10828b0:	1100004c 	andi	r4,r2,1
 10828b4:	20001c1e 	bne	r4,zero,1082928 <__swsetup_r+0xc0>
 10828b8:	1080008c 	andi	r2,r2,2
 10828bc:	1000291e 	bne	r2,zero,1082964 <__swsetup_r+0xfc>
 10828c0:	80800517 	ldw	r2,20(r16)
 10828c4:	80800215 	stw	r2,8(r16)
 10828c8:	18001c26 	beq	r3,zero,108293c <__swsetup_r+0xd4>
 10828cc:	0005883a 	mov	r2,zero
 10828d0:	dfc00217 	ldw	ra,8(sp)
 10828d4:	dc400117 	ldw	r17,4(sp)
 10828d8:	dc000017 	ldw	r16,0(sp)
 10828dc:	dec00304 	addi	sp,sp,12
 10828e0:	f800283a 	ret
 10828e4:	2080040c 	andi	r2,r4,16
 10828e8:	10002e26 	beq	r2,zero,10829a4 <__swsetup_r+0x13c>
 10828ec:	2080010c 	andi	r2,r4,4
 10828f0:	10001e1e 	bne	r2,zero,108296c <__swsetup_r+0x104>
 10828f4:	80c00417 	ldw	r3,16(r16)
 10828f8:	20800214 	ori	r2,r4,8
 10828fc:	8080030d 	sth	r2,12(r16)
 1082900:	183feb1e 	bne	r3,zero,10828b0 <__swsetup_r+0x48>
 1082904:	1100a00c 	andi	r4,r2,640
 1082908:	01408004 	movi	r5,512
 108290c:	217fe826 	beq	r4,r5,10828b0 <__swsetup_r+0x48>
 1082910:	800b883a 	mov	r5,r16
 1082914:	8809883a 	mov	r4,r17
 1082918:	10853e00 	call	10853e0 <__smakebuf_r>
 108291c:	8080030b 	ldhu	r2,12(r16)
 1082920:	80c00417 	ldw	r3,16(r16)
 1082924:	003fe206 	br	10828b0 <__swsetup_r+0x48>
 1082928:	80800517 	ldw	r2,20(r16)
 108292c:	80000215 	stw	zero,8(r16)
 1082930:	0085c83a 	sub	r2,zero,r2
 1082934:	80800615 	stw	r2,24(r16)
 1082938:	183fe41e 	bne	r3,zero,10828cc <__swsetup_r+0x64>
 108293c:	80c0030b 	ldhu	r3,12(r16)
 1082940:	0005883a 	mov	r2,zero
 1082944:	1900200c 	andi	r4,r3,128
 1082948:	203fe126 	beq	r4,zero,10828d0 <__swsetup_r+0x68>
 108294c:	18c01014 	ori	r3,r3,64
 1082950:	80c0030d 	sth	r3,12(r16)
 1082954:	00bfffc4 	movi	r2,-1
 1082958:	003fdd06 	br	10828d0 <__swsetup_r+0x68>
 108295c:	108483c0 	call	108483c <__sinit>
 1082960:	003fcd06 	br	1082898 <__swsetup_r+0x30>
 1082964:	0005883a 	mov	r2,zero
 1082968:	003fd606 	br	10828c4 <__swsetup_r+0x5c>
 108296c:	81400c17 	ldw	r5,48(r16)
 1082970:	28000626 	beq	r5,zero,108298c <__swsetup_r+0x124>
 1082974:	80801004 	addi	r2,r16,64
 1082978:	28800326 	beq	r5,r2,1082988 <__swsetup_r+0x120>
 108297c:	8809883a 	mov	r4,r17
 1082980:	10849b00 	call	10849b0 <_free_r>
 1082984:	8100030b 	ldhu	r4,12(r16)
 1082988:	80000c15 	stw	zero,48(r16)
 108298c:	80c00417 	ldw	r3,16(r16)
 1082990:	00bff6c4 	movi	r2,-37
 1082994:	1108703a 	and	r4,r2,r4
 1082998:	80000115 	stw	zero,4(r16)
 108299c:	80c00015 	stw	r3,0(r16)
 10829a0:	003fd506 	br	10828f8 <__swsetup_r+0x90>
 10829a4:	00800244 	movi	r2,9
 10829a8:	88800015 	stw	r2,0(r17)
 10829ac:	20801014 	ori	r2,r4,64
 10829b0:	8080030d 	sth	r2,12(r16)
 10829b4:	00bfffc4 	movi	r2,-1
 10829b8:	003fc506 	br	10828d0 <__swsetup_r+0x68>

010829bc <quorem>:
 10829bc:	defff704 	addi	sp,sp,-36
 10829c0:	dc800215 	stw	r18,8(sp)
 10829c4:	20800417 	ldw	r2,16(r4)
 10829c8:	2c800417 	ldw	r18,16(r5)
 10829cc:	dfc00815 	stw	ra,32(sp)
 10829d0:	ddc00715 	stw	r23,28(sp)
 10829d4:	dd800615 	stw	r22,24(sp)
 10829d8:	dd400515 	stw	r21,20(sp)
 10829dc:	dd000415 	stw	r20,16(sp)
 10829e0:	dcc00315 	stw	r19,12(sp)
 10829e4:	dc400115 	stw	r17,4(sp)
 10829e8:	dc000015 	stw	r16,0(sp)
 10829ec:	14807116 	blt	r2,r18,1082bb4 <quorem+0x1f8>
 10829f0:	94bfffc4 	addi	r18,r18,-1
 10829f4:	94ad883a 	add	r22,r18,r18
 10829f8:	b5ad883a 	add	r22,r22,r22
 10829fc:	2c400504 	addi	r17,r5,20
 1082a00:	8da9883a 	add	r20,r17,r22
 1082a04:	25400504 	addi	r21,r4,20
 1082a08:	282f883a 	mov	r23,r5
 1082a0c:	adad883a 	add	r22,r21,r22
 1082a10:	a1400017 	ldw	r5,0(r20)
 1082a14:	2021883a 	mov	r16,r4
 1082a18:	b1000017 	ldw	r4,0(r22)
 1082a1c:	29400044 	addi	r5,r5,1
 1082a20:	108a5bc0 	call	108a5bc <__udivsi3>
 1082a24:	1027883a 	mov	r19,r2
 1082a28:	10002c26 	beq	r2,zero,1082adc <quorem+0x120>
 1082a2c:	a813883a 	mov	r9,r21
 1082a30:	880b883a 	mov	r5,r17
 1082a34:	0009883a 	mov	r4,zero
 1082a38:	000d883a 	mov	r6,zero
 1082a3c:	2a000017 	ldw	r8,0(r5)
 1082a40:	49c00017 	ldw	r7,0(r9)
 1082a44:	29400104 	addi	r5,r5,4
 1082a48:	40bfffcc 	andi	r2,r8,65535
 1082a4c:	14c5383a 	mul	r2,r2,r19
 1082a50:	4010d43a 	srli	r8,r8,16
 1082a54:	38ffffcc 	andi	r3,r7,65535
 1082a58:	1105883a 	add	r2,r2,r4
 1082a5c:	1008d43a 	srli	r4,r2,16
 1082a60:	44d1383a 	mul	r8,r8,r19
 1082a64:	198d883a 	add	r6,r3,r6
 1082a68:	10ffffcc 	andi	r3,r2,65535
 1082a6c:	30c7c83a 	sub	r3,r6,r3
 1082a70:	380ed43a 	srli	r7,r7,16
 1082a74:	4105883a 	add	r2,r8,r4
 1082a78:	180dd43a 	srai	r6,r3,16
 1082a7c:	113fffcc 	andi	r4,r2,65535
 1082a80:	390fc83a 	sub	r7,r7,r4
 1082a84:	398d883a 	add	r6,r7,r6
 1082a88:	300e943a 	slli	r7,r6,16
 1082a8c:	18ffffcc 	andi	r3,r3,65535
 1082a90:	1008d43a 	srli	r4,r2,16
 1082a94:	38ceb03a 	or	r7,r7,r3
 1082a98:	49c00015 	stw	r7,0(r9)
 1082a9c:	300dd43a 	srai	r6,r6,16
 1082aa0:	4a400104 	addi	r9,r9,4
 1082aa4:	a17fe52e 	bgeu	r20,r5,1082a3c <quorem+0x80>
 1082aa8:	b0800017 	ldw	r2,0(r22)
 1082aac:	10000b1e 	bne	r2,zero,1082adc <quorem+0x120>
 1082ab0:	b0bfff04 	addi	r2,r22,-4
 1082ab4:	a880082e 	bgeu	r21,r2,1082ad8 <quorem+0x11c>
 1082ab8:	b0ffff17 	ldw	r3,-4(r22)
 1082abc:	18000326 	beq	r3,zero,1082acc <quorem+0x110>
 1082ac0:	00000506 	br	1082ad8 <quorem+0x11c>
 1082ac4:	10c00017 	ldw	r3,0(r2)
 1082ac8:	1800031e 	bne	r3,zero,1082ad8 <quorem+0x11c>
 1082acc:	10bfff04 	addi	r2,r2,-4
 1082ad0:	94bfffc4 	addi	r18,r18,-1
 1082ad4:	a8bffb36 	bltu	r21,r2,1082ac4 <quorem+0x108>
 1082ad8:	84800415 	stw	r18,16(r16)
 1082adc:	b80b883a 	mov	r5,r23
 1082ae0:	8009883a 	mov	r4,r16
 1082ae4:	1086b200 	call	1086b20 <__mcmp>
 1082ae8:	10002616 	blt	r2,zero,1082b84 <quorem+0x1c8>
 1082aec:	9cc00044 	addi	r19,r19,1
 1082af0:	a805883a 	mov	r2,r21
 1082af4:	000b883a 	mov	r5,zero
 1082af8:	11000017 	ldw	r4,0(r2)
 1082afc:	89800017 	ldw	r6,0(r17)
 1082b00:	10800104 	addi	r2,r2,4
 1082b04:	20ffffcc 	andi	r3,r4,65535
 1082b08:	194b883a 	add	r5,r3,r5
 1082b0c:	30ffffcc 	andi	r3,r6,65535
 1082b10:	28c7c83a 	sub	r3,r5,r3
 1082b14:	300cd43a 	srli	r6,r6,16
 1082b18:	2008d43a 	srli	r4,r4,16
 1082b1c:	180bd43a 	srai	r5,r3,16
 1082b20:	18ffffcc 	andi	r3,r3,65535
 1082b24:	2189c83a 	sub	r4,r4,r6
 1082b28:	2149883a 	add	r4,r4,r5
 1082b2c:	200c943a 	slli	r6,r4,16
 1082b30:	8c400104 	addi	r17,r17,4
 1082b34:	200bd43a 	srai	r5,r4,16
 1082b38:	30c6b03a 	or	r3,r6,r3
 1082b3c:	10ffff15 	stw	r3,-4(r2)
 1082b40:	a47fed2e 	bgeu	r20,r17,1082af8 <quorem+0x13c>
 1082b44:	9485883a 	add	r2,r18,r18
 1082b48:	1085883a 	add	r2,r2,r2
 1082b4c:	a887883a 	add	r3,r21,r2
 1082b50:	18800017 	ldw	r2,0(r3)
 1082b54:	10000b1e 	bne	r2,zero,1082b84 <quorem+0x1c8>
 1082b58:	18bfff04 	addi	r2,r3,-4
 1082b5c:	a880082e 	bgeu	r21,r2,1082b80 <quorem+0x1c4>
 1082b60:	18ffff17 	ldw	r3,-4(r3)
 1082b64:	18000326 	beq	r3,zero,1082b74 <quorem+0x1b8>
 1082b68:	00000506 	br	1082b80 <quorem+0x1c4>
 1082b6c:	10c00017 	ldw	r3,0(r2)
 1082b70:	1800031e 	bne	r3,zero,1082b80 <quorem+0x1c4>
 1082b74:	10bfff04 	addi	r2,r2,-4
 1082b78:	94bfffc4 	addi	r18,r18,-1
 1082b7c:	a8bffb36 	bltu	r21,r2,1082b6c <quorem+0x1b0>
 1082b80:	84800415 	stw	r18,16(r16)
 1082b84:	9805883a 	mov	r2,r19
 1082b88:	dfc00817 	ldw	ra,32(sp)
 1082b8c:	ddc00717 	ldw	r23,28(sp)
 1082b90:	dd800617 	ldw	r22,24(sp)
 1082b94:	dd400517 	ldw	r21,20(sp)
 1082b98:	dd000417 	ldw	r20,16(sp)
 1082b9c:	dcc00317 	ldw	r19,12(sp)
 1082ba0:	dc800217 	ldw	r18,8(sp)
 1082ba4:	dc400117 	ldw	r17,4(sp)
 1082ba8:	dc000017 	ldw	r16,0(sp)
 1082bac:	dec00904 	addi	sp,sp,36
 1082bb0:	f800283a 	ret
 1082bb4:	0005883a 	mov	r2,zero
 1082bb8:	003ff306 	br	1082b88 <quorem+0x1cc>

01082bbc <_dtoa_r>:
 1082bbc:	20801017 	ldw	r2,64(r4)
 1082bc0:	deffde04 	addi	sp,sp,-136
 1082bc4:	df002015 	stw	fp,128(sp)
 1082bc8:	dcc01b15 	stw	r19,108(sp)
 1082bcc:	dc801a15 	stw	r18,104(sp)
 1082bd0:	dc401915 	stw	r17,100(sp)
 1082bd4:	dc001815 	stw	r16,96(sp)
 1082bd8:	dfc02115 	stw	ra,132(sp)
 1082bdc:	ddc01f15 	stw	r23,124(sp)
 1082be0:	dd801e15 	stw	r22,120(sp)
 1082be4:	dd401d15 	stw	r21,116(sp)
 1082be8:	dd001c15 	stw	r20,112(sp)
 1082bec:	d9c00315 	stw	r7,12(sp)
 1082bf0:	2039883a 	mov	fp,r4
 1082bf4:	3023883a 	mov	r17,r6
 1082bf8:	2825883a 	mov	r18,r5
 1082bfc:	dc002417 	ldw	r16,144(sp)
 1082c00:	3027883a 	mov	r19,r6
 1082c04:	10000826 	beq	r2,zero,1082c28 <_dtoa_r+0x6c>
 1082c08:	21801117 	ldw	r6,68(r4)
 1082c0c:	00c00044 	movi	r3,1
 1082c10:	100b883a 	mov	r5,r2
 1082c14:	1986983a 	sll	r3,r3,r6
 1082c18:	11800115 	stw	r6,4(r2)
 1082c1c:	10c00215 	stw	r3,8(r2)
 1082c20:	10863000 	call	1086300 <_Bfree>
 1082c24:	e0001015 	stw	zero,64(fp)
 1082c28:	88002e16 	blt	r17,zero,1082ce4 <_dtoa_r+0x128>
 1082c2c:	80000015 	stw	zero,0(r16)
 1082c30:	889ffc2c 	andhi	r2,r17,32752
 1082c34:	00dffc34 	movhi	r3,32752
 1082c38:	10c01c26 	beq	r2,r3,1082cac <_dtoa_r+0xf0>
 1082c3c:	000d883a 	mov	r6,zero
 1082c40:	000f883a 	mov	r7,zero
 1082c44:	9009883a 	mov	r4,r18
 1082c48:	980b883a 	mov	r5,r19
 1082c4c:	108b80c0 	call	108b80c <__eqdf2>
 1082c50:	10002b1e 	bne	r2,zero,1082d00 <_dtoa_r+0x144>
 1082c54:	d9c02317 	ldw	r7,140(sp)
 1082c58:	00800044 	movi	r2,1
 1082c5c:	38800015 	stw	r2,0(r7)
 1082c60:	d8802517 	ldw	r2,148(sp)
 1082c64:	10019e26 	beq	r2,zero,10832e0 <_dtoa_r+0x724>
 1082c68:	d8c02517 	ldw	r3,148(sp)
 1082c6c:	00804274 	movhi	r2,265
 1082c70:	10bcb844 	addi	r2,r2,-3359
 1082c74:	18800015 	stw	r2,0(r3)
 1082c78:	10bfffc4 	addi	r2,r2,-1
 1082c7c:	dfc02117 	ldw	ra,132(sp)
 1082c80:	df002017 	ldw	fp,128(sp)
 1082c84:	ddc01f17 	ldw	r23,124(sp)
 1082c88:	dd801e17 	ldw	r22,120(sp)
 1082c8c:	dd401d17 	ldw	r21,116(sp)
 1082c90:	dd001c17 	ldw	r20,112(sp)
 1082c94:	dcc01b17 	ldw	r19,108(sp)
 1082c98:	dc801a17 	ldw	r18,104(sp)
 1082c9c:	dc401917 	ldw	r17,100(sp)
 1082ca0:	dc001817 	ldw	r16,96(sp)
 1082ca4:	dec02204 	addi	sp,sp,136
 1082ca8:	f800283a 	ret
 1082cac:	d8c02317 	ldw	r3,140(sp)
 1082cb0:	0089c3c4 	movi	r2,9999
 1082cb4:	18800015 	stw	r2,0(r3)
 1082cb8:	90017726 	beq	r18,zero,1083298 <_dtoa_r+0x6dc>
 1082cbc:	00804274 	movhi	r2,265
 1082cc0:	10bcc404 	addi	r2,r2,-3312
 1082cc4:	d9002517 	ldw	r4,148(sp)
 1082cc8:	203fec26 	beq	r4,zero,1082c7c <_dtoa_r+0xc0>
 1082ccc:	10c000c7 	ldb	r3,3(r2)
 1082cd0:	1801781e 	bne	r3,zero,10832b4 <_dtoa_r+0x6f8>
 1082cd4:	10c000c4 	addi	r3,r2,3
 1082cd8:	d9802517 	ldw	r6,148(sp)
 1082cdc:	30c00015 	stw	r3,0(r6)
 1082ce0:	003fe606 	br	1082c7c <_dtoa_r+0xc0>
 1082ce4:	04e00034 	movhi	r19,32768
 1082ce8:	9cffffc4 	addi	r19,r19,-1
 1082cec:	00800044 	movi	r2,1
 1082cf0:	8ce6703a 	and	r19,r17,r19
 1082cf4:	80800015 	stw	r2,0(r16)
 1082cf8:	9823883a 	mov	r17,r19
 1082cfc:	003fcc06 	br	1082c30 <_dtoa_r+0x74>
 1082d00:	d8800204 	addi	r2,sp,8
 1082d04:	d8800015 	stw	r2,0(sp)
 1082d08:	d9c00104 	addi	r7,sp,4
 1082d0c:	900b883a 	mov	r5,r18
 1082d10:	980d883a 	mov	r6,r19
 1082d14:	e009883a 	mov	r4,fp
 1082d18:	8820d53a 	srli	r16,r17,20
 1082d1c:	1086eec0 	call	1086eec <__d2b>
 1082d20:	d8800915 	stw	r2,36(sp)
 1082d24:	8001651e 	bne	r16,zero,10832bc <_dtoa_r+0x700>
 1082d28:	dd800217 	ldw	r22,8(sp)
 1082d2c:	dc000117 	ldw	r16,4(sp)
 1082d30:	00800804 	movi	r2,32
 1082d34:	b421883a 	add	r16,r22,r16
 1082d38:	80c10c84 	addi	r3,r16,1074
 1082d3c:	10c2d10e 	bge	r2,r3,1083884 <_dtoa_r+0xcc8>
 1082d40:	00801004 	movi	r2,64
 1082d44:	81010484 	addi	r4,r16,1042
 1082d48:	10c7c83a 	sub	r3,r2,r3
 1082d4c:	9108d83a 	srl	r4,r18,r4
 1082d50:	88e2983a 	sll	r17,r17,r3
 1082d54:	2448b03a 	or	r4,r4,r17
 1082d58:	108cbd40 	call	108cbd4 <__floatunsidf>
 1082d5c:	017f8434 	movhi	r5,65040
 1082d60:	01800044 	movi	r6,1
 1082d64:	1009883a 	mov	r4,r2
 1082d68:	194b883a 	add	r5,r3,r5
 1082d6c:	843fffc4 	addi	r16,r16,-1
 1082d70:	d9801115 	stw	r6,68(sp)
 1082d74:	000d883a 	mov	r6,zero
 1082d78:	01cffe34 	movhi	r7,16376
 1082d7c:	108c17c0 	call	108c17c <__subdf3>
 1082d80:	0198dbf4 	movhi	r6,25455
 1082d84:	01cff4f4 	movhi	r7,16339
 1082d88:	3190d844 	addi	r6,r6,17249
 1082d8c:	39e1e9c4 	addi	r7,r7,-30809
 1082d90:	1009883a 	mov	r4,r2
 1082d94:	180b883a 	mov	r5,r3
 1082d98:	108ba640 	call	108ba64 <__muldf3>
 1082d9c:	01a2d874 	movhi	r6,35681
 1082da0:	01cff1f4 	movhi	r7,16327
 1082da4:	31b22cc4 	addi	r6,r6,-14157
 1082da8:	39e28a04 	addi	r7,r7,-30168
 1082dac:	180b883a 	mov	r5,r3
 1082db0:	1009883a 	mov	r4,r2
 1082db4:	108a6780 	call	108a678 <__adddf3>
 1082db8:	8009883a 	mov	r4,r16
 1082dbc:	1029883a 	mov	r20,r2
 1082dc0:	1823883a 	mov	r17,r3
 1082dc4:	108caf80 	call	108caf8 <__floatsidf>
 1082dc8:	019427f4 	movhi	r6,20639
 1082dcc:	01cff4f4 	movhi	r7,16339
 1082dd0:	319e7ec4 	addi	r6,r6,31227
 1082dd4:	39d104c4 	addi	r7,r7,17427
 1082dd8:	1009883a 	mov	r4,r2
 1082ddc:	180b883a 	mov	r5,r3
 1082de0:	108ba640 	call	108ba64 <__muldf3>
 1082de4:	100d883a 	mov	r6,r2
 1082de8:	180f883a 	mov	r7,r3
 1082dec:	a009883a 	mov	r4,r20
 1082df0:	880b883a 	mov	r5,r17
 1082df4:	108a6780 	call	108a678 <__adddf3>
 1082df8:	1009883a 	mov	r4,r2
 1082dfc:	180b883a 	mov	r5,r3
 1082e00:	1029883a 	mov	r20,r2
 1082e04:	1823883a 	mov	r17,r3
 1082e08:	108ca780 	call	108ca78 <__fixdfsi>
 1082e0c:	000d883a 	mov	r6,zero
 1082e10:	000f883a 	mov	r7,zero
 1082e14:	a009883a 	mov	r4,r20
 1082e18:	880b883a 	mov	r5,r17
 1082e1c:	d8800515 	stw	r2,20(sp)
 1082e20:	108b9700 	call	108b970 <__ledf2>
 1082e24:	10028716 	blt	r2,zero,1083844 <_dtoa_r+0xc88>
 1082e28:	d8c00517 	ldw	r3,20(sp)
 1082e2c:	00800584 	movi	r2,22
 1082e30:	10c27536 	bltu	r2,r3,1083808 <_dtoa_r+0xc4c>
 1082e34:	180490fa 	slli	r2,r3,3
 1082e38:	00c04274 	movhi	r3,265
 1082e3c:	18fce004 	addi	r3,r3,-3200
 1082e40:	1885883a 	add	r2,r3,r2
 1082e44:	11000017 	ldw	r4,0(r2)
 1082e48:	11400117 	ldw	r5,4(r2)
 1082e4c:	900d883a 	mov	r6,r18
 1082e50:	980f883a 	mov	r7,r19
 1082e54:	108b8940 	call	108b894 <__gedf2>
 1082e58:	00828d0e 	bge	zero,r2,1083890 <_dtoa_r+0xcd4>
 1082e5c:	d9000517 	ldw	r4,20(sp)
 1082e60:	d8000e15 	stw	zero,56(sp)
 1082e64:	213fffc4 	addi	r4,r4,-1
 1082e68:	d9000515 	stw	r4,20(sp)
 1082e6c:	b42dc83a 	sub	r22,r22,r16
 1082e70:	b5bfffc4 	addi	r22,r22,-1
 1082e74:	b0026f16 	blt	r22,zero,1083834 <_dtoa_r+0xc78>
 1082e78:	d8000815 	stw	zero,32(sp)
 1082e7c:	d9c00517 	ldw	r7,20(sp)
 1082e80:	38026416 	blt	r7,zero,1083814 <_dtoa_r+0xc58>
 1082e84:	b1ed883a 	add	r22,r22,r7
 1082e88:	d9c00d15 	stw	r7,52(sp)
 1082e8c:	d8000a15 	stw	zero,40(sp)
 1082e90:	d9800317 	ldw	r6,12(sp)
 1082e94:	00800244 	movi	r2,9
 1082e98:	11811436 	bltu	r2,r6,10832ec <_dtoa_r+0x730>
 1082e9c:	00800144 	movi	r2,5
 1082ea0:	1184e10e 	bge	r2,r6,1084228 <_dtoa_r+0x166c>
 1082ea4:	31bfff04 	addi	r6,r6,-4
 1082ea8:	d9800315 	stw	r6,12(sp)
 1082eac:	0023883a 	mov	r17,zero
 1082eb0:	d9800317 	ldw	r6,12(sp)
 1082eb4:	008000c4 	movi	r2,3
 1082eb8:	30836726 	beq	r6,r2,1083c58 <_dtoa_r+0x109c>
 1082ebc:	1183410e 	bge	r2,r6,1083bc4 <_dtoa_r+0x1008>
 1082ec0:	d9c00317 	ldw	r7,12(sp)
 1082ec4:	00800104 	movi	r2,4
 1082ec8:	38827c26 	beq	r7,r2,10838bc <_dtoa_r+0xd00>
 1082ecc:	00800144 	movi	r2,5
 1082ed0:	3884c41e 	bne	r7,r2,10841e4 <_dtoa_r+0x1628>
 1082ed4:	00800044 	movi	r2,1
 1082ed8:	d8800b15 	stw	r2,44(sp)
 1082edc:	d8c00517 	ldw	r3,20(sp)
 1082ee0:	d9002217 	ldw	r4,136(sp)
 1082ee4:	1907883a 	add	r3,r3,r4
 1082ee8:	19800044 	addi	r6,r3,1
 1082eec:	d8c00c15 	stw	r3,48(sp)
 1082ef0:	d9800615 	stw	r6,24(sp)
 1082ef4:	0183a40e 	bge	zero,r6,1083d88 <_dtoa_r+0x11cc>
 1082ef8:	d9800617 	ldw	r6,24(sp)
 1082efc:	3021883a 	mov	r16,r6
 1082f00:	e0001115 	stw	zero,68(fp)
 1082f04:	008005c4 	movi	r2,23
 1082f08:	1184c92e 	bgeu	r2,r6,1084230 <_dtoa_r+0x1674>
 1082f0c:	00c00044 	movi	r3,1
 1082f10:	00800104 	movi	r2,4
 1082f14:	1085883a 	add	r2,r2,r2
 1082f18:	11000504 	addi	r4,r2,20
 1082f1c:	180b883a 	mov	r5,r3
 1082f20:	18c00044 	addi	r3,r3,1
 1082f24:	313ffb2e 	bgeu	r6,r4,1082f14 <_dtoa_r+0x358>
 1082f28:	e1401115 	stw	r5,68(fp)
 1082f2c:	e009883a 	mov	r4,fp
 1082f30:	10862580 	call	1086258 <_Balloc>
 1082f34:	d8800715 	stw	r2,28(sp)
 1082f38:	e0801015 	stw	r2,64(fp)
 1082f3c:	00800384 	movi	r2,14
 1082f40:	1400f736 	bltu	r2,r16,1083320 <_dtoa_r+0x764>
 1082f44:	8800f626 	beq	r17,zero,1083320 <_dtoa_r+0x764>
 1082f48:	d9c00517 	ldw	r7,20(sp)
 1082f4c:	01c39a0e 	bge	zero,r7,1083db8 <_dtoa_r+0x11fc>
 1082f50:	388003cc 	andi	r2,r7,15
 1082f54:	100490fa 	slli	r2,r2,3
 1082f58:	382bd13a 	srai	r21,r7,4
 1082f5c:	00c04274 	movhi	r3,265
 1082f60:	18fce004 	addi	r3,r3,-3200
 1082f64:	1885883a 	add	r2,r3,r2
 1082f68:	a8c0040c 	andi	r3,r21,16
 1082f6c:	12400017 	ldw	r9,0(r2)
 1082f70:	12000117 	ldw	r8,4(r2)
 1082f74:	18037926 	beq	r3,zero,1083d5c <_dtoa_r+0x11a0>
 1082f78:	00804274 	movhi	r2,265
 1082f7c:	10bcd604 	addi	r2,r2,-3240
 1082f80:	11800817 	ldw	r6,32(r2)
 1082f84:	11c00917 	ldw	r7,36(r2)
 1082f88:	9009883a 	mov	r4,r18
 1082f8c:	980b883a 	mov	r5,r19
 1082f90:	da001715 	stw	r8,92(sp)
 1082f94:	da401615 	stw	r9,88(sp)
 1082f98:	108af240 	call	108af24 <__divdf3>
 1082f9c:	da001717 	ldw	r8,92(sp)
 1082fa0:	da401617 	ldw	r9,88(sp)
 1082fa4:	ad4003cc 	andi	r21,r21,15
 1082fa8:	040000c4 	movi	r16,3
 1082fac:	1023883a 	mov	r17,r2
 1082fb0:	1829883a 	mov	r20,r3
 1082fb4:	a8001126 	beq	r21,zero,1082ffc <_dtoa_r+0x440>
 1082fb8:	05c04274 	movhi	r23,265
 1082fbc:	bdfcd604 	addi	r23,r23,-3240
 1082fc0:	4805883a 	mov	r2,r9
 1082fc4:	4007883a 	mov	r3,r8
 1082fc8:	a980004c 	andi	r6,r21,1
 1082fcc:	1009883a 	mov	r4,r2
 1082fd0:	a82bd07a 	srai	r21,r21,1
 1082fd4:	180b883a 	mov	r5,r3
 1082fd8:	30000426 	beq	r6,zero,1082fec <_dtoa_r+0x430>
 1082fdc:	b9800017 	ldw	r6,0(r23)
 1082fe0:	b9c00117 	ldw	r7,4(r23)
 1082fe4:	84000044 	addi	r16,r16,1
 1082fe8:	108ba640 	call	108ba64 <__muldf3>
 1082fec:	bdc00204 	addi	r23,r23,8
 1082ff0:	a83ff51e 	bne	r21,zero,1082fc8 <_dtoa_r+0x40c>
 1082ff4:	1013883a 	mov	r9,r2
 1082ff8:	1811883a 	mov	r8,r3
 1082ffc:	480d883a 	mov	r6,r9
 1083000:	400f883a 	mov	r7,r8
 1083004:	8809883a 	mov	r4,r17
 1083008:	a00b883a 	mov	r5,r20
 108300c:	108af240 	call	108af24 <__divdf3>
 1083010:	d8800f15 	stw	r2,60(sp)
 1083014:	d8c01015 	stw	r3,64(sp)
 1083018:	d8c00e17 	ldw	r3,56(sp)
 108301c:	18000626 	beq	r3,zero,1083038 <_dtoa_r+0x47c>
 1083020:	d9000f17 	ldw	r4,60(sp)
 1083024:	d9401017 	ldw	r5,64(sp)
 1083028:	000d883a 	mov	r6,zero
 108302c:	01cffc34 	movhi	r7,16368
 1083030:	108b9700 	call	108b970 <__ledf2>
 1083034:	10040b16 	blt	r2,zero,1084064 <_dtoa_r+0x14a8>
 1083038:	8009883a 	mov	r4,r16
 108303c:	108caf80 	call	108caf8 <__floatsidf>
 1083040:	d9800f17 	ldw	r6,60(sp)
 1083044:	d9c01017 	ldw	r7,64(sp)
 1083048:	1009883a 	mov	r4,r2
 108304c:	180b883a 	mov	r5,r3
 1083050:	108ba640 	call	108ba64 <__muldf3>
 1083054:	000d883a 	mov	r6,zero
 1083058:	01d00734 	movhi	r7,16412
 108305c:	1009883a 	mov	r4,r2
 1083060:	180b883a 	mov	r5,r3
 1083064:	108a6780 	call	108a678 <__adddf3>
 1083068:	1021883a 	mov	r16,r2
 108306c:	d8800617 	ldw	r2,24(sp)
 1083070:	047f3034 	movhi	r17,64704
 1083074:	1c63883a 	add	r17,r3,r17
 1083078:	10031826 	beq	r2,zero,1083cdc <_dtoa_r+0x1120>
 108307c:	d8c00517 	ldw	r3,20(sp)
 1083080:	db000617 	ldw	r12,24(sp)
 1083084:	d8c01315 	stw	r3,76(sp)
 1083088:	d9000b17 	ldw	r4,44(sp)
 108308c:	20038f26 	beq	r4,zero,1083ecc <_dtoa_r+0x1310>
 1083090:	60bfffc4 	addi	r2,r12,-1
 1083094:	100490fa 	slli	r2,r2,3
 1083098:	00c04274 	movhi	r3,265
 108309c:	18fce004 	addi	r3,r3,-3200
 10830a0:	1885883a 	add	r2,r3,r2
 10830a4:	11800017 	ldw	r6,0(r2)
 10830a8:	11c00117 	ldw	r7,4(r2)
 10830ac:	d8800717 	ldw	r2,28(sp)
 10830b0:	0009883a 	mov	r4,zero
 10830b4:	014ff834 	movhi	r5,16352
 10830b8:	db001615 	stw	r12,88(sp)
 10830bc:	15c00044 	addi	r23,r2,1
 10830c0:	108af240 	call	108af24 <__divdf3>
 10830c4:	800d883a 	mov	r6,r16
 10830c8:	880f883a 	mov	r7,r17
 10830cc:	1009883a 	mov	r4,r2
 10830d0:	180b883a 	mov	r5,r3
 10830d4:	108c17c0 	call	108c17c <__subdf3>
 10830d8:	d9401017 	ldw	r5,64(sp)
 10830dc:	d9000f17 	ldw	r4,60(sp)
 10830e0:	102b883a 	mov	r21,r2
 10830e4:	d8c01215 	stw	r3,72(sp)
 10830e8:	108ca780 	call	108ca78 <__fixdfsi>
 10830ec:	1009883a 	mov	r4,r2
 10830f0:	1029883a 	mov	r20,r2
 10830f4:	108caf80 	call	108caf8 <__floatsidf>
 10830f8:	d9000f17 	ldw	r4,60(sp)
 10830fc:	d9401017 	ldw	r5,64(sp)
 1083100:	100d883a 	mov	r6,r2
 1083104:	180f883a 	mov	r7,r3
 1083108:	108c17c0 	call	108c17c <__subdf3>
 108310c:	1823883a 	mov	r17,r3
 1083110:	d8c00717 	ldw	r3,28(sp)
 1083114:	d9401217 	ldw	r5,72(sp)
 1083118:	a2000c04 	addi	r8,r20,48
 108311c:	1021883a 	mov	r16,r2
 1083120:	1a000005 	stb	r8,0(r3)
 1083124:	800d883a 	mov	r6,r16
 1083128:	880f883a 	mov	r7,r17
 108312c:	a809883a 	mov	r4,r21
 1083130:	4029883a 	mov	r20,r8
 1083134:	108b8940 	call	108b894 <__gedf2>
 1083138:	00841d16 	blt	zero,r2,10841b0 <_dtoa_r+0x15f4>
 108313c:	800d883a 	mov	r6,r16
 1083140:	880f883a 	mov	r7,r17
 1083144:	0009883a 	mov	r4,zero
 1083148:	014ffc34 	movhi	r5,16368
 108314c:	108c17c0 	call	108c17c <__subdf3>
 1083150:	d9401217 	ldw	r5,72(sp)
 1083154:	100d883a 	mov	r6,r2
 1083158:	180f883a 	mov	r7,r3
 108315c:	a809883a 	mov	r4,r21
 1083160:	108b8940 	call	108b894 <__gedf2>
 1083164:	db001617 	ldw	r12,88(sp)
 1083168:	00840e16 	blt	zero,r2,10841a4 <_dtoa_r+0x15e8>
 108316c:	00800044 	movi	r2,1
 1083170:	13006b0e 	bge	r2,r12,1083320 <_dtoa_r+0x764>
 1083174:	d9000717 	ldw	r4,28(sp)
 1083178:	dd800f15 	stw	r22,60(sp)
 108317c:	dcc01015 	stw	r19,64(sp)
 1083180:	2319883a 	add	r12,r4,r12
 1083184:	dcc01217 	ldw	r19,72(sp)
 1083188:	602d883a 	mov	r22,r12
 108318c:	dc801215 	stw	r18,72(sp)
 1083190:	b825883a 	mov	r18,r23
 1083194:	00000906 	br	10831bc <_dtoa_r+0x600>
 1083198:	108c17c0 	call	108c17c <__subdf3>
 108319c:	a80d883a 	mov	r6,r21
 10831a0:	980f883a 	mov	r7,r19
 10831a4:	1009883a 	mov	r4,r2
 10831a8:	180b883a 	mov	r5,r3
 10831ac:	108b9700 	call	108b970 <__ledf2>
 10831b0:	1003e816 	blt	r2,zero,1084154 <_dtoa_r+0x1598>
 10831b4:	b825883a 	mov	r18,r23
 10831b8:	bd83e926 	beq	r23,r22,1084160 <_dtoa_r+0x15a4>
 10831bc:	a809883a 	mov	r4,r21
 10831c0:	980b883a 	mov	r5,r19
 10831c4:	000d883a 	mov	r6,zero
 10831c8:	01d00934 	movhi	r7,16420
 10831cc:	108ba640 	call	108ba64 <__muldf3>
 10831d0:	000d883a 	mov	r6,zero
 10831d4:	01d00934 	movhi	r7,16420
 10831d8:	8009883a 	mov	r4,r16
 10831dc:	880b883a 	mov	r5,r17
 10831e0:	102b883a 	mov	r21,r2
 10831e4:	1827883a 	mov	r19,r3
 10831e8:	108ba640 	call	108ba64 <__muldf3>
 10831ec:	180b883a 	mov	r5,r3
 10831f0:	1009883a 	mov	r4,r2
 10831f4:	1821883a 	mov	r16,r3
 10831f8:	1023883a 	mov	r17,r2
 10831fc:	108ca780 	call	108ca78 <__fixdfsi>
 1083200:	1009883a 	mov	r4,r2
 1083204:	1029883a 	mov	r20,r2
 1083208:	108caf80 	call	108caf8 <__floatsidf>
 108320c:	8809883a 	mov	r4,r17
 1083210:	800b883a 	mov	r5,r16
 1083214:	100d883a 	mov	r6,r2
 1083218:	180f883a 	mov	r7,r3
 108321c:	108c17c0 	call	108c17c <__subdf3>
 1083220:	a5000c04 	addi	r20,r20,48
 1083224:	a80d883a 	mov	r6,r21
 1083228:	980f883a 	mov	r7,r19
 108322c:	1009883a 	mov	r4,r2
 1083230:	180b883a 	mov	r5,r3
 1083234:	95000005 	stb	r20,0(r18)
 1083238:	1021883a 	mov	r16,r2
 108323c:	1823883a 	mov	r17,r3
 1083240:	108b9700 	call	108b970 <__ledf2>
 1083244:	bdc00044 	addi	r23,r23,1
 1083248:	800d883a 	mov	r6,r16
 108324c:	880f883a 	mov	r7,r17
 1083250:	0009883a 	mov	r4,zero
 1083254:	014ffc34 	movhi	r5,16368
 1083258:	103fcf0e 	bge	r2,zero,1083198 <_dtoa_r+0x5dc>
 108325c:	d8c01317 	ldw	r3,76(sp)
 1083260:	d8c00515 	stw	r3,20(sp)
 1083264:	d9400917 	ldw	r5,36(sp)
 1083268:	e009883a 	mov	r4,fp
 108326c:	10863000 	call	1086300 <_Bfree>
 1083270:	d9000517 	ldw	r4,20(sp)
 1083274:	d9802317 	ldw	r6,140(sp)
 1083278:	d9c02517 	ldw	r7,148(sp)
 108327c:	b8000005 	stb	zero,0(r23)
 1083280:	20800044 	addi	r2,r4,1
 1083284:	30800015 	stw	r2,0(r6)
 1083288:	3802aa26 	beq	r7,zero,1083d34 <_dtoa_r+0x1178>
 108328c:	3dc00015 	stw	r23,0(r7)
 1083290:	d8800717 	ldw	r2,28(sp)
 1083294:	003e7906 	br	1082c7c <_dtoa_r+0xc0>
 1083298:	00800434 	movhi	r2,16
 108329c:	10bfffc4 	addi	r2,r2,-1
 10832a0:	88a2703a 	and	r17,r17,r2
 10832a4:	883e851e 	bne	r17,zero,1082cbc <_dtoa_r+0x100>
 10832a8:	00804274 	movhi	r2,265
 10832ac:	10bcc104 	addi	r2,r2,-3324
 10832b0:	003e8406 	br	1082cc4 <_dtoa_r+0x108>
 10832b4:	10c00204 	addi	r3,r2,8
 10832b8:	003e8706 	br	1082cd8 <_dtoa_r+0x11c>
 10832bc:	01400434 	movhi	r5,16
 10832c0:	297fffc4 	addi	r5,r5,-1
 10832c4:	994a703a 	and	r5,r19,r5
 10832c8:	9009883a 	mov	r4,r18
 10832cc:	843f0044 	addi	r16,r16,-1023
 10832d0:	294ffc34 	orhi	r5,r5,16368
 10832d4:	dd800217 	ldw	r22,8(sp)
 10832d8:	d8001115 	stw	zero,68(sp)
 10832dc:	003ea506 	br	1082d74 <_dtoa_r+0x1b8>
 10832e0:	00804274 	movhi	r2,265
 10832e4:	10bcb804 	addi	r2,r2,-3360
 10832e8:	003e6406 	br	1082c7c <_dtoa_r+0xc0>
 10832ec:	e0001115 	stw	zero,68(fp)
 10832f0:	000b883a 	mov	r5,zero
 10832f4:	e009883a 	mov	r4,fp
 10832f8:	10862580 	call	1086258 <_Balloc>
 10832fc:	01bfffc4 	movi	r6,-1
 1083300:	01c00044 	movi	r7,1
 1083304:	d8800715 	stw	r2,28(sp)
 1083308:	d9800c15 	stw	r6,48(sp)
 108330c:	e0801015 	stw	r2,64(fp)
 1083310:	d8000315 	stw	zero,12(sp)
 1083314:	d9c00b15 	stw	r7,44(sp)
 1083318:	d9800615 	stw	r6,24(sp)
 108331c:	d8002215 	stw	zero,136(sp)
 1083320:	d8800117 	ldw	r2,4(sp)
 1083324:	10008916 	blt	r2,zero,108354c <_dtoa_r+0x990>
 1083328:	d9000517 	ldw	r4,20(sp)
 108332c:	00c00384 	movi	r3,14
 1083330:	19008616 	blt	r3,r4,108354c <_dtoa_r+0x990>
 1083334:	200490fa 	slli	r2,r4,3
 1083338:	00c04274 	movhi	r3,265
 108333c:	d9802217 	ldw	r6,136(sp)
 1083340:	18fce004 	addi	r3,r3,-3200
 1083344:	1885883a 	add	r2,r3,r2
 1083348:	14000017 	ldw	r16,0(r2)
 108334c:	14400117 	ldw	r17,4(r2)
 1083350:	30016316 	blt	r6,zero,10838e0 <_dtoa_r+0xd24>
 1083354:	800d883a 	mov	r6,r16
 1083358:	880f883a 	mov	r7,r17
 108335c:	9009883a 	mov	r4,r18
 1083360:	980b883a 	mov	r5,r19
 1083364:	108af240 	call	108af24 <__divdf3>
 1083368:	180b883a 	mov	r5,r3
 108336c:	1009883a 	mov	r4,r2
 1083370:	108ca780 	call	108ca78 <__fixdfsi>
 1083374:	1009883a 	mov	r4,r2
 1083378:	102b883a 	mov	r21,r2
 108337c:	108caf80 	call	108caf8 <__floatsidf>
 1083380:	800d883a 	mov	r6,r16
 1083384:	880f883a 	mov	r7,r17
 1083388:	1009883a 	mov	r4,r2
 108338c:	180b883a 	mov	r5,r3
 1083390:	108ba640 	call	108ba64 <__muldf3>
 1083394:	100d883a 	mov	r6,r2
 1083398:	180f883a 	mov	r7,r3
 108339c:	9009883a 	mov	r4,r18
 10833a0:	980b883a 	mov	r5,r19
 10833a4:	108c17c0 	call	108c17c <__subdf3>
 10833a8:	d9c00717 	ldw	r7,28(sp)
 10833ac:	1009883a 	mov	r4,r2
 10833b0:	a8800c04 	addi	r2,r21,48
 10833b4:	38800005 	stb	r2,0(r7)
 10833b8:	3dc00044 	addi	r23,r7,1
 10833bc:	d9c00617 	ldw	r7,24(sp)
 10833c0:	01800044 	movi	r6,1
 10833c4:	180b883a 	mov	r5,r3
 10833c8:	2005883a 	mov	r2,r4
 10833cc:	39803826 	beq	r7,r6,10834b0 <_dtoa_r+0x8f4>
 10833d0:	000d883a 	mov	r6,zero
 10833d4:	01d00934 	movhi	r7,16420
 10833d8:	108ba640 	call	108ba64 <__muldf3>
 10833dc:	000d883a 	mov	r6,zero
 10833e0:	000f883a 	mov	r7,zero
 10833e4:	1009883a 	mov	r4,r2
 10833e8:	180b883a 	mov	r5,r3
 10833ec:	1025883a 	mov	r18,r2
 10833f0:	1827883a 	mov	r19,r3
 10833f4:	108b80c0 	call	108b80c <__eqdf2>
 10833f8:	103f9a26 	beq	r2,zero,1083264 <_dtoa_r+0x6a8>
 10833fc:	d9c00617 	ldw	r7,24(sp)
 1083400:	d8c00717 	ldw	r3,28(sp)
 1083404:	b829883a 	mov	r20,r23
 1083408:	38bfffc4 	addi	r2,r7,-1
 108340c:	18ad883a 	add	r22,r3,r2
 1083410:	00000a06 	br	108343c <_dtoa_r+0x880>
 1083414:	108ba640 	call	108ba64 <__muldf3>
 1083418:	000d883a 	mov	r6,zero
 108341c:	000f883a 	mov	r7,zero
 1083420:	1009883a 	mov	r4,r2
 1083424:	180b883a 	mov	r5,r3
 1083428:	1025883a 	mov	r18,r2
 108342c:	1827883a 	mov	r19,r3
 1083430:	b829883a 	mov	r20,r23
 1083434:	108b80c0 	call	108b80c <__eqdf2>
 1083438:	103f8a26 	beq	r2,zero,1083264 <_dtoa_r+0x6a8>
 108343c:	800d883a 	mov	r6,r16
 1083440:	880f883a 	mov	r7,r17
 1083444:	9009883a 	mov	r4,r18
 1083448:	980b883a 	mov	r5,r19
 108344c:	108af240 	call	108af24 <__divdf3>
 1083450:	180b883a 	mov	r5,r3
 1083454:	1009883a 	mov	r4,r2
 1083458:	108ca780 	call	108ca78 <__fixdfsi>
 108345c:	1009883a 	mov	r4,r2
 1083460:	102b883a 	mov	r21,r2
 1083464:	108caf80 	call	108caf8 <__floatsidf>
 1083468:	800d883a 	mov	r6,r16
 108346c:	880f883a 	mov	r7,r17
 1083470:	1009883a 	mov	r4,r2
 1083474:	180b883a 	mov	r5,r3
 1083478:	108ba640 	call	108ba64 <__muldf3>
 108347c:	100d883a 	mov	r6,r2
 1083480:	180f883a 	mov	r7,r3
 1083484:	9009883a 	mov	r4,r18
 1083488:	980b883a 	mov	r5,r19
 108348c:	108c17c0 	call	108c17c <__subdf3>
 1083490:	aa000c04 	addi	r8,r21,48
 1083494:	a2000005 	stb	r8,0(r20)
 1083498:	000d883a 	mov	r6,zero
 108349c:	01d00934 	movhi	r7,16420
 10834a0:	1009883a 	mov	r4,r2
 10834a4:	180b883a 	mov	r5,r3
 10834a8:	a5c00044 	addi	r23,r20,1
 10834ac:	b53fd91e 	bne	r22,r20,1083414 <_dtoa_r+0x858>
 10834b0:	100d883a 	mov	r6,r2
 10834b4:	180f883a 	mov	r7,r3
 10834b8:	1009883a 	mov	r4,r2
 10834bc:	180b883a 	mov	r5,r3
 10834c0:	108a6780 	call	108a678 <__adddf3>
 10834c4:	100d883a 	mov	r6,r2
 10834c8:	180f883a 	mov	r7,r3
 10834cc:	8009883a 	mov	r4,r16
 10834d0:	880b883a 	mov	r5,r17
 10834d4:	1027883a 	mov	r19,r2
 10834d8:	1825883a 	mov	r18,r3
 10834dc:	108b9700 	call	108b970 <__ledf2>
 10834e0:	10000816 	blt	r2,zero,1083504 <_dtoa_r+0x948>
 10834e4:	980d883a 	mov	r6,r19
 10834e8:	900f883a 	mov	r7,r18
 10834ec:	8009883a 	mov	r4,r16
 10834f0:	880b883a 	mov	r5,r17
 10834f4:	108b80c0 	call	108b80c <__eqdf2>
 10834f8:	103f5a1e 	bne	r2,zero,1083264 <_dtoa_r+0x6a8>
 10834fc:	ad40004c 	andi	r21,r21,1
 1083500:	a83f5826 	beq	r21,zero,1083264 <_dtoa_r+0x6a8>
 1083504:	bd3fffc3 	ldbu	r20,-1(r23)
 1083508:	b8bfffc4 	addi	r2,r23,-1
 108350c:	1007883a 	mov	r3,r2
 1083510:	01400e44 	movi	r5,57
 1083514:	d9800717 	ldw	r6,28(sp)
 1083518:	00000506 	br	1083530 <_dtoa_r+0x974>
 108351c:	18ffffc4 	addi	r3,r3,-1
 1083520:	11824726 	beq	r2,r6,1083e40 <_dtoa_r+0x1284>
 1083524:	1d000003 	ldbu	r20,0(r3)
 1083528:	102f883a 	mov	r23,r2
 108352c:	10bfffc4 	addi	r2,r2,-1
 1083530:	a1003fcc 	andi	r4,r20,255
 1083534:	2100201c 	xori	r4,r4,128
 1083538:	213fe004 	addi	r4,r4,-128
 108353c:	217ff726 	beq	r4,r5,108351c <_dtoa_r+0x960>
 1083540:	a2000044 	addi	r8,r20,1
 1083544:	12000005 	stb	r8,0(r2)
 1083548:	003f4606 	br	1083264 <_dtoa_r+0x6a8>
 108354c:	d9000b17 	ldw	r4,44(sp)
 1083550:	2000c826 	beq	r4,zero,1083874 <_dtoa_r+0xcb8>
 1083554:	d9800317 	ldw	r6,12(sp)
 1083558:	00c00044 	movi	r3,1
 108355c:	1980f90e 	bge	r3,r6,1083944 <_dtoa_r+0xd88>
 1083560:	d8800617 	ldw	r2,24(sp)
 1083564:	d8c00a17 	ldw	r3,40(sp)
 1083568:	157fffc4 	addi	r21,r2,-1
 108356c:	1d41f316 	blt	r3,r21,1083d3c <_dtoa_r+0x1180>
 1083570:	1d6bc83a 	sub	r21,r3,r21
 1083574:	d9c00617 	ldw	r7,24(sp)
 1083578:	3802aa16 	blt	r7,zero,1084024 <_dtoa_r+0x1468>
 108357c:	dd000817 	ldw	r20,32(sp)
 1083580:	d8800617 	ldw	r2,24(sp)
 1083584:	d8c00817 	ldw	r3,32(sp)
 1083588:	01400044 	movi	r5,1
 108358c:	e009883a 	mov	r4,fp
 1083590:	1887883a 	add	r3,r3,r2
 1083594:	d8c00815 	stw	r3,32(sp)
 1083598:	b0ad883a 	add	r22,r22,r2
 108359c:	10866640 	call	1086664 <__i2b>
 10835a0:	1023883a 	mov	r17,r2
 10835a4:	a0000826 	beq	r20,zero,10835c8 <_dtoa_r+0xa0c>
 10835a8:	0580070e 	bge	zero,r22,10835c8 <_dtoa_r+0xa0c>
 10835ac:	a005883a 	mov	r2,r20
 10835b0:	b500b916 	blt	r22,r20,1083898 <_dtoa_r+0xcdc>
 10835b4:	d9000817 	ldw	r4,32(sp)
 10835b8:	a0a9c83a 	sub	r20,r20,r2
 10835bc:	b0adc83a 	sub	r22,r22,r2
 10835c0:	2089c83a 	sub	r4,r4,r2
 10835c4:	d9000815 	stw	r4,32(sp)
 10835c8:	d9800a17 	ldw	r6,40(sp)
 10835cc:	0181810e 	bge	zero,r6,1083bd4 <_dtoa_r+0x1018>
 10835d0:	d9c00b17 	ldw	r7,44(sp)
 10835d4:	3800b326 	beq	r7,zero,10838a4 <_dtoa_r+0xce8>
 10835d8:	a800b226 	beq	r21,zero,10838a4 <_dtoa_r+0xce8>
 10835dc:	880b883a 	mov	r5,r17
 10835e0:	a80d883a 	mov	r6,r21
 10835e4:	e009883a 	mov	r4,fp
 10835e8:	10868980 	call	1086898 <__pow5mult>
 10835ec:	d9800917 	ldw	r6,36(sp)
 10835f0:	100b883a 	mov	r5,r2
 10835f4:	e009883a 	mov	r4,fp
 10835f8:	1023883a 	mov	r17,r2
 10835fc:	10866a00 	call	10866a0 <__multiply>
 1083600:	1021883a 	mov	r16,r2
 1083604:	d8800a17 	ldw	r2,40(sp)
 1083608:	d9400917 	ldw	r5,36(sp)
 108360c:	e009883a 	mov	r4,fp
 1083610:	1545c83a 	sub	r2,r2,r21
 1083614:	d8800a15 	stw	r2,40(sp)
 1083618:	10863000 	call	1086300 <_Bfree>
 108361c:	d8c00a17 	ldw	r3,40(sp)
 1083620:	18009f1e 	bne	r3,zero,10838a0 <_dtoa_r+0xce4>
 1083624:	05c00044 	movi	r23,1
 1083628:	e009883a 	mov	r4,fp
 108362c:	b80b883a 	mov	r5,r23
 1083630:	10866640 	call	1086664 <__i2b>
 1083634:	d9000d17 	ldw	r4,52(sp)
 1083638:	102b883a 	mov	r21,r2
 108363c:	2000ce26 	beq	r4,zero,1083978 <_dtoa_r+0xdbc>
 1083640:	200d883a 	mov	r6,r4
 1083644:	100b883a 	mov	r5,r2
 1083648:	e009883a 	mov	r4,fp
 108364c:	10868980 	call	1086898 <__pow5mult>
 1083650:	d9800317 	ldw	r6,12(sp)
 1083654:	102b883a 	mov	r21,r2
 1083658:	b981810e 	bge	r23,r6,1083c60 <_dtoa_r+0x10a4>
 108365c:	0027883a 	mov	r19,zero
 1083660:	a8800417 	ldw	r2,16(r21)
 1083664:	05c00804 	movi	r23,32
 1083668:	10800104 	addi	r2,r2,4
 108366c:	1085883a 	add	r2,r2,r2
 1083670:	1085883a 	add	r2,r2,r2
 1083674:	a885883a 	add	r2,r21,r2
 1083678:	11000017 	ldw	r4,0(r2)
 108367c:	108654c0 	call	108654c <__hi0bits>
 1083680:	b885c83a 	sub	r2,r23,r2
 1083684:	1585883a 	add	r2,r2,r22
 1083688:	108007cc 	andi	r2,r2,31
 108368c:	1000b326 	beq	r2,zero,108395c <_dtoa_r+0xda0>
 1083690:	00c00804 	movi	r3,32
 1083694:	1887c83a 	sub	r3,r3,r2
 1083698:	01000104 	movi	r4,4
 108369c:	20c2cd0e 	bge	r4,r3,10841d4 <_dtoa_r+0x1618>
 10836a0:	00c00704 	movi	r3,28
 10836a4:	1885c83a 	sub	r2,r3,r2
 10836a8:	d8c00817 	ldw	r3,32(sp)
 10836ac:	a0a9883a 	add	r20,r20,r2
 10836b0:	b0ad883a 	add	r22,r22,r2
 10836b4:	1887883a 	add	r3,r3,r2
 10836b8:	d8c00815 	stw	r3,32(sp)
 10836bc:	d9800817 	ldw	r6,32(sp)
 10836c0:	0180040e 	bge	zero,r6,10836d4 <_dtoa_r+0xb18>
 10836c4:	800b883a 	mov	r5,r16
 10836c8:	e009883a 	mov	r4,fp
 10836cc:	10869d80 	call	10869d8 <__lshift>
 10836d0:	1021883a 	mov	r16,r2
 10836d4:	0580050e 	bge	zero,r22,10836ec <_dtoa_r+0xb30>
 10836d8:	a80b883a 	mov	r5,r21
 10836dc:	b00d883a 	mov	r6,r22
 10836e0:	e009883a 	mov	r4,fp
 10836e4:	10869d80 	call	10869d8 <__lshift>
 10836e8:	102b883a 	mov	r21,r2
 10836ec:	d9c00e17 	ldw	r7,56(sp)
 10836f0:	3801211e 	bne	r7,zero,1083b78 <_dtoa_r+0xfbc>
 10836f4:	d9800617 	ldw	r6,24(sp)
 10836f8:	0181380e 	bge	zero,r6,1083bdc <_dtoa_r+0x1020>
 10836fc:	d8c00b17 	ldw	r3,44(sp)
 1083700:	1800ab1e 	bne	r3,zero,10839b0 <_dtoa_r+0xdf4>
 1083704:	dc800717 	ldw	r18,28(sp)
 1083708:	dcc00617 	ldw	r19,24(sp)
 108370c:	9029883a 	mov	r20,r18
 1083710:	00000206 	br	108371c <_dtoa_r+0xb60>
 1083714:	10863280 	call	1086328 <__multadd>
 1083718:	1021883a 	mov	r16,r2
 108371c:	a80b883a 	mov	r5,r21
 1083720:	8009883a 	mov	r4,r16
 1083724:	10829bc0 	call	10829bc <quorem>
 1083728:	10800c04 	addi	r2,r2,48
 108372c:	90800005 	stb	r2,0(r18)
 1083730:	94800044 	addi	r18,r18,1
 1083734:	9507c83a 	sub	r3,r18,r20
 1083738:	000f883a 	mov	r7,zero
 108373c:	01800284 	movi	r6,10
 1083740:	800b883a 	mov	r5,r16
 1083744:	e009883a 	mov	r4,fp
 1083748:	1cfff216 	blt	r3,r19,1083714 <_dtoa_r+0xb58>
 108374c:	1011883a 	mov	r8,r2
 1083750:	d8800617 	ldw	r2,24(sp)
 1083754:	0082370e 	bge	zero,r2,1084034 <_dtoa_r+0x1478>
 1083758:	d9000717 	ldw	r4,28(sp)
 108375c:	0025883a 	mov	r18,zero
 1083760:	20af883a 	add	r23,r4,r2
 1083764:	01800044 	movi	r6,1
 1083768:	800b883a 	mov	r5,r16
 108376c:	e009883a 	mov	r4,fp
 1083770:	da001715 	stw	r8,92(sp)
 1083774:	10869d80 	call	10869d8 <__lshift>
 1083778:	a80b883a 	mov	r5,r21
 108377c:	1009883a 	mov	r4,r2
 1083780:	d8800915 	stw	r2,36(sp)
 1083784:	1086b200 	call	1086b20 <__mcmp>
 1083788:	da001717 	ldw	r8,92(sp)
 108378c:	0081800e 	bge	zero,r2,1083d90 <_dtoa_r+0x11d4>
 1083790:	b93fffc3 	ldbu	r4,-1(r23)
 1083794:	b8bfffc4 	addi	r2,r23,-1
 1083798:	1007883a 	mov	r3,r2
 108379c:	01800e44 	movi	r6,57
 10837a0:	d9c00717 	ldw	r7,28(sp)
 10837a4:	00000506 	br	10837bc <_dtoa_r+0xc00>
 10837a8:	18ffffc4 	addi	r3,r3,-1
 10837ac:	11c12326 	beq	r2,r7,1083c3c <_dtoa_r+0x1080>
 10837b0:	19000003 	ldbu	r4,0(r3)
 10837b4:	102f883a 	mov	r23,r2
 10837b8:	10bfffc4 	addi	r2,r2,-1
 10837bc:	21403fcc 	andi	r5,r4,255
 10837c0:	2940201c 	xori	r5,r5,128
 10837c4:	297fe004 	addi	r5,r5,-128
 10837c8:	29bff726 	beq	r5,r6,10837a8 <_dtoa_r+0xbec>
 10837cc:	21000044 	addi	r4,r4,1
 10837d0:	11000005 	stb	r4,0(r2)
 10837d4:	a80b883a 	mov	r5,r21
 10837d8:	e009883a 	mov	r4,fp
 10837dc:	10863000 	call	1086300 <_Bfree>
 10837e0:	883ea026 	beq	r17,zero,1083264 <_dtoa_r+0x6a8>
 10837e4:	90000426 	beq	r18,zero,10837f8 <_dtoa_r+0xc3c>
 10837e8:	94400326 	beq	r18,r17,10837f8 <_dtoa_r+0xc3c>
 10837ec:	900b883a 	mov	r5,r18
 10837f0:	e009883a 	mov	r4,fp
 10837f4:	10863000 	call	1086300 <_Bfree>
 10837f8:	880b883a 	mov	r5,r17
 10837fc:	e009883a 	mov	r4,fp
 1083800:	10863000 	call	1086300 <_Bfree>
 1083804:	003e9706 	br	1083264 <_dtoa_r+0x6a8>
 1083808:	01800044 	movi	r6,1
 108380c:	d9800e15 	stw	r6,56(sp)
 1083810:	003d9606 	br	1082e6c <_dtoa_r+0x2b0>
 1083814:	d8800817 	ldw	r2,32(sp)
 1083818:	d8c00517 	ldw	r3,20(sp)
 108381c:	d8000d15 	stw	zero,52(sp)
 1083820:	10c5c83a 	sub	r2,r2,r3
 1083824:	00c9c83a 	sub	r4,zero,r3
 1083828:	d8800815 	stw	r2,32(sp)
 108382c:	d9000a15 	stw	r4,40(sp)
 1083830:	003d9706 	br	1082e90 <_dtoa_r+0x2d4>
 1083834:	05adc83a 	sub	r22,zero,r22
 1083838:	dd800815 	stw	r22,32(sp)
 108383c:	002d883a 	mov	r22,zero
 1083840:	003d8e06 	br	1082e7c <_dtoa_r+0x2c0>
 1083844:	d9000517 	ldw	r4,20(sp)
 1083848:	108caf80 	call	108caf8 <__floatsidf>
 108384c:	100d883a 	mov	r6,r2
 1083850:	180f883a 	mov	r7,r3
 1083854:	a009883a 	mov	r4,r20
 1083858:	880b883a 	mov	r5,r17
 108385c:	108b80c0 	call	108b80c <__eqdf2>
 1083860:	103d7126 	beq	r2,zero,1082e28 <_dtoa_r+0x26c>
 1083864:	d9c00517 	ldw	r7,20(sp)
 1083868:	39ffffc4 	addi	r7,r7,-1
 108386c:	d9c00515 	stw	r7,20(sp)
 1083870:	003d6d06 	br	1082e28 <_dtoa_r+0x26c>
 1083874:	dd400a17 	ldw	r21,40(sp)
 1083878:	dd000817 	ldw	r20,32(sp)
 108387c:	0023883a 	mov	r17,zero
 1083880:	003f4806 	br	10835a4 <_dtoa_r+0x9e8>
 1083884:	10e3c83a 	sub	r17,r2,r3
 1083888:	9448983a 	sll	r4,r18,r17
 108388c:	003d3206 	br	1082d58 <_dtoa_r+0x19c>
 1083890:	d8000e15 	stw	zero,56(sp)
 1083894:	003d7506 	br	1082e6c <_dtoa_r+0x2b0>
 1083898:	b005883a 	mov	r2,r22
 108389c:	003f4506 	br	10835b4 <_dtoa_r+0x9f8>
 10838a0:	dc000915 	stw	r16,36(sp)
 10838a4:	d9800a17 	ldw	r6,40(sp)
 10838a8:	d9400917 	ldw	r5,36(sp)
 10838ac:	e009883a 	mov	r4,fp
 10838b0:	10868980 	call	1086898 <__pow5mult>
 10838b4:	1021883a 	mov	r16,r2
 10838b8:	003f5a06 	br	1083624 <_dtoa_r+0xa68>
 10838bc:	01c00044 	movi	r7,1
 10838c0:	d9c00b15 	stw	r7,44(sp)
 10838c4:	d8802217 	ldw	r2,136(sp)
 10838c8:	0081280e 	bge	zero,r2,1083d6c <_dtoa_r+0x11b0>
 10838cc:	100d883a 	mov	r6,r2
 10838d0:	1021883a 	mov	r16,r2
 10838d4:	d8800c15 	stw	r2,48(sp)
 10838d8:	d8800615 	stw	r2,24(sp)
 10838dc:	003d8806 	br	1082f00 <_dtoa_r+0x344>
 10838e0:	d8800617 	ldw	r2,24(sp)
 10838e4:	00be9b16 	blt	zero,r2,1083354 <_dtoa_r+0x798>
 10838e8:	10010f1e 	bne	r2,zero,1083d28 <_dtoa_r+0x116c>
 10838ec:	880b883a 	mov	r5,r17
 10838f0:	000d883a 	mov	r6,zero
 10838f4:	01d00534 	movhi	r7,16404
 10838f8:	8009883a 	mov	r4,r16
 10838fc:	108ba640 	call	108ba64 <__muldf3>
 1083900:	900d883a 	mov	r6,r18
 1083904:	980f883a 	mov	r7,r19
 1083908:	1009883a 	mov	r4,r2
 108390c:	180b883a 	mov	r5,r3
 1083910:	108b8940 	call	108b894 <__gedf2>
 1083914:	002b883a 	mov	r21,zero
 1083918:	0023883a 	mov	r17,zero
 108391c:	1000bf16 	blt	r2,zero,1083c1c <_dtoa_r+0x1060>
 1083920:	d9802217 	ldw	r6,136(sp)
 1083924:	ddc00717 	ldw	r23,28(sp)
 1083928:	018c303a 	nor	r6,zero,r6
 108392c:	d9800515 	stw	r6,20(sp)
 1083930:	a80b883a 	mov	r5,r21
 1083934:	e009883a 	mov	r4,fp
 1083938:	10863000 	call	1086300 <_Bfree>
 108393c:	883e4926 	beq	r17,zero,1083264 <_dtoa_r+0x6a8>
 1083940:	003fad06 	br	10837f8 <_dtoa_r+0xc3c>
 1083944:	d9c01117 	ldw	r7,68(sp)
 1083948:	3801bc26 	beq	r7,zero,108403c <_dtoa_r+0x1480>
 108394c:	10810cc4 	addi	r2,r2,1075
 1083950:	dd400a17 	ldw	r21,40(sp)
 1083954:	dd000817 	ldw	r20,32(sp)
 1083958:	003f0a06 	br	1083584 <_dtoa_r+0x9c8>
 108395c:	00800704 	movi	r2,28
 1083960:	d9000817 	ldw	r4,32(sp)
 1083964:	a0a9883a 	add	r20,r20,r2
 1083968:	b0ad883a 	add	r22,r22,r2
 108396c:	2089883a 	add	r4,r4,r2
 1083970:	d9000815 	stw	r4,32(sp)
 1083974:	003f5106 	br	10836bc <_dtoa_r+0xb00>
 1083978:	d8c00317 	ldw	r3,12(sp)
 108397c:	b8c1fc0e 	bge	r23,r3,1084170 <_dtoa_r+0x15b4>
 1083980:	0027883a 	mov	r19,zero
 1083984:	b805883a 	mov	r2,r23
 1083988:	003f3e06 	br	1083684 <_dtoa_r+0xac8>
 108398c:	880b883a 	mov	r5,r17
 1083990:	e009883a 	mov	r4,fp
 1083994:	000f883a 	mov	r7,zero
 1083998:	01800284 	movi	r6,10
 108399c:	10863280 	call	1086328 <__multadd>
 10839a0:	d9000c17 	ldw	r4,48(sp)
 10839a4:	1023883a 	mov	r17,r2
 10839a8:	0102040e 	bge	zero,r4,10841bc <_dtoa_r+0x1600>
 10839ac:	d9000615 	stw	r4,24(sp)
 10839b0:	0500050e 	bge	zero,r20,10839c8 <_dtoa_r+0xe0c>
 10839b4:	880b883a 	mov	r5,r17
 10839b8:	a00d883a 	mov	r6,r20
 10839bc:	e009883a 	mov	r4,fp
 10839c0:	10869d80 	call	10869d8 <__lshift>
 10839c4:	1023883a 	mov	r17,r2
 10839c8:	9801241e 	bne	r19,zero,1083e5c <_dtoa_r+0x12a0>
 10839cc:	8829883a 	mov	r20,r17
 10839d0:	d9000617 	ldw	r4,24(sp)
 10839d4:	dcc00717 	ldw	r19,28(sp)
 10839d8:	9480004c 	andi	r18,r18,1
 10839dc:	20bfffc4 	addi	r2,r4,-1
 10839e0:	9885883a 	add	r2,r19,r2
 10839e4:	d8800415 	stw	r2,16(sp)
 10839e8:	dc800615 	stw	r18,24(sp)
 10839ec:	a80b883a 	mov	r5,r21
 10839f0:	8009883a 	mov	r4,r16
 10839f4:	10829bc0 	call	10829bc <quorem>
 10839f8:	880b883a 	mov	r5,r17
 10839fc:	8009883a 	mov	r4,r16
 1083a00:	102f883a 	mov	r23,r2
 1083a04:	1086b200 	call	1086b20 <__mcmp>
 1083a08:	a80b883a 	mov	r5,r21
 1083a0c:	a00d883a 	mov	r6,r20
 1083a10:	e009883a 	mov	r4,fp
 1083a14:	102d883a 	mov	r22,r2
 1083a18:	1086b800 	call	1086b80 <__mdiff>
 1083a1c:	1007883a 	mov	r3,r2
 1083a20:	10800317 	ldw	r2,12(r2)
 1083a24:	bc800c04 	addi	r18,r23,48
 1083a28:	180b883a 	mov	r5,r3
 1083a2c:	10004e1e 	bne	r2,zero,1083b68 <_dtoa_r+0xfac>
 1083a30:	8009883a 	mov	r4,r16
 1083a34:	d8c01615 	stw	r3,88(sp)
 1083a38:	1086b200 	call	1086b20 <__mcmp>
 1083a3c:	d8c01617 	ldw	r3,88(sp)
 1083a40:	e009883a 	mov	r4,fp
 1083a44:	d8801615 	stw	r2,88(sp)
 1083a48:	180b883a 	mov	r5,r3
 1083a4c:	10863000 	call	1086300 <_Bfree>
 1083a50:	d8801617 	ldw	r2,88(sp)
 1083a54:	1000041e 	bne	r2,zero,1083a68 <_dtoa_r+0xeac>
 1083a58:	d9800317 	ldw	r6,12(sp)
 1083a5c:	3000021e 	bne	r6,zero,1083a68 <_dtoa_r+0xeac>
 1083a60:	d8c00617 	ldw	r3,24(sp)
 1083a64:	18003726 	beq	r3,zero,1083b44 <_dtoa_r+0xf88>
 1083a68:	b0002016 	blt	r22,zero,1083aec <_dtoa_r+0xf30>
 1083a6c:	b000041e 	bne	r22,zero,1083a80 <_dtoa_r+0xec4>
 1083a70:	d9000317 	ldw	r4,12(sp)
 1083a74:	2000021e 	bne	r4,zero,1083a80 <_dtoa_r+0xec4>
 1083a78:	d8c00617 	ldw	r3,24(sp)
 1083a7c:	18001b26 	beq	r3,zero,1083aec <_dtoa_r+0xf30>
 1083a80:	00810716 	blt	zero,r2,1083ea0 <_dtoa_r+0x12e4>
 1083a84:	d8c00417 	ldw	r3,16(sp)
 1083a88:	9d800044 	addi	r22,r19,1
 1083a8c:	9c800005 	stb	r18,0(r19)
 1083a90:	b02f883a 	mov	r23,r22
 1083a94:	98c10626 	beq	r19,r3,1083eb0 <_dtoa_r+0x12f4>
 1083a98:	800b883a 	mov	r5,r16
 1083a9c:	000f883a 	mov	r7,zero
 1083aa0:	01800284 	movi	r6,10
 1083aa4:	e009883a 	mov	r4,fp
 1083aa8:	10863280 	call	1086328 <__multadd>
 1083aac:	1021883a 	mov	r16,r2
 1083ab0:	000f883a 	mov	r7,zero
 1083ab4:	01800284 	movi	r6,10
 1083ab8:	880b883a 	mov	r5,r17
 1083abc:	e009883a 	mov	r4,fp
 1083ac0:	8d002526 	beq	r17,r20,1083b58 <_dtoa_r+0xf9c>
 1083ac4:	10863280 	call	1086328 <__multadd>
 1083ac8:	a00b883a 	mov	r5,r20
 1083acc:	000f883a 	mov	r7,zero
 1083ad0:	01800284 	movi	r6,10
 1083ad4:	e009883a 	mov	r4,fp
 1083ad8:	1023883a 	mov	r17,r2
 1083adc:	10863280 	call	1086328 <__multadd>
 1083ae0:	1029883a 	mov	r20,r2
 1083ae4:	b027883a 	mov	r19,r22
 1083ae8:	003fc006 	br	10839ec <_dtoa_r+0xe30>
 1083aec:	9011883a 	mov	r8,r18
 1083af0:	00800e0e 	bge	zero,r2,1083b2c <_dtoa_r+0xf70>
 1083af4:	800b883a 	mov	r5,r16
 1083af8:	01800044 	movi	r6,1
 1083afc:	e009883a 	mov	r4,fp
 1083b00:	da001715 	stw	r8,92(sp)
 1083b04:	10869d80 	call	10869d8 <__lshift>
 1083b08:	a80b883a 	mov	r5,r21
 1083b0c:	1009883a 	mov	r4,r2
 1083b10:	1021883a 	mov	r16,r2
 1083b14:	1086b200 	call	1086b20 <__mcmp>
 1083b18:	da001717 	ldw	r8,92(sp)
 1083b1c:	0081960e 	bge	zero,r2,1084178 <_dtoa_r+0x15bc>
 1083b20:	00800e44 	movi	r2,57
 1083b24:	40817026 	beq	r8,r2,10840e8 <_dtoa_r+0x152c>
 1083b28:	ba000c44 	addi	r8,r23,49
 1083b2c:	8825883a 	mov	r18,r17
 1083b30:	9dc00044 	addi	r23,r19,1
 1083b34:	9a000005 	stb	r8,0(r19)
 1083b38:	a023883a 	mov	r17,r20
 1083b3c:	dc000915 	stw	r16,36(sp)
 1083b40:	003f2406 	br	10837d4 <_dtoa_r+0xc18>
 1083b44:	00800e44 	movi	r2,57
 1083b48:	9011883a 	mov	r8,r18
 1083b4c:	90816626 	beq	r18,r2,10840e8 <_dtoa_r+0x152c>
 1083b50:	05bff516 	blt	zero,r22,1083b28 <_dtoa_r+0xf6c>
 1083b54:	003ff506 	br	1083b2c <_dtoa_r+0xf70>
 1083b58:	10863280 	call	1086328 <__multadd>
 1083b5c:	1023883a 	mov	r17,r2
 1083b60:	1029883a 	mov	r20,r2
 1083b64:	003fdf06 	br	1083ae4 <_dtoa_r+0xf28>
 1083b68:	e009883a 	mov	r4,fp
 1083b6c:	10863000 	call	1086300 <_Bfree>
 1083b70:	00800044 	movi	r2,1
 1083b74:	003fbc06 	br	1083a68 <_dtoa_r+0xeac>
 1083b78:	a80b883a 	mov	r5,r21
 1083b7c:	8009883a 	mov	r4,r16
 1083b80:	1086b200 	call	1086b20 <__mcmp>
 1083b84:	103edb0e 	bge	r2,zero,10836f4 <_dtoa_r+0xb38>
 1083b88:	800b883a 	mov	r5,r16
 1083b8c:	000f883a 	mov	r7,zero
 1083b90:	01800284 	movi	r6,10
 1083b94:	e009883a 	mov	r4,fp
 1083b98:	10863280 	call	1086328 <__multadd>
 1083b9c:	1021883a 	mov	r16,r2
 1083ba0:	d8800517 	ldw	r2,20(sp)
 1083ba4:	d8c00b17 	ldw	r3,44(sp)
 1083ba8:	10bfffc4 	addi	r2,r2,-1
 1083bac:	d8800515 	stw	r2,20(sp)
 1083bb0:	183f761e 	bne	r3,zero,108398c <_dtoa_r+0xdd0>
 1083bb4:	d9000c17 	ldw	r4,48(sp)
 1083bb8:	0101730e 	bge	zero,r4,1084188 <_dtoa_r+0x15cc>
 1083bbc:	d9000615 	stw	r4,24(sp)
 1083bc0:	003ed006 	br	1083704 <_dtoa_r+0xb48>
 1083bc4:	00800084 	movi	r2,2
 1083bc8:	3081861e 	bne	r6,r2,10841e4 <_dtoa_r+0x1628>
 1083bcc:	d8000b15 	stw	zero,44(sp)
 1083bd0:	003f3c06 	br	10838c4 <_dtoa_r+0xd08>
 1083bd4:	dc000917 	ldw	r16,36(sp)
 1083bd8:	003e9206 	br	1083624 <_dtoa_r+0xa68>
 1083bdc:	d9c00317 	ldw	r7,12(sp)
 1083be0:	00800084 	movi	r2,2
 1083be4:	11fec50e 	bge	r2,r7,10836fc <_dtoa_r+0xb40>
 1083be8:	d9000617 	ldw	r4,24(sp)
 1083bec:	20013c1e 	bne	r4,zero,10840e0 <_dtoa_r+0x1524>
 1083bf0:	a80b883a 	mov	r5,r21
 1083bf4:	000f883a 	mov	r7,zero
 1083bf8:	01800144 	movi	r6,5
 1083bfc:	e009883a 	mov	r4,fp
 1083c00:	10863280 	call	1086328 <__multadd>
 1083c04:	100b883a 	mov	r5,r2
 1083c08:	8009883a 	mov	r4,r16
 1083c0c:	102b883a 	mov	r21,r2
 1083c10:	1086b200 	call	1086b20 <__mcmp>
 1083c14:	dc000915 	stw	r16,36(sp)
 1083c18:	00bf410e 	bge	zero,r2,1083920 <_dtoa_r+0xd64>
 1083c1c:	d9c00717 	ldw	r7,28(sp)
 1083c20:	00800c44 	movi	r2,49
 1083c24:	38800005 	stb	r2,0(r7)
 1083c28:	d8800517 	ldw	r2,20(sp)
 1083c2c:	3dc00044 	addi	r23,r7,1
 1083c30:	10800044 	addi	r2,r2,1
 1083c34:	d8800515 	stw	r2,20(sp)
 1083c38:	003f3d06 	br	1083930 <_dtoa_r+0xd74>
 1083c3c:	d9800517 	ldw	r6,20(sp)
 1083c40:	d9c00717 	ldw	r7,28(sp)
 1083c44:	00800c44 	movi	r2,49
 1083c48:	31800044 	addi	r6,r6,1
 1083c4c:	d9800515 	stw	r6,20(sp)
 1083c50:	38800005 	stb	r2,0(r7)
 1083c54:	003edf06 	br	10837d4 <_dtoa_r+0xc18>
 1083c58:	d8000b15 	stw	zero,44(sp)
 1083c5c:	003c9f06 	br	1082edc <_dtoa_r+0x320>
 1083c60:	903e7e1e 	bne	r18,zero,108365c <_dtoa_r+0xaa0>
 1083c64:	00800434 	movhi	r2,16
 1083c68:	10bfffc4 	addi	r2,r2,-1
 1083c6c:	9884703a 	and	r2,r19,r2
 1083c70:	1000ea1e 	bne	r2,zero,108401c <_dtoa_r+0x1460>
 1083c74:	9cdffc2c 	andhi	r19,r19,32752
 1083c78:	9800e826 	beq	r19,zero,108401c <_dtoa_r+0x1460>
 1083c7c:	d9c00817 	ldw	r7,32(sp)
 1083c80:	b5800044 	addi	r22,r22,1
 1083c84:	04c00044 	movi	r19,1
 1083c88:	39c00044 	addi	r7,r7,1
 1083c8c:	d9c00815 	stw	r7,32(sp)
 1083c90:	d8800d17 	ldw	r2,52(sp)
 1083c94:	103e721e 	bne	r2,zero,1083660 <_dtoa_r+0xaa4>
 1083c98:	00800044 	movi	r2,1
 1083c9c:	003e7906 	br	1083684 <_dtoa_r+0xac8>
 1083ca0:	8009883a 	mov	r4,r16
 1083ca4:	108caf80 	call	108caf8 <__floatsidf>
 1083ca8:	d9800f17 	ldw	r6,60(sp)
 1083cac:	d9c01017 	ldw	r7,64(sp)
 1083cb0:	1009883a 	mov	r4,r2
 1083cb4:	180b883a 	mov	r5,r3
 1083cb8:	108ba640 	call	108ba64 <__muldf3>
 1083cbc:	000d883a 	mov	r6,zero
 1083cc0:	01d00734 	movhi	r7,16412
 1083cc4:	1009883a 	mov	r4,r2
 1083cc8:	180b883a 	mov	r5,r3
 1083ccc:	108a6780 	call	108a678 <__adddf3>
 1083cd0:	047f3034 	movhi	r17,64704
 1083cd4:	1021883a 	mov	r16,r2
 1083cd8:	1c63883a 	add	r17,r3,r17
 1083cdc:	d9000f17 	ldw	r4,60(sp)
 1083ce0:	d9401017 	ldw	r5,64(sp)
 1083ce4:	000d883a 	mov	r6,zero
 1083ce8:	01d00534 	movhi	r7,16404
 1083cec:	108c17c0 	call	108c17c <__subdf3>
 1083cf0:	800d883a 	mov	r6,r16
 1083cf4:	880f883a 	mov	r7,r17
 1083cf8:	1009883a 	mov	r4,r2
 1083cfc:	180b883a 	mov	r5,r3
 1083d00:	102b883a 	mov	r21,r2
 1083d04:	1829883a 	mov	r20,r3
 1083d08:	108b8940 	call	108b894 <__gedf2>
 1083d0c:	00806c16 	blt	zero,r2,1083ec0 <_dtoa_r+0x1304>
 1083d10:	89e0003c 	xorhi	r7,r17,32768
 1083d14:	800d883a 	mov	r6,r16
 1083d18:	a809883a 	mov	r4,r21
 1083d1c:	a00b883a 	mov	r5,r20
 1083d20:	108b9700 	call	108b970 <__ledf2>
 1083d24:	103d7e0e 	bge	r2,zero,1083320 <_dtoa_r+0x764>
 1083d28:	002b883a 	mov	r21,zero
 1083d2c:	0023883a 	mov	r17,zero
 1083d30:	003efb06 	br	1083920 <_dtoa_r+0xd64>
 1083d34:	d8800717 	ldw	r2,28(sp)
 1083d38:	003bd006 	br	1082c7c <_dtoa_r+0xc0>
 1083d3c:	d9000a17 	ldw	r4,40(sp)
 1083d40:	d9800d17 	ldw	r6,52(sp)
 1083d44:	dd400a15 	stw	r21,40(sp)
 1083d48:	a905c83a 	sub	r2,r21,r4
 1083d4c:	308d883a 	add	r6,r6,r2
 1083d50:	d9800d15 	stw	r6,52(sp)
 1083d54:	002b883a 	mov	r21,zero
 1083d58:	003e0606 	br	1083574 <_dtoa_r+0x9b8>
 1083d5c:	9023883a 	mov	r17,r18
 1083d60:	9829883a 	mov	r20,r19
 1083d64:	04000084 	movi	r16,2
 1083d68:	003c9206 	br	1082fb4 <_dtoa_r+0x3f8>
 1083d6c:	04000044 	movi	r16,1
 1083d70:	dc000c15 	stw	r16,48(sp)
 1083d74:	dc000615 	stw	r16,24(sp)
 1083d78:	dc002215 	stw	r16,136(sp)
 1083d7c:	e0001115 	stw	zero,68(fp)
 1083d80:	000b883a 	mov	r5,zero
 1083d84:	003c6906 	br	1082f2c <_dtoa_r+0x370>
 1083d88:	3021883a 	mov	r16,r6
 1083d8c:	003ffb06 	br	1083d7c <_dtoa_r+0x11c0>
 1083d90:	1000021e 	bne	r2,zero,1083d9c <_dtoa_r+0x11e0>
 1083d94:	4200004c 	andi	r8,r8,1
 1083d98:	403e7d1e 	bne	r8,zero,1083790 <_dtoa_r+0xbd4>
 1083d9c:	01000c04 	movi	r4,48
 1083da0:	00000106 	br	1083da8 <_dtoa_r+0x11ec>
 1083da4:	102f883a 	mov	r23,r2
 1083da8:	b8bfffc4 	addi	r2,r23,-1
 1083dac:	10c00007 	ldb	r3,0(r2)
 1083db0:	193ffc26 	beq	r3,r4,1083da4 <_dtoa_r+0x11e8>
 1083db4:	003e8706 	br	10837d4 <_dtoa_r+0xc18>
 1083db8:	d8800517 	ldw	r2,20(sp)
 1083dbc:	00a3c83a 	sub	r17,zero,r2
 1083dc0:	8800a426 	beq	r17,zero,1084054 <_dtoa_r+0x1498>
 1083dc4:	888003cc 	andi	r2,r17,15
 1083dc8:	100490fa 	slli	r2,r2,3
 1083dcc:	00c04274 	movhi	r3,265
 1083dd0:	18fce004 	addi	r3,r3,-3200
 1083dd4:	1885883a 	add	r2,r3,r2
 1083dd8:	11800017 	ldw	r6,0(r2)
 1083ddc:	11c00117 	ldw	r7,4(r2)
 1083de0:	9009883a 	mov	r4,r18
 1083de4:	980b883a 	mov	r5,r19
 1083de8:	8823d13a 	srai	r17,r17,4
 1083dec:	108ba640 	call	108ba64 <__muldf3>
 1083df0:	d8800f15 	stw	r2,60(sp)
 1083df4:	d8c01015 	stw	r3,64(sp)
 1083df8:	8800e826 	beq	r17,zero,108419c <_dtoa_r+0x15e0>
 1083dfc:	05004274 	movhi	r20,265
 1083e00:	a53cd604 	addi	r20,r20,-3240
 1083e04:	04000084 	movi	r16,2
 1083e08:	8980004c 	andi	r6,r17,1
 1083e0c:	1009883a 	mov	r4,r2
 1083e10:	8823d07a 	srai	r17,r17,1
 1083e14:	180b883a 	mov	r5,r3
 1083e18:	30000426 	beq	r6,zero,1083e2c <_dtoa_r+0x1270>
 1083e1c:	a1800017 	ldw	r6,0(r20)
 1083e20:	a1c00117 	ldw	r7,4(r20)
 1083e24:	84000044 	addi	r16,r16,1
 1083e28:	108ba640 	call	108ba64 <__muldf3>
 1083e2c:	a5000204 	addi	r20,r20,8
 1083e30:	883ff51e 	bne	r17,zero,1083e08 <_dtoa_r+0x124c>
 1083e34:	d8800f15 	stw	r2,60(sp)
 1083e38:	d8c01015 	stw	r3,64(sp)
 1083e3c:	003c7606 	br	1083018 <_dtoa_r+0x45c>
 1083e40:	00c00c04 	movi	r3,48
 1083e44:	10c00005 	stb	r3,0(r2)
 1083e48:	d8c00517 	ldw	r3,20(sp)
 1083e4c:	bd3fffc3 	ldbu	r20,-1(r23)
 1083e50:	18c00044 	addi	r3,r3,1
 1083e54:	d8c00515 	stw	r3,20(sp)
 1083e58:	003db906 	br	1083540 <_dtoa_r+0x984>
 1083e5c:	89400117 	ldw	r5,4(r17)
 1083e60:	e009883a 	mov	r4,fp
 1083e64:	10862580 	call	1086258 <_Balloc>
 1083e68:	89800417 	ldw	r6,16(r17)
 1083e6c:	89400304 	addi	r5,r17,12
 1083e70:	11000304 	addi	r4,r2,12
 1083e74:	31800084 	addi	r6,r6,2
 1083e78:	318d883a 	add	r6,r6,r6
 1083e7c:	318d883a 	add	r6,r6,r6
 1083e80:	1027883a 	mov	r19,r2
 1083e84:	1085e8c0 	call	1085e8c <memcpy>
 1083e88:	01800044 	movi	r6,1
 1083e8c:	980b883a 	mov	r5,r19
 1083e90:	e009883a 	mov	r4,fp
 1083e94:	10869d80 	call	10869d8 <__lshift>
 1083e98:	1029883a 	mov	r20,r2
 1083e9c:	003ecc06 	br	10839d0 <_dtoa_r+0xe14>
 1083ea0:	00800e44 	movi	r2,57
 1083ea4:	90809026 	beq	r18,r2,10840e8 <_dtoa_r+0x152c>
 1083ea8:	92000044 	addi	r8,r18,1
 1083eac:	003f1f06 	br	1083b2c <_dtoa_r+0xf70>
 1083eb0:	9011883a 	mov	r8,r18
 1083eb4:	8825883a 	mov	r18,r17
 1083eb8:	a023883a 	mov	r17,r20
 1083ebc:	003e2906 	br	1083764 <_dtoa_r+0xba8>
 1083ec0:	002b883a 	mov	r21,zero
 1083ec4:	0023883a 	mov	r17,zero
 1083ec8:	003f5406 	br	1083c1c <_dtoa_r+0x1060>
 1083ecc:	61bfffc4 	addi	r6,r12,-1
 1083ed0:	300490fa 	slli	r2,r6,3
 1083ed4:	00c04274 	movhi	r3,265
 1083ed8:	18fce004 	addi	r3,r3,-3200
 1083edc:	1885883a 	add	r2,r3,r2
 1083ee0:	11000017 	ldw	r4,0(r2)
 1083ee4:	11400117 	ldw	r5,4(r2)
 1083ee8:	d8800717 	ldw	r2,28(sp)
 1083eec:	880f883a 	mov	r7,r17
 1083ef0:	d9801215 	stw	r6,72(sp)
 1083ef4:	800d883a 	mov	r6,r16
 1083ef8:	db001615 	stw	r12,88(sp)
 1083efc:	15c00044 	addi	r23,r2,1
 1083f00:	108ba640 	call	108ba64 <__muldf3>
 1083f04:	d9401017 	ldw	r5,64(sp)
 1083f08:	d9000f17 	ldw	r4,60(sp)
 1083f0c:	d8c01515 	stw	r3,84(sp)
 1083f10:	d8801415 	stw	r2,80(sp)
 1083f14:	108ca780 	call	108ca78 <__fixdfsi>
 1083f18:	1009883a 	mov	r4,r2
 1083f1c:	1021883a 	mov	r16,r2
 1083f20:	108caf80 	call	108caf8 <__floatsidf>
 1083f24:	d9000f17 	ldw	r4,60(sp)
 1083f28:	d9401017 	ldw	r5,64(sp)
 1083f2c:	100d883a 	mov	r6,r2
 1083f30:	180f883a 	mov	r7,r3
 1083f34:	108c17c0 	call	108c17c <__subdf3>
 1083f38:	1829883a 	mov	r20,r3
 1083f3c:	d8c00717 	ldw	r3,28(sp)
 1083f40:	84000c04 	addi	r16,r16,48
 1083f44:	1023883a 	mov	r17,r2
 1083f48:	1c000005 	stb	r16,0(r3)
 1083f4c:	db001617 	ldw	r12,88(sp)
 1083f50:	00800044 	movi	r2,1
 1083f54:	60802226 	beq	r12,r2,1083fe0 <_dtoa_r+0x1424>
 1083f58:	d9c00717 	ldw	r7,28(sp)
 1083f5c:	8805883a 	mov	r2,r17
 1083f60:	b82b883a 	mov	r21,r23
 1083f64:	3b19883a 	add	r12,r7,r12
 1083f68:	6023883a 	mov	r17,r12
 1083f6c:	a007883a 	mov	r3,r20
 1083f70:	dc800f15 	stw	r18,60(sp)
 1083f74:	000d883a 	mov	r6,zero
 1083f78:	01d00934 	movhi	r7,16420
 1083f7c:	1009883a 	mov	r4,r2
 1083f80:	180b883a 	mov	r5,r3
 1083f84:	108ba640 	call	108ba64 <__muldf3>
 1083f88:	180b883a 	mov	r5,r3
 1083f8c:	1009883a 	mov	r4,r2
 1083f90:	1829883a 	mov	r20,r3
 1083f94:	1025883a 	mov	r18,r2
 1083f98:	108ca780 	call	108ca78 <__fixdfsi>
 1083f9c:	1009883a 	mov	r4,r2
 1083fa0:	1021883a 	mov	r16,r2
 1083fa4:	108caf80 	call	108caf8 <__floatsidf>
 1083fa8:	100d883a 	mov	r6,r2
 1083fac:	180f883a 	mov	r7,r3
 1083fb0:	9009883a 	mov	r4,r18
 1083fb4:	a00b883a 	mov	r5,r20
 1083fb8:	84000c04 	addi	r16,r16,48
 1083fbc:	108c17c0 	call	108c17c <__subdf3>
 1083fc0:	ad400044 	addi	r21,r21,1
 1083fc4:	ac3fffc5 	stb	r16,-1(r21)
 1083fc8:	ac7fea1e 	bne	r21,r17,1083f74 <_dtoa_r+0x13b8>
 1083fcc:	1023883a 	mov	r17,r2
 1083fd0:	d8801217 	ldw	r2,72(sp)
 1083fd4:	dc800f17 	ldw	r18,60(sp)
 1083fd8:	1829883a 	mov	r20,r3
 1083fdc:	b8af883a 	add	r23,r23,r2
 1083fe0:	d9001417 	ldw	r4,80(sp)
 1083fe4:	d9401517 	ldw	r5,84(sp)
 1083fe8:	000d883a 	mov	r6,zero
 1083fec:	01cff834 	movhi	r7,16352
 1083ff0:	108a6780 	call	108a678 <__adddf3>
 1083ff4:	880d883a 	mov	r6,r17
 1083ff8:	a00f883a 	mov	r7,r20
 1083ffc:	1009883a 	mov	r4,r2
 1084000:	180b883a 	mov	r5,r3
 1084004:	108b9700 	call	108b970 <__ledf2>
 1084008:	10003e0e 	bge	r2,zero,1084104 <_dtoa_r+0x1548>
 108400c:	d9001317 	ldw	r4,76(sp)
 1084010:	bd3fffc3 	ldbu	r20,-1(r23)
 1084014:	d9000515 	stw	r4,20(sp)
 1084018:	003d3b06 	br	1083508 <_dtoa_r+0x94c>
 108401c:	0027883a 	mov	r19,zero
 1084020:	003f1b06 	br	1083c90 <_dtoa_r+0x10d4>
 1084024:	d8800817 	ldw	r2,32(sp)
 1084028:	11e9c83a 	sub	r20,r2,r7
 108402c:	0005883a 	mov	r2,zero
 1084030:	003d5406 	br	1083584 <_dtoa_r+0x9c8>
 1084034:	00800044 	movi	r2,1
 1084038:	003dc706 	br	1083758 <_dtoa_r+0xb9c>
 108403c:	d8c00217 	ldw	r3,8(sp)
 1084040:	00800d84 	movi	r2,54
 1084044:	dd400a17 	ldw	r21,40(sp)
 1084048:	10c5c83a 	sub	r2,r2,r3
 108404c:	dd000817 	ldw	r20,32(sp)
 1084050:	003d4c06 	br	1083584 <_dtoa_r+0x9c8>
 1084054:	dc800f15 	stw	r18,60(sp)
 1084058:	dcc01015 	stw	r19,64(sp)
 108405c:	04000084 	movi	r16,2
 1084060:	003bed06 	br	1083018 <_dtoa_r+0x45c>
 1084064:	d9000617 	ldw	r4,24(sp)
 1084068:	203f0d26 	beq	r4,zero,1083ca0 <_dtoa_r+0x10e4>
 108406c:	d9800c17 	ldw	r6,48(sp)
 1084070:	01bcab0e 	bge	zero,r6,1083320 <_dtoa_r+0x764>
 1084074:	d9401017 	ldw	r5,64(sp)
 1084078:	d9000f17 	ldw	r4,60(sp)
 108407c:	000d883a 	mov	r6,zero
 1084080:	01d00934 	movhi	r7,16420
 1084084:	108ba640 	call	108ba64 <__muldf3>
 1084088:	81000044 	addi	r4,r16,1
 108408c:	d8800f15 	stw	r2,60(sp)
 1084090:	d8c01015 	stw	r3,64(sp)
 1084094:	108caf80 	call	108caf8 <__floatsidf>
 1084098:	d9800f17 	ldw	r6,60(sp)
 108409c:	d9c01017 	ldw	r7,64(sp)
 10840a0:	1009883a 	mov	r4,r2
 10840a4:	180b883a 	mov	r5,r3
 10840a8:	108ba640 	call	108ba64 <__muldf3>
 10840ac:	01d00734 	movhi	r7,16412
 10840b0:	000d883a 	mov	r6,zero
 10840b4:	1009883a 	mov	r4,r2
 10840b8:	180b883a 	mov	r5,r3
 10840bc:	108a6780 	call	108a678 <__adddf3>
 10840c0:	d9c00517 	ldw	r7,20(sp)
 10840c4:	047f3034 	movhi	r17,64704
 10840c8:	1021883a 	mov	r16,r2
 10840cc:	39ffffc4 	addi	r7,r7,-1
 10840d0:	d9c01315 	stw	r7,76(sp)
 10840d4:	1c63883a 	add	r17,r3,r17
 10840d8:	db000c17 	ldw	r12,48(sp)
 10840dc:	003bea06 	br	1083088 <_dtoa_r+0x4cc>
 10840e0:	dc000915 	stw	r16,36(sp)
 10840e4:	003e0e06 	br	1083920 <_dtoa_r+0xd64>
 10840e8:	01000e44 	movi	r4,57
 10840ec:	8825883a 	mov	r18,r17
 10840f0:	9dc00044 	addi	r23,r19,1
 10840f4:	99000005 	stb	r4,0(r19)
 10840f8:	a023883a 	mov	r17,r20
 10840fc:	dc000915 	stw	r16,36(sp)
 1084100:	003da406 	br	1083794 <_dtoa_r+0xbd8>
 1084104:	d9801417 	ldw	r6,80(sp)
 1084108:	d9c01517 	ldw	r7,84(sp)
 108410c:	0009883a 	mov	r4,zero
 1084110:	014ff834 	movhi	r5,16352
 1084114:	108c17c0 	call	108c17c <__subdf3>
 1084118:	880d883a 	mov	r6,r17
 108411c:	a00f883a 	mov	r7,r20
 1084120:	1009883a 	mov	r4,r2
 1084124:	180b883a 	mov	r5,r3
 1084128:	108b8940 	call	108b894 <__gedf2>
 108412c:	00bc7c0e 	bge	zero,r2,1083320 <_dtoa_r+0x764>
 1084130:	01000c04 	movi	r4,48
 1084134:	00000106 	br	108413c <_dtoa_r+0x1580>
 1084138:	102f883a 	mov	r23,r2
 108413c:	b8bfffc4 	addi	r2,r23,-1
 1084140:	10c00007 	ldb	r3,0(r2)
 1084144:	193ffc26 	beq	r3,r4,1084138 <_dtoa_r+0x157c>
 1084148:	d9801317 	ldw	r6,76(sp)
 108414c:	d9800515 	stw	r6,20(sp)
 1084150:	003c4406 	br	1083264 <_dtoa_r+0x6a8>
 1084154:	d9801317 	ldw	r6,76(sp)
 1084158:	d9800515 	stw	r6,20(sp)
 108415c:	003cea06 	br	1083508 <_dtoa_r+0x94c>
 1084160:	dd800f17 	ldw	r22,60(sp)
 1084164:	dcc01017 	ldw	r19,64(sp)
 1084168:	dc801217 	ldw	r18,72(sp)
 108416c:	003c6c06 	br	1083320 <_dtoa_r+0x764>
 1084170:	903e031e 	bne	r18,zero,1083980 <_dtoa_r+0xdc4>
 1084174:	003ebb06 	br	1083c64 <_dtoa_r+0x10a8>
 1084178:	103e6c1e 	bne	r2,zero,1083b2c <_dtoa_r+0xf70>
 108417c:	4080004c 	andi	r2,r8,1
 1084180:	103e6a26 	beq	r2,zero,1083b2c <_dtoa_r+0xf70>
 1084184:	003e6606 	br	1083b20 <_dtoa_r+0xf64>
 1084188:	d8c00317 	ldw	r3,12(sp)
 108418c:	00800084 	movi	r2,2
 1084190:	10c02916 	blt	r2,r3,1084238 <_dtoa_r+0x167c>
 1084194:	d9000c17 	ldw	r4,48(sp)
 1084198:	003e8806 	br	1083bbc <_dtoa_r+0x1000>
 108419c:	04000084 	movi	r16,2
 10841a0:	003b9d06 	br	1083018 <_dtoa_r+0x45c>
 10841a4:	d9001317 	ldw	r4,76(sp)
 10841a8:	d9000515 	stw	r4,20(sp)
 10841ac:	003cd606 	br	1083508 <_dtoa_r+0x94c>
 10841b0:	d8801317 	ldw	r2,76(sp)
 10841b4:	d8800515 	stw	r2,20(sp)
 10841b8:	003c2a06 	br	1083264 <_dtoa_r+0x6a8>
 10841bc:	d9800317 	ldw	r6,12(sp)
 10841c0:	00800084 	movi	r2,2
 10841c4:	11801516 	blt	r2,r6,108421c <_dtoa_r+0x1660>
 10841c8:	d9c00c17 	ldw	r7,48(sp)
 10841cc:	d9c00615 	stw	r7,24(sp)
 10841d0:	003df706 	br	10839b0 <_dtoa_r+0xdf4>
 10841d4:	193d3926 	beq	r3,r4,10836bc <_dtoa_r+0xb00>
 10841d8:	00c00f04 	movi	r3,60
 10841dc:	1885c83a 	sub	r2,r3,r2
 10841e0:	003ddf06 	br	1083960 <_dtoa_r+0xda4>
 10841e4:	e009883a 	mov	r4,fp
 10841e8:	e0001115 	stw	zero,68(fp)
 10841ec:	000b883a 	mov	r5,zero
 10841f0:	10862580 	call	1086258 <_Balloc>
 10841f4:	d8800715 	stw	r2,28(sp)
 10841f8:	d8c00717 	ldw	r3,28(sp)
 10841fc:	00bfffc4 	movi	r2,-1
 1084200:	01000044 	movi	r4,1
 1084204:	d8800c15 	stw	r2,48(sp)
 1084208:	e0c01015 	stw	r3,64(fp)
 108420c:	d9000b15 	stw	r4,44(sp)
 1084210:	d8800615 	stw	r2,24(sp)
 1084214:	d8002215 	stw	zero,136(sp)
 1084218:	003c4106 	br	1083320 <_dtoa_r+0x764>
 108421c:	d8c00c17 	ldw	r3,48(sp)
 1084220:	d8c00615 	stw	r3,24(sp)
 1084224:	003e7006 	br	1083be8 <_dtoa_r+0x102c>
 1084228:	04400044 	movi	r17,1
 108422c:	003b2006 	br	1082eb0 <_dtoa_r+0x2f4>
 1084230:	000b883a 	mov	r5,zero
 1084234:	003b3d06 	br	1082f2c <_dtoa_r+0x370>
 1084238:	d8800c17 	ldw	r2,48(sp)
 108423c:	d8800615 	stw	r2,24(sp)
 1084240:	003e6906 	br	1083be8 <_dtoa_r+0x102c>

01084244 <__sflush_r>:
 1084244:	2880030b 	ldhu	r2,12(r5)
 1084248:	defffb04 	addi	sp,sp,-20
 108424c:	dcc00315 	stw	r19,12(sp)
 1084250:	dc400115 	stw	r17,4(sp)
 1084254:	dfc00415 	stw	ra,16(sp)
 1084258:	dc800215 	stw	r18,8(sp)
 108425c:	dc000015 	stw	r16,0(sp)
 1084260:	10c0020c 	andi	r3,r2,8
 1084264:	2823883a 	mov	r17,r5
 1084268:	2027883a 	mov	r19,r4
 108426c:	1800311e 	bne	r3,zero,1084334 <__sflush_r+0xf0>
 1084270:	28c00117 	ldw	r3,4(r5)
 1084274:	10820014 	ori	r2,r2,2048
 1084278:	2880030d 	sth	r2,12(r5)
 108427c:	00c04b0e 	bge	zero,r3,10843ac <__sflush_r+0x168>
 1084280:	8a000a17 	ldw	r8,40(r17)
 1084284:	40002326 	beq	r8,zero,1084314 <__sflush_r+0xd0>
 1084288:	9c000017 	ldw	r16,0(r19)
 108428c:	10c4000c 	andi	r3,r2,4096
 1084290:	98000015 	stw	zero,0(r19)
 1084294:	18004826 	beq	r3,zero,10843b8 <__sflush_r+0x174>
 1084298:	89801417 	ldw	r6,80(r17)
 108429c:	10c0010c 	andi	r3,r2,4
 10842a0:	18000626 	beq	r3,zero,10842bc <__sflush_r+0x78>
 10842a4:	88c00117 	ldw	r3,4(r17)
 10842a8:	88800c17 	ldw	r2,48(r17)
 10842ac:	30cdc83a 	sub	r6,r6,r3
 10842b0:	10000226 	beq	r2,zero,10842bc <__sflush_r+0x78>
 10842b4:	88800f17 	ldw	r2,60(r17)
 10842b8:	308dc83a 	sub	r6,r6,r2
 10842bc:	89400717 	ldw	r5,28(r17)
 10842c0:	000f883a 	mov	r7,zero
 10842c4:	9809883a 	mov	r4,r19
 10842c8:	403ee83a 	callr	r8
 10842cc:	00ffffc4 	movi	r3,-1
 10842d0:	10c04426 	beq	r2,r3,10843e4 <__sflush_r+0x1a0>
 10842d4:	88c0030b 	ldhu	r3,12(r17)
 10842d8:	89000417 	ldw	r4,16(r17)
 10842dc:	88000115 	stw	zero,4(r17)
 10842e0:	197dffcc 	andi	r5,r3,63487
 10842e4:	8940030d 	sth	r5,12(r17)
 10842e8:	89000015 	stw	r4,0(r17)
 10842ec:	18c4000c 	andi	r3,r3,4096
 10842f0:	18002c1e 	bne	r3,zero,10843a4 <__sflush_r+0x160>
 10842f4:	89400c17 	ldw	r5,48(r17)
 10842f8:	9c000015 	stw	r16,0(r19)
 10842fc:	28000526 	beq	r5,zero,1084314 <__sflush_r+0xd0>
 1084300:	88801004 	addi	r2,r17,64
 1084304:	28800226 	beq	r5,r2,1084310 <__sflush_r+0xcc>
 1084308:	9809883a 	mov	r4,r19
 108430c:	10849b00 	call	10849b0 <_free_r>
 1084310:	88000c15 	stw	zero,48(r17)
 1084314:	0005883a 	mov	r2,zero
 1084318:	dfc00417 	ldw	ra,16(sp)
 108431c:	dcc00317 	ldw	r19,12(sp)
 1084320:	dc800217 	ldw	r18,8(sp)
 1084324:	dc400117 	ldw	r17,4(sp)
 1084328:	dc000017 	ldw	r16,0(sp)
 108432c:	dec00504 	addi	sp,sp,20
 1084330:	f800283a 	ret
 1084334:	2c800417 	ldw	r18,16(r5)
 1084338:	903ff626 	beq	r18,zero,1084314 <__sflush_r+0xd0>
 108433c:	2c000017 	ldw	r16,0(r5)
 1084340:	108000cc 	andi	r2,r2,3
 1084344:	2c800015 	stw	r18,0(r5)
 1084348:	84a1c83a 	sub	r16,r16,r18
 108434c:	1000131e 	bne	r2,zero,108439c <__sflush_r+0x158>
 1084350:	28800517 	ldw	r2,20(r5)
 1084354:	88800215 	stw	r2,8(r17)
 1084358:	04000316 	blt	zero,r16,1084368 <__sflush_r+0x124>
 108435c:	003fed06 	br	1084314 <__sflush_r+0xd0>
 1084360:	90a5883a 	add	r18,r18,r2
 1084364:	043feb0e 	bge	zero,r16,1084314 <__sflush_r+0xd0>
 1084368:	88800917 	ldw	r2,36(r17)
 108436c:	89400717 	ldw	r5,28(r17)
 1084370:	800f883a 	mov	r7,r16
 1084374:	900d883a 	mov	r6,r18
 1084378:	9809883a 	mov	r4,r19
 108437c:	103ee83a 	callr	r2
 1084380:	80a1c83a 	sub	r16,r16,r2
 1084384:	00bff616 	blt	zero,r2,1084360 <__sflush_r+0x11c>
 1084388:	88c0030b 	ldhu	r3,12(r17)
 108438c:	00bfffc4 	movi	r2,-1
 1084390:	18c01014 	ori	r3,r3,64
 1084394:	88c0030d 	sth	r3,12(r17)
 1084398:	003fdf06 	br	1084318 <__sflush_r+0xd4>
 108439c:	0005883a 	mov	r2,zero
 10843a0:	003fec06 	br	1084354 <__sflush_r+0x110>
 10843a4:	88801415 	stw	r2,80(r17)
 10843a8:	003fd206 	br	10842f4 <__sflush_r+0xb0>
 10843ac:	28c00f17 	ldw	r3,60(r5)
 10843b0:	00ffb316 	blt	zero,r3,1084280 <__sflush_r+0x3c>
 10843b4:	003fd706 	br	1084314 <__sflush_r+0xd0>
 10843b8:	89400717 	ldw	r5,28(r17)
 10843bc:	000d883a 	mov	r6,zero
 10843c0:	01c00044 	movi	r7,1
 10843c4:	9809883a 	mov	r4,r19
 10843c8:	403ee83a 	callr	r8
 10843cc:	100d883a 	mov	r6,r2
 10843d0:	00bfffc4 	movi	r2,-1
 10843d4:	30801426 	beq	r6,r2,1084428 <__sflush_r+0x1e4>
 10843d8:	8880030b 	ldhu	r2,12(r17)
 10843dc:	8a000a17 	ldw	r8,40(r17)
 10843e0:	003fae06 	br	108429c <__sflush_r+0x58>
 10843e4:	98c00017 	ldw	r3,0(r19)
 10843e8:	183fba26 	beq	r3,zero,10842d4 <__sflush_r+0x90>
 10843ec:	01000744 	movi	r4,29
 10843f0:	19000626 	beq	r3,r4,108440c <__sflush_r+0x1c8>
 10843f4:	01000584 	movi	r4,22
 10843f8:	19000426 	beq	r3,r4,108440c <__sflush_r+0x1c8>
 10843fc:	88c0030b 	ldhu	r3,12(r17)
 1084400:	18c01014 	ori	r3,r3,64
 1084404:	88c0030d 	sth	r3,12(r17)
 1084408:	003fc306 	br	1084318 <__sflush_r+0xd4>
 108440c:	8880030b 	ldhu	r2,12(r17)
 1084410:	88c00417 	ldw	r3,16(r17)
 1084414:	88000115 	stw	zero,4(r17)
 1084418:	10bdffcc 	andi	r2,r2,63487
 108441c:	8880030d 	sth	r2,12(r17)
 1084420:	88c00015 	stw	r3,0(r17)
 1084424:	003fb306 	br	10842f4 <__sflush_r+0xb0>
 1084428:	98800017 	ldw	r2,0(r19)
 108442c:	103fea26 	beq	r2,zero,10843d8 <__sflush_r+0x194>
 1084430:	00c00744 	movi	r3,29
 1084434:	10c00226 	beq	r2,r3,1084440 <__sflush_r+0x1fc>
 1084438:	00c00584 	movi	r3,22
 108443c:	10c0031e 	bne	r2,r3,108444c <__sflush_r+0x208>
 1084440:	9c000015 	stw	r16,0(r19)
 1084444:	0005883a 	mov	r2,zero
 1084448:	003fb306 	br	1084318 <__sflush_r+0xd4>
 108444c:	88c0030b 	ldhu	r3,12(r17)
 1084450:	3005883a 	mov	r2,r6
 1084454:	18c01014 	ori	r3,r3,64
 1084458:	88c0030d 	sth	r3,12(r17)
 108445c:	003fae06 	br	1084318 <__sflush_r+0xd4>

01084460 <_fflush_r>:
 1084460:	defffd04 	addi	sp,sp,-12
 1084464:	dc000115 	stw	r16,4(sp)
 1084468:	dfc00215 	stw	ra,8(sp)
 108446c:	2021883a 	mov	r16,r4
 1084470:	20000226 	beq	r4,zero,108447c <_fflush_r+0x1c>
 1084474:	20800e17 	ldw	r2,56(r4)
 1084478:	10000c26 	beq	r2,zero,10844ac <_fflush_r+0x4c>
 108447c:	2880030f 	ldh	r2,12(r5)
 1084480:	1000051e 	bne	r2,zero,1084498 <_fflush_r+0x38>
 1084484:	0005883a 	mov	r2,zero
 1084488:	dfc00217 	ldw	ra,8(sp)
 108448c:	dc000117 	ldw	r16,4(sp)
 1084490:	dec00304 	addi	sp,sp,12
 1084494:	f800283a 	ret
 1084498:	8009883a 	mov	r4,r16
 108449c:	dfc00217 	ldw	ra,8(sp)
 10844a0:	dc000117 	ldw	r16,4(sp)
 10844a4:	dec00304 	addi	sp,sp,12
 10844a8:	10842441 	jmpi	1084244 <__sflush_r>
 10844ac:	d9400015 	stw	r5,0(sp)
 10844b0:	108483c0 	call	108483c <__sinit>
 10844b4:	d9400017 	ldw	r5,0(sp)
 10844b8:	003ff006 	br	108447c <_fflush_r+0x1c>

010844bc <fflush>:
 10844bc:	20000526 	beq	r4,zero,10844d4 <fflush+0x18>
 10844c0:	00804274 	movhi	r2,265
 10844c4:	10842304 	addi	r2,r2,4236
 10844c8:	200b883a 	mov	r5,r4
 10844cc:	11000017 	ldw	r4,0(r2)
 10844d0:	10844601 	jmpi	1084460 <_fflush_r>
 10844d4:	00804274 	movhi	r2,265
 10844d8:	10842204 	addi	r2,r2,4232
 10844dc:	11000017 	ldw	r4,0(r2)
 10844e0:	01404234 	movhi	r5,264
 10844e4:	29511804 	addi	r5,r5,17504
 10844e8:	10852401 	jmpi	1085240 <_fwalk_reent>

010844ec <__fp_unlock>:
 10844ec:	0005883a 	mov	r2,zero
 10844f0:	f800283a 	ret

010844f4 <_cleanup_r>:
 10844f4:	01404274 	movhi	r5,265
 10844f8:	29649604 	addi	r5,r5,-28072
 10844fc:	10852401 	jmpi	1085240 <_fwalk_reent>

01084500 <__sinit.part.1>:
 1084500:	defff704 	addi	sp,sp,-36
 1084504:	00c04234 	movhi	r3,264
 1084508:	dfc00815 	stw	ra,32(sp)
 108450c:	ddc00715 	stw	r23,28(sp)
 1084510:	dd800615 	stw	r22,24(sp)
 1084514:	dd400515 	stw	r21,20(sp)
 1084518:	dd000415 	stw	r20,16(sp)
 108451c:	dcc00315 	stw	r19,12(sp)
 1084520:	dc800215 	stw	r18,8(sp)
 1084524:	dc400115 	stw	r17,4(sp)
 1084528:	dc000015 	stw	r16,0(sp)
 108452c:	18d13d04 	addi	r3,r3,17652
 1084530:	24000117 	ldw	r16,4(r4)
 1084534:	20c00f15 	stw	r3,60(r4)
 1084538:	2080bb04 	addi	r2,r4,748
 108453c:	00c000c4 	movi	r3,3
 1084540:	20c0b915 	stw	r3,740(r4)
 1084544:	2080ba15 	stw	r2,744(r4)
 1084548:	2000b815 	stw	zero,736(r4)
 108454c:	05c00204 	movi	r23,8
 1084550:	00800104 	movi	r2,4
 1084554:	2025883a 	mov	r18,r4
 1084558:	b80d883a 	mov	r6,r23
 108455c:	81001704 	addi	r4,r16,92
 1084560:	000b883a 	mov	r5,zero
 1084564:	80000015 	stw	zero,0(r16)
 1084568:	80000115 	stw	zero,4(r16)
 108456c:	80000215 	stw	zero,8(r16)
 1084570:	8080030d 	sth	r2,12(r16)
 1084574:	80001915 	stw	zero,100(r16)
 1084578:	8000038d 	sth	zero,14(r16)
 108457c:	80000415 	stw	zero,16(r16)
 1084580:	80000515 	stw	zero,20(r16)
 1084584:	80000615 	stw	zero,24(r16)
 1084588:	10861300 	call	1086130 <memset>
 108458c:	05804234 	movhi	r22,264
 1084590:	94400217 	ldw	r17,8(r18)
 1084594:	05404234 	movhi	r21,264
 1084598:	05004234 	movhi	r20,264
 108459c:	04c04234 	movhi	r19,264
 10845a0:	b59e2004 	addi	r22,r22,30848
 10845a4:	ad5e3704 	addi	r21,r21,30940
 10845a8:	a51e5604 	addi	r20,r20,31064
 10845ac:	9cde6d04 	addi	r19,r19,31156
 10845b0:	85800815 	stw	r22,32(r16)
 10845b4:	85400915 	stw	r21,36(r16)
 10845b8:	85000a15 	stw	r20,40(r16)
 10845bc:	84c00b15 	stw	r19,44(r16)
 10845c0:	84000715 	stw	r16,28(r16)
 10845c4:	00800284 	movi	r2,10
 10845c8:	8880030d 	sth	r2,12(r17)
 10845cc:	00800044 	movi	r2,1
 10845d0:	b80d883a 	mov	r6,r23
 10845d4:	89001704 	addi	r4,r17,92
 10845d8:	000b883a 	mov	r5,zero
 10845dc:	88000015 	stw	zero,0(r17)
 10845e0:	88000115 	stw	zero,4(r17)
 10845e4:	88000215 	stw	zero,8(r17)
 10845e8:	88001915 	stw	zero,100(r17)
 10845ec:	8880038d 	sth	r2,14(r17)
 10845f0:	88000415 	stw	zero,16(r17)
 10845f4:	88000515 	stw	zero,20(r17)
 10845f8:	88000615 	stw	zero,24(r17)
 10845fc:	10861300 	call	1086130 <memset>
 1084600:	94000317 	ldw	r16,12(r18)
 1084604:	00800484 	movi	r2,18
 1084608:	8c400715 	stw	r17,28(r17)
 108460c:	8d800815 	stw	r22,32(r17)
 1084610:	8d400915 	stw	r21,36(r17)
 1084614:	8d000a15 	stw	r20,40(r17)
 1084618:	8cc00b15 	stw	r19,44(r17)
 108461c:	8080030d 	sth	r2,12(r16)
 1084620:	00800084 	movi	r2,2
 1084624:	80000015 	stw	zero,0(r16)
 1084628:	80000115 	stw	zero,4(r16)
 108462c:	80000215 	stw	zero,8(r16)
 1084630:	80001915 	stw	zero,100(r16)
 1084634:	8080038d 	sth	r2,14(r16)
 1084638:	80000415 	stw	zero,16(r16)
 108463c:	80000515 	stw	zero,20(r16)
 1084640:	80000615 	stw	zero,24(r16)
 1084644:	b80d883a 	mov	r6,r23
 1084648:	000b883a 	mov	r5,zero
 108464c:	81001704 	addi	r4,r16,92
 1084650:	10861300 	call	1086130 <memset>
 1084654:	00800044 	movi	r2,1
 1084658:	84000715 	stw	r16,28(r16)
 108465c:	85800815 	stw	r22,32(r16)
 1084660:	85400915 	stw	r21,36(r16)
 1084664:	85000a15 	stw	r20,40(r16)
 1084668:	84c00b15 	stw	r19,44(r16)
 108466c:	90800e15 	stw	r2,56(r18)
 1084670:	dfc00817 	ldw	ra,32(sp)
 1084674:	ddc00717 	ldw	r23,28(sp)
 1084678:	dd800617 	ldw	r22,24(sp)
 108467c:	dd400517 	ldw	r21,20(sp)
 1084680:	dd000417 	ldw	r20,16(sp)
 1084684:	dcc00317 	ldw	r19,12(sp)
 1084688:	dc800217 	ldw	r18,8(sp)
 108468c:	dc400117 	ldw	r17,4(sp)
 1084690:	dc000017 	ldw	r16,0(sp)
 1084694:	dec00904 	addi	sp,sp,36
 1084698:	f800283a 	ret

0108469c <__fp_lock>:
 108469c:	0005883a 	mov	r2,zero
 10846a0:	f800283a 	ret

010846a4 <__sfmoreglue>:
 10846a4:	defffc04 	addi	sp,sp,-16
 10846a8:	dc400115 	stw	r17,4(sp)
 10846ac:	2c7fffc4 	addi	r17,r5,-1
 10846b0:	8c401a24 	muli	r17,r17,104
 10846b4:	dc800215 	stw	r18,8(sp)
 10846b8:	2825883a 	mov	r18,r5
 10846bc:	89401d04 	addi	r5,r17,116
 10846c0:	dc000015 	stw	r16,0(sp)
 10846c4:	dfc00315 	stw	ra,12(sp)
 10846c8:	108559c0 	call	108559c <_malloc_r>
 10846cc:	1021883a 	mov	r16,r2
 10846d0:	10000726 	beq	r2,zero,10846f0 <__sfmoreglue+0x4c>
 10846d4:	11000304 	addi	r4,r2,12
 10846d8:	10000015 	stw	zero,0(r2)
 10846dc:	14800115 	stw	r18,4(r2)
 10846e0:	11000215 	stw	r4,8(r2)
 10846e4:	89801a04 	addi	r6,r17,104
 10846e8:	000b883a 	mov	r5,zero
 10846ec:	10861300 	call	1086130 <memset>
 10846f0:	8005883a 	mov	r2,r16
 10846f4:	dfc00317 	ldw	ra,12(sp)
 10846f8:	dc800217 	ldw	r18,8(sp)
 10846fc:	dc400117 	ldw	r17,4(sp)
 1084700:	dc000017 	ldw	r16,0(sp)
 1084704:	dec00404 	addi	sp,sp,16
 1084708:	f800283a 	ret

0108470c <__sfp>:
 108470c:	defffb04 	addi	sp,sp,-20
 1084710:	dc000015 	stw	r16,0(sp)
 1084714:	04004274 	movhi	r16,265
 1084718:	84042204 	addi	r16,r16,4232
 108471c:	dcc00315 	stw	r19,12(sp)
 1084720:	2027883a 	mov	r19,r4
 1084724:	81000017 	ldw	r4,0(r16)
 1084728:	dfc00415 	stw	ra,16(sp)
 108472c:	dc800215 	stw	r18,8(sp)
 1084730:	20800e17 	ldw	r2,56(r4)
 1084734:	dc400115 	stw	r17,4(sp)
 1084738:	1000021e 	bne	r2,zero,1084744 <__sfp+0x38>
 108473c:	10845000 	call	1084500 <__sinit.part.1>
 1084740:	81000017 	ldw	r4,0(r16)
 1084744:	2480b804 	addi	r18,r4,736
 1084748:	047fffc4 	movi	r17,-1
 108474c:	91000117 	ldw	r4,4(r18)
 1084750:	94000217 	ldw	r16,8(r18)
 1084754:	213fffc4 	addi	r4,r4,-1
 1084758:	20000a16 	blt	r4,zero,1084784 <__sfp+0x78>
 108475c:	8080030f 	ldh	r2,12(r16)
 1084760:	10000c26 	beq	r2,zero,1084794 <__sfp+0x88>
 1084764:	80c01d04 	addi	r3,r16,116
 1084768:	00000206 	br	1084774 <__sfp+0x68>
 108476c:	18bfe60f 	ldh	r2,-104(r3)
 1084770:	10000826 	beq	r2,zero,1084794 <__sfp+0x88>
 1084774:	213fffc4 	addi	r4,r4,-1
 1084778:	1c3ffd04 	addi	r16,r3,-12
 108477c:	18c01a04 	addi	r3,r3,104
 1084780:	247ffa1e 	bne	r4,r17,108476c <__sfp+0x60>
 1084784:	90800017 	ldw	r2,0(r18)
 1084788:	10001d26 	beq	r2,zero,1084800 <__sfp+0xf4>
 108478c:	1025883a 	mov	r18,r2
 1084790:	003fee06 	br	108474c <__sfp+0x40>
 1084794:	00bfffc4 	movi	r2,-1
 1084798:	8080038d 	sth	r2,14(r16)
 108479c:	00800044 	movi	r2,1
 10847a0:	8080030d 	sth	r2,12(r16)
 10847a4:	80001915 	stw	zero,100(r16)
 10847a8:	80000015 	stw	zero,0(r16)
 10847ac:	80000215 	stw	zero,8(r16)
 10847b0:	80000115 	stw	zero,4(r16)
 10847b4:	80000415 	stw	zero,16(r16)
 10847b8:	80000515 	stw	zero,20(r16)
 10847bc:	80000615 	stw	zero,24(r16)
 10847c0:	01800204 	movi	r6,8
 10847c4:	000b883a 	mov	r5,zero
 10847c8:	81001704 	addi	r4,r16,92
 10847cc:	10861300 	call	1086130 <memset>
 10847d0:	8005883a 	mov	r2,r16
 10847d4:	80000c15 	stw	zero,48(r16)
 10847d8:	80000d15 	stw	zero,52(r16)
 10847dc:	80001115 	stw	zero,68(r16)
 10847e0:	80001215 	stw	zero,72(r16)
 10847e4:	dfc00417 	ldw	ra,16(sp)
 10847e8:	dcc00317 	ldw	r19,12(sp)
 10847ec:	dc800217 	ldw	r18,8(sp)
 10847f0:	dc400117 	ldw	r17,4(sp)
 10847f4:	dc000017 	ldw	r16,0(sp)
 10847f8:	dec00504 	addi	sp,sp,20
 10847fc:	f800283a 	ret
 1084800:	01400104 	movi	r5,4
 1084804:	9809883a 	mov	r4,r19
 1084808:	10846a40 	call	10846a4 <__sfmoreglue>
 108480c:	90800015 	stw	r2,0(r18)
 1084810:	103fde1e 	bne	r2,zero,108478c <__sfp+0x80>
 1084814:	00800304 	movi	r2,12
 1084818:	98800015 	stw	r2,0(r19)
 108481c:	0005883a 	mov	r2,zero
 1084820:	003ff006 	br	10847e4 <__sfp+0xd8>

01084824 <_cleanup>:
 1084824:	00804274 	movhi	r2,265
 1084828:	10842204 	addi	r2,r2,4232
 108482c:	11000017 	ldw	r4,0(r2)
 1084830:	01404274 	movhi	r5,265
 1084834:	29649604 	addi	r5,r5,-28072
 1084838:	10852401 	jmpi	1085240 <_fwalk_reent>

0108483c <__sinit>:
 108483c:	20800e17 	ldw	r2,56(r4)
 1084840:	10000126 	beq	r2,zero,1084848 <__sinit+0xc>
 1084844:	f800283a 	ret
 1084848:	10845001 	jmpi	1084500 <__sinit.part.1>

0108484c <__sfp_lock_acquire>:
 108484c:	f800283a 	ret

01084850 <__sfp_lock_release>:
 1084850:	f800283a 	ret

01084854 <__sinit_lock_acquire>:
 1084854:	f800283a 	ret

01084858 <__sinit_lock_release>:
 1084858:	f800283a 	ret

0108485c <__fp_lock_all>:
 108485c:	00804274 	movhi	r2,265
 1084860:	10842304 	addi	r2,r2,4236
 1084864:	11000017 	ldw	r4,0(r2)
 1084868:	01404234 	movhi	r5,264
 108486c:	2951a704 	addi	r5,r5,18076
 1084870:	108517c1 	jmpi	108517c <_fwalk>

01084874 <__fp_unlock_all>:
 1084874:	00804274 	movhi	r2,265
 1084878:	10842304 	addi	r2,r2,4236
 108487c:	11000017 	ldw	r4,0(r2)
 1084880:	01404234 	movhi	r5,264
 1084884:	29513b04 	addi	r5,r5,17644
 1084888:	108517c1 	jmpi	108517c <_fwalk>

0108488c <_malloc_trim_r>:
 108488c:	defffb04 	addi	sp,sp,-20
 1084890:	dcc00315 	stw	r19,12(sp)
 1084894:	04c04274 	movhi	r19,265
 1084898:	dc800215 	stw	r18,8(sp)
 108489c:	dc400115 	stw	r17,4(sp)
 10848a0:	dc000015 	stw	r16,0(sp)
 10848a4:	dfc00415 	stw	ra,16(sp)
 10848a8:	2821883a 	mov	r16,r5
 10848ac:	9cfe9204 	addi	r19,r19,-1464
 10848b0:	2025883a 	mov	r18,r4
 10848b4:	108d3dc0 	call	108d3dc <__malloc_lock>
 10848b8:	98800217 	ldw	r2,8(r19)
 10848bc:	14400117 	ldw	r17,4(r2)
 10848c0:	00bfff04 	movi	r2,-4
 10848c4:	88a2703a 	and	r17,r17,r2
 10848c8:	8c21c83a 	sub	r16,r17,r16
 10848cc:	8403fbc4 	addi	r16,r16,4079
 10848d0:	8020d33a 	srli	r16,r16,12
 10848d4:	0083ffc4 	movi	r2,4095
 10848d8:	843fffc4 	addi	r16,r16,-1
 10848dc:	8020933a 	slli	r16,r16,12
 10848e0:	1400060e 	bge	r2,r16,10848fc <_malloc_trim_r+0x70>
 10848e4:	000b883a 	mov	r5,zero
 10848e8:	9009883a 	mov	r4,r18
 10848ec:	108782c0 	call	108782c <_sbrk_r>
 10848f0:	98c00217 	ldw	r3,8(r19)
 10848f4:	1c47883a 	add	r3,r3,r17
 10848f8:	10c00a26 	beq	r2,r3,1084924 <_malloc_trim_r+0x98>
 10848fc:	9009883a 	mov	r4,r18
 1084900:	108d4000 	call	108d400 <__malloc_unlock>
 1084904:	0005883a 	mov	r2,zero
 1084908:	dfc00417 	ldw	ra,16(sp)
 108490c:	dcc00317 	ldw	r19,12(sp)
 1084910:	dc800217 	ldw	r18,8(sp)
 1084914:	dc400117 	ldw	r17,4(sp)
 1084918:	dc000017 	ldw	r16,0(sp)
 108491c:	dec00504 	addi	sp,sp,20
 1084920:	f800283a 	ret
 1084924:	040bc83a 	sub	r5,zero,r16
 1084928:	9009883a 	mov	r4,r18
 108492c:	108782c0 	call	108782c <_sbrk_r>
 1084930:	00ffffc4 	movi	r3,-1
 1084934:	10c00d26 	beq	r2,r3,108496c <_malloc_trim_r+0xe0>
 1084938:	00c04274 	movhi	r3,265
 108493c:	18cb0704 	addi	r3,r3,11292
 1084940:	18800017 	ldw	r2,0(r3)
 1084944:	99000217 	ldw	r4,8(r19)
 1084948:	8c23c83a 	sub	r17,r17,r16
 108494c:	8c400054 	ori	r17,r17,1
 1084950:	1421c83a 	sub	r16,r2,r16
 1084954:	24400115 	stw	r17,4(r4)
 1084958:	9009883a 	mov	r4,r18
 108495c:	1c000015 	stw	r16,0(r3)
 1084960:	108d4000 	call	108d400 <__malloc_unlock>
 1084964:	00800044 	movi	r2,1
 1084968:	003fe706 	br	1084908 <_malloc_trim_r+0x7c>
 108496c:	000b883a 	mov	r5,zero
 1084970:	9009883a 	mov	r4,r18
 1084974:	108782c0 	call	108782c <_sbrk_r>
 1084978:	99000217 	ldw	r4,8(r19)
 108497c:	014003c4 	movi	r5,15
 1084980:	1107c83a 	sub	r3,r2,r4
 1084984:	28ffdd0e 	bge	r5,r3,10848fc <_malloc_trim_r+0x70>
 1084988:	01404274 	movhi	r5,265
 108498c:	29442504 	addi	r5,r5,4244
 1084990:	29400017 	ldw	r5,0(r5)
 1084994:	18c00054 	ori	r3,r3,1
 1084998:	20c00115 	stw	r3,4(r4)
 108499c:	00c04274 	movhi	r3,265
 10849a0:	1145c83a 	sub	r2,r2,r5
 10849a4:	18cb0704 	addi	r3,r3,11292
 10849a8:	18800015 	stw	r2,0(r3)
 10849ac:	003fd306 	br	10848fc <_malloc_trim_r+0x70>

010849b0 <_free_r>:
 10849b0:	28004126 	beq	r5,zero,1084ab8 <_free_r+0x108>
 10849b4:	defffd04 	addi	sp,sp,-12
 10849b8:	dc400115 	stw	r17,4(sp)
 10849bc:	dc000015 	stw	r16,0(sp)
 10849c0:	2023883a 	mov	r17,r4
 10849c4:	2821883a 	mov	r16,r5
 10849c8:	dfc00215 	stw	ra,8(sp)
 10849cc:	108d3dc0 	call	108d3dc <__malloc_lock>
 10849d0:	81ffff17 	ldw	r7,-4(r16)
 10849d4:	00bfff84 	movi	r2,-2
 10849d8:	01004274 	movhi	r4,265
 10849dc:	81bffe04 	addi	r6,r16,-8
 10849e0:	3884703a 	and	r2,r7,r2
 10849e4:	213e9204 	addi	r4,r4,-1464
 10849e8:	308b883a 	add	r5,r6,r2
 10849ec:	2a400117 	ldw	r9,4(r5)
 10849f0:	22000217 	ldw	r8,8(r4)
 10849f4:	00ffff04 	movi	r3,-4
 10849f8:	48c6703a 	and	r3,r9,r3
 10849fc:	2a005726 	beq	r5,r8,1084b5c <_free_r+0x1ac>
 1084a00:	28c00115 	stw	r3,4(r5)
 1084a04:	39c0004c 	andi	r7,r7,1
 1084a08:	3800091e 	bne	r7,zero,1084a30 <_free_r+0x80>
 1084a0c:	823ffe17 	ldw	r8,-8(r16)
 1084a10:	22400204 	addi	r9,r4,8
 1084a14:	320dc83a 	sub	r6,r6,r8
 1084a18:	31c00217 	ldw	r7,8(r6)
 1084a1c:	1205883a 	add	r2,r2,r8
 1084a20:	3a406526 	beq	r7,r9,1084bb8 <_free_r+0x208>
 1084a24:	32000317 	ldw	r8,12(r6)
 1084a28:	3a000315 	stw	r8,12(r7)
 1084a2c:	41c00215 	stw	r7,8(r8)
 1084a30:	28cf883a 	add	r7,r5,r3
 1084a34:	39c00117 	ldw	r7,4(r7)
 1084a38:	39c0004c 	andi	r7,r7,1
 1084a3c:	38003a26 	beq	r7,zero,1084b28 <_free_r+0x178>
 1084a40:	10c00054 	ori	r3,r2,1
 1084a44:	30c00115 	stw	r3,4(r6)
 1084a48:	3087883a 	add	r3,r6,r2
 1084a4c:	18800015 	stw	r2,0(r3)
 1084a50:	00c07fc4 	movi	r3,511
 1084a54:	18801936 	bltu	r3,r2,1084abc <_free_r+0x10c>
 1084a58:	1004d0fa 	srli	r2,r2,3
 1084a5c:	01c00044 	movi	r7,1
 1084a60:	21400117 	ldw	r5,4(r4)
 1084a64:	10c00044 	addi	r3,r2,1
 1084a68:	18c7883a 	add	r3,r3,r3
 1084a6c:	1005d0ba 	srai	r2,r2,2
 1084a70:	18c7883a 	add	r3,r3,r3
 1084a74:	18c7883a 	add	r3,r3,r3
 1084a78:	1907883a 	add	r3,r3,r4
 1084a7c:	3884983a 	sll	r2,r7,r2
 1084a80:	19c00017 	ldw	r7,0(r3)
 1084a84:	1a3ffe04 	addi	r8,r3,-8
 1084a88:	1144b03a 	or	r2,r2,r5
 1084a8c:	32000315 	stw	r8,12(r6)
 1084a90:	31c00215 	stw	r7,8(r6)
 1084a94:	20800115 	stw	r2,4(r4)
 1084a98:	19800015 	stw	r6,0(r3)
 1084a9c:	39800315 	stw	r6,12(r7)
 1084aa0:	8809883a 	mov	r4,r17
 1084aa4:	dfc00217 	ldw	ra,8(sp)
 1084aa8:	dc400117 	ldw	r17,4(sp)
 1084aac:	dc000017 	ldw	r16,0(sp)
 1084ab0:	dec00304 	addi	sp,sp,12
 1084ab4:	108d4001 	jmpi	108d400 <__malloc_unlock>
 1084ab8:	f800283a 	ret
 1084abc:	100ad27a 	srli	r5,r2,9
 1084ac0:	00c00104 	movi	r3,4
 1084ac4:	19404a36 	bltu	r3,r5,1084bf0 <_free_r+0x240>
 1084ac8:	100ad1ba 	srli	r5,r2,6
 1084acc:	28c00e44 	addi	r3,r5,57
 1084ad0:	18c7883a 	add	r3,r3,r3
 1084ad4:	29400e04 	addi	r5,r5,56
 1084ad8:	18c7883a 	add	r3,r3,r3
 1084adc:	18c7883a 	add	r3,r3,r3
 1084ae0:	1909883a 	add	r4,r3,r4
 1084ae4:	20c00017 	ldw	r3,0(r4)
 1084ae8:	01c04274 	movhi	r7,265
 1084aec:	213ffe04 	addi	r4,r4,-8
 1084af0:	39fe9204 	addi	r7,r7,-1464
 1084af4:	20c04426 	beq	r4,r3,1084c08 <_free_r+0x258>
 1084af8:	01ffff04 	movi	r7,-4
 1084afc:	19400117 	ldw	r5,4(r3)
 1084b00:	29ca703a 	and	r5,r5,r7
 1084b04:	1140022e 	bgeu	r2,r5,1084b10 <_free_r+0x160>
 1084b08:	18c00217 	ldw	r3,8(r3)
 1084b0c:	20fffb1e 	bne	r4,r3,1084afc <_free_r+0x14c>
 1084b10:	19000317 	ldw	r4,12(r3)
 1084b14:	31000315 	stw	r4,12(r6)
 1084b18:	30c00215 	stw	r3,8(r6)
 1084b1c:	21800215 	stw	r6,8(r4)
 1084b20:	19800315 	stw	r6,12(r3)
 1084b24:	003fde06 	br	1084aa0 <_free_r+0xf0>
 1084b28:	29c00217 	ldw	r7,8(r5)
 1084b2c:	10c5883a 	add	r2,r2,r3
 1084b30:	00c04274 	movhi	r3,265
 1084b34:	18fe9404 	addi	r3,r3,-1456
 1084b38:	38c03b26 	beq	r7,r3,1084c28 <_free_r+0x278>
 1084b3c:	2a000317 	ldw	r8,12(r5)
 1084b40:	11400054 	ori	r5,r2,1
 1084b44:	3087883a 	add	r3,r6,r2
 1084b48:	3a000315 	stw	r8,12(r7)
 1084b4c:	41c00215 	stw	r7,8(r8)
 1084b50:	31400115 	stw	r5,4(r6)
 1084b54:	18800015 	stw	r2,0(r3)
 1084b58:	003fbd06 	br	1084a50 <_free_r+0xa0>
 1084b5c:	39c0004c 	andi	r7,r7,1
 1084b60:	10c5883a 	add	r2,r2,r3
 1084b64:	3800071e 	bne	r7,zero,1084b84 <_free_r+0x1d4>
 1084b68:	81fffe17 	ldw	r7,-8(r16)
 1084b6c:	31cdc83a 	sub	r6,r6,r7
 1084b70:	30c00317 	ldw	r3,12(r6)
 1084b74:	31400217 	ldw	r5,8(r6)
 1084b78:	11c5883a 	add	r2,r2,r7
 1084b7c:	28c00315 	stw	r3,12(r5)
 1084b80:	19400215 	stw	r5,8(r3)
 1084b84:	10c00054 	ori	r3,r2,1
 1084b88:	30c00115 	stw	r3,4(r6)
 1084b8c:	00c04274 	movhi	r3,265
 1084b90:	18c42604 	addi	r3,r3,4248
 1084b94:	18c00017 	ldw	r3,0(r3)
 1084b98:	21800215 	stw	r6,8(r4)
 1084b9c:	10ffc036 	bltu	r2,r3,1084aa0 <_free_r+0xf0>
 1084ba0:	00804274 	movhi	r2,265
 1084ba4:	108afe04 	addi	r2,r2,11256
 1084ba8:	11400017 	ldw	r5,0(r2)
 1084bac:	8809883a 	mov	r4,r17
 1084bb0:	108488c0 	call	108488c <_malloc_trim_r>
 1084bb4:	003fba06 	br	1084aa0 <_free_r+0xf0>
 1084bb8:	28c9883a 	add	r4,r5,r3
 1084bbc:	21000117 	ldw	r4,4(r4)
 1084bc0:	2100004c 	andi	r4,r4,1
 1084bc4:	2000391e 	bne	r4,zero,1084cac <_free_r+0x2fc>
 1084bc8:	29c00217 	ldw	r7,8(r5)
 1084bcc:	29000317 	ldw	r4,12(r5)
 1084bd0:	1885883a 	add	r2,r3,r2
 1084bd4:	10c00054 	ori	r3,r2,1
 1084bd8:	39000315 	stw	r4,12(r7)
 1084bdc:	21c00215 	stw	r7,8(r4)
 1084be0:	30c00115 	stw	r3,4(r6)
 1084be4:	308d883a 	add	r6,r6,r2
 1084be8:	30800015 	stw	r2,0(r6)
 1084bec:	003fac06 	br	1084aa0 <_free_r+0xf0>
 1084bf0:	00c00504 	movi	r3,20
 1084bf4:	19401536 	bltu	r3,r5,1084c4c <_free_r+0x29c>
 1084bf8:	28c01704 	addi	r3,r5,92
 1084bfc:	18c7883a 	add	r3,r3,r3
 1084c00:	294016c4 	addi	r5,r5,91
 1084c04:	003fb406 	br	1084ad8 <_free_r+0x128>
 1084c08:	280bd0ba 	srai	r5,r5,2
 1084c0c:	00c00044 	movi	r3,1
 1084c10:	38800117 	ldw	r2,4(r7)
 1084c14:	194a983a 	sll	r5,r3,r5
 1084c18:	2007883a 	mov	r3,r4
 1084c1c:	2884b03a 	or	r2,r5,r2
 1084c20:	38800115 	stw	r2,4(r7)
 1084c24:	003fbb06 	br	1084b14 <_free_r+0x164>
 1084c28:	21800515 	stw	r6,20(r4)
 1084c2c:	21800415 	stw	r6,16(r4)
 1084c30:	10c00054 	ori	r3,r2,1
 1084c34:	31c00315 	stw	r7,12(r6)
 1084c38:	31c00215 	stw	r7,8(r6)
 1084c3c:	30c00115 	stw	r3,4(r6)
 1084c40:	308d883a 	add	r6,r6,r2
 1084c44:	30800015 	stw	r2,0(r6)
 1084c48:	003f9506 	br	1084aa0 <_free_r+0xf0>
 1084c4c:	00c01504 	movi	r3,84
 1084c50:	19400536 	bltu	r3,r5,1084c68 <_free_r+0x2b8>
 1084c54:	100ad33a 	srli	r5,r2,12
 1084c58:	28c01bc4 	addi	r3,r5,111
 1084c5c:	18c7883a 	add	r3,r3,r3
 1084c60:	29401b84 	addi	r5,r5,110
 1084c64:	003f9c06 	br	1084ad8 <_free_r+0x128>
 1084c68:	00c05504 	movi	r3,340
 1084c6c:	19400536 	bltu	r3,r5,1084c84 <_free_r+0x2d4>
 1084c70:	100ad3fa 	srli	r5,r2,15
 1084c74:	28c01e04 	addi	r3,r5,120
 1084c78:	18c7883a 	add	r3,r3,r3
 1084c7c:	29401dc4 	addi	r5,r5,119
 1084c80:	003f9506 	br	1084ad8 <_free_r+0x128>
 1084c84:	00c15504 	movi	r3,1364
 1084c88:	19400536 	bltu	r3,r5,1084ca0 <_free_r+0x2f0>
 1084c8c:	100ad4ba 	srli	r5,r2,18
 1084c90:	28c01f44 	addi	r3,r5,125
 1084c94:	18c7883a 	add	r3,r3,r3
 1084c98:	29401f04 	addi	r5,r5,124
 1084c9c:	003f8e06 	br	1084ad8 <_free_r+0x128>
 1084ca0:	00c03f84 	movi	r3,254
 1084ca4:	01401f84 	movi	r5,126
 1084ca8:	003f8b06 	br	1084ad8 <_free_r+0x128>
 1084cac:	10c00054 	ori	r3,r2,1
 1084cb0:	30c00115 	stw	r3,4(r6)
 1084cb4:	308d883a 	add	r6,r6,r2
 1084cb8:	30800015 	stw	r2,0(r6)
 1084cbc:	003f7806 	br	1084aa0 <_free_r+0xf0>

01084cc0 <__sfvwrite_r>:
 1084cc0:	30800217 	ldw	r2,8(r6)
 1084cc4:	10006726 	beq	r2,zero,1084e64 <__sfvwrite_r+0x1a4>
 1084cc8:	28c0030b 	ldhu	r3,12(r5)
 1084ccc:	defff404 	addi	sp,sp,-48
 1084cd0:	dd400715 	stw	r21,28(sp)
 1084cd4:	dd000615 	stw	r20,24(sp)
 1084cd8:	dc000215 	stw	r16,8(sp)
 1084cdc:	dfc00b15 	stw	ra,44(sp)
 1084ce0:	df000a15 	stw	fp,40(sp)
 1084ce4:	ddc00915 	stw	r23,36(sp)
 1084ce8:	dd800815 	stw	r22,32(sp)
 1084cec:	dcc00515 	stw	r19,20(sp)
 1084cf0:	dc800415 	stw	r18,16(sp)
 1084cf4:	dc400315 	stw	r17,12(sp)
 1084cf8:	1880020c 	andi	r2,r3,8
 1084cfc:	2821883a 	mov	r16,r5
 1084d00:	202b883a 	mov	r21,r4
 1084d04:	3029883a 	mov	r20,r6
 1084d08:	10002726 	beq	r2,zero,1084da8 <__sfvwrite_r+0xe8>
 1084d0c:	28800417 	ldw	r2,16(r5)
 1084d10:	10002526 	beq	r2,zero,1084da8 <__sfvwrite_r+0xe8>
 1084d14:	1880008c 	andi	r2,r3,2
 1084d18:	a4400017 	ldw	r17,0(r20)
 1084d1c:	10002a26 	beq	r2,zero,1084dc8 <__sfvwrite_r+0x108>
 1084d20:	05a00034 	movhi	r22,32768
 1084d24:	0027883a 	mov	r19,zero
 1084d28:	0025883a 	mov	r18,zero
 1084d2c:	b5bf0004 	addi	r22,r22,-1024
 1084d30:	980d883a 	mov	r6,r19
 1084d34:	a809883a 	mov	r4,r21
 1084d38:	90004626 	beq	r18,zero,1084e54 <__sfvwrite_r+0x194>
 1084d3c:	900f883a 	mov	r7,r18
 1084d40:	b480022e 	bgeu	r22,r18,1084d4c <__sfvwrite_r+0x8c>
 1084d44:	01e00034 	movhi	r7,32768
 1084d48:	39ff0004 	addi	r7,r7,-1024
 1084d4c:	80800917 	ldw	r2,36(r16)
 1084d50:	81400717 	ldw	r5,28(r16)
 1084d54:	103ee83a 	callr	r2
 1084d58:	0080570e 	bge	zero,r2,1084eb8 <__sfvwrite_r+0x1f8>
 1084d5c:	a0c00217 	ldw	r3,8(r20)
 1084d60:	98a7883a 	add	r19,r19,r2
 1084d64:	90a5c83a 	sub	r18,r18,r2
 1084d68:	1885c83a 	sub	r2,r3,r2
 1084d6c:	a0800215 	stw	r2,8(r20)
 1084d70:	103fef1e 	bne	r2,zero,1084d30 <__sfvwrite_r+0x70>
 1084d74:	0005883a 	mov	r2,zero
 1084d78:	dfc00b17 	ldw	ra,44(sp)
 1084d7c:	df000a17 	ldw	fp,40(sp)
 1084d80:	ddc00917 	ldw	r23,36(sp)
 1084d84:	dd800817 	ldw	r22,32(sp)
 1084d88:	dd400717 	ldw	r21,28(sp)
 1084d8c:	dd000617 	ldw	r20,24(sp)
 1084d90:	dcc00517 	ldw	r19,20(sp)
 1084d94:	dc800417 	ldw	r18,16(sp)
 1084d98:	dc400317 	ldw	r17,12(sp)
 1084d9c:	dc000217 	ldw	r16,8(sp)
 1084da0:	dec00c04 	addi	sp,sp,48
 1084da4:	f800283a 	ret
 1084da8:	800b883a 	mov	r5,r16
 1084dac:	a809883a 	mov	r4,r21
 1084db0:	10828680 	call	1082868 <__swsetup_r>
 1084db4:	1000eb1e 	bne	r2,zero,1085164 <__sfvwrite_r+0x4a4>
 1084db8:	80c0030b 	ldhu	r3,12(r16)
 1084dbc:	a4400017 	ldw	r17,0(r20)
 1084dc0:	1880008c 	andi	r2,r3,2
 1084dc4:	103fd61e 	bne	r2,zero,1084d20 <__sfvwrite_r+0x60>
 1084dc8:	1880004c 	andi	r2,r3,1
 1084dcc:	10003f1e 	bne	r2,zero,1084ecc <__sfvwrite_r+0x20c>
 1084dd0:	0039883a 	mov	fp,zero
 1084dd4:	0025883a 	mov	r18,zero
 1084dd8:	90001a26 	beq	r18,zero,1084e44 <__sfvwrite_r+0x184>
 1084ddc:	1880800c 	andi	r2,r3,512
 1084de0:	84c00217 	ldw	r19,8(r16)
 1084de4:	10002126 	beq	r2,zero,1084e6c <__sfvwrite_r+0x1ac>
 1084de8:	982f883a 	mov	r23,r19
 1084dec:	94c09336 	bltu	r18,r19,108503c <__sfvwrite_r+0x37c>
 1084df0:	1881200c 	andi	r2,r3,1152
 1084df4:	10009e1e 	bne	r2,zero,1085070 <__sfvwrite_r+0x3b0>
 1084df8:	81000017 	ldw	r4,0(r16)
 1084dfc:	b80d883a 	mov	r6,r23
 1084e00:	e00b883a 	mov	r5,fp
 1084e04:	1085fd40 	call	1085fd4 <memmove>
 1084e08:	80c00217 	ldw	r3,8(r16)
 1084e0c:	81000017 	ldw	r4,0(r16)
 1084e10:	9005883a 	mov	r2,r18
 1084e14:	1ce7c83a 	sub	r19,r3,r19
 1084e18:	25cf883a 	add	r7,r4,r23
 1084e1c:	84c00215 	stw	r19,8(r16)
 1084e20:	81c00015 	stw	r7,0(r16)
 1084e24:	a0c00217 	ldw	r3,8(r20)
 1084e28:	e0b9883a 	add	fp,fp,r2
 1084e2c:	90a5c83a 	sub	r18,r18,r2
 1084e30:	18a7c83a 	sub	r19,r3,r2
 1084e34:	a4c00215 	stw	r19,8(r20)
 1084e38:	983fce26 	beq	r19,zero,1084d74 <__sfvwrite_r+0xb4>
 1084e3c:	80c0030b 	ldhu	r3,12(r16)
 1084e40:	903fe61e 	bne	r18,zero,1084ddc <__sfvwrite_r+0x11c>
 1084e44:	8f000017 	ldw	fp,0(r17)
 1084e48:	8c800117 	ldw	r18,4(r17)
 1084e4c:	8c400204 	addi	r17,r17,8
 1084e50:	003fe106 	br	1084dd8 <__sfvwrite_r+0x118>
 1084e54:	8cc00017 	ldw	r19,0(r17)
 1084e58:	8c800117 	ldw	r18,4(r17)
 1084e5c:	8c400204 	addi	r17,r17,8
 1084e60:	003fb306 	br	1084d30 <__sfvwrite_r+0x70>
 1084e64:	0005883a 	mov	r2,zero
 1084e68:	f800283a 	ret
 1084e6c:	81000017 	ldw	r4,0(r16)
 1084e70:	80800417 	ldw	r2,16(r16)
 1084e74:	11005736 	bltu	r2,r4,1084fd4 <__sfvwrite_r+0x314>
 1084e78:	85c00517 	ldw	r23,20(r16)
 1084e7c:	95c05536 	bltu	r18,r23,1084fd4 <__sfvwrite_r+0x314>
 1084e80:	00a00034 	movhi	r2,32768
 1084e84:	10bfffc4 	addi	r2,r2,-1
 1084e88:	9009883a 	mov	r4,r18
 1084e8c:	1480012e 	bgeu	r2,r18,1084e94 <__sfvwrite_r+0x1d4>
 1084e90:	1009883a 	mov	r4,r2
 1084e94:	b80b883a 	mov	r5,r23
 1084e98:	108a4c40 	call	108a4c4 <__divsi3>
 1084e9c:	15cf383a 	mul	r7,r2,r23
 1084ea0:	81400717 	ldw	r5,28(r16)
 1084ea4:	80800917 	ldw	r2,36(r16)
 1084ea8:	e00d883a 	mov	r6,fp
 1084eac:	a809883a 	mov	r4,r21
 1084eb0:	103ee83a 	callr	r2
 1084eb4:	00bfdb16 	blt	zero,r2,1084e24 <__sfvwrite_r+0x164>
 1084eb8:	8080030b 	ldhu	r2,12(r16)
 1084ebc:	10801014 	ori	r2,r2,64
 1084ec0:	8080030d 	sth	r2,12(r16)
 1084ec4:	00bfffc4 	movi	r2,-1
 1084ec8:	003fab06 	br	1084d78 <__sfvwrite_r+0xb8>
 1084ecc:	0027883a 	mov	r19,zero
 1084ed0:	0011883a 	mov	r8,zero
 1084ed4:	0039883a 	mov	fp,zero
 1084ed8:	0025883a 	mov	r18,zero
 1084edc:	90001f26 	beq	r18,zero,1084f5c <__sfvwrite_r+0x29c>
 1084ee0:	40005a26 	beq	r8,zero,108504c <__sfvwrite_r+0x38c>
 1084ee4:	982d883a 	mov	r22,r19
 1084ee8:	94c0012e 	bgeu	r18,r19,1084ef0 <__sfvwrite_r+0x230>
 1084eec:	902d883a 	mov	r22,r18
 1084ef0:	81000017 	ldw	r4,0(r16)
 1084ef4:	80800417 	ldw	r2,16(r16)
 1084ef8:	b02f883a 	mov	r23,r22
 1084efc:	81c00517 	ldw	r7,20(r16)
 1084f00:	1100032e 	bgeu	r2,r4,1084f10 <__sfvwrite_r+0x250>
 1084f04:	80c00217 	ldw	r3,8(r16)
 1084f08:	38c7883a 	add	r3,r7,r3
 1084f0c:	1d801816 	blt	r3,r22,1084f70 <__sfvwrite_r+0x2b0>
 1084f10:	b1c03e16 	blt	r22,r7,108500c <__sfvwrite_r+0x34c>
 1084f14:	80800917 	ldw	r2,36(r16)
 1084f18:	81400717 	ldw	r5,28(r16)
 1084f1c:	e00d883a 	mov	r6,fp
 1084f20:	da000115 	stw	r8,4(sp)
 1084f24:	a809883a 	mov	r4,r21
 1084f28:	103ee83a 	callr	r2
 1084f2c:	102f883a 	mov	r23,r2
 1084f30:	da000117 	ldw	r8,4(sp)
 1084f34:	00bfe00e 	bge	zero,r2,1084eb8 <__sfvwrite_r+0x1f8>
 1084f38:	9de7c83a 	sub	r19,r19,r23
 1084f3c:	98001f26 	beq	r19,zero,1084fbc <__sfvwrite_r+0x2fc>
 1084f40:	a0800217 	ldw	r2,8(r20)
 1084f44:	e5f9883a 	add	fp,fp,r23
 1084f48:	95e5c83a 	sub	r18,r18,r23
 1084f4c:	15efc83a 	sub	r23,r2,r23
 1084f50:	a5c00215 	stw	r23,8(r20)
 1084f54:	b83f8726 	beq	r23,zero,1084d74 <__sfvwrite_r+0xb4>
 1084f58:	903fe11e 	bne	r18,zero,1084ee0 <__sfvwrite_r+0x220>
 1084f5c:	8f000017 	ldw	fp,0(r17)
 1084f60:	8c800117 	ldw	r18,4(r17)
 1084f64:	0011883a 	mov	r8,zero
 1084f68:	8c400204 	addi	r17,r17,8
 1084f6c:	003fdb06 	br	1084edc <__sfvwrite_r+0x21c>
 1084f70:	180d883a 	mov	r6,r3
 1084f74:	e00b883a 	mov	r5,fp
 1084f78:	da000115 	stw	r8,4(sp)
 1084f7c:	d8c00015 	stw	r3,0(sp)
 1084f80:	1085fd40 	call	1085fd4 <memmove>
 1084f84:	d8c00017 	ldw	r3,0(sp)
 1084f88:	80800017 	ldw	r2,0(r16)
 1084f8c:	800b883a 	mov	r5,r16
 1084f90:	a809883a 	mov	r4,r21
 1084f94:	10c5883a 	add	r2,r2,r3
 1084f98:	80800015 	stw	r2,0(r16)
 1084f9c:	d8c00015 	stw	r3,0(sp)
 1084fa0:	10844600 	call	1084460 <_fflush_r>
 1084fa4:	d8c00017 	ldw	r3,0(sp)
 1084fa8:	da000117 	ldw	r8,4(sp)
 1084fac:	103fc21e 	bne	r2,zero,1084eb8 <__sfvwrite_r+0x1f8>
 1084fb0:	182f883a 	mov	r23,r3
 1084fb4:	9de7c83a 	sub	r19,r19,r23
 1084fb8:	983fe11e 	bne	r19,zero,1084f40 <__sfvwrite_r+0x280>
 1084fbc:	800b883a 	mov	r5,r16
 1084fc0:	a809883a 	mov	r4,r21
 1084fc4:	10844600 	call	1084460 <_fflush_r>
 1084fc8:	103fbb1e 	bne	r2,zero,1084eb8 <__sfvwrite_r+0x1f8>
 1084fcc:	0011883a 	mov	r8,zero
 1084fd0:	003fdb06 	br	1084f40 <__sfvwrite_r+0x280>
 1084fd4:	94c0012e 	bgeu	r18,r19,1084fdc <__sfvwrite_r+0x31c>
 1084fd8:	9027883a 	mov	r19,r18
 1084fdc:	980d883a 	mov	r6,r19
 1084fe0:	e00b883a 	mov	r5,fp
 1084fe4:	1085fd40 	call	1085fd4 <memmove>
 1084fe8:	80800217 	ldw	r2,8(r16)
 1084fec:	80c00017 	ldw	r3,0(r16)
 1084ff0:	14c5c83a 	sub	r2,r2,r19
 1084ff4:	1cc7883a 	add	r3,r3,r19
 1084ff8:	80800215 	stw	r2,8(r16)
 1084ffc:	80c00015 	stw	r3,0(r16)
 1085000:	10004326 	beq	r2,zero,1085110 <__sfvwrite_r+0x450>
 1085004:	9805883a 	mov	r2,r19
 1085008:	003f8606 	br	1084e24 <__sfvwrite_r+0x164>
 108500c:	b00d883a 	mov	r6,r22
 1085010:	e00b883a 	mov	r5,fp
 1085014:	da000115 	stw	r8,4(sp)
 1085018:	1085fd40 	call	1085fd4 <memmove>
 108501c:	80800217 	ldw	r2,8(r16)
 1085020:	80c00017 	ldw	r3,0(r16)
 1085024:	da000117 	ldw	r8,4(sp)
 1085028:	1585c83a 	sub	r2,r2,r22
 108502c:	1dad883a 	add	r22,r3,r22
 1085030:	80800215 	stw	r2,8(r16)
 1085034:	85800015 	stw	r22,0(r16)
 1085038:	003fbf06 	br	1084f38 <__sfvwrite_r+0x278>
 108503c:	81000017 	ldw	r4,0(r16)
 1085040:	9027883a 	mov	r19,r18
 1085044:	902f883a 	mov	r23,r18
 1085048:	003f6c06 	br	1084dfc <__sfvwrite_r+0x13c>
 108504c:	900d883a 	mov	r6,r18
 1085050:	01400284 	movi	r5,10
 1085054:	e009883a 	mov	r4,fp
 1085058:	1085da80 	call	1085da8 <memchr>
 108505c:	10003e26 	beq	r2,zero,1085158 <__sfvwrite_r+0x498>
 1085060:	10800044 	addi	r2,r2,1
 1085064:	1727c83a 	sub	r19,r2,fp
 1085068:	02000044 	movi	r8,1
 108506c:	003f9d06 	br	1084ee4 <__sfvwrite_r+0x224>
 1085070:	80800517 	ldw	r2,20(r16)
 1085074:	81400417 	ldw	r5,16(r16)
 1085078:	81c00017 	ldw	r7,0(r16)
 108507c:	10a7883a 	add	r19,r2,r2
 1085080:	9885883a 	add	r2,r19,r2
 1085084:	1026d7fa 	srli	r19,r2,31
 1085088:	396dc83a 	sub	r22,r7,r5
 108508c:	b1000044 	addi	r4,r22,1
 1085090:	9885883a 	add	r2,r19,r2
 1085094:	1027d07a 	srai	r19,r2,1
 1085098:	2485883a 	add	r2,r4,r18
 108509c:	980d883a 	mov	r6,r19
 10850a0:	9880022e 	bgeu	r19,r2,10850ac <__sfvwrite_r+0x3ec>
 10850a4:	1027883a 	mov	r19,r2
 10850a8:	100d883a 	mov	r6,r2
 10850ac:	18c1000c 	andi	r3,r3,1024
 10850b0:	18001c26 	beq	r3,zero,1085124 <__sfvwrite_r+0x464>
 10850b4:	300b883a 	mov	r5,r6
 10850b8:	a809883a 	mov	r4,r21
 10850bc:	108559c0 	call	108559c <_malloc_r>
 10850c0:	102f883a 	mov	r23,r2
 10850c4:	10002926 	beq	r2,zero,108516c <__sfvwrite_r+0x4ac>
 10850c8:	81400417 	ldw	r5,16(r16)
 10850cc:	b00d883a 	mov	r6,r22
 10850d0:	1009883a 	mov	r4,r2
 10850d4:	1085e8c0 	call	1085e8c <memcpy>
 10850d8:	8080030b 	ldhu	r2,12(r16)
 10850dc:	00fedfc4 	movi	r3,-1153
 10850e0:	10c4703a 	and	r2,r2,r3
 10850e4:	10802014 	ori	r2,r2,128
 10850e8:	8080030d 	sth	r2,12(r16)
 10850ec:	bd89883a 	add	r4,r23,r22
 10850f0:	9d8fc83a 	sub	r7,r19,r22
 10850f4:	85c00415 	stw	r23,16(r16)
 10850f8:	84c00515 	stw	r19,20(r16)
 10850fc:	81000015 	stw	r4,0(r16)
 1085100:	9027883a 	mov	r19,r18
 1085104:	81c00215 	stw	r7,8(r16)
 1085108:	902f883a 	mov	r23,r18
 108510c:	003f3b06 	br	1084dfc <__sfvwrite_r+0x13c>
 1085110:	800b883a 	mov	r5,r16
 1085114:	a809883a 	mov	r4,r21
 1085118:	10844600 	call	1084460 <_fflush_r>
 108511c:	103fb926 	beq	r2,zero,1085004 <__sfvwrite_r+0x344>
 1085120:	003f6506 	br	1084eb8 <__sfvwrite_r+0x1f8>
 1085124:	a809883a 	mov	r4,r21
 1085128:	10872540 	call	1087254 <_realloc_r>
 108512c:	102f883a 	mov	r23,r2
 1085130:	103fee1e 	bne	r2,zero,10850ec <__sfvwrite_r+0x42c>
 1085134:	81400417 	ldw	r5,16(r16)
 1085138:	a809883a 	mov	r4,r21
 108513c:	10849b00 	call	10849b0 <_free_r>
 1085140:	8080030b 	ldhu	r2,12(r16)
 1085144:	00ffdfc4 	movi	r3,-129
 1085148:	1884703a 	and	r2,r3,r2
 108514c:	00c00304 	movi	r3,12
 1085150:	a8c00015 	stw	r3,0(r21)
 1085154:	003f5906 	br	1084ebc <__sfvwrite_r+0x1fc>
 1085158:	94c00044 	addi	r19,r18,1
 108515c:	02000044 	movi	r8,1
 1085160:	003f6006 	br	1084ee4 <__sfvwrite_r+0x224>
 1085164:	00bfffc4 	movi	r2,-1
 1085168:	003f0306 	br	1084d78 <__sfvwrite_r+0xb8>
 108516c:	00800304 	movi	r2,12
 1085170:	a8800015 	stw	r2,0(r21)
 1085174:	8080030b 	ldhu	r2,12(r16)
 1085178:	003f5006 	br	1084ebc <__sfvwrite_r+0x1fc>

0108517c <_fwalk>:
 108517c:	defff704 	addi	sp,sp,-36
 1085180:	dd000415 	stw	r20,16(sp)
 1085184:	dfc00815 	stw	ra,32(sp)
 1085188:	ddc00715 	stw	r23,28(sp)
 108518c:	dd800615 	stw	r22,24(sp)
 1085190:	dd400515 	stw	r21,20(sp)
 1085194:	dcc00315 	stw	r19,12(sp)
 1085198:	dc800215 	stw	r18,8(sp)
 108519c:	dc400115 	stw	r17,4(sp)
 10851a0:	dc000015 	stw	r16,0(sp)
 10851a4:	2500b804 	addi	r20,r4,736
 10851a8:	a0002326 	beq	r20,zero,1085238 <_fwalk+0xbc>
 10851ac:	282b883a 	mov	r21,r5
 10851b0:	002f883a 	mov	r23,zero
 10851b4:	05800044 	movi	r22,1
 10851b8:	04ffffc4 	movi	r19,-1
 10851bc:	a4400117 	ldw	r17,4(r20)
 10851c0:	a4800217 	ldw	r18,8(r20)
 10851c4:	8c7fffc4 	addi	r17,r17,-1
 10851c8:	88000d16 	blt	r17,zero,1085200 <_fwalk+0x84>
 10851cc:	94000304 	addi	r16,r18,12
 10851d0:	94800384 	addi	r18,r18,14
 10851d4:	8080000b 	ldhu	r2,0(r16)
 10851d8:	8c7fffc4 	addi	r17,r17,-1
 10851dc:	813ffd04 	addi	r4,r16,-12
 10851e0:	b080042e 	bgeu	r22,r2,10851f4 <_fwalk+0x78>
 10851e4:	9080000f 	ldh	r2,0(r18)
 10851e8:	14c00226 	beq	r2,r19,10851f4 <_fwalk+0x78>
 10851ec:	a83ee83a 	callr	r21
 10851f0:	b8aeb03a 	or	r23,r23,r2
 10851f4:	84001a04 	addi	r16,r16,104
 10851f8:	94801a04 	addi	r18,r18,104
 10851fc:	8cfff51e 	bne	r17,r19,10851d4 <_fwalk+0x58>
 1085200:	a5000017 	ldw	r20,0(r20)
 1085204:	a03fed1e 	bne	r20,zero,10851bc <_fwalk+0x40>
 1085208:	b805883a 	mov	r2,r23
 108520c:	dfc00817 	ldw	ra,32(sp)
 1085210:	ddc00717 	ldw	r23,28(sp)
 1085214:	dd800617 	ldw	r22,24(sp)
 1085218:	dd400517 	ldw	r21,20(sp)
 108521c:	dd000417 	ldw	r20,16(sp)
 1085220:	dcc00317 	ldw	r19,12(sp)
 1085224:	dc800217 	ldw	r18,8(sp)
 1085228:	dc400117 	ldw	r17,4(sp)
 108522c:	dc000017 	ldw	r16,0(sp)
 1085230:	dec00904 	addi	sp,sp,36
 1085234:	f800283a 	ret
 1085238:	002f883a 	mov	r23,zero
 108523c:	003ff206 	br	1085208 <_fwalk+0x8c>

01085240 <_fwalk_reent>:
 1085240:	defff704 	addi	sp,sp,-36
 1085244:	dd000415 	stw	r20,16(sp)
 1085248:	dfc00815 	stw	ra,32(sp)
 108524c:	ddc00715 	stw	r23,28(sp)
 1085250:	dd800615 	stw	r22,24(sp)
 1085254:	dd400515 	stw	r21,20(sp)
 1085258:	dcc00315 	stw	r19,12(sp)
 108525c:	dc800215 	stw	r18,8(sp)
 1085260:	dc400115 	stw	r17,4(sp)
 1085264:	dc000015 	stw	r16,0(sp)
 1085268:	2500b804 	addi	r20,r4,736
 108526c:	a0002326 	beq	r20,zero,10852fc <_fwalk_reent+0xbc>
 1085270:	282b883a 	mov	r21,r5
 1085274:	2027883a 	mov	r19,r4
 1085278:	002f883a 	mov	r23,zero
 108527c:	05800044 	movi	r22,1
 1085280:	04bfffc4 	movi	r18,-1
 1085284:	a4400117 	ldw	r17,4(r20)
 1085288:	a4000217 	ldw	r16,8(r20)
 108528c:	8c7fffc4 	addi	r17,r17,-1
 1085290:	88000c16 	blt	r17,zero,10852c4 <_fwalk_reent+0x84>
 1085294:	84000304 	addi	r16,r16,12
 1085298:	8080000b 	ldhu	r2,0(r16)
 108529c:	8c7fffc4 	addi	r17,r17,-1
 10852a0:	817ffd04 	addi	r5,r16,-12
 10852a4:	b080052e 	bgeu	r22,r2,10852bc <_fwalk_reent+0x7c>
 10852a8:	8080008f 	ldh	r2,2(r16)
 10852ac:	9809883a 	mov	r4,r19
 10852b0:	14800226 	beq	r2,r18,10852bc <_fwalk_reent+0x7c>
 10852b4:	a83ee83a 	callr	r21
 10852b8:	b8aeb03a 	or	r23,r23,r2
 10852bc:	84001a04 	addi	r16,r16,104
 10852c0:	8cbff51e 	bne	r17,r18,1085298 <_fwalk_reent+0x58>
 10852c4:	a5000017 	ldw	r20,0(r20)
 10852c8:	a03fee1e 	bne	r20,zero,1085284 <_fwalk_reent+0x44>
 10852cc:	b805883a 	mov	r2,r23
 10852d0:	dfc00817 	ldw	ra,32(sp)
 10852d4:	ddc00717 	ldw	r23,28(sp)
 10852d8:	dd800617 	ldw	r22,24(sp)
 10852dc:	dd400517 	ldw	r21,20(sp)
 10852e0:	dd000417 	ldw	r20,16(sp)
 10852e4:	dcc00317 	ldw	r19,12(sp)
 10852e8:	dc800217 	ldw	r18,8(sp)
 10852ec:	dc400117 	ldw	r17,4(sp)
 10852f0:	dc000017 	ldw	r16,0(sp)
 10852f4:	dec00904 	addi	sp,sp,36
 10852f8:	f800283a 	ret
 10852fc:	002f883a 	mov	r23,zero
 1085300:	003ff206 	br	10852cc <_fwalk_reent+0x8c>

01085304 <_setlocale_r>:
 1085304:	30001b26 	beq	r6,zero,1085374 <_setlocale_r+0x70>
 1085308:	01404274 	movhi	r5,265
 108530c:	defffe04 	addi	sp,sp,-8
 1085310:	297cc604 	addi	r5,r5,-3304
 1085314:	3009883a 	mov	r4,r6
 1085318:	dc000015 	stw	r16,0(sp)
 108531c:	dfc00115 	stw	ra,4(sp)
 1085320:	3021883a 	mov	r16,r6
 1085324:	10879bc0 	call	10879bc <strcmp>
 1085328:	1000061e 	bne	r2,zero,1085344 <_setlocale_r+0x40>
 108532c:	00804274 	movhi	r2,265
 1085330:	10bcc504 	addi	r2,r2,-3308
 1085334:	dfc00117 	ldw	ra,4(sp)
 1085338:	dc000017 	ldw	r16,0(sp)
 108533c:	dec00204 	addi	sp,sp,8
 1085340:	f800283a 	ret
 1085344:	01404274 	movhi	r5,265
 1085348:	297cc504 	addi	r5,r5,-3308
 108534c:	8009883a 	mov	r4,r16
 1085350:	10879bc0 	call	10879bc <strcmp>
 1085354:	103ff526 	beq	r2,zero,108532c <_setlocale_r+0x28>
 1085358:	01404274 	movhi	r5,265
 108535c:	297cb004 	addi	r5,r5,-3392
 1085360:	8009883a 	mov	r4,r16
 1085364:	10879bc0 	call	10879bc <strcmp>
 1085368:	103ff026 	beq	r2,zero,108532c <_setlocale_r+0x28>
 108536c:	0005883a 	mov	r2,zero
 1085370:	003ff006 	br	1085334 <_setlocale_r+0x30>
 1085374:	00804274 	movhi	r2,265
 1085378:	10bcc504 	addi	r2,r2,-3308
 108537c:	f800283a 	ret

01085380 <__locale_charset>:
 1085380:	00804274 	movhi	r2,265
 1085384:	10be7c04 	addi	r2,r2,-1552
 1085388:	f800283a 	ret

0108538c <__locale_mb_cur_max>:
 108538c:	00804274 	movhi	r2,265
 1085390:	10842404 	addi	r2,r2,4240
 1085394:	10800017 	ldw	r2,0(r2)
 1085398:	f800283a 	ret

0108539c <__locale_msgcharset>:
 108539c:	00804274 	movhi	r2,265
 10853a0:	10be7404 	addi	r2,r2,-1584
 10853a4:	f800283a 	ret

010853a8 <__locale_cjk_lang>:
 10853a8:	0005883a 	mov	r2,zero
 10853ac:	f800283a 	ret

010853b0 <_localeconv_r>:
 10853b0:	00804274 	movhi	r2,265
 10853b4:	10be8404 	addi	r2,r2,-1520
 10853b8:	f800283a 	ret

010853bc <setlocale>:
 10853bc:	00804274 	movhi	r2,265
 10853c0:	10842304 	addi	r2,r2,4236
 10853c4:	280d883a 	mov	r6,r5
 10853c8:	200b883a 	mov	r5,r4
 10853cc:	11000017 	ldw	r4,0(r2)
 10853d0:	10853041 	jmpi	1085304 <_setlocale_r>

010853d4 <localeconv>:
 10853d4:	00804274 	movhi	r2,265
 10853d8:	10be8404 	addi	r2,r2,-1520
 10853dc:	f800283a 	ret

010853e0 <__smakebuf_r>:
 10853e0:	2880030b 	ldhu	r2,12(r5)
 10853e4:	10c0008c 	andi	r3,r2,2
 10853e8:	1800411e 	bne	r3,zero,10854f0 <__smakebuf_r+0x110>
 10853ec:	deffec04 	addi	sp,sp,-80
 10853f0:	dc000f15 	stw	r16,60(sp)
 10853f4:	2821883a 	mov	r16,r5
 10853f8:	2940038f 	ldh	r5,14(r5)
 10853fc:	dc401015 	stw	r17,64(sp)
 1085400:	dfc01315 	stw	ra,76(sp)
 1085404:	dcc01215 	stw	r19,72(sp)
 1085408:	dc801115 	stw	r18,68(sp)
 108540c:	2023883a 	mov	r17,r4
 1085410:	28001c16 	blt	r5,zero,1085484 <__smakebuf_r+0xa4>
 1085414:	d80d883a 	mov	r6,sp
 1085418:	10895640 	call	1089564 <_fstat_r>
 108541c:	10001816 	blt	r2,zero,1085480 <__smakebuf_r+0xa0>
 1085420:	d8800117 	ldw	r2,4(sp)
 1085424:	00e00014 	movui	r3,32768
 1085428:	10bc000c 	andi	r2,r2,61440
 108542c:	14c80020 	cmpeqi	r19,r2,8192
 1085430:	10c03726 	beq	r2,r3,1085510 <__smakebuf_r+0x130>
 1085434:	80c0030b 	ldhu	r3,12(r16)
 1085438:	18c20014 	ori	r3,r3,2048
 108543c:	80c0030d 	sth	r3,12(r16)
 1085440:	00c80004 	movi	r3,8192
 1085444:	10c0521e 	bne	r2,r3,1085590 <__smakebuf_r+0x1b0>
 1085448:	8140038f 	ldh	r5,14(r16)
 108544c:	8809883a 	mov	r4,r17
 1085450:	10895c00 	call	10895c0 <_isatty_r>
 1085454:	10004c26 	beq	r2,zero,1085588 <__smakebuf_r+0x1a8>
 1085458:	8080030b 	ldhu	r2,12(r16)
 108545c:	80c010c4 	addi	r3,r16,67
 1085460:	80c00015 	stw	r3,0(r16)
 1085464:	10800054 	ori	r2,r2,1
 1085468:	8080030d 	sth	r2,12(r16)
 108546c:	00800044 	movi	r2,1
 1085470:	80c00415 	stw	r3,16(r16)
 1085474:	80800515 	stw	r2,20(r16)
 1085478:	04810004 	movi	r18,1024
 108547c:	00000706 	br	108549c <__smakebuf_r+0xbc>
 1085480:	8080030b 	ldhu	r2,12(r16)
 1085484:	10c0200c 	andi	r3,r2,128
 1085488:	18001f1e 	bne	r3,zero,1085508 <__smakebuf_r+0x128>
 108548c:	04810004 	movi	r18,1024
 1085490:	10820014 	ori	r2,r2,2048
 1085494:	8080030d 	sth	r2,12(r16)
 1085498:	0027883a 	mov	r19,zero
 108549c:	900b883a 	mov	r5,r18
 10854a0:	8809883a 	mov	r4,r17
 10854a4:	108559c0 	call	108559c <_malloc_r>
 10854a8:	10002c26 	beq	r2,zero,108555c <__smakebuf_r+0x17c>
 10854ac:	80c0030b 	ldhu	r3,12(r16)
 10854b0:	01004234 	movhi	r4,264
 10854b4:	21113d04 	addi	r4,r4,17652
 10854b8:	89000f15 	stw	r4,60(r17)
 10854bc:	18c02014 	ori	r3,r3,128
 10854c0:	80c0030d 	sth	r3,12(r16)
 10854c4:	80800015 	stw	r2,0(r16)
 10854c8:	80800415 	stw	r2,16(r16)
 10854cc:	84800515 	stw	r18,20(r16)
 10854d0:	98001a1e 	bne	r19,zero,108553c <__smakebuf_r+0x15c>
 10854d4:	dfc01317 	ldw	ra,76(sp)
 10854d8:	dcc01217 	ldw	r19,72(sp)
 10854dc:	dc801117 	ldw	r18,68(sp)
 10854e0:	dc401017 	ldw	r17,64(sp)
 10854e4:	dc000f17 	ldw	r16,60(sp)
 10854e8:	dec01404 	addi	sp,sp,80
 10854ec:	f800283a 	ret
 10854f0:	288010c4 	addi	r2,r5,67
 10854f4:	28800015 	stw	r2,0(r5)
 10854f8:	28800415 	stw	r2,16(r5)
 10854fc:	00800044 	movi	r2,1
 1085500:	28800515 	stw	r2,20(r5)
 1085504:	f800283a 	ret
 1085508:	04801004 	movi	r18,64
 108550c:	003fe006 	br	1085490 <__smakebuf_r+0xb0>
 1085510:	81000a17 	ldw	r4,40(r16)
 1085514:	00c04234 	movhi	r3,264
 1085518:	18de5604 	addi	r3,r3,31064
 108551c:	20ffc51e 	bne	r4,r3,1085434 <__smakebuf_r+0x54>
 1085520:	8080030b 	ldhu	r2,12(r16)
 1085524:	04810004 	movi	r18,1024
 1085528:	84801315 	stw	r18,76(r16)
 108552c:	1484b03a 	or	r2,r2,r18
 1085530:	8080030d 	sth	r2,12(r16)
 1085534:	0027883a 	mov	r19,zero
 1085538:	003fd806 	br	108549c <__smakebuf_r+0xbc>
 108553c:	8140038f 	ldh	r5,14(r16)
 1085540:	8809883a 	mov	r4,r17
 1085544:	10895c00 	call	10895c0 <_isatty_r>
 1085548:	103fe226 	beq	r2,zero,10854d4 <__smakebuf_r+0xf4>
 108554c:	8080030b 	ldhu	r2,12(r16)
 1085550:	10800054 	ori	r2,r2,1
 1085554:	8080030d 	sth	r2,12(r16)
 1085558:	003fde06 	br	10854d4 <__smakebuf_r+0xf4>
 108555c:	8080030b 	ldhu	r2,12(r16)
 1085560:	10c0800c 	andi	r3,r2,512
 1085564:	183fdb1e 	bne	r3,zero,10854d4 <__smakebuf_r+0xf4>
 1085568:	10800094 	ori	r2,r2,2
 108556c:	80c010c4 	addi	r3,r16,67
 1085570:	8080030d 	sth	r2,12(r16)
 1085574:	00800044 	movi	r2,1
 1085578:	80c00015 	stw	r3,0(r16)
 108557c:	80c00415 	stw	r3,16(r16)
 1085580:	80800515 	stw	r2,20(r16)
 1085584:	003fd306 	br	10854d4 <__smakebuf_r+0xf4>
 1085588:	04810004 	movi	r18,1024
 108558c:	003fc306 	br	108549c <__smakebuf_r+0xbc>
 1085590:	0027883a 	mov	r19,zero
 1085594:	04810004 	movi	r18,1024
 1085598:	003fc006 	br	108549c <__smakebuf_r+0xbc>

0108559c <_malloc_r>:
 108559c:	defff504 	addi	sp,sp,-44
 10855a0:	dc800315 	stw	r18,12(sp)
 10855a4:	dfc00a15 	stw	ra,40(sp)
 10855a8:	df000915 	stw	fp,36(sp)
 10855ac:	ddc00815 	stw	r23,32(sp)
 10855b0:	dd800715 	stw	r22,28(sp)
 10855b4:	dd400615 	stw	r21,24(sp)
 10855b8:	dd000515 	stw	r20,20(sp)
 10855bc:	dcc00415 	stw	r19,16(sp)
 10855c0:	dc400215 	stw	r17,8(sp)
 10855c4:	dc000115 	stw	r16,4(sp)
 10855c8:	288002c4 	addi	r2,r5,11
 10855cc:	00c00584 	movi	r3,22
 10855d0:	2025883a 	mov	r18,r4
 10855d4:	18807f2e 	bgeu	r3,r2,10857d4 <_malloc_r+0x238>
 10855d8:	047ffe04 	movi	r17,-8
 10855dc:	1462703a 	and	r17,r2,r17
 10855e0:	8800a316 	blt	r17,zero,1085870 <_malloc_r+0x2d4>
 10855e4:	8940a236 	bltu	r17,r5,1085870 <_malloc_r+0x2d4>
 10855e8:	108d3dc0 	call	108d3dc <__malloc_lock>
 10855ec:	00807dc4 	movi	r2,503
 10855f0:	1441e92e 	bgeu	r2,r17,1085d98 <_malloc_r+0x7fc>
 10855f4:	8804d27a 	srli	r2,r17,9
 10855f8:	1000a126 	beq	r2,zero,1085880 <_malloc_r+0x2e4>
 10855fc:	00c00104 	movi	r3,4
 1085600:	18811e36 	bltu	r3,r2,1085a7c <_malloc_r+0x4e0>
 1085604:	8804d1ba 	srli	r2,r17,6
 1085608:	12000e44 	addi	r8,r2,57
 108560c:	11c00e04 	addi	r7,r2,56
 1085610:	4209883a 	add	r4,r8,r8
 1085614:	04c04274 	movhi	r19,265
 1085618:	2109883a 	add	r4,r4,r4
 108561c:	9cfe9204 	addi	r19,r19,-1464
 1085620:	2109883a 	add	r4,r4,r4
 1085624:	9909883a 	add	r4,r19,r4
 1085628:	24000117 	ldw	r16,4(r4)
 108562c:	213ffe04 	addi	r4,r4,-8
 1085630:	24009726 	beq	r4,r16,1085890 <_malloc_r+0x2f4>
 1085634:	80800117 	ldw	r2,4(r16)
 1085638:	01bfff04 	movi	r6,-4
 108563c:	014003c4 	movi	r5,15
 1085640:	1184703a 	and	r2,r2,r6
 1085644:	1447c83a 	sub	r3,r2,r17
 1085648:	28c00716 	blt	r5,r3,1085668 <_malloc_r+0xcc>
 108564c:	1800920e 	bge	r3,zero,1085898 <_malloc_r+0x2fc>
 1085650:	84000317 	ldw	r16,12(r16)
 1085654:	24008e26 	beq	r4,r16,1085890 <_malloc_r+0x2f4>
 1085658:	80800117 	ldw	r2,4(r16)
 108565c:	1184703a 	and	r2,r2,r6
 1085660:	1447c83a 	sub	r3,r2,r17
 1085664:	28fff90e 	bge	r5,r3,108564c <_malloc_r+0xb0>
 1085668:	3809883a 	mov	r4,r7
 108566c:	01804274 	movhi	r6,265
 1085670:	9c000417 	ldw	r16,16(r19)
 1085674:	31be9204 	addi	r6,r6,-1464
 1085678:	32000204 	addi	r8,r6,8
 108567c:	82013426 	beq	r16,r8,1085b50 <_malloc_r+0x5b4>
 1085680:	80c00117 	ldw	r3,4(r16)
 1085684:	00bfff04 	movi	r2,-4
 1085688:	188e703a 	and	r7,r3,r2
 108568c:	3c45c83a 	sub	r2,r7,r17
 1085690:	00c003c4 	movi	r3,15
 1085694:	18811f16 	blt	r3,r2,1085b14 <_malloc_r+0x578>
 1085698:	32000515 	stw	r8,20(r6)
 108569c:	32000415 	stw	r8,16(r6)
 10856a0:	10007f0e 	bge	r2,zero,10858a0 <_malloc_r+0x304>
 10856a4:	00807fc4 	movi	r2,511
 10856a8:	11c0fd36 	bltu	r2,r7,1085aa0 <_malloc_r+0x504>
 10856ac:	3806d0fa 	srli	r3,r7,3
 10856b0:	01c00044 	movi	r7,1
 10856b4:	30800117 	ldw	r2,4(r6)
 10856b8:	19400044 	addi	r5,r3,1
 10856bc:	294b883a 	add	r5,r5,r5
 10856c0:	1807d0ba 	srai	r3,r3,2
 10856c4:	294b883a 	add	r5,r5,r5
 10856c8:	294b883a 	add	r5,r5,r5
 10856cc:	298b883a 	add	r5,r5,r6
 10856d0:	38c6983a 	sll	r3,r7,r3
 10856d4:	29c00017 	ldw	r7,0(r5)
 10856d8:	2a7ffe04 	addi	r9,r5,-8
 10856dc:	1886b03a 	or	r3,r3,r2
 10856e0:	82400315 	stw	r9,12(r16)
 10856e4:	81c00215 	stw	r7,8(r16)
 10856e8:	30c00115 	stw	r3,4(r6)
 10856ec:	2c000015 	stw	r16,0(r5)
 10856f0:	3c000315 	stw	r16,12(r7)
 10856f4:	2005d0ba 	srai	r2,r4,2
 10856f8:	01400044 	movi	r5,1
 10856fc:	288a983a 	sll	r5,r5,r2
 1085700:	19406f36 	bltu	r3,r5,10858c0 <_malloc_r+0x324>
 1085704:	28c4703a 	and	r2,r5,r3
 1085708:	10000a1e 	bne	r2,zero,1085734 <_malloc_r+0x198>
 108570c:	00bfff04 	movi	r2,-4
 1085710:	294b883a 	add	r5,r5,r5
 1085714:	2088703a 	and	r4,r4,r2
 1085718:	28c4703a 	and	r2,r5,r3
 108571c:	21000104 	addi	r4,r4,4
 1085720:	1000041e 	bne	r2,zero,1085734 <_malloc_r+0x198>
 1085724:	294b883a 	add	r5,r5,r5
 1085728:	28c4703a 	and	r2,r5,r3
 108572c:	21000104 	addi	r4,r4,4
 1085730:	103ffc26 	beq	r2,zero,1085724 <_malloc_r+0x188>
 1085734:	02bfff04 	movi	r10,-4
 1085738:	024003c4 	movi	r9,15
 108573c:	21800044 	addi	r6,r4,1
 1085740:	318d883a 	add	r6,r6,r6
 1085744:	318d883a 	add	r6,r6,r6
 1085748:	318d883a 	add	r6,r6,r6
 108574c:	998d883a 	add	r6,r19,r6
 1085750:	333ffe04 	addi	r12,r6,-8
 1085754:	2017883a 	mov	r11,r4
 1085758:	31800104 	addi	r6,r6,4
 108575c:	34000017 	ldw	r16,0(r6)
 1085760:	31fffd04 	addi	r7,r6,-12
 1085764:	81c0041e 	bne	r16,r7,1085778 <_malloc_r+0x1dc>
 1085768:	0000fb06 	br	1085b58 <_malloc_r+0x5bc>
 108576c:	1801030e 	bge	r3,zero,1085b7c <_malloc_r+0x5e0>
 1085770:	84000317 	ldw	r16,12(r16)
 1085774:	81c0f826 	beq	r16,r7,1085b58 <_malloc_r+0x5bc>
 1085778:	80800117 	ldw	r2,4(r16)
 108577c:	1284703a 	and	r2,r2,r10
 1085780:	1447c83a 	sub	r3,r2,r17
 1085784:	48fff90e 	bge	r9,r3,108576c <_malloc_r+0x1d0>
 1085788:	80800317 	ldw	r2,12(r16)
 108578c:	81000217 	ldw	r4,8(r16)
 1085790:	89400054 	ori	r5,r17,1
 1085794:	81400115 	stw	r5,4(r16)
 1085798:	20800315 	stw	r2,12(r4)
 108579c:	11000215 	stw	r4,8(r2)
 10857a0:	8463883a 	add	r17,r16,r17
 10857a4:	9c400515 	stw	r17,20(r19)
 10857a8:	9c400415 	stw	r17,16(r19)
 10857ac:	18800054 	ori	r2,r3,1
 10857b0:	88800115 	stw	r2,4(r17)
 10857b4:	8a000315 	stw	r8,12(r17)
 10857b8:	8a000215 	stw	r8,8(r17)
 10857bc:	88e3883a 	add	r17,r17,r3
 10857c0:	88c00015 	stw	r3,0(r17)
 10857c4:	9009883a 	mov	r4,r18
 10857c8:	108d4000 	call	108d400 <__malloc_unlock>
 10857cc:	80800204 	addi	r2,r16,8
 10857d0:	00001b06 	br	1085840 <_malloc_r+0x2a4>
 10857d4:	04400404 	movi	r17,16
 10857d8:	89402536 	bltu	r17,r5,1085870 <_malloc_r+0x2d4>
 10857dc:	108d3dc0 	call	108d3dc <__malloc_lock>
 10857e0:	00800184 	movi	r2,6
 10857e4:	01000084 	movi	r4,2
 10857e8:	04c04274 	movhi	r19,265
 10857ec:	1085883a 	add	r2,r2,r2
 10857f0:	9cfe9204 	addi	r19,r19,-1464
 10857f4:	1085883a 	add	r2,r2,r2
 10857f8:	9885883a 	add	r2,r19,r2
 10857fc:	14000117 	ldw	r16,4(r2)
 1085800:	10fffe04 	addi	r3,r2,-8
 1085804:	80c0d926 	beq	r16,r3,1085b6c <_malloc_r+0x5d0>
 1085808:	80c00117 	ldw	r3,4(r16)
 108580c:	81000317 	ldw	r4,12(r16)
 1085810:	00bfff04 	movi	r2,-4
 1085814:	1884703a 	and	r2,r3,r2
 1085818:	81400217 	ldw	r5,8(r16)
 108581c:	8085883a 	add	r2,r16,r2
 1085820:	10c00117 	ldw	r3,4(r2)
 1085824:	29000315 	stw	r4,12(r5)
 1085828:	21400215 	stw	r5,8(r4)
 108582c:	18c00054 	ori	r3,r3,1
 1085830:	10c00115 	stw	r3,4(r2)
 1085834:	9009883a 	mov	r4,r18
 1085838:	108d4000 	call	108d400 <__malloc_unlock>
 108583c:	80800204 	addi	r2,r16,8
 1085840:	dfc00a17 	ldw	ra,40(sp)
 1085844:	df000917 	ldw	fp,36(sp)
 1085848:	ddc00817 	ldw	r23,32(sp)
 108584c:	dd800717 	ldw	r22,28(sp)
 1085850:	dd400617 	ldw	r21,24(sp)
 1085854:	dd000517 	ldw	r20,20(sp)
 1085858:	dcc00417 	ldw	r19,16(sp)
 108585c:	dc800317 	ldw	r18,12(sp)
 1085860:	dc400217 	ldw	r17,8(sp)
 1085864:	dc000117 	ldw	r16,4(sp)
 1085868:	dec00b04 	addi	sp,sp,44
 108586c:	f800283a 	ret
 1085870:	00800304 	movi	r2,12
 1085874:	90800015 	stw	r2,0(r18)
 1085878:	0005883a 	mov	r2,zero
 108587c:	003ff006 	br	1085840 <_malloc_r+0x2a4>
 1085880:	01002004 	movi	r4,128
 1085884:	02001004 	movi	r8,64
 1085888:	01c00fc4 	movi	r7,63
 108588c:	003f6106 	br	1085614 <_malloc_r+0x78>
 1085890:	4009883a 	mov	r4,r8
 1085894:	003f7506 	br	108566c <_malloc_r+0xd0>
 1085898:	81000317 	ldw	r4,12(r16)
 108589c:	003fde06 	br	1085818 <_malloc_r+0x27c>
 10858a0:	81c5883a 	add	r2,r16,r7
 10858a4:	11400117 	ldw	r5,4(r2)
 10858a8:	9009883a 	mov	r4,r18
 10858ac:	29400054 	ori	r5,r5,1
 10858b0:	11400115 	stw	r5,4(r2)
 10858b4:	108d4000 	call	108d400 <__malloc_unlock>
 10858b8:	80800204 	addi	r2,r16,8
 10858bc:	003fe006 	br	1085840 <_malloc_r+0x2a4>
 10858c0:	9c000217 	ldw	r16,8(r19)
 10858c4:	00bfff04 	movi	r2,-4
 10858c8:	85800117 	ldw	r22,4(r16)
 10858cc:	b0ac703a 	and	r22,r22,r2
 10858d0:	b4400336 	bltu	r22,r17,10858e0 <_malloc_r+0x344>
 10858d4:	b445c83a 	sub	r2,r22,r17
 10858d8:	00c003c4 	movi	r3,15
 10858dc:	18805d16 	blt	r3,r2,1085a54 <_malloc_r+0x4b8>
 10858e0:	05c04274 	movhi	r23,265
 10858e4:	00804274 	movhi	r2,265
 10858e8:	108afe04 	addi	r2,r2,11256
 10858ec:	bdc42504 	addi	r23,r23,4244
 10858f0:	15400017 	ldw	r21,0(r2)
 10858f4:	b8c00017 	ldw	r3,0(r23)
 10858f8:	00bfffc4 	movi	r2,-1
 10858fc:	858d883a 	add	r6,r16,r22
 1085900:	8d6b883a 	add	r21,r17,r21
 1085904:	1880ea26 	beq	r3,r2,1085cb0 <_malloc_r+0x714>
 1085908:	ad4403c4 	addi	r21,r21,4111
 108590c:	00bc0004 	movi	r2,-4096
 1085910:	a8aa703a 	and	r21,r21,r2
 1085914:	a80b883a 	mov	r5,r21
 1085918:	9009883a 	mov	r4,r18
 108591c:	d9800015 	stw	r6,0(sp)
 1085920:	108782c0 	call	108782c <_sbrk_r>
 1085924:	1029883a 	mov	r20,r2
 1085928:	00bfffc4 	movi	r2,-1
 108592c:	d9800017 	ldw	r6,0(sp)
 1085930:	a080e826 	beq	r20,r2,1085cd4 <_malloc_r+0x738>
 1085934:	a180a636 	bltu	r20,r6,1085bd0 <_malloc_r+0x634>
 1085938:	07004274 	movhi	fp,265
 108593c:	e70b0704 	addi	fp,fp,11292
 1085940:	e0800017 	ldw	r2,0(fp)
 1085944:	a887883a 	add	r3,r21,r2
 1085948:	e0c00015 	stw	r3,0(fp)
 108594c:	3500e626 	beq	r6,r20,1085ce8 <_malloc_r+0x74c>
 1085950:	b9000017 	ldw	r4,0(r23)
 1085954:	00bfffc4 	movi	r2,-1
 1085958:	2080ee26 	beq	r4,r2,1085d14 <_malloc_r+0x778>
 108595c:	a185c83a 	sub	r2,r20,r6
 1085960:	10c5883a 	add	r2,r2,r3
 1085964:	e0800015 	stw	r2,0(fp)
 1085968:	a0c001cc 	andi	r3,r20,7
 108596c:	1800bc26 	beq	r3,zero,1085c60 <_malloc_r+0x6c4>
 1085970:	a0e9c83a 	sub	r20,r20,r3
 1085974:	00840204 	movi	r2,4104
 1085978:	a5000204 	addi	r20,r20,8
 108597c:	10c7c83a 	sub	r3,r2,r3
 1085980:	a545883a 	add	r2,r20,r21
 1085984:	1083ffcc 	andi	r2,r2,4095
 1085988:	18abc83a 	sub	r21,r3,r2
 108598c:	a80b883a 	mov	r5,r21
 1085990:	9009883a 	mov	r4,r18
 1085994:	108782c0 	call	108782c <_sbrk_r>
 1085998:	00ffffc4 	movi	r3,-1
 108599c:	10c0e126 	beq	r2,r3,1085d24 <_malloc_r+0x788>
 10859a0:	1505c83a 	sub	r2,r2,r20
 10859a4:	1545883a 	add	r2,r2,r21
 10859a8:	10800054 	ori	r2,r2,1
 10859ac:	e0c00017 	ldw	r3,0(fp)
 10859b0:	9d000215 	stw	r20,8(r19)
 10859b4:	a0800115 	stw	r2,4(r20)
 10859b8:	a8c7883a 	add	r3,r21,r3
 10859bc:	e0c00015 	stw	r3,0(fp)
 10859c0:	84c00e26 	beq	r16,r19,10859fc <_malloc_r+0x460>
 10859c4:	018003c4 	movi	r6,15
 10859c8:	3580a72e 	bgeu	r6,r22,1085c68 <_malloc_r+0x6cc>
 10859cc:	81400117 	ldw	r5,4(r16)
 10859d0:	013ffe04 	movi	r4,-8
 10859d4:	b0bffd04 	addi	r2,r22,-12
 10859d8:	1104703a 	and	r2,r2,r4
 10859dc:	2900004c 	andi	r4,r5,1
 10859e0:	2088b03a 	or	r4,r4,r2
 10859e4:	81000115 	stw	r4,4(r16)
 10859e8:	01400144 	movi	r5,5
 10859ec:	8089883a 	add	r4,r16,r2
 10859f0:	21400115 	stw	r5,4(r4)
 10859f4:	21400215 	stw	r5,8(r4)
 10859f8:	3080cd36 	bltu	r6,r2,1085d30 <_malloc_r+0x794>
 10859fc:	00804274 	movhi	r2,265
 1085a00:	108afd04 	addi	r2,r2,11252
 1085a04:	11000017 	ldw	r4,0(r2)
 1085a08:	20c0012e 	bgeu	r4,r3,1085a10 <_malloc_r+0x474>
 1085a0c:	10c00015 	stw	r3,0(r2)
 1085a10:	00804274 	movhi	r2,265
 1085a14:	108afc04 	addi	r2,r2,11248
 1085a18:	11000017 	ldw	r4,0(r2)
 1085a1c:	9c000217 	ldw	r16,8(r19)
 1085a20:	20c0012e 	bgeu	r4,r3,1085a28 <_malloc_r+0x48c>
 1085a24:	10c00015 	stw	r3,0(r2)
 1085a28:	80c00117 	ldw	r3,4(r16)
 1085a2c:	00bfff04 	movi	r2,-4
 1085a30:	1886703a 	and	r3,r3,r2
 1085a34:	1c45c83a 	sub	r2,r3,r17
 1085a38:	1c400236 	bltu	r3,r17,1085a44 <_malloc_r+0x4a8>
 1085a3c:	00c003c4 	movi	r3,15
 1085a40:	18800416 	blt	r3,r2,1085a54 <_malloc_r+0x4b8>
 1085a44:	9009883a 	mov	r4,r18
 1085a48:	108d4000 	call	108d400 <__malloc_unlock>
 1085a4c:	0005883a 	mov	r2,zero
 1085a50:	003f7b06 	br	1085840 <_malloc_r+0x2a4>
 1085a54:	88c00054 	ori	r3,r17,1
 1085a58:	80c00115 	stw	r3,4(r16)
 1085a5c:	8463883a 	add	r17,r16,r17
 1085a60:	10800054 	ori	r2,r2,1
 1085a64:	9c400215 	stw	r17,8(r19)
 1085a68:	88800115 	stw	r2,4(r17)
 1085a6c:	9009883a 	mov	r4,r18
 1085a70:	108d4000 	call	108d400 <__malloc_unlock>
 1085a74:	80800204 	addi	r2,r16,8
 1085a78:	003f7106 	br	1085840 <_malloc_r+0x2a4>
 1085a7c:	00c00504 	movi	r3,20
 1085a80:	18804a2e 	bgeu	r3,r2,1085bac <_malloc_r+0x610>
 1085a84:	00c01504 	movi	r3,84
 1085a88:	18806e36 	bltu	r3,r2,1085c44 <_malloc_r+0x6a8>
 1085a8c:	8804d33a 	srli	r2,r17,12
 1085a90:	12001bc4 	addi	r8,r2,111
 1085a94:	11c01b84 	addi	r7,r2,110
 1085a98:	4209883a 	add	r4,r8,r8
 1085a9c:	003edd06 	br	1085614 <_malloc_r+0x78>
 1085aa0:	3804d27a 	srli	r2,r7,9
 1085aa4:	00c00104 	movi	r3,4
 1085aa8:	1880442e 	bgeu	r3,r2,1085bbc <_malloc_r+0x620>
 1085aac:	00c00504 	movi	r3,20
 1085ab0:	18808136 	bltu	r3,r2,1085cb8 <_malloc_r+0x71c>
 1085ab4:	11401704 	addi	r5,r2,92
 1085ab8:	10c016c4 	addi	r3,r2,91
 1085abc:	294b883a 	add	r5,r5,r5
 1085ac0:	294b883a 	add	r5,r5,r5
 1085ac4:	294b883a 	add	r5,r5,r5
 1085ac8:	994b883a 	add	r5,r19,r5
 1085acc:	28800017 	ldw	r2,0(r5)
 1085ad0:	01804274 	movhi	r6,265
 1085ad4:	297ffe04 	addi	r5,r5,-8
 1085ad8:	31be9204 	addi	r6,r6,-1464
 1085adc:	28806526 	beq	r5,r2,1085c74 <_malloc_r+0x6d8>
 1085ae0:	01bfff04 	movi	r6,-4
 1085ae4:	10c00117 	ldw	r3,4(r2)
 1085ae8:	1986703a 	and	r3,r3,r6
 1085aec:	38c0022e 	bgeu	r7,r3,1085af8 <_malloc_r+0x55c>
 1085af0:	10800217 	ldw	r2,8(r2)
 1085af4:	28bffb1e 	bne	r5,r2,1085ae4 <_malloc_r+0x548>
 1085af8:	11400317 	ldw	r5,12(r2)
 1085afc:	98c00117 	ldw	r3,4(r19)
 1085b00:	81400315 	stw	r5,12(r16)
 1085b04:	80800215 	stw	r2,8(r16)
 1085b08:	2c000215 	stw	r16,8(r5)
 1085b0c:	14000315 	stw	r16,12(r2)
 1085b10:	003ef806 	br	10856f4 <_malloc_r+0x158>
 1085b14:	88c00054 	ori	r3,r17,1
 1085b18:	80c00115 	stw	r3,4(r16)
 1085b1c:	8463883a 	add	r17,r16,r17
 1085b20:	34400515 	stw	r17,20(r6)
 1085b24:	34400415 	stw	r17,16(r6)
 1085b28:	10c00054 	ori	r3,r2,1
 1085b2c:	8a000315 	stw	r8,12(r17)
 1085b30:	8a000215 	stw	r8,8(r17)
 1085b34:	88c00115 	stw	r3,4(r17)
 1085b38:	88a3883a 	add	r17,r17,r2
 1085b3c:	88800015 	stw	r2,0(r17)
 1085b40:	9009883a 	mov	r4,r18
 1085b44:	108d4000 	call	108d400 <__malloc_unlock>
 1085b48:	80800204 	addi	r2,r16,8
 1085b4c:	003f3c06 	br	1085840 <_malloc_r+0x2a4>
 1085b50:	30c00117 	ldw	r3,4(r6)
 1085b54:	003ee706 	br	10856f4 <_malloc_r+0x158>
 1085b58:	5ac00044 	addi	r11,r11,1
 1085b5c:	588000cc 	andi	r2,r11,3
 1085b60:	31800204 	addi	r6,r6,8
 1085b64:	103efd1e 	bne	r2,zero,108575c <_malloc_r+0x1c0>
 1085b68:	00002406 	br	1085bfc <_malloc_r+0x660>
 1085b6c:	14000317 	ldw	r16,12(r2)
 1085b70:	143f251e 	bne	r2,r16,1085808 <_malloc_r+0x26c>
 1085b74:	21000084 	addi	r4,r4,2
 1085b78:	003ebc06 	br	108566c <_malloc_r+0xd0>
 1085b7c:	8085883a 	add	r2,r16,r2
 1085b80:	10c00117 	ldw	r3,4(r2)
 1085b84:	81000317 	ldw	r4,12(r16)
 1085b88:	81400217 	ldw	r5,8(r16)
 1085b8c:	18c00054 	ori	r3,r3,1
 1085b90:	10c00115 	stw	r3,4(r2)
 1085b94:	29000315 	stw	r4,12(r5)
 1085b98:	21400215 	stw	r5,8(r4)
 1085b9c:	9009883a 	mov	r4,r18
 1085ba0:	108d4000 	call	108d400 <__malloc_unlock>
 1085ba4:	80800204 	addi	r2,r16,8
 1085ba8:	003f2506 	br	1085840 <_malloc_r+0x2a4>
 1085bac:	12001704 	addi	r8,r2,92
 1085bb0:	11c016c4 	addi	r7,r2,91
 1085bb4:	4209883a 	add	r4,r8,r8
 1085bb8:	003e9606 	br	1085614 <_malloc_r+0x78>
 1085bbc:	3804d1ba 	srli	r2,r7,6
 1085bc0:	11400e44 	addi	r5,r2,57
 1085bc4:	10c00e04 	addi	r3,r2,56
 1085bc8:	294b883a 	add	r5,r5,r5
 1085bcc:	003fbc06 	br	1085ac0 <_malloc_r+0x524>
 1085bd0:	84ff5926 	beq	r16,r19,1085938 <_malloc_r+0x39c>
 1085bd4:	00804274 	movhi	r2,265
 1085bd8:	10be9204 	addi	r2,r2,-1464
 1085bdc:	14000217 	ldw	r16,8(r2)
 1085be0:	00bfff04 	movi	r2,-4
 1085be4:	80c00117 	ldw	r3,4(r16)
 1085be8:	1886703a 	and	r3,r3,r2
 1085bec:	003f9106 	br	1085a34 <_malloc_r+0x498>
 1085bf0:	60800217 	ldw	r2,8(r12)
 1085bf4:	213fffc4 	addi	r4,r4,-1
 1085bf8:	1300651e 	bne	r2,r12,1085d90 <_malloc_r+0x7f4>
 1085bfc:	208000cc 	andi	r2,r4,3
 1085c00:	633ffe04 	addi	r12,r12,-8
 1085c04:	103ffa1e 	bne	r2,zero,1085bf0 <_malloc_r+0x654>
 1085c08:	98800117 	ldw	r2,4(r19)
 1085c0c:	0146303a 	nor	r3,zero,r5
 1085c10:	1884703a 	and	r2,r3,r2
 1085c14:	98800115 	stw	r2,4(r19)
 1085c18:	294b883a 	add	r5,r5,r5
 1085c1c:	117f2836 	bltu	r2,r5,10858c0 <_malloc_r+0x324>
 1085c20:	283f2726 	beq	r5,zero,10858c0 <_malloc_r+0x324>
 1085c24:	2886703a 	and	r3,r5,r2
 1085c28:	5809883a 	mov	r4,r11
 1085c2c:	183ec31e 	bne	r3,zero,108573c <_malloc_r+0x1a0>
 1085c30:	294b883a 	add	r5,r5,r5
 1085c34:	2886703a 	and	r3,r5,r2
 1085c38:	21000104 	addi	r4,r4,4
 1085c3c:	183ffc26 	beq	r3,zero,1085c30 <_malloc_r+0x694>
 1085c40:	003ebe06 	br	108573c <_malloc_r+0x1a0>
 1085c44:	00c05504 	movi	r3,340
 1085c48:	18801236 	bltu	r3,r2,1085c94 <_malloc_r+0x6f8>
 1085c4c:	8804d3fa 	srli	r2,r17,15
 1085c50:	12001e04 	addi	r8,r2,120
 1085c54:	11c01dc4 	addi	r7,r2,119
 1085c58:	4209883a 	add	r4,r8,r8
 1085c5c:	003e6d06 	br	1085614 <_malloc_r+0x78>
 1085c60:	00c40004 	movi	r3,4096
 1085c64:	003f4606 	br	1085980 <_malloc_r+0x3e4>
 1085c68:	00800044 	movi	r2,1
 1085c6c:	a0800115 	stw	r2,4(r20)
 1085c70:	003f7406 	br	1085a44 <_malloc_r+0x4a8>
 1085c74:	1805d0ba 	srai	r2,r3,2
 1085c78:	01c00044 	movi	r7,1
 1085c7c:	30c00117 	ldw	r3,4(r6)
 1085c80:	388e983a 	sll	r7,r7,r2
 1085c84:	2805883a 	mov	r2,r5
 1085c88:	38c6b03a 	or	r3,r7,r3
 1085c8c:	30c00115 	stw	r3,4(r6)
 1085c90:	003f9b06 	br	1085b00 <_malloc_r+0x564>
 1085c94:	00c15504 	movi	r3,1364
 1085c98:	18801a36 	bltu	r3,r2,1085d04 <_malloc_r+0x768>
 1085c9c:	8804d4ba 	srli	r2,r17,18
 1085ca0:	12001f44 	addi	r8,r2,125
 1085ca4:	11c01f04 	addi	r7,r2,124
 1085ca8:	4209883a 	add	r4,r8,r8
 1085cac:	003e5906 	br	1085614 <_malloc_r+0x78>
 1085cb0:	ad400404 	addi	r21,r21,16
 1085cb4:	003f1706 	br	1085914 <_malloc_r+0x378>
 1085cb8:	00c01504 	movi	r3,84
 1085cbc:	18802336 	bltu	r3,r2,1085d4c <_malloc_r+0x7b0>
 1085cc0:	3804d33a 	srli	r2,r7,12
 1085cc4:	11401bc4 	addi	r5,r2,111
 1085cc8:	10c01b84 	addi	r3,r2,110
 1085ccc:	294b883a 	add	r5,r5,r5
 1085cd0:	003f7b06 	br	1085ac0 <_malloc_r+0x524>
 1085cd4:	9c000217 	ldw	r16,8(r19)
 1085cd8:	00bfff04 	movi	r2,-4
 1085cdc:	80c00117 	ldw	r3,4(r16)
 1085ce0:	1886703a 	and	r3,r3,r2
 1085ce4:	003f5306 	br	1085a34 <_malloc_r+0x498>
 1085ce8:	3083ffcc 	andi	r2,r6,4095
 1085cec:	103f181e 	bne	r2,zero,1085950 <_malloc_r+0x3b4>
 1085cf0:	99000217 	ldw	r4,8(r19)
 1085cf4:	b545883a 	add	r2,r22,r21
 1085cf8:	10800054 	ori	r2,r2,1
 1085cfc:	20800115 	stw	r2,4(r4)
 1085d00:	003f3e06 	br	10859fc <_malloc_r+0x460>
 1085d04:	01003f84 	movi	r4,254
 1085d08:	02001fc4 	movi	r8,127
 1085d0c:	01c01f84 	movi	r7,126
 1085d10:	003e4006 	br	1085614 <_malloc_r+0x78>
 1085d14:	00804274 	movhi	r2,265
 1085d18:	10842504 	addi	r2,r2,4244
 1085d1c:	15000015 	stw	r20,0(r2)
 1085d20:	003f1106 	br	1085968 <_malloc_r+0x3cc>
 1085d24:	00800044 	movi	r2,1
 1085d28:	002b883a 	mov	r21,zero
 1085d2c:	003f1f06 	br	10859ac <_malloc_r+0x410>
 1085d30:	81400204 	addi	r5,r16,8
 1085d34:	9009883a 	mov	r4,r18
 1085d38:	10849b00 	call	10849b0 <_free_r>
 1085d3c:	00804274 	movhi	r2,265
 1085d40:	108b0704 	addi	r2,r2,11292
 1085d44:	10c00017 	ldw	r3,0(r2)
 1085d48:	003f2c06 	br	10859fc <_malloc_r+0x460>
 1085d4c:	00c05504 	movi	r3,340
 1085d50:	18800536 	bltu	r3,r2,1085d68 <_malloc_r+0x7cc>
 1085d54:	3804d3fa 	srli	r2,r7,15
 1085d58:	11401e04 	addi	r5,r2,120
 1085d5c:	10c01dc4 	addi	r3,r2,119
 1085d60:	294b883a 	add	r5,r5,r5
 1085d64:	003f5606 	br	1085ac0 <_malloc_r+0x524>
 1085d68:	00c15504 	movi	r3,1364
 1085d6c:	18800536 	bltu	r3,r2,1085d84 <_malloc_r+0x7e8>
 1085d70:	3804d4ba 	srli	r2,r7,18
 1085d74:	11401f44 	addi	r5,r2,125
 1085d78:	10c01f04 	addi	r3,r2,124
 1085d7c:	294b883a 	add	r5,r5,r5
 1085d80:	003f4f06 	br	1085ac0 <_malloc_r+0x524>
 1085d84:	01403f84 	movi	r5,254
 1085d88:	00c01f84 	movi	r3,126
 1085d8c:	003f4c06 	br	1085ac0 <_malloc_r+0x524>
 1085d90:	98800117 	ldw	r2,4(r19)
 1085d94:	003fa006 	br	1085c18 <_malloc_r+0x67c>
 1085d98:	8808d0fa 	srli	r4,r17,3
 1085d9c:	20800044 	addi	r2,r4,1
 1085da0:	1085883a 	add	r2,r2,r2
 1085da4:	003e9006 	br	10857e8 <_malloc_r+0x24c>

01085da8 <memchr>:
 1085da8:	208000cc 	andi	r2,r4,3
 1085dac:	280f883a 	mov	r7,r5
 1085db0:	10003426 	beq	r2,zero,1085e84 <memchr+0xdc>
 1085db4:	30bfffc4 	addi	r2,r6,-1
 1085db8:	30001a26 	beq	r6,zero,1085e24 <memchr+0x7c>
 1085dbc:	20c00003 	ldbu	r3,0(r4)
 1085dc0:	29803fcc 	andi	r6,r5,255
 1085dc4:	30c0051e 	bne	r6,r3,1085ddc <memchr+0x34>
 1085dc8:	00001806 	br	1085e2c <memchr+0x84>
 1085dcc:	10001526 	beq	r2,zero,1085e24 <memchr+0x7c>
 1085dd0:	20c00003 	ldbu	r3,0(r4)
 1085dd4:	10bfffc4 	addi	r2,r2,-1
 1085dd8:	30c01426 	beq	r6,r3,1085e2c <memchr+0x84>
 1085ddc:	21000044 	addi	r4,r4,1
 1085de0:	20c000cc 	andi	r3,r4,3
 1085de4:	183ff91e 	bne	r3,zero,1085dcc <memchr+0x24>
 1085de8:	020000c4 	movi	r8,3
 1085dec:	40801136 	bltu	r8,r2,1085e34 <memchr+0x8c>
 1085df0:	10000c26 	beq	r2,zero,1085e24 <memchr+0x7c>
 1085df4:	20c00003 	ldbu	r3,0(r4)
 1085df8:	29403fcc 	andi	r5,r5,255
 1085dfc:	28c00b26 	beq	r5,r3,1085e2c <memchr+0x84>
 1085e00:	20c00044 	addi	r3,r4,1
 1085e04:	39803fcc 	andi	r6,r7,255
 1085e08:	2089883a 	add	r4,r4,r2
 1085e0c:	00000306 	br	1085e1c <memchr+0x74>
 1085e10:	18c00044 	addi	r3,r3,1
 1085e14:	197fffc3 	ldbu	r5,-1(r3)
 1085e18:	31400526 	beq	r6,r5,1085e30 <memchr+0x88>
 1085e1c:	1805883a 	mov	r2,r3
 1085e20:	20fffb1e 	bne	r4,r3,1085e10 <memchr+0x68>
 1085e24:	0005883a 	mov	r2,zero
 1085e28:	f800283a 	ret
 1085e2c:	2005883a 	mov	r2,r4
 1085e30:	f800283a 	ret
 1085e34:	28c03fcc 	andi	r3,r5,255
 1085e38:	1812923a 	slli	r9,r3,8
 1085e3c:	02ffbff4 	movhi	r11,65279
 1085e40:	02a02074 	movhi	r10,32897
 1085e44:	48d2b03a 	or	r9,r9,r3
 1085e48:	4806943a 	slli	r3,r9,16
 1085e4c:	5affbfc4 	addi	r11,r11,-257
 1085e50:	52a02004 	addi	r10,r10,-32640
 1085e54:	48d2b03a 	or	r9,r9,r3
 1085e58:	20c00017 	ldw	r3,0(r4)
 1085e5c:	48c6f03a 	xor	r3,r9,r3
 1085e60:	1acd883a 	add	r6,r3,r11
 1085e64:	00c6303a 	nor	r3,zero,r3
 1085e68:	30c6703a 	and	r3,r6,r3
 1085e6c:	1a86703a 	and	r3,r3,r10
 1085e70:	183fe01e 	bne	r3,zero,1085df4 <memchr+0x4c>
 1085e74:	10bfff04 	addi	r2,r2,-4
 1085e78:	21000104 	addi	r4,r4,4
 1085e7c:	40bff636 	bltu	r8,r2,1085e58 <memchr+0xb0>
 1085e80:	003fdb06 	br	1085df0 <memchr+0x48>
 1085e84:	3005883a 	mov	r2,r6
 1085e88:	003fd706 	br	1085de8 <memchr+0x40>

01085e8c <memcpy>:
 1085e8c:	defffd04 	addi	sp,sp,-12
 1085e90:	dfc00215 	stw	ra,8(sp)
 1085e94:	dc400115 	stw	r17,4(sp)
 1085e98:	dc000015 	stw	r16,0(sp)
 1085e9c:	00c003c4 	movi	r3,15
 1085ea0:	2005883a 	mov	r2,r4
 1085ea4:	1980452e 	bgeu	r3,r6,1085fbc <memcpy+0x130>
 1085ea8:	2906b03a 	or	r3,r5,r4
 1085eac:	18c000cc 	andi	r3,r3,3
 1085eb0:	1800441e 	bne	r3,zero,1085fc4 <memcpy+0x138>
 1085eb4:	347ffc04 	addi	r17,r6,-16
 1085eb8:	8822d13a 	srli	r17,r17,4
 1085ebc:	28c00104 	addi	r3,r5,4
 1085ec0:	23400104 	addi	r13,r4,4
 1085ec4:	8820913a 	slli	r16,r17,4
 1085ec8:	2b000204 	addi	r12,r5,8
 1085ecc:	22c00204 	addi	r11,r4,8
 1085ed0:	84000504 	addi	r16,r16,20
 1085ed4:	2a800304 	addi	r10,r5,12
 1085ed8:	22400304 	addi	r9,r4,12
 1085edc:	2c21883a 	add	r16,r5,r16
 1085ee0:	2811883a 	mov	r8,r5
 1085ee4:	200f883a 	mov	r7,r4
 1085ee8:	41000017 	ldw	r4,0(r8)
 1085eec:	1fc00017 	ldw	ra,0(r3)
 1085ef0:	63c00017 	ldw	r15,0(r12)
 1085ef4:	39000015 	stw	r4,0(r7)
 1085ef8:	53800017 	ldw	r14,0(r10)
 1085efc:	6fc00015 	stw	ra,0(r13)
 1085f00:	5bc00015 	stw	r15,0(r11)
 1085f04:	4b800015 	stw	r14,0(r9)
 1085f08:	18c00404 	addi	r3,r3,16
 1085f0c:	39c00404 	addi	r7,r7,16
 1085f10:	42000404 	addi	r8,r8,16
 1085f14:	6b400404 	addi	r13,r13,16
 1085f18:	63000404 	addi	r12,r12,16
 1085f1c:	5ac00404 	addi	r11,r11,16
 1085f20:	52800404 	addi	r10,r10,16
 1085f24:	4a400404 	addi	r9,r9,16
 1085f28:	1c3fef1e 	bne	r3,r16,1085ee8 <memcpy+0x5c>
 1085f2c:	89c00044 	addi	r7,r17,1
 1085f30:	380e913a 	slli	r7,r7,4
 1085f34:	310003cc 	andi	r4,r6,15
 1085f38:	02c000c4 	movi	r11,3
 1085f3c:	11c7883a 	add	r3,r2,r7
 1085f40:	29cb883a 	add	r5,r5,r7
 1085f44:	5900212e 	bgeu	r11,r4,1085fcc <memcpy+0x140>
 1085f48:	1813883a 	mov	r9,r3
 1085f4c:	2811883a 	mov	r8,r5
 1085f50:	200f883a 	mov	r7,r4
 1085f54:	42800017 	ldw	r10,0(r8)
 1085f58:	4a400104 	addi	r9,r9,4
 1085f5c:	39ffff04 	addi	r7,r7,-4
 1085f60:	4abfff15 	stw	r10,-4(r9)
 1085f64:	42000104 	addi	r8,r8,4
 1085f68:	59fffa36 	bltu	r11,r7,1085f54 <memcpy+0xc8>
 1085f6c:	213fff04 	addi	r4,r4,-4
 1085f70:	2008d0ba 	srli	r4,r4,2
 1085f74:	318000cc 	andi	r6,r6,3
 1085f78:	21000044 	addi	r4,r4,1
 1085f7c:	2109883a 	add	r4,r4,r4
 1085f80:	2109883a 	add	r4,r4,r4
 1085f84:	1907883a 	add	r3,r3,r4
 1085f88:	290b883a 	add	r5,r5,r4
 1085f8c:	30000626 	beq	r6,zero,1085fa8 <memcpy+0x11c>
 1085f90:	198d883a 	add	r6,r3,r6
 1085f94:	29c00003 	ldbu	r7,0(r5)
 1085f98:	18c00044 	addi	r3,r3,1
 1085f9c:	29400044 	addi	r5,r5,1
 1085fa0:	19ffffc5 	stb	r7,-1(r3)
 1085fa4:	19bffb1e 	bne	r3,r6,1085f94 <memcpy+0x108>
 1085fa8:	dfc00217 	ldw	ra,8(sp)
 1085fac:	dc400117 	ldw	r17,4(sp)
 1085fb0:	dc000017 	ldw	r16,0(sp)
 1085fb4:	dec00304 	addi	sp,sp,12
 1085fb8:	f800283a 	ret
 1085fbc:	2007883a 	mov	r3,r4
 1085fc0:	003ff206 	br	1085f8c <memcpy+0x100>
 1085fc4:	2007883a 	mov	r3,r4
 1085fc8:	003ff106 	br	1085f90 <memcpy+0x104>
 1085fcc:	200d883a 	mov	r6,r4
 1085fd0:	003fee06 	br	1085f8c <memcpy+0x100>

01085fd4 <memmove>:
 1085fd4:	2005883a 	mov	r2,r4
 1085fd8:	29000b2e 	bgeu	r5,r4,1086008 <memmove+0x34>
 1085fdc:	298f883a 	add	r7,r5,r6
 1085fe0:	21c0092e 	bgeu	r4,r7,1086008 <memmove+0x34>
 1085fe4:	2187883a 	add	r3,r4,r6
 1085fe8:	198bc83a 	sub	r5,r3,r6
 1085fec:	30004826 	beq	r6,zero,1086110 <memmove+0x13c>
 1085ff0:	39ffffc4 	addi	r7,r7,-1
 1085ff4:	39000003 	ldbu	r4,0(r7)
 1085ff8:	18ffffc4 	addi	r3,r3,-1
 1085ffc:	19000005 	stb	r4,0(r3)
 1086000:	28fffb1e 	bne	r5,r3,1085ff0 <memmove+0x1c>
 1086004:	f800283a 	ret
 1086008:	00c003c4 	movi	r3,15
 108600c:	1980412e 	bgeu	r3,r6,1086114 <memmove+0x140>
 1086010:	2886b03a 	or	r3,r5,r2
 1086014:	18c000cc 	andi	r3,r3,3
 1086018:	1800401e 	bne	r3,zero,108611c <memmove+0x148>
 108601c:	33fffc04 	addi	r15,r6,-16
 1086020:	781ed13a 	srli	r15,r15,4
 1086024:	28c00104 	addi	r3,r5,4
 1086028:	13400104 	addi	r13,r2,4
 108602c:	781c913a 	slli	r14,r15,4
 1086030:	2b000204 	addi	r12,r5,8
 1086034:	12c00204 	addi	r11,r2,8
 1086038:	73800504 	addi	r14,r14,20
 108603c:	2a800304 	addi	r10,r5,12
 1086040:	12400304 	addi	r9,r2,12
 1086044:	2b9d883a 	add	r14,r5,r14
 1086048:	2811883a 	mov	r8,r5
 108604c:	100f883a 	mov	r7,r2
 1086050:	41000017 	ldw	r4,0(r8)
 1086054:	39c00404 	addi	r7,r7,16
 1086058:	18c00404 	addi	r3,r3,16
 108605c:	393ffc15 	stw	r4,-16(r7)
 1086060:	193ffc17 	ldw	r4,-16(r3)
 1086064:	6b400404 	addi	r13,r13,16
 1086068:	5ac00404 	addi	r11,r11,16
 108606c:	693ffc15 	stw	r4,-16(r13)
 1086070:	61000017 	ldw	r4,0(r12)
 1086074:	4a400404 	addi	r9,r9,16
 1086078:	42000404 	addi	r8,r8,16
 108607c:	593ffc15 	stw	r4,-16(r11)
 1086080:	51000017 	ldw	r4,0(r10)
 1086084:	63000404 	addi	r12,r12,16
 1086088:	52800404 	addi	r10,r10,16
 108608c:	493ffc15 	stw	r4,-16(r9)
 1086090:	1bbfef1e 	bne	r3,r14,1086050 <memmove+0x7c>
 1086094:	79000044 	addi	r4,r15,1
 1086098:	2008913a 	slli	r4,r4,4
 108609c:	328003cc 	andi	r10,r6,15
 10860a0:	02c000c4 	movi	r11,3
 10860a4:	1107883a 	add	r3,r2,r4
 10860a8:	290b883a 	add	r5,r5,r4
 10860ac:	5a801e2e 	bgeu	r11,r10,1086128 <memmove+0x154>
 10860b0:	1813883a 	mov	r9,r3
 10860b4:	2811883a 	mov	r8,r5
 10860b8:	500f883a 	mov	r7,r10
 10860bc:	41000017 	ldw	r4,0(r8)
 10860c0:	4a400104 	addi	r9,r9,4
 10860c4:	39ffff04 	addi	r7,r7,-4
 10860c8:	493fff15 	stw	r4,-4(r9)
 10860cc:	42000104 	addi	r8,r8,4
 10860d0:	59fffa36 	bltu	r11,r7,10860bc <memmove+0xe8>
 10860d4:	513fff04 	addi	r4,r10,-4
 10860d8:	2008d0ba 	srli	r4,r4,2
 10860dc:	318000cc 	andi	r6,r6,3
 10860e0:	21000044 	addi	r4,r4,1
 10860e4:	2109883a 	add	r4,r4,r4
 10860e8:	2109883a 	add	r4,r4,r4
 10860ec:	1907883a 	add	r3,r3,r4
 10860f0:	290b883a 	add	r5,r5,r4
 10860f4:	30000b26 	beq	r6,zero,1086124 <memmove+0x150>
 10860f8:	198d883a 	add	r6,r3,r6
 10860fc:	29c00003 	ldbu	r7,0(r5)
 1086100:	18c00044 	addi	r3,r3,1
 1086104:	29400044 	addi	r5,r5,1
 1086108:	19ffffc5 	stb	r7,-1(r3)
 108610c:	19bffb1e 	bne	r3,r6,10860fc <memmove+0x128>
 1086110:	f800283a 	ret
 1086114:	1007883a 	mov	r3,r2
 1086118:	003ff606 	br	10860f4 <memmove+0x120>
 108611c:	1007883a 	mov	r3,r2
 1086120:	003ff506 	br	10860f8 <memmove+0x124>
 1086124:	f800283a 	ret
 1086128:	500d883a 	mov	r6,r10
 108612c:	003ff106 	br	10860f4 <memmove+0x120>

01086130 <memset>:
 1086130:	20c000cc 	andi	r3,r4,3
 1086134:	2005883a 	mov	r2,r4
 1086138:	18004426 	beq	r3,zero,108624c <memset+0x11c>
 108613c:	31ffffc4 	addi	r7,r6,-1
 1086140:	30004026 	beq	r6,zero,1086244 <memset+0x114>
 1086144:	2813883a 	mov	r9,r5
 1086148:	200d883a 	mov	r6,r4
 108614c:	2007883a 	mov	r3,r4
 1086150:	00000406 	br	1086164 <memset+0x34>
 1086154:	3a3fffc4 	addi	r8,r7,-1
 1086158:	31800044 	addi	r6,r6,1
 108615c:	38003926 	beq	r7,zero,1086244 <memset+0x114>
 1086160:	400f883a 	mov	r7,r8
 1086164:	18c00044 	addi	r3,r3,1
 1086168:	32400005 	stb	r9,0(r6)
 108616c:	1a0000cc 	andi	r8,r3,3
 1086170:	403ff81e 	bne	r8,zero,1086154 <memset+0x24>
 1086174:	010000c4 	movi	r4,3
 1086178:	21c02d2e 	bgeu	r4,r7,1086230 <memset+0x100>
 108617c:	29003fcc 	andi	r4,r5,255
 1086180:	200c923a 	slli	r6,r4,8
 1086184:	3108b03a 	or	r4,r6,r4
 1086188:	200c943a 	slli	r6,r4,16
 108618c:	218cb03a 	or	r6,r4,r6
 1086190:	010003c4 	movi	r4,15
 1086194:	21c0182e 	bgeu	r4,r7,10861f8 <memset+0xc8>
 1086198:	3b3ffc04 	addi	r12,r7,-16
 108619c:	6018d13a 	srli	r12,r12,4
 10861a0:	1a000104 	addi	r8,r3,4
 10861a4:	1ac00204 	addi	r11,r3,8
 10861a8:	6008913a 	slli	r4,r12,4
 10861ac:	1a800304 	addi	r10,r3,12
 10861b0:	1813883a 	mov	r9,r3
 10861b4:	21000504 	addi	r4,r4,20
 10861b8:	1909883a 	add	r4,r3,r4
 10861bc:	49800015 	stw	r6,0(r9)
 10861c0:	41800015 	stw	r6,0(r8)
 10861c4:	59800015 	stw	r6,0(r11)
 10861c8:	51800015 	stw	r6,0(r10)
 10861cc:	42000404 	addi	r8,r8,16
 10861d0:	4a400404 	addi	r9,r9,16
 10861d4:	5ac00404 	addi	r11,r11,16
 10861d8:	52800404 	addi	r10,r10,16
 10861dc:	413ff71e 	bne	r8,r4,10861bc <memset+0x8c>
 10861e0:	63000044 	addi	r12,r12,1
 10861e4:	6018913a 	slli	r12,r12,4
 10861e8:	39c003cc 	andi	r7,r7,15
 10861ec:	010000c4 	movi	r4,3
 10861f0:	1b07883a 	add	r3,r3,r12
 10861f4:	21c00e2e 	bgeu	r4,r7,1086230 <memset+0x100>
 10861f8:	1813883a 	mov	r9,r3
 10861fc:	3811883a 	mov	r8,r7
 1086200:	010000c4 	movi	r4,3
 1086204:	49800015 	stw	r6,0(r9)
 1086208:	423fff04 	addi	r8,r8,-4
 108620c:	4a400104 	addi	r9,r9,4
 1086210:	223ffc36 	bltu	r4,r8,1086204 <memset+0xd4>
 1086214:	393fff04 	addi	r4,r7,-4
 1086218:	2008d0ba 	srli	r4,r4,2
 108621c:	39c000cc 	andi	r7,r7,3
 1086220:	21000044 	addi	r4,r4,1
 1086224:	2109883a 	add	r4,r4,r4
 1086228:	2109883a 	add	r4,r4,r4
 108622c:	1907883a 	add	r3,r3,r4
 1086230:	38000526 	beq	r7,zero,1086248 <memset+0x118>
 1086234:	19cf883a 	add	r7,r3,r7
 1086238:	19400005 	stb	r5,0(r3)
 108623c:	18c00044 	addi	r3,r3,1
 1086240:	38fffd1e 	bne	r7,r3,1086238 <memset+0x108>
 1086244:	f800283a 	ret
 1086248:	f800283a 	ret
 108624c:	2007883a 	mov	r3,r4
 1086250:	300f883a 	mov	r7,r6
 1086254:	003fc706 	br	1086174 <memset+0x44>

01086258 <_Balloc>:
 1086258:	20801317 	ldw	r2,76(r4)
 108625c:	defffc04 	addi	sp,sp,-16
 1086260:	dc400115 	stw	r17,4(sp)
 1086264:	dc000015 	stw	r16,0(sp)
 1086268:	dfc00315 	stw	ra,12(sp)
 108626c:	dc800215 	stw	r18,8(sp)
 1086270:	2023883a 	mov	r17,r4
 1086274:	2821883a 	mov	r16,r5
 1086278:	10000f26 	beq	r2,zero,10862b8 <_Balloc+0x60>
 108627c:	8407883a 	add	r3,r16,r16
 1086280:	18c7883a 	add	r3,r3,r3
 1086284:	10c7883a 	add	r3,r2,r3
 1086288:	18800017 	ldw	r2,0(r3)
 108628c:	10001126 	beq	r2,zero,10862d4 <_Balloc+0x7c>
 1086290:	11000017 	ldw	r4,0(r2)
 1086294:	19000015 	stw	r4,0(r3)
 1086298:	10000415 	stw	zero,16(r2)
 108629c:	10000315 	stw	zero,12(r2)
 10862a0:	dfc00317 	ldw	ra,12(sp)
 10862a4:	dc800217 	ldw	r18,8(sp)
 10862a8:	dc400117 	ldw	r17,4(sp)
 10862ac:	dc000017 	ldw	r16,0(sp)
 10862b0:	dec00404 	addi	sp,sp,16
 10862b4:	f800283a 	ret
 10862b8:	01800844 	movi	r6,33
 10862bc:	01400104 	movi	r5,4
 10862c0:	10891940 	call	1089194 <_calloc_r>
 10862c4:	88801315 	stw	r2,76(r17)
 10862c8:	103fec1e 	bne	r2,zero,108627c <_Balloc+0x24>
 10862cc:	0005883a 	mov	r2,zero
 10862d0:	003ff306 	br	10862a0 <_Balloc+0x48>
 10862d4:	01400044 	movi	r5,1
 10862d8:	2c24983a 	sll	r18,r5,r16
 10862dc:	8809883a 	mov	r4,r17
 10862e0:	91800144 	addi	r6,r18,5
 10862e4:	318d883a 	add	r6,r6,r6
 10862e8:	318d883a 	add	r6,r6,r6
 10862ec:	10891940 	call	1089194 <_calloc_r>
 10862f0:	103ff626 	beq	r2,zero,10862cc <_Balloc+0x74>
 10862f4:	14000115 	stw	r16,4(r2)
 10862f8:	14800215 	stw	r18,8(r2)
 10862fc:	003fe606 	br	1086298 <_Balloc+0x40>

01086300 <_Bfree>:
 1086300:	28000826 	beq	r5,zero,1086324 <_Bfree+0x24>
 1086304:	28c00117 	ldw	r3,4(r5)
 1086308:	20801317 	ldw	r2,76(r4)
 108630c:	18c7883a 	add	r3,r3,r3
 1086310:	18c7883a 	add	r3,r3,r3
 1086314:	10c5883a 	add	r2,r2,r3
 1086318:	10c00017 	ldw	r3,0(r2)
 108631c:	28c00015 	stw	r3,0(r5)
 1086320:	11400015 	stw	r5,0(r2)
 1086324:	f800283a 	ret

01086328 <__multadd>:
 1086328:	defffa04 	addi	sp,sp,-24
 108632c:	dc800315 	stw	r18,12(sp)
 1086330:	dc400215 	stw	r17,8(sp)
 1086334:	dc000115 	stw	r16,4(sp)
 1086338:	2823883a 	mov	r17,r5
 108633c:	2c000417 	ldw	r16,16(r5)
 1086340:	dfc00515 	stw	ra,20(sp)
 1086344:	dcc00415 	stw	r19,16(sp)
 1086348:	2025883a 	mov	r18,r4
 108634c:	29400504 	addi	r5,r5,20
 1086350:	0011883a 	mov	r8,zero
 1086354:	28c00017 	ldw	r3,0(r5)
 1086358:	29400104 	addi	r5,r5,4
 108635c:	42000044 	addi	r8,r8,1
 1086360:	18bfffcc 	andi	r2,r3,65535
 1086364:	1185383a 	mul	r2,r2,r6
 1086368:	1806d43a 	srli	r3,r3,16
 108636c:	11cf883a 	add	r7,r2,r7
 1086370:	3808d43a 	srli	r4,r7,16
 1086374:	1987383a 	mul	r3,r3,r6
 1086378:	38bfffcc 	andi	r2,r7,65535
 108637c:	1907883a 	add	r3,r3,r4
 1086380:	1808943a 	slli	r4,r3,16
 1086384:	180ed43a 	srli	r7,r3,16
 1086388:	2085883a 	add	r2,r4,r2
 108638c:	28bfff15 	stw	r2,-4(r5)
 1086390:	443ff016 	blt	r8,r16,1086354 <__multadd+0x2c>
 1086394:	38000926 	beq	r7,zero,10863bc <__multadd+0x94>
 1086398:	88800217 	ldw	r2,8(r17)
 108639c:	80800f0e 	bge	r16,r2,10863dc <__multadd+0xb4>
 10863a0:	80800144 	addi	r2,r16,5
 10863a4:	1085883a 	add	r2,r2,r2
 10863a8:	1085883a 	add	r2,r2,r2
 10863ac:	8885883a 	add	r2,r17,r2
 10863b0:	11c00015 	stw	r7,0(r2)
 10863b4:	84000044 	addi	r16,r16,1
 10863b8:	8c000415 	stw	r16,16(r17)
 10863bc:	8805883a 	mov	r2,r17
 10863c0:	dfc00517 	ldw	ra,20(sp)
 10863c4:	dcc00417 	ldw	r19,16(sp)
 10863c8:	dc800317 	ldw	r18,12(sp)
 10863cc:	dc400217 	ldw	r17,8(sp)
 10863d0:	dc000117 	ldw	r16,4(sp)
 10863d4:	dec00604 	addi	sp,sp,24
 10863d8:	f800283a 	ret
 10863dc:	89400117 	ldw	r5,4(r17)
 10863e0:	9009883a 	mov	r4,r18
 10863e4:	d9c00015 	stw	r7,0(sp)
 10863e8:	29400044 	addi	r5,r5,1
 10863ec:	10862580 	call	1086258 <_Balloc>
 10863f0:	89800417 	ldw	r6,16(r17)
 10863f4:	89400304 	addi	r5,r17,12
 10863f8:	11000304 	addi	r4,r2,12
 10863fc:	31800084 	addi	r6,r6,2
 1086400:	318d883a 	add	r6,r6,r6
 1086404:	318d883a 	add	r6,r6,r6
 1086408:	1027883a 	mov	r19,r2
 108640c:	1085e8c0 	call	1085e8c <memcpy>
 1086410:	d9c00017 	ldw	r7,0(sp)
 1086414:	88000a26 	beq	r17,zero,1086440 <__multadd+0x118>
 1086418:	88c00117 	ldw	r3,4(r17)
 108641c:	90801317 	ldw	r2,76(r18)
 1086420:	18c7883a 	add	r3,r3,r3
 1086424:	18c7883a 	add	r3,r3,r3
 1086428:	10c5883a 	add	r2,r2,r3
 108642c:	10c00017 	ldw	r3,0(r2)
 1086430:	88c00015 	stw	r3,0(r17)
 1086434:	14400015 	stw	r17,0(r2)
 1086438:	9823883a 	mov	r17,r19
 108643c:	003fd806 	br	10863a0 <__multadd+0x78>
 1086440:	9823883a 	mov	r17,r19
 1086444:	003fd606 	br	10863a0 <__multadd+0x78>

01086448 <__s2b>:
 1086448:	defff904 	addi	sp,sp,-28
 108644c:	dc400115 	stw	r17,4(sp)
 1086450:	dc000015 	stw	r16,0(sp)
 1086454:	2023883a 	mov	r17,r4
 1086458:	2821883a 	mov	r16,r5
 108645c:	39000204 	addi	r4,r7,8
 1086460:	01400244 	movi	r5,9
 1086464:	dcc00315 	stw	r19,12(sp)
 1086468:	dc800215 	stw	r18,8(sp)
 108646c:	dfc00615 	stw	ra,24(sp)
 1086470:	dd400515 	stw	r21,20(sp)
 1086474:	dd000415 	stw	r20,16(sp)
 1086478:	3825883a 	mov	r18,r7
 108647c:	3027883a 	mov	r19,r6
 1086480:	108a4c40 	call	108a4c4 <__divsi3>
 1086484:	00c00044 	movi	r3,1
 1086488:	000b883a 	mov	r5,zero
 108648c:	1880030e 	bge	r3,r2,108649c <__s2b+0x54>
 1086490:	18c7883a 	add	r3,r3,r3
 1086494:	29400044 	addi	r5,r5,1
 1086498:	18bffd16 	blt	r3,r2,1086490 <__s2b+0x48>
 108649c:	8809883a 	mov	r4,r17
 10864a0:	10862580 	call	1086258 <_Balloc>
 10864a4:	d8c00717 	ldw	r3,28(sp)
 10864a8:	10c00515 	stw	r3,20(r2)
 10864ac:	00c00044 	movi	r3,1
 10864b0:	10c00415 	stw	r3,16(r2)
 10864b4:	00c00244 	movi	r3,9
 10864b8:	1cc0210e 	bge	r3,r19,1086540 <__s2b+0xf8>
 10864bc:	80eb883a 	add	r21,r16,r3
 10864c0:	a829883a 	mov	r20,r21
 10864c4:	84e1883a 	add	r16,r16,r19
 10864c8:	a1c00007 	ldb	r7,0(r20)
 10864cc:	01800284 	movi	r6,10
 10864d0:	a5000044 	addi	r20,r20,1
 10864d4:	100b883a 	mov	r5,r2
 10864d8:	39fff404 	addi	r7,r7,-48
 10864dc:	8809883a 	mov	r4,r17
 10864e0:	10863280 	call	1086328 <__multadd>
 10864e4:	a43ff81e 	bne	r20,r16,10864c8 <__s2b+0x80>
 10864e8:	ace1883a 	add	r16,r21,r19
 10864ec:	843ffe04 	addi	r16,r16,-8
 10864f0:	9c800a0e 	bge	r19,r18,108651c <__s2b+0xd4>
 10864f4:	94e5c83a 	sub	r18,r18,r19
 10864f8:	84a5883a 	add	r18,r16,r18
 10864fc:	81c00007 	ldb	r7,0(r16)
 1086500:	01800284 	movi	r6,10
 1086504:	84000044 	addi	r16,r16,1
 1086508:	100b883a 	mov	r5,r2
 108650c:	39fff404 	addi	r7,r7,-48
 1086510:	8809883a 	mov	r4,r17
 1086514:	10863280 	call	1086328 <__multadd>
 1086518:	84bff81e 	bne	r16,r18,10864fc <__s2b+0xb4>
 108651c:	dfc00617 	ldw	ra,24(sp)
 1086520:	dd400517 	ldw	r21,20(sp)
 1086524:	dd000417 	ldw	r20,16(sp)
 1086528:	dcc00317 	ldw	r19,12(sp)
 108652c:	dc800217 	ldw	r18,8(sp)
 1086530:	dc400117 	ldw	r17,4(sp)
 1086534:	dc000017 	ldw	r16,0(sp)
 1086538:	dec00704 	addi	sp,sp,28
 108653c:	f800283a 	ret
 1086540:	84000284 	addi	r16,r16,10
 1086544:	1827883a 	mov	r19,r3
 1086548:	003fe906 	br	10864f0 <__s2b+0xa8>

0108654c <__hi0bits>:
 108654c:	20bfffec 	andhi	r2,r4,65535
 1086550:	1000141e 	bne	r2,zero,10865a4 <__hi0bits+0x58>
 1086554:	2008943a 	slli	r4,r4,16
 1086558:	00800404 	movi	r2,16
 108655c:	20ffc02c 	andhi	r3,r4,65280
 1086560:	1800021e 	bne	r3,zero,108656c <__hi0bits+0x20>
 1086564:	2008923a 	slli	r4,r4,8
 1086568:	10800204 	addi	r2,r2,8
 108656c:	20fc002c 	andhi	r3,r4,61440
 1086570:	1800021e 	bne	r3,zero,108657c <__hi0bits+0x30>
 1086574:	2008913a 	slli	r4,r4,4
 1086578:	10800104 	addi	r2,r2,4
 108657c:	20f0002c 	andhi	r3,r4,49152
 1086580:	1800031e 	bne	r3,zero,1086590 <__hi0bits+0x44>
 1086584:	2109883a 	add	r4,r4,r4
 1086588:	10800084 	addi	r2,r2,2
 108658c:	2109883a 	add	r4,r4,r4
 1086590:	20000316 	blt	r4,zero,10865a0 <__hi0bits+0x54>
 1086594:	2110002c 	andhi	r4,r4,16384
 1086598:	2000041e 	bne	r4,zero,10865ac <__hi0bits+0x60>
 108659c:	00800804 	movi	r2,32
 10865a0:	f800283a 	ret
 10865a4:	0005883a 	mov	r2,zero
 10865a8:	003fec06 	br	108655c <__hi0bits+0x10>
 10865ac:	10800044 	addi	r2,r2,1
 10865b0:	f800283a 	ret

010865b4 <__lo0bits>:
 10865b4:	20c00017 	ldw	r3,0(r4)
 10865b8:	188001cc 	andi	r2,r3,7
 10865bc:	10000826 	beq	r2,zero,10865e0 <__lo0bits+0x2c>
 10865c0:	1880004c 	andi	r2,r3,1
 10865c4:	1000211e 	bne	r2,zero,108664c <__lo0bits+0x98>
 10865c8:	1880008c 	andi	r2,r3,2
 10865cc:	1000211e 	bne	r2,zero,1086654 <__lo0bits+0xa0>
 10865d0:	1806d0ba 	srli	r3,r3,2
 10865d4:	00800084 	movi	r2,2
 10865d8:	20c00015 	stw	r3,0(r4)
 10865dc:	f800283a 	ret
 10865e0:	18bfffcc 	andi	r2,r3,65535
 10865e4:	10001326 	beq	r2,zero,1086634 <__lo0bits+0x80>
 10865e8:	0005883a 	mov	r2,zero
 10865ec:	19403fcc 	andi	r5,r3,255
 10865f0:	2800021e 	bne	r5,zero,10865fc <__lo0bits+0x48>
 10865f4:	1806d23a 	srli	r3,r3,8
 10865f8:	10800204 	addi	r2,r2,8
 10865fc:	194003cc 	andi	r5,r3,15
 1086600:	2800021e 	bne	r5,zero,108660c <__lo0bits+0x58>
 1086604:	1806d13a 	srli	r3,r3,4
 1086608:	10800104 	addi	r2,r2,4
 108660c:	194000cc 	andi	r5,r3,3
 1086610:	2800021e 	bne	r5,zero,108661c <__lo0bits+0x68>
 1086614:	1806d0ba 	srli	r3,r3,2
 1086618:	10800084 	addi	r2,r2,2
 108661c:	1940004c 	andi	r5,r3,1
 1086620:	2800081e 	bne	r5,zero,1086644 <__lo0bits+0x90>
 1086624:	1806d07a 	srli	r3,r3,1
 1086628:	1800051e 	bne	r3,zero,1086640 <__lo0bits+0x8c>
 108662c:	00800804 	movi	r2,32
 1086630:	f800283a 	ret
 1086634:	1806d43a 	srli	r3,r3,16
 1086638:	00800404 	movi	r2,16
 108663c:	003feb06 	br	10865ec <__lo0bits+0x38>
 1086640:	10800044 	addi	r2,r2,1
 1086644:	20c00015 	stw	r3,0(r4)
 1086648:	f800283a 	ret
 108664c:	0005883a 	mov	r2,zero
 1086650:	f800283a 	ret
 1086654:	1806d07a 	srli	r3,r3,1
 1086658:	00800044 	movi	r2,1
 108665c:	20c00015 	stw	r3,0(r4)
 1086660:	f800283a 	ret

01086664 <__i2b>:
 1086664:	defffd04 	addi	sp,sp,-12
 1086668:	dc000015 	stw	r16,0(sp)
 108666c:	04000044 	movi	r16,1
 1086670:	dc400115 	stw	r17,4(sp)
 1086674:	2823883a 	mov	r17,r5
 1086678:	800b883a 	mov	r5,r16
 108667c:	dfc00215 	stw	ra,8(sp)
 1086680:	10862580 	call	1086258 <_Balloc>
 1086684:	14400515 	stw	r17,20(r2)
 1086688:	14000415 	stw	r16,16(r2)
 108668c:	dfc00217 	ldw	ra,8(sp)
 1086690:	dc400117 	ldw	r17,4(sp)
 1086694:	dc000017 	ldw	r16,0(sp)
 1086698:	dec00304 	addi	sp,sp,12
 108669c:	f800283a 	ret

010866a0 <__multiply>:
 10866a0:	defffa04 	addi	sp,sp,-24
 10866a4:	dcc00315 	stw	r19,12(sp)
 10866a8:	dc800215 	stw	r18,8(sp)
 10866ac:	34c00417 	ldw	r19,16(r6)
 10866b0:	2c800417 	ldw	r18,16(r5)
 10866b4:	dd000415 	stw	r20,16(sp)
 10866b8:	dc400115 	stw	r17,4(sp)
 10866bc:	dfc00515 	stw	ra,20(sp)
 10866c0:	dc000015 	stw	r16,0(sp)
 10866c4:	2829883a 	mov	r20,r5
 10866c8:	3023883a 	mov	r17,r6
 10866cc:	94c0050e 	bge	r18,r19,10866e4 <__multiply+0x44>
 10866d0:	9007883a 	mov	r3,r18
 10866d4:	3029883a 	mov	r20,r6
 10866d8:	9825883a 	mov	r18,r19
 10866dc:	2823883a 	mov	r17,r5
 10866e0:	1827883a 	mov	r19,r3
 10866e4:	a0800217 	ldw	r2,8(r20)
 10866e8:	94e1883a 	add	r16,r18,r19
 10866ec:	a1400117 	ldw	r5,4(r20)
 10866f0:	1400010e 	bge	r2,r16,10866f8 <__multiply+0x58>
 10866f4:	29400044 	addi	r5,r5,1
 10866f8:	10862580 	call	1086258 <_Balloc>
 10866fc:	8415883a 	add	r10,r16,r16
 1086700:	12c00504 	addi	r11,r2,20
 1086704:	5295883a 	add	r10,r10,r10
 1086708:	5a95883a 	add	r10,r11,r10
 108670c:	5807883a 	mov	r3,r11
 1086710:	5a80032e 	bgeu	r11,r10,1086720 <__multiply+0x80>
 1086714:	18000015 	stw	zero,0(r3)
 1086718:	18c00104 	addi	r3,r3,4
 108671c:	1abffd36 	bltu	r3,r10,1086714 <__multiply+0x74>
 1086720:	9ce7883a 	add	r19,r19,r19
 1086724:	94a5883a 	add	r18,r18,r18
 1086728:	89800504 	addi	r6,r17,20
 108672c:	9ce7883a 	add	r19,r19,r19
 1086730:	a3400504 	addi	r13,r20,20
 1086734:	94a5883a 	add	r18,r18,r18
 1086738:	34d9883a 	add	r12,r6,r19
 108673c:	6c93883a 	add	r9,r13,r18
 1086740:	3300422e 	bgeu	r6,r12,108684c <__multiply+0x1ac>
 1086744:	37c00017 	ldw	ra,0(r6)
 1086748:	fbffffcc 	andi	r15,ra,65535
 108674c:	78001b26 	beq	r15,zero,10867bc <__multiply+0x11c>
 1086750:	5811883a 	mov	r8,r11
 1086754:	681d883a 	mov	r14,r13
 1086758:	000f883a 	mov	r7,zero
 108675c:	71000017 	ldw	r4,0(r14)
 1086760:	40c00017 	ldw	r3,0(r8)
 1086764:	73800104 	addi	r14,r14,4
 1086768:	217fffcc 	andi	r5,r4,65535
 108676c:	2bcb383a 	mul	r5,r5,r15
 1086770:	2008d43a 	srli	r4,r4,16
 1086774:	1c7fffcc 	andi	r17,r3,65535
 1086778:	2c4b883a 	add	r5,r5,r17
 108677c:	29cb883a 	add	r5,r5,r7
 1086780:	23c9383a 	mul	r4,r4,r15
 1086784:	1806d43a 	srli	r3,r3,16
 1086788:	280ed43a 	srli	r7,r5,16
 108678c:	297fffcc 	andi	r5,r5,65535
 1086790:	20c7883a 	add	r3,r4,r3
 1086794:	19c7883a 	add	r3,r3,r7
 1086798:	1808943a 	slli	r4,r3,16
 108679c:	4023883a 	mov	r17,r8
 10867a0:	180ed43a 	srli	r7,r3,16
 10867a4:	214ab03a 	or	r5,r4,r5
 10867a8:	41400015 	stw	r5,0(r8)
 10867ac:	42000104 	addi	r8,r8,4
 10867b0:	727fea36 	bltu	r14,r9,108675c <__multiply+0xbc>
 10867b4:	89c00115 	stw	r7,4(r17)
 10867b8:	37c00017 	ldw	ra,0(r6)
 10867bc:	f83ed43a 	srli	ra,ra,16
 10867c0:	f8001f26 	beq	ra,zero,1086840 <__multiply+0x1a0>
 10867c4:	58c00017 	ldw	r3,0(r11)
 10867c8:	681d883a 	mov	r14,r13
 10867cc:	581f883a 	mov	r15,r11
 10867d0:	1811883a 	mov	r8,r3
 10867d4:	5825883a 	mov	r18,r11
 10867d8:	000f883a 	mov	r7,zero
 10867dc:	00000106 	br	10867e4 <__multiply+0x144>
 10867e0:	8825883a 	mov	r18,r17
 10867e4:	7140000b 	ldhu	r5,0(r14)
 10867e8:	4010d43a 	srli	r8,r8,16
 10867ec:	193fffcc 	andi	r4,r3,65535
 10867f0:	2fcb383a 	mul	r5,r5,ra
 10867f4:	7bc00104 	addi	r15,r15,4
 10867f8:	73800104 	addi	r14,r14,4
 10867fc:	2a0b883a 	add	r5,r5,r8
 1086800:	29cb883a 	add	r5,r5,r7
 1086804:	2806943a 	slli	r3,r5,16
 1086808:	94400104 	addi	r17,r18,4
 108680c:	280ad43a 	srli	r5,r5,16
 1086810:	1908b03a 	or	r4,r3,r4
 1086814:	793fff15 	stw	r4,-4(r15)
 1086818:	70ffff17 	ldw	r3,-4(r14)
 108681c:	8a000017 	ldw	r8,0(r17)
 1086820:	1806d43a 	srli	r3,r3,16
 1086824:	413fffcc 	andi	r4,r8,65535
 1086828:	1fc7383a 	mul	r3,r3,ra
 108682c:	1907883a 	add	r3,r3,r4
 1086830:	1947883a 	add	r3,r3,r5
 1086834:	180ed43a 	srli	r7,r3,16
 1086838:	727fe936 	bltu	r14,r9,10867e0 <__multiply+0x140>
 108683c:	90c00115 	stw	r3,4(r18)
 1086840:	31800104 	addi	r6,r6,4
 1086844:	5ac00104 	addi	r11,r11,4
 1086848:	333fbe36 	bltu	r6,r12,1086744 <__multiply+0xa4>
 108684c:	0400090e 	bge	zero,r16,1086874 <__multiply+0x1d4>
 1086850:	50ffff17 	ldw	r3,-4(r10)
 1086854:	52bfff04 	addi	r10,r10,-4
 1086858:	18000326 	beq	r3,zero,1086868 <__multiply+0x1c8>
 108685c:	00000506 	br	1086874 <__multiply+0x1d4>
 1086860:	50c00017 	ldw	r3,0(r10)
 1086864:	1800031e 	bne	r3,zero,1086874 <__multiply+0x1d4>
 1086868:	843fffc4 	addi	r16,r16,-1
 108686c:	52bfff04 	addi	r10,r10,-4
 1086870:	803ffb1e 	bne	r16,zero,1086860 <__multiply+0x1c0>
 1086874:	14000415 	stw	r16,16(r2)
 1086878:	dfc00517 	ldw	ra,20(sp)
 108687c:	dd000417 	ldw	r20,16(sp)
 1086880:	dcc00317 	ldw	r19,12(sp)
 1086884:	dc800217 	ldw	r18,8(sp)
 1086888:	dc400117 	ldw	r17,4(sp)
 108688c:	dc000017 	ldw	r16,0(sp)
 1086890:	dec00604 	addi	sp,sp,24
 1086894:	f800283a 	ret

01086898 <__pow5mult>:
 1086898:	defffa04 	addi	sp,sp,-24
 108689c:	dcc00315 	stw	r19,12(sp)
 10868a0:	dc000015 	stw	r16,0(sp)
 10868a4:	dfc00515 	stw	ra,20(sp)
 10868a8:	dd000415 	stw	r20,16(sp)
 10868ac:	dc800215 	stw	r18,8(sp)
 10868b0:	dc400115 	stw	r17,4(sp)
 10868b4:	308000cc 	andi	r2,r6,3
 10868b8:	3021883a 	mov	r16,r6
 10868bc:	2027883a 	mov	r19,r4
 10868c0:	10002f1e 	bne	r2,zero,1086980 <__pow5mult+0xe8>
 10868c4:	2825883a 	mov	r18,r5
 10868c8:	8021d0ba 	srai	r16,r16,2
 10868cc:	80001a26 	beq	r16,zero,1086938 <__pow5mult+0xa0>
 10868d0:	9c401217 	ldw	r17,72(r19)
 10868d4:	8800061e 	bne	r17,zero,10868f0 <__pow5mult+0x58>
 10868d8:	00003406 	br	10869ac <__pow5mult+0x114>
 10868dc:	8021d07a 	srai	r16,r16,1
 10868e0:	80001526 	beq	r16,zero,1086938 <__pow5mult+0xa0>
 10868e4:	88800017 	ldw	r2,0(r17)
 10868e8:	10001c26 	beq	r2,zero,108695c <__pow5mult+0xc4>
 10868ec:	1023883a 	mov	r17,r2
 10868f0:	8080004c 	andi	r2,r16,1
 10868f4:	103ff926 	beq	r2,zero,10868dc <__pow5mult+0x44>
 10868f8:	880d883a 	mov	r6,r17
 10868fc:	900b883a 	mov	r5,r18
 1086900:	9809883a 	mov	r4,r19
 1086904:	10866a00 	call	10866a0 <__multiply>
 1086908:	90001b26 	beq	r18,zero,1086978 <__pow5mult+0xe0>
 108690c:	91000117 	ldw	r4,4(r18)
 1086910:	98c01317 	ldw	r3,76(r19)
 1086914:	8021d07a 	srai	r16,r16,1
 1086918:	2109883a 	add	r4,r4,r4
 108691c:	2109883a 	add	r4,r4,r4
 1086920:	1907883a 	add	r3,r3,r4
 1086924:	19000017 	ldw	r4,0(r3)
 1086928:	91000015 	stw	r4,0(r18)
 108692c:	1c800015 	stw	r18,0(r3)
 1086930:	1025883a 	mov	r18,r2
 1086934:	803feb1e 	bne	r16,zero,10868e4 <__pow5mult+0x4c>
 1086938:	9005883a 	mov	r2,r18
 108693c:	dfc00517 	ldw	ra,20(sp)
 1086940:	dd000417 	ldw	r20,16(sp)
 1086944:	dcc00317 	ldw	r19,12(sp)
 1086948:	dc800217 	ldw	r18,8(sp)
 108694c:	dc400117 	ldw	r17,4(sp)
 1086950:	dc000017 	ldw	r16,0(sp)
 1086954:	dec00604 	addi	sp,sp,24
 1086958:	f800283a 	ret
 108695c:	880d883a 	mov	r6,r17
 1086960:	880b883a 	mov	r5,r17
 1086964:	9809883a 	mov	r4,r19
 1086968:	10866a00 	call	10866a0 <__multiply>
 108696c:	88800015 	stw	r2,0(r17)
 1086970:	10000015 	stw	zero,0(r2)
 1086974:	003fdd06 	br	10868ec <__pow5mult+0x54>
 1086978:	1025883a 	mov	r18,r2
 108697c:	003fd706 	br	10868dc <__pow5mult+0x44>
 1086980:	10bfffc4 	addi	r2,r2,-1
 1086984:	1085883a 	add	r2,r2,r2
 1086988:	00c04274 	movhi	r3,265
 108698c:	18fcc904 	addi	r3,r3,-3292
 1086990:	1085883a 	add	r2,r2,r2
 1086994:	1885883a 	add	r2,r3,r2
 1086998:	11800017 	ldw	r6,0(r2)
 108699c:	000f883a 	mov	r7,zero
 10869a0:	10863280 	call	1086328 <__multadd>
 10869a4:	1025883a 	mov	r18,r2
 10869a8:	003fc706 	br	10868c8 <__pow5mult+0x30>
 10869ac:	05000044 	movi	r20,1
 10869b0:	a00b883a 	mov	r5,r20
 10869b4:	9809883a 	mov	r4,r19
 10869b8:	10862580 	call	1086258 <_Balloc>
 10869bc:	1023883a 	mov	r17,r2
 10869c0:	00809c44 	movi	r2,625
 10869c4:	88800515 	stw	r2,20(r17)
 10869c8:	8d000415 	stw	r20,16(r17)
 10869cc:	9c401215 	stw	r17,72(r19)
 10869d0:	88000015 	stw	zero,0(r17)
 10869d4:	003fc606 	br	10868f0 <__pow5mult+0x58>

010869d8 <__lshift>:
 10869d8:	defff904 	addi	sp,sp,-28
 10869dc:	dd400515 	stw	r21,20(sp)
 10869e0:	dcc00315 	stw	r19,12(sp)
 10869e4:	302bd17a 	srai	r21,r6,5
 10869e8:	2cc00417 	ldw	r19,16(r5)
 10869ec:	28800217 	ldw	r2,8(r5)
 10869f0:	dd000415 	stw	r20,16(sp)
 10869f4:	ace7883a 	add	r19,r21,r19
 10869f8:	dc800215 	stw	r18,8(sp)
 10869fc:	dc400115 	stw	r17,4(sp)
 1086a00:	dc000015 	stw	r16,0(sp)
 1086a04:	dfc00615 	stw	ra,24(sp)
 1086a08:	9c000044 	addi	r16,r19,1
 1086a0c:	2823883a 	mov	r17,r5
 1086a10:	3029883a 	mov	r20,r6
 1086a14:	2025883a 	mov	r18,r4
 1086a18:	29400117 	ldw	r5,4(r5)
 1086a1c:	1400030e 	bge	r2,r16,1086a2c <__lshift+0x54>
 1086a20:	1085883a 	add	r2,r2,r2
 1086a24:	29400044 	addi	r5,r5,1
 1086a28:	143ffd16 	blt	r2,r16,1086a20 <__lshift+0x48>
 1086a2c:	9009883a 	mov	r4,r18
 1086a30:	10862580 	call	1086258 <_Balloc>
 1086a34:	10c00504 	addi	r3,r2,20
 1086a38:	0540070e 	bge	zero,r21,1086a58 <__lshift+0x80>
 1086a3c:	ad6b883a 	add	r21,r21,r21
 1086a40:	ad6b883a 	add	r21,r21,r21
 1086a44:	1809883a 	mov	r4,r3
 1086a48:	1d47883a 	add	r3,r3,r21
 1086a4c:	20000015 	stw	zero,0(r4)
 1086a50:	21000104 	addi	r4,r4,4
 1086a54:	193ffd1e 	bne	r3,r4,1086a4c <__lshift+0x74>
 1086a58:	8a000417 	ldw	r8,16(r17)
 1086a5c:	89000504 	addi	r4,r17,20
 1086a60:	a18007cc 	andi	r6,r20,31
 1086a64:	4211883a 	add	r8,r8,r8
 1086a68:	4211883a 	add	r8,r8,r8
 1086a6c:	2211883a 	add	r8,r4,r8
 1086a70:	30002326 	beq	r6,zero,1086b00 <__lshift+0x128>
 1086a74:	02400804 	movi	r9,32
 1086a78:	4993c83a 	sub	r9,r9,r6
 1086a7c:	000b883a 	mov	r5,zero
 1086a80:	21c00017 	ldw	r7,0(r4)
 1086a84:	1815883a 	mov	r10,r3
 1086a88:	18c00104 	addi	r3,r3,4
 1086a8c:	398e983a 	sll	r7,r7,r6
 1086a90:	21000104 	addi	r4,r4,4
 1086a94:	394ab03a 	or	r5,r7,r5
 1086a98:	197fff15 	stw	r5,-4(r3)
 1086a9c:	217fff17 	ldw	r5,-4(r4)
 1086aa0:	2a4ad83a 	srl	r5,r5,r9
 1086aa4:	223ff636 	bltu	r4,r8,1086a80 <__lshift+0xa8>
 1086aa8:	51400115 	stw	r5,4(r10)
 1086aac:	28001a1e 	bne	r5,zero,1086b18 <__lshift+0x140>
 1086ab0:	843fffc4 	addi	r16,r16,-1
 1086ab4:	14000415 	stw	r16,16(r2)
 1086ab8:	88000826 	beq	r17,zero,1086adc <__lshift+0x104>
 1086abc:	89000117 	ldw	r4,4(r17)
 1086ac0:	90c01317 	ldw	r3,76(r18)
 1086ac4:	2109883a 	add	r4,r4,r4
 1086ac8:	2109883a 	add	r4,r4,r4
 1086acc:	1907883a 	add	r3,r3,r4
 1086ad0:	19000017 	ldw	r4,0(r3)
 1086ad4:	89000015 	stw	r4,0(r17)
 1086ad8:	1c400015 	stw	r17,0(r3)
 1086adc:	dfc00617 	ldw	ra,24(sp)
 1086ae0:	dd400517 	ldw	r21,20(sp)
 1086ae4:	dd000417 	ldw	r20,16(sp)
 1086ae8:	dcc00317 	ldw	r19,12(sp)
 1086aec:	dc800217 	ldw	r18,8(sp)
 1086af0:	dc400117 	ldw	r17,4(sp)
 1086af4:	dc000017 	ldw	r16,0(sp)
 1086af8:	dec00704 	addi	sp,sp,28
 1086afc:	f800283a 	ret
 1086b00:	21400017 	ldw	r5,0(r4)
 1086b04:	18c00104 	addi	r3,r3,4
 1086b08:	21000104 	addi	r4,r4,4
 1086b0c:	197fff15 	stw	r5,-4(r3)
 1086b10:	223ffb36 	bltu	r4,r8,1086b00 <__lshift+0x128>
 1086b14:	003fe606 	br	1086ab0 <__lshift+0xd8>
 1086b18:	9c000084 	addi	r16,r19,2
 1086b1c:	003fe406 	br	1086ab0 <__lshift+0xd8>

01086b20 <__mcmp>:
 1086b20:	20800417 	ldw	r2,16(r4)
 1086b24:	28c00417 	ldw	r3,16(r5)
 1086b28:	10c5c83a 	sub	r2,r2,r3
 1086b2c:	1000111e 	bne	r2,zero,1086b74 <__mcmp+0x54>
 1086b30:	18c7883a 	add	r3,r3,r3
 1086b34:	18c7883a 	add	r3,r3,r3
 1086b38:	21000504 	addi	r4,r4,20
 1086b3c:	29400504 	addi	r5,r5,20
 1086b40:	20c5883a 	add	r2,r4,r3
 1086b44:	28cb883a 	add	r5,r5,r3
 1086b48:	00000106 	br	1086b50 <__mcmp+0x30>
 1086b4c:	20800a2e 	bgeu	r4,r2,1086b78 <__mcmp+0x58>
 1086b50:	10bfff04 	addi	r2,r2,-4
 1086b54:	297fff04 	addi	r5,r5,-4
 1086b58:	11800017 	ldw	r6,0(r2)
 1086b5c:	28c00017 	ldw	r3,0(r5)
 1086b60:	30fffa26 	beq	r6,r3,1086b4c <__mcmp+0x2c>
 1086b64:	30c00236 	bltu	r6,r3,1086b70 <__mcmp+0x50>
 1086b68:	00800044 	movi	r2,1
 1086b6c:	f800283a 	ret
 1086b70:	00bfffc4 	movi	r2,-1
 1086b74:	f800283a 	ret
 1086b78:	0005883a 	mov	r2,zero
 1086b7c:	f800283a 	ret

01086b80 <__mdiff>:
 1086b80:	28c00417 	ldw	r3,16(r5)
 1086b84:	30800417 	ldw	r2,16(r6)
 1086b88:	defffa04 	addi	sp,sp,-24
 1086b8c:	dcc00315 	stw	r19,12(sp)
 1086b90:	dc800215 	stw	r18,8(sp)
 1086b94:	dfc00515 	stw	ra,20(sp)
 1086b98:	dd000415 	stw	r20,16(sp)
 1086b9c:	dc400115 	stw	r17,4(sp)
 1086ba0:	dc000015 	stw	r16,0(sp)
 1086ba4:	1887c83a 	sub	r3,r3,r2
 1086ba8:	2825883a 	mov	r18,r5
 1086bac:	3027883a 	mov	r19,r6
 1086bb0:	1800141e 	bne	r3,zero,1086c04 <__mdiff+0x84>
 1086bb4:	1085883a 	add	r2,r2,r2
 1086bb8:	1085883a 	add	r2,r2,r2
 1086bbc:	2a000504 	addi	r8,r5,20
 1086bc0:	34000504 	addi	r16,r6,20
 1086bc4:	4087883a 	add	r3,r8,r2
 1086bc8:	8085883a 	add	r2,r16,r2
 1086bcc:	00000106 	br	1086bd4 <__mdiff+0x54>
 1086bd0:	40c0592e 	bgeu	r8,r3,1086d38 <__mdiff+0x1b8>
 1086bd4:	18ffff04 	addi	r3,r3,-4
 1086bd8:	10bfff04 	addi	r2,r2,-4
 1086bdc:	19c00017 	ldw	r7,0(r3)
 1086be0:	11400017 	ldw	r5,0(r2)
 1086be4:	397ffa26 	beq	r7,r5,1086bd0 <__mdiff+0x50>
 1086be8:	3940592e 	bgeu	r7,r5,1086d50 <__mdiff+0x1d0>
 1086bec:	9005883a 	mov	r2,r18
 1086bf0:	4023883a 	mov	r17,r8
 1086bf4:	9825883a 	mov	r18,r19
 1086bf8:	05000044 	movi	r20,1
 1086bfc:	1027883a 	mov	r19,r2
 1086c00:	00000406 	br	1086c14 <__mdiff+0x94>
 1086c04:	18005616 	blt	r3,zero,1086d60 <__mdiff+0x1e0>
 1086c08:	34400504 	addi	r17,r6,20
 1086c0c:	2c000504 	addi	r16,r5,20
 1086c10:	0029883a 	mov	r20,zero
 1086c14:	91400117 	ldw	r5,4(r18)
 1086c18:	10862580 	call	1086258 <_Balloc>
 1086c1c:	92400417 	ldw	r9,16(r18)
 1086c20:	9b000417 	ldw	r12,16(r19)
 1086c24:	12c00504 	addi	r11,r2,20
 1086c28:	4a51883a 	add	r8,r9,r9
 1086c2c:	6319883a 	add	r12,r12,r12
 1086c30:	4211883a 	add	r8,r8,r8
 1086c34:	6319883a 	add	r12,r12,r12
 1086c38:	15000315 	stw	r20,12(r2)
 1086c3c:	8211883a 	add	r8,r16,r8
 1086c40:	8b19883a 	add	r12,r17,r12
 1086c44:	0007883a 	mov	r3,zero
 1086c48:	81400017 	ldw	r5,0(r16)
 1086c4c:	89c00017 	ldw	r7,0(r17)
 1086c50:	59800104 	addi	r6,r11,4
 1086c54:	293fffcc 	andi	r4,r5,65535
 1086c58:	20c7883a 	add	r3,r4,r3
 1086c5c:	393fffcc 	andi	r4,r7,65535
 1086c60:	1909c83a 	sub	r4,r3,r4
 1086c64:	280ad43a 	srli	r5,r5,16
 1086c68:	380ed43a 	srli	r7,r7,16
 1086c6c:	2007d43a 	srai	r3,r4,16
 1086c70:	213fffcc 	andi	r4,r4,65535
 1086c74:	29cbc83a 	sub	r5,r5,r7
 1086c78:	28c7883a 	add	r3,r5,r3
 1086c7c:	180a943a 	slli	r5,r3,16
 1086c80:	8c400104 	addi	r17,r17,4
 1086c84:	84000104 	addi	r16,r16,4
 1086c88:	2908b03a 	or	r4,r5,r4
 1086c8c:	59000015 	stw	r4,0(r11)
 1086c90:	1807d43a 	srai	r3,r3,16
 1086c94:	3015883a 	mov	r10,r6
 1086c98:	3017883a 	mov	r11,r6
 1086c9c:	8b3fea36 	bltu	r17,r12,1086c48 <__mdiff+0xc8>
 1086ca0:	8200162e 	bgeu	r16,r8,1086cfc <__mdiff+0x17c>
 1086ca4:	8017883a 	mov	r11,r16
 1086ca8:	59400017 	ldw	r5,0(r11)
 1086cac:	31800104 	addi	r6,r6,4
 1086cb0:	5ac00104 	addi	r11,r11,4
 1086cb4:	293fffcc 	andi	r4,r5,65535
 1086cb8:	20c7883a 	add	r3,r4,r3
 1086cbc:	280ed43a 	srli	r7,r5,16
 1086cc0:	180bd43a 	srai	r5,r3,16
 1086cc4:	193fffcc 	andi	r4,r3,65535
 1086cc8:	3947883a 	add	r3,r7,r5
 1086ccc:	180a943a 	slli	r5,r3,16
 1086cd0:	1807d43a 	srai	r3,r3,16
 1086cd4:	2908b03a 	or	r4,r5,r4
 1086cd8:	313fff15 	stw	r4,-4(r6)
 1086cdc:	5a3ff236 	bltu	r11,r8,1086ca8 <__mdiff+0x128>
 1086ce0:	0406303a 	nor	r3,zero,r16
 1086ce4:	1a07883a 	add	r3,r3,r8
 1086ce8:	1806d0ba 	srli	r3,r3,2
 1086cec:	18c00044 	addi	r3,r3,1
 1086cf0:	18c7883a 	add	r3,r3,r3
 1086cf4:	18c7883a 	add	r3,r3,r3
 1086cf8:	50d5883a 	add	r10,r10,r3
 1086cfc:	50ffff04 	addi	r3,r10,-4
 1086d00:	2000041e 	bne	r4,zero,1086d14 <__mdiff+0x194>
 1086d04:	18ffff04 	addi	r3,r3,-4
 1086d08:	19000017 	ldw	r4,0(r3)
 1086d0c:	4a7fffc4 	addi	r9,r9,-1
 1086d10:	203ffc26 	beq	r4,zero,1086d04 <__mdiff+0x184>
 1086d14:	12400415 	stw	r9,16(r2)
 1086d18:	dfc00517 	ldw	ra,20(sp)
 1086d1c:	dd000417 	ldw	r20,16(sp)
 1086d20:	dcc00317 	ldw	r19,12(sp)
 1086d24:	dc800217 	ldw	r18,8(sp)
 1086d28:	dc400117 	ldw	r17,4(sp)
 1086d2c:	dc000017 	ldw	r16,0(sp)
 1086d30:	dec00604 	addi	sp,sp,24
 1086d34:	f800283a 	ret
 1086d38:	000b883a 	mov	r5,zero
 1086d3c:	10862580 	call	1086258 <_Balloc>
 1086d40:	00c00044 	movi	r3,1
 1086d44:	10c00415 	stw	r3,16(r2)
 1086d48:	10000515 	stw	zero,20(r2)
 1086d4c:	003ff206 	br	1086d18 <__mdiff+0x198>
 1086d50:	8023883a 	mov	r17,r16
 1086d54:	0029883a 	mov	r20,zero
 1086d58:	4021883a 	mov	r16,r8
 1086d5c:	003fad06 	br	1086c14 <__mdiff+0x94>
 1086d60:	9005883a 	mov	r2,r18
 1086d64:	94400504 	addi	r17,r18,20
 1086d68:	9c000504 	addi	r16,r19,20
 1086d6c:	9825883a 	mov	r18,r19
 1086d70:	05000044 	movi	r20,1
 1086d74:	1027883a 	mov	r19,r2
 1086d78:	003fa606 	br	1086c14 <__mdiff+0x94>

01086d7c <__ulp>:
 1086d7c:	295ffc2c 	andhi	r5,r5,32752
 1086d80:	00bf3034 	movhi	r2,64704
 1086d84:	2887883a 	add	r3,r5,r2
 1086d88:	00c0020e 	bge	zero,r3,1086d94 <__ulp+0x18>
 1086d8c:	0005883a 	mov	r2,zero
 1086d90:	f800283a 	ret
 1086d94:	00c7c83a 	sub	r3,zero,r3
 1086d98:	1807d53a 	srai	r3,r3,20
 1086d9c:	008004c4 	movi	r2,19
 1086da0:	10c00b0e 	bge	r2,r3,1086dd0 <__ulp+0x54>
 1086da4:	18bffb04 	addi	r2,r3,-20
 1086da8:	01000784 	movi	r4,30
 1086dac:	0007883a 	mov	r3,zero
 1086db0:	20800516 	blt	r4,r2,1086dc8 <__ulp+0x4c>
 1086db4:	010007c4 	movi	r4,31
 1086db8:	2089c83a 	sub	r4,r4,r2
 1086dbc:	00800044 	movi	r2,1
 1086dc0:	1104983a 	sll	r2,r2,r4
 1086dc4:	f800283a 	ret
 1086dc8:	00800044 	movi	r2,1
 1086dcc:	f800283a 	ret
 1086dd0:	01400234 	movhi	r5,8
 1086dd4:	28c7d83a 	sra	r3,r5,r3
 1086dd8:	0005883a 	mov	r2,zero
 1086ddc:	f800283a 	ret

01086de0 <__b2d>:
 1086de0:	defffa04 	addi	sp,sp,-24
 1086de4:	dc000015 	stw	r16,0(sp)
 1086de8:	24000417 	ldw	r16,16(r4)
 1086dec:	dc400115 	stw	r17,4(sp)
 1086df0:	24400504 	addi	r17,r4,20
 1086df4:	8421883a 	add	r16,r16,r16
 1086df8:	8421883a 	add	r16,r16,r16
 1086dfc:	8c21883a 	add	r16,r17,r16
 1086e00:	dc800215 	stw	r18,8(sp)
 1086e04:	84bfff17 	ldw	r18,-4(r16)
 1086e08:	dd000415 	stw	r20,16(sp)
 1086e0c:	dcc00315 	stw	r19,12(sp)
 1086e10:	9009883a 	mov	r4,r18
 1086e14:	2829883a 	mov	r20,r5
 1086e18:	dfc00515 	stw	ra,20(sp)
 1086e1c:	108654c0 	call	108654c <__hi0bits>
 1086e20:	00c00804 	movi	r3,32
 1086e24:	1889c83a 	sub	r4,r3,r2
 1086e28:	a1000015 	stw	r4,0(r20)
 1086e2c:	01000284 	movi	r4,10
 1086e30:	84ffff04 	addi	r19,r16,-4
 1086e34:	20801216 	blt	r4,r2,1086e80 <__b2d+0xa0>
 1086e38:	018002c4 	movi	r6,11
 1086e3c:	308dc83a 	sub	r6,r6,r2
 1086e40:	9186d83a 	srl	r3,r18,r6
 1086e44:	18cffc34 	orhi	r3,r3,16368
 1086e48:	8cc0212e 	bgeu	r17,r19,1086ed0 <__b2d+0xf0>
 1086e4c:	813ffe17 	ldw	r4,-8(r16)
 1086e50:	218cd83a 	srl	r6,r4,r6
 1086e54:	10800544 	addi	r2,r2,21
 1086e58:	9084983a 	sll	r2,r18,r2
 1086e5c:	1184b03a 	or	r2,r2,r6
 1086e60:	dfc00517 	ldw	ra,20(sp)
 1086e64:	dd000417 	ldw	r20,16(sp)
 1086e68:	dcc00317 	ldw	r19,12(sp)
 1086e6c:	dc800217 	ldw	r18,8(sp)
 1086e70:	dc400117 	ldw	r17,4(sp)
 1086e74:	dc000017 	ldw	r16,0(sp)
 1086e78:	dec00604 	addi	sp,sp,24
 1086e7c:	f800283a 	ret
 1086e80:	8cc00f2e 	bgeu	r17,r19,1086ec0 <__b2d+0xe0>
 1086e84:	117ffd44 	addi	r5,r2,-11
 1086e88:	80bffe17 	ldw	r2,-8(r16)
 1086e8c:	28000e26 	beq	r5,zero,1086ec8 <__b2d+0xe8>
 1086e90:	1949c83a 	sub	r4,r3,r5
 1086e94:	9164983a 	sll	r18,r18,r5
 1086e98:	1106d83a 	srl	r3,r2,r4
 1086e9c:	81bffe04 	addi	r6,r16,-8
 1086ea0:	948ffc34 	orhi	r18,r18,16368
 1086ea4:	90c6b03a 	or	r3,r18,r3
 1086ea8:	89800e2e 	bgeu	r17,r6,1086ee4 <__b2d+0x104>
 1086eac:	81bffd17 	ldw	r6,-12(r16)
 1086eb0:	1144983a 	sll	r2,r2,r5
 1086eb4:	310ad83a 	srl	r5,r6,r4
 1086eb8:	2884b03a 	or	r2,r5,r2
 1086ebc:	003fe806 	br	1086e60 <__b2d+0x80>
 1086ec0:	10bffd44 	addi	r2,r2,-11
 1086ec4:	1000041e 	bne	r2,zero,1086ed8 <__b2d+0xf8>
 1086ec8:	90cffc34 	orhi	r3,r18,16368
 1086ecc:	003fe406 	br	1086e60 <__b2d+0x80>
 1086ed0:	000d883a 	mov	r6,zero
 1086ed4:	003fdf06 	br	1086e54 <__b2d+0x74>
 1086ed8:	90a4983a 	sll	r18,r18,r2
 1086edc:	0005883a 	mov	r2,zero
 1086ee0:	003ff906 	br	1086ec8 <__b2d+0xe8>
 1086ee4:	1144983a 	sll	r2,r2,r5
 1086ee8:	003fdd06 	br	1086e60 <__b2d+0x80>

01086eec <__d2b>:
 1086eec:	defff804 	addi	sp,sp,-32
 1086ef0:	dc000215 	stw	r16,8(sp)
 1086ef4:	3021883a 	mov	r16,r6
 1086ef8:	dc400315 	stw	r17,12(sp)
 1086efc:	8022907a 	slli	r17,r16,1
 1086f00:	dd000615 	stw	r20,24(sp)
 1086f04:	2829883a 	mov	r20,r5
 1086f08:	01400044 	movi	r5,1
 1086f0c:	dcc00515 	stw	r19,20(sp)
 1086f10:	dc800415 	stw	r18,16(sp)
 1086f14:	dfc00715 	stw	ra,28(sp)
 1086f18:	3825883a 	mov	r18,r7
 1086f1c:	8822d57a 	srli	r17,r17,21
 1086f20:	10862580 	call	1086258 <_Balloc>
 1086f24:	1027883a 	mov	r19,r2
 1086f28:	00800434 	movhi	r2,16
 1086f2c:	10bfffc4 	addi	r2,r2,-1
 1086f30:	808c703a 	and	r6,r16,r2
 1086f34:	88000126 	beq	r17,zero,1086f3c <__d2b+0x50>
 1086f38:	31800434 	orhi	r6,r6,16
 1086f3c:	d9800015 	stw	r6,0(sp)
 1086f40:	a0002426 	beq	r20,zero,1086fd4 <__d2b+0xe8>
 1086f44:	d9000104 	addi	r4,sp,4
 1086f48:	dd000115 	stw	r20,4(sp)
 1086f4c:	10865b40 	call	10865b4 <__lo0bits>
 1086f50:	d8c00017 	ldw	r3,0(sp)
 1086f54:	10002f1e 	bne	r2,zero,1087014 <__d2b+0x128>
 1086f58:	d9000117 	ldw	r4,4(sp)
 1086f5c:	99000515 	stw	r4,20(r19)
 1086f60:	1821003a 	cmpeq	r16,r3,zero
 1086f64:	01000084 	movi	r4,2
 1086f68:	2421c83a 	sub	r16,r4,r16
 1086f6c:	98c00615 	stw	r3,24(r19)
 1086f70:	9c000415 	stw	r16,16(r19)
 1086f74:	88001f1e 	bne	r17,zero,1086ff4 <__d2b+0x108>
 1086f78:	10bef384 	addi	r2,r2,-1074
 1086f7c:	90800015 	stw	r2,0(r18)
 1086f80:	00900034 	movhi	r2,16384
 1086f84:	10bfffc4 	addi	r2,r2,-1
 1086f88:	8085883a 	add	r2,r16,r2
 1086f8c:	1085883a 	add	r2,r2,r2
 1086f90:	1085883a 	add	r2,r2,r2
 1086f94:	9885883a 	add	r2,r19,r2
 1086f98:	11000517 	ldw	r4,20(r2)
 1086f9c:	8020917a 	slli	r16,r16,5
 1086fa0:	108654c0 	call	108654c <__hi0bits>
 1086fa4:	d8c00817 	ldw	r3,32(sp)
 1086fa8:	8085c83a 	sub	r2,r16,r2
 1086fac:	18800015 	stw	r2,0(r3)
 1086fb0:	9805883a 	mov	r2,r19
 1086fb4:	dfc00717 	ldw	ra,28(sp)
 1086fb8:	dd000617 	ldw	r20,24(sp)
 1086fbc:	dcc00517 	ldw	r19,20(sp)
 1086fc0:	dc800417 	ldw	r18,16(sp)
 1086fc4:	dc400317 	ldw	r17,12(sp)
 1086fc8:	dc000217 	ldw	r16,8(sp)
 1086fcc:	dec00804 	addi	sp,sp,32
 1086fd0:	f800283a 	ret
 1086fd4:	d809883a 	mov	r4,sp
 1086fd8:	10865b40 	call	10865b4 <__lo0bits>
 1086fdc:	d8c00017 	ldw	r3,0(sp)
 1086fe0:	04000044 	movi	r16,1
 1086fe4:	9c000415 	stw	r16,16(r19)
 1086fe8:	98c00515 	stw	r3,20(r19)
 1086fec:	10800804 	addi	r2,r2,32
 1086ff0:	883fe126 	beq	r17,zero,1086f78 <__d2b+0x8c>
 1086ff4:	00c00d44 	movi	r3,53
 1086ff8:	8c7ef344 	addi	r17,r17,-1075
 1086ffc:	88a3883a 	add	r17,r17,r2
 1087000:	1885c83a 	sub	r2,r3,r2
 1087004:	d8c00817 	ldw	r3,32(sp)
 1087008:	94400015 	stw	r17,0(r18)
 108700c:	18800015 	stw	r2,0(r3)
 1087010:	003fe706 	br	1086fb0 <__d2b+0xc4>
 1087014:	01000804 	movi	r4,32
 1087018:	2089c83a 	sub	r4,r4,r2
 108701c:	1908983a 	sll	r4,r3,r4
 1087020:	d9400117 	ldw	r5,4(sp)
 1087024:	1886d83a 	srl	r3,r3,r2
 1087028:	2148b03a 	or	r4,r4,r5
 108702c:	99000515 	stw	r4,20(r19)
 1087030:	d8c00015 	stw	r3,0(sp)
 1087034:	003fca06 	br	1086f60 <__d2b+0x74>

01087038 <__ratio>:
 1087038:	defff904 	addi	sp,sp,-28
 108703c:	dc400315 	stw	r17,12(sp)
 1087040:	2823883a 	mov	r17,r5
 1087044:	d9400104 	addi	r5,sp,4
 1087048:	dfc00615 	stw	ra,24(sp)
 108704c:	dcc00515 	stw	r19,20(sp)
 1087050:	dc800415 	stw	r18,16(sp)
 1087054:	2027883a 	mov	r19,r4
 1087058:	dc000215 	stw	r16,8(sp)
 108705c:	1086de00 	call	1086de0 <__b2d>
 1087060:	d80b883a 	mov	r5,sp
 1087064:	8809883a 	mov	r4,r17
 1087068:	1025883a 	mov	r18,r2
 108706c:	1821883a 	mov	r16,r3
 1087070:	1086de00 	call	1086de0 <__b2d>
 1087074:	8a000417 	ldw	r8,16(r17)
 1087078:	99000417 	ldw	r4,16(r19)
 108707c:	d9400117 	ldw	r5,4(sp)
 1087080:	2209c83a 	sub	r4,r4,r8
 1087084:	2010917a 	slli	r8,r4,5
 1087088:	d9000017 	ldw	r4,0(sp)
 108708c:	2909c83a 	sub	r4,r5,r4
 1087090:	4109883a 	add	r4,r8,r4
 1087094:	01000e0e 	bge	zero,r4,10870d0 <__ratio+0x98>
 1087098:	2008953a 	slli	r4,r4,20
 108709c:	2421883a 	add	r16,r4,r16
 10870a0:	100d883a 	mov	r6,r2
 10870a4:	180f883a 	mov	r7,r3
 10870a8:	9009883a 	mov	r4,r18
 10870ac:	800b883a 	mov	r5,r16
 10870b0:	108af240 	call	108af24 <__divdf3>
 10870b4:	dfc00617 	ldw	ra,24(sp)
 10870b8:	dcc00517 	ldw	r19,20(sp)
 10870bc:	dc800417 	ldw	r18,16(sp)
 10870c0:	dc400317 	ldw	r17,12(sp)
 10870c4:	dc000217 	ldw	r16,8(sp)
 10870c8:	dec00704 	addi	sp,sp,28
 10870cc:	f800283a 	ret
 10870d0:	2008953a 	slli	r4,r4,20
 10870d4:	1907c83a 	sub	r3,r3,r4
 10870d8:	003ff106 	br	10870a0 <__ratio+0x68>

010870dc <_mprec_log10>:
 10870dc:	defffe04 	addi	sp,sp,-8
 10870e0:	dc000015 	stw	r16,0(sp)
 10870e4:	dfc00115 	stw	ra,4(sp)
 10870e8:	008005c4 	movi	r2,23
 10870ec:	2021883a 	mov	r16,r4
 10870f0:	11000d0e 	bge	r2,r4,1087128 <_mprec_log10+0x4c>
 10870f4:	0005883a 	mov	r2,zero
 10870f8:	00cffc34 	movhi	r3,16368
 10870fc:	843fffc4 	addi	r16,r16,-1
 1087100:	000d883a 	mov	r6,zero
 1087104:	01d00934 	movhi	r7,16420
 1087108:	1009883a 	mov	r4,r2
 108710c:	180b883a 	mov	r5,r3
 1087110:	108ba640 	call	108ba64 <__muldf3>
 1087114:	803ff91e 	bne	r16,zero,10870fc <_mprec_log10+0x20>
 1087118:	dfc00117 	ldw	ra,4(sp)
 108711c:	dc000017 	ldw	r16,0(sp)
 1087120:	dec00204 	addi	sp,sp,8
 1087124:	f800283a 	ret
 1087128:	202090fa 	slli	r16,r4,3
 108712c:	00804274 	movhi	r2,265
 1087130:	10bce004 	addi	r2,r2,-3200
 1087134:	1421883a 	add	r16,r2,r16
 1087138:	80800017 	ldw	r2,0(r16)
 108713c:	80c00117 	ldw	r3,4(r16)
 1087140:	dfc00117 	ldw	ra,4(sp)
 1087144:	dc000017 	ldw	r16,0(sp)
 1087148:	dec00204 	addi	sp,sp,8
 108714c:	f800283a 	ret

01087150 <__copybits>:
 1087150:	297fffc4 	addi	r5,r5,-1
 1087154:	280fd17a 	srai	r7,r5,5
 1087158:	30c00417 	ldw	r3,16(r6)
 108715c:	30800504 	addi	r2,r6,20
 1087160:	39c00044 	addi	r7,r7,1
 1087164:	18c7883a 	add	r3,r3,r3
 1087168:	39cf883a 	add	r7,r7,r7
 108716c:	18c7883a 	add	r3,r3,r3
 1087170:	39cf883a 	add	r7,r7,r7
 1087174:	10c7883a 	add	r3,r2,r3
 1087178:	21cf883a 	add	r7,r4,r7
 108717c:	10c00d2e 	bgeu	r2,r3,10871b4 <__copybits+0x64>
 1087180:	200b883a 	mov	r5,r4
 1087184:	12000017 	ldw	r8,0(r2)
 1087188:	29400104 	addi	r5,r5,4
 108718c:	10800104 	addi	r2,r2,4
 1087190:	2a3fff15 	stw	r8,-4(r5)
 1087194:	10fffb36 	bltu	r2,r3,1087184 <__copybits+0x34>
 1087198:	1985c83a 	sub	r2,r3,r6
 108719c:	10bffac4 	addi	r2,r2,-21
 10871a0:	1004d0ba 	srli	r2,r2,2
 10871a4:	10800044 	addi	r2,r2,1
 10871a8:	1085883a 	add	r2,r2,r2
 10871ac:	1085883a 	add	r2,r2,r2
 10871b0:	2089883a 	add	r4,r4,r2
 10871b4:	21c0032e 	bgeu	r4,r7,10871c4 <__copybits+0x74>
 10871b8:	20000015 	stw	zero,0(r4)
 10871bc:	21000104 	addi	r4,r4,4
 10871c0:	21fffd36 	bltu	r4,r7,10871b8 <__copybits+0x68>
 10871c4:	f800283a 	ret

010871c8 <__any_on>:
 10871c8:	20c00417 	ldw	r3,16(r4)
 10871cc:	2805d17a 	srai	r2,r5,5
 10871d0:	21000504 	addi	r4,r4,20
 10871d4:	18800d0e 	bge	r3,r2,108720c <__any_on+0x44>
 10871d8:	18c7883a 	add	r3,r3,r3
 10871dc:	18c7883a 	add	r3,r3,r3
 10871e0:	20c7883a 	add	r3,r4,r3
 10871e4:	20c0192e 	bgeu	r4,r3,108724c <__any_on+0x84>
 10871e8:	18bfff17 	ldw	r2,-4(r3)
 10871ec:	18ffff04 	addi	r3,r3,-4
 10871f0:	1000041e 	bne	r2,zero,1087204 <__any_on+0x3c>
 10871f4:	20c0142e 	bgeu	r4,r3,1087248 <__any_on+0x80>
 10871f8:	18ffff04 	addi	r3,r3,-4
 10871fc:	19400017 	ldw	r5,0(r3)
 1087200:	283ffc26 	beq	r5,zero,10871f4 <__any_on+0x2c>
 1087204:	00800044 	movi	r2,1
 1087208:	f800283a 	ret
 108720c:	10c00a0e 	bge	r2,r3,1087238 <__any_on+0x70>
 1087210:	1085883a 	add	r2,r2,r2
 1087214:	1085883a 	add	r2,r2,r2
 1087218:	294007cc 	andi	r5,r5,31
 108721c:	2087883a 	add	r3,r4,r2
 1087220:	283ff026 	beq	r5,zero,10871e4 <__any_on+0x1c>
 1087224:	19800017 	ldw	r6,0(r3)
 1087228:	3144d83a 	srl	r2,r6,r5
 108722c:	114a983a 	sll	r5,r2,r5
 1087230:	317ff41e 	bne	r6,r5,1087204 <__any_on+0x3c>
 1087234:	003feb06 	br	10871e4 <__any_on+0x1c>
 1087238:	1085883a 	add	r2,r2,r2
 108723c:	1085883a 	add	r2,r2,r2
 1087240:	2087883a 	add	r3,r4,r2
 1087244:	003fe706 	br	10871e4 <__any_on+0x1c>
 1087248:	f800283a 	ret
 108724c:	0005883a 	mov	r2,zero
 1087250:	f800283a 	ret

01087254 <_realloc_r>:
 1087254:	defff604 	addi	sp,sp,-40
 1087258:	dc800215 	stw	r18,8(sp)
 108725c:	dfc00915 	stw	ra,36(sp)
 1087260:	df000815 	stw	fp,32(sp)
 1087264:	ddc00715 	stw	r23,28(sp)
 1087268:	dd800615 	stw	r22,24(sp)
 108726c:	dd400515 	stw	r21,20(sp)
 1087270:	dd000415 	stw	r20,16(sp)
 1087274:	dcc00315 	stw	r19,12(sp)
 1087278:	dc400115 	stw	r17,4(sp)
 108727c:	dc000015 	stw	r16,0(sp)
 1087280:	3025883a 	mov	r18,r6
 1087284:	2800b726 	beq	r5,zero,1087564 <_realloc_r+0x310>
 1087288:	282b883a 	mov	r21,r5
 108728c:	2029883a 	mov	r20,r4
 1087290:	108d3dc0 	call	108d3dc <__malloc_lock>
 1087294:	a8bfff17 	ldw	r2,-4(r21)
 1087298:	043fff04 	movi	r16,-4
 108729c:	90c002c4 	addi	r3,r18,11
 10872a0:	01000584 	movi	r4,22
 10872a4:	acfffe04 	addi	r19,r21,-8
 10872a8:	1420703a 	and	r16,r2,r16
 10872ac:	20c0332e 	bgeu	r4,r3,108737c <_realloc_r+0x128>
 10872b0:	047ffe04 	movi	r17,-8
 10872b4:	1c62703a 	and	r17,r3,r17
 10872b8:	8807883a 	mov	r3,r17
 10872bc:	88005816 	blt	r17,zero,1087420 <_realloc_r+0x1cc>
 10872c0:	8c805736 	bltu	r17,r18,1087420 <_realloc_r+0x1cc>
 10872c4:	80c0300e 	bge	r16,r3,1087388 <_realloc_r+0x134>
 10872c8:	07004274 	movhi	fp,265
 10872cc:	e73e9204 	addi	fp,fp,-1464
 10872d0:	e1c00217 	ldw	r7,8(fp)
 10872d4:	9c09883a 	add	r4,r19,r16
 10872d8:	22000117 	ldw	r8,4(r4)
 10872dc:	21c06326 	beq	r4,r7,108746c <_realloc_r+0x218>
 10872e0:	017fff84 	movi	r5,-2
 10872e4:	414a703a 	and	r5,r8,r5
 10872e8:	214b883a 	add	r5,r4,r5
 10872ec:	29800117 	ldw	r6,4(r5)
 10872f0:	3180004c 	andi	r6,r6,1
 10872f4:	30003f26 	beq	r6,zero,10873f4 <_realloc_r+0x1a0>
 10872f8:	1080004c 	andi	r2,r2,1
 10872fc:	10008326 	beq	r2,zero,108750c <_realloc_r+0x2b8>
 1087300:	900b883a 	mov	r5,r18
 1087304:	a009883a 	mov	r4,r20
 1087308:	108559c0 	call	108559c <_malloc_r>
 108730c:	1025883a 	mov	r18,r2
 1087310:	10011e26 	beq	r2,zero,108778c <_realloc_r+0x538>
 1087314:	a93fff17 	ldw	r4,-4(r21)
 1087318:	10fffe04 	addi	r3,r2,-8
 108731c:	00bfff84 	movi	r2,-2
 1087320:	2084703a 	and	r2,r4,r2
 1087324:	9885883a 	add	r2,r19,r2
 1087328:	1880ee26 	beq	r3,r2,10876e4 <_realloc_r+0x490>
 108732c:	81bfff04 	addi	r6,r16,-4
 1087330:	00800904 	movi	r2,36
 1087334:	1180b836 	bltu	r2,r6,1087618 <_realloc_r+0x3c4>
 1087338:	00c004c4 	movi	r3,19
 108733c:	19809636 	bltu	r3,r6,1087598 <_realloc_r+0x344>
 1087340:	9005883a 	mov	r2,r18
 1087344:	a807883a 	mov	r3,r21
 1087348:	19000017 	ldw	r4,0(r3)
 108734c:	11000015 	stw	r4,0(r2)
 1087350:	19000117 	ldw	r4,4(r3)
 1087354:	11000115 	stw	r4,4(r2)
 1087358:	18c00217 	ldw	r3,8(r3)
 108735c:	10c00215 	stw	r3,8(r2)
 1087360:	a80b883a 	mov	r5,r21
 1087364:	a009883a 	mov	r4,r20
 1087368:	10849b00 	call	10849b0 <_free_r>
 108736c:	a009883a 	mov	r4,r20
 1087370:	108d4000 	call	108d400 <__malloc_unlock>
 1087374:	9005883a 	mov	r2,r18
 1087378:	00001206 	br	10873c4 <_realloc_r+0x170>
 108737c:	00c00404 	movi	r3,16
 1087380:	1823883a 	mov	r17,r3
 1087384:	003fce06 	br	10872c0 <_realloc_r+0x6c>
 1087388:	a825883a 	mov	r18,r21
 108738c:	8445c83a 	sub	r2,r16,r17
 1087390:	00c003c4 	movi	r3,15
 1087394:	18802636 	bltu	r3,r2,1087430 <_realloc_r+0x1dc>
 1087398:	99800117 	ldw	r6,4(r19)
 108739c:	9c07883a 	add	r3,r19,r16
 10873a0:	3180004c 	andi	r6,r6,1
 10873a4:	3420b03a 	or	r16,r6,r16
 10873a8:	9c000115 	stw	r16,4(r19)
 10873ac:	18800117 	ldw	r2,4(r3)
 10873b0:	10800054 	ori	r2,r2,1
 10873b4:	18800115 	stw	r2,4(r3)
 10873b8:	a009883a 	mov	r4,r20
 10873bc:	108d4000 	call	108d400 <__malloc_unlock>
 10873c0:	9005883a 	mov	r2,r18
 10873c4:	dfc00917 	ldw	ra,36(sp)
 10873c8:	df000817 	ldw	fp,32(sp)
 10873cc:	ddc00717 	ldw	r23,28(sp)
 10873d0:	dd800617 	ldw	r22,24(sp)
 10873d4:	dd400517 	ldw	r21,20(sp)
 10873d8:	dd000417 	ldw	r20,16(sp)
 10873dc:	dcc00317 	ldw	r19,12(sp)
 10873e0:	dc800217 	ldw	r18,8(sp)
 10873e4:	dc400117 	ldw	r17,4(sp)
 10873e8:	dc000017 	ldw	r16,0(sp)
 10873ec:	dec00a04 	addi	sp,sp,40
 10873f0:	f800283a 	ret
 10873f4:	017fff04 	movi	r5,-4
 10873f8:	414a703a 	and	r5,r8,r5
 10873fc:	814d883a 	add	r6,r16,r5
 1087400:	30c01f16 	blt	r6,r3,1087480 <_realloc_r+0x22c>
 1087404:	20800317 	ldw	r2,12(r4)
 1087408:	20c00217 	ldw	r3,8(r4)
 108740c:	a825883a 	mov	r18,r21
 1087410:	3021883a 	mov	r16,r6
 1087414:	18800315 	stw	r2,12(r3)
 1087418:	10c00215 	stw	r3,8(r2)
 108741c:	003fdb06 	br	108738c <_realloc_r+0x138>
 1087420:	00800304 	movi	r2,12
 1087424:	a0800015 	stw	r2,0(r20)
 1087428:	0005883a 	mov	r2,zero
 108742c:	003fe506 	br	10873c4 <_realloc_r+0x170>
 1087430:	98c00117 	ldw	r3,4(r19)
 1087434:	9c4b883a 	add	r5,r19,r17
 1087438:	11000054 	ori	r4,r2,1
 108743c:	18c0004c 	andi	r3,r3,1
 1087440:	1c62b03a 	or	r17,r3,r17
 1087444:	9c400115 	stw	r17,4(r19)
 1087448:	29000115 	stw	r4,4(r5)
 108744c:	2885883a 	add	r2,r5,r2
 1087450:	10c00117 	ldw	r3,4(r2)
 1087454:	29400204 	addi	r5,r5,8
 1087458:	a009883a 	mov	r4,r20
 108745c:	18c00054 	ori	r3,r3,1
 1087460:	10c00115 	stw	r3,4(r2)
 1087464:	10849b00 	call	10849b0 <_free_r>
 1087468:	003fd306 	br	10873b8 <_realloc_r+0x164>
 108746c:	017fff04 	movi	r5,-4
 1087470:	414a703a 	and	r5,r8,r5
 1087474:	89800404 	addi	r6,r17,16
 1087478:	8151883a 	add	r8,r16,r5
 108747c:	4180590e 	bge	r8,r6,10875e4 <_realloc_r+0x390>
 1087480:	1080004c 	andi	r2,r2,1
 1087484:	103f9e1e 	bne	r2,zero,1087300 <_realloc_r+0xac>
 1087488:	adbffe17 	ldw	r22,-8(r21)
 108748c:	00bfff04 	movi	r2,-4
 1087490:	9dadc83a 	sub	r22,r19,r22
 1087494:	b1800117 	ldw	r6,4(r22)
 1087498:	3084703a 	and	r2,r6,r2
 108749c:	20002026 	beq	r4,zero,1087520 <_realloc_r+0x2cc>
 10874a0:	80af883a 	add	r23,r16,r2
 10874a4:	b96f883a 	add	r23,r23,r5
 10874a8:	21c05f26 	beq	r4,r7,1087628 <_realloc_r+0x3d4>
 10874ac:	b8c01c16 	blt	r23,r3,1087520 <_realloc_r+0x2cc>
 10874b0:	20800317 	ldw	r2,12(r4)
 10874b4:	20c00217 	ldw	r3,8(r4)
 10874b8:	81bfff04 	addi	r6,r16,-4
 10874bc:	01000904 	movi	r4,36
 10874c0:	18800315 	stw	r2,12(r3)
 10874c4:	10c00215 	stw	r3,8(r2)
 10874c8:	b0c00217 	ldw	r3,8(r22)
 10874cc:	b0800317 	ldw	r2,12(r22)
 10874d0:	b4800204 	addi	r18,r22,8
 10874d4:	18800315 	stw	r2,12(r3)
 10874d8:	10c00215 	stw	r3,8(r2)
 10874dc:	21801b36 	bltu	r4,r6,108754c <_realloc_r+0x2f8>
 10874e0:	008004c4 	movi	r2,19
 10874e4:	1180352e 	bgeu	r2,r6,10875bc <_realloc_r+0x368>
 10874e8:	a8800017 	ldw	r2,0(r21)
 10874ec:	b0800215 	stw	r2,8(r22)
 10874f0:	a8800117 	ldw	r2,4(r21)
 10874f4:	b0800315 	stw	r2,12(r22)
 10874f8:	008006c4 	movi	r2,27
 10874fc:	11807f36 	bltu	r2,r6,10876fc <_realloc_r+0x4a8>
 1087500:	b0800404 	addi	r2,r22,16
 1087504:	ad400204 	addi	r21,r21,8
 1087508:	00002d06 	br	10875c0 <_realloc_r+0x36c>
 108750c:	adbffe17 	ldw	r22,-8(r21)
 1087510:	00bfff04 	movi	r2,-4
 1087514:	9dadc83a 	sub	r22,r19,r22
 1087518:	b1000117 	ldw	r4,4(r22)
 108751c:	2084703a 	and	r2,r4,r2
 1087520:	b03f7726 	beq	r22,zero,1087300 <_realloc_r+0xac>
 1087524:	80af883a 	add	r23,r16,r2
 1087528:	b8ff7516 	blt	r23,r3,1087300 <_realloc_r+0xac>
 108752c:	b0800317 	ldw	r2,12(r22)
 1087530:	b0c00217 	ldw	r3,8(r22)
 1087534:	81bfff04 	addi	r6,r16,-4
 1087538:	01000904 	movi	r4,36
 108753c:	18800315 	stw	r2,12(r3)
 1087540:	10c00215 	stw	r3,8(r2)
 1087544:	b4800204 	addi	r18,r22,8
 1087548:	21bfe52e 	bgeu	r4,r6,10874e0 <_realloc_r+0x28c>
 108754c:	a80b883a 	mov	r5,r21
 1087550:	9009883a 	mov	r4,r18
 1087554:	1085fd40 	call	1085fd4 <memmove>
 1087558:	b821883a 	mov	r16,r23
 108755c:	b027883a 	mov	r19,r22
 1087560:	003f8a06 	br	108738c <_realloc_r+0x138>
 1087564:	300b883a 	mov	r5,r6
 1087568:	dfc00917 	ldw	ra,36(sp)
 108756c:	df000817 	ldw	fp,32(sp)
 1087570:	ddc00717 	ldw	r23,28(sp)
 1087574:	dd800617 	ldw	r22,24(sp)
 1087578:	dd400517 	ldw	r21,20(sp)
 108757c:	dd000417 	ldw	r20,16(sp)
 1087580:	dcc00317 	ldw	r19,12(sp)
 1087584:	dc800217 	ldw	r18,8(sp)
 1087588:	dc400117 	ldw	r17,4(sp)
 108758c:	dc000017 	ldw	r16,0(sp)
 1087590:	dec00a04 	addi	sp,sp,40
 1087594:	108559c1 	jmpi	108559c <_malloc_r>
 1087598:	a8c00017 	ldw	r3,0(r21)
 108759c:	90c00015 	stw	r3,0(r18)
 10875a0:	a8c00117 	ldw	r3,4(r21)
 10875a4:	90c00115 	stw	r3,4(r18)
 10875a8:	00c006c4 	movi	r3,27
 10875ac:	19804536 	bltu	r3,r6,10876c4 <_realloc_r+0x470>
 10875b0:	90800204 	addi	r2,r18,8
 10875b4:	a8c00204 	addi	r3,r21,8
 10875b8:	003f6306 	br	1087348 <_realloc_r+0xf4>
 10875bc:	9005883a 	mov	r2,r18
 10875c0:	a8c00017 	ldw	r3,0(r21)
 10875c4:	b821883a 	mov	r16,r23
 10875c8:	b027883a 	mov	r19,r22
 10875cc:	10c00015 	stw	r3,0(r2)
 10875d0:	a8c00117 	ldw	r3,4(r21)
 10875d4:	10c00115 	stw	r3,4(r2)
 10875d8:	a8c00217 	ldw	r3,8(r21)
 10875dc:	10c00215 	stw	r3,8(r2)
 10875e0:	003f6a06 	br	108738c <_realloc_r+0x138>
 10875e4:	9c67883a 	add	r19,r19,r17
 10875e8:	4445c83a 	sub	r2,r8,r17
 10875ec:	e4c00215 	stw	r19,8(fp)
 10875f0:	10800054 	ori	r2,r2,1
 10875f4:	98800115 	stw	r2,4(r19)
 10875f8:	a8bfff17 	ldw	r2,-4(r21)
 10875fc:	a009883a 	mov	r4,r20
 1087600:	1080004c 	andi	r2,r2,1
 1087604:	1462b03a 	or	r17,r2,r17
 1087608:	ac7fff15 	stw	r17,-4(r21)
 108760c:	108d4000 	call	108d400 <__malloc_unlock>
 1087610:	a805883a 	mov	r2,r21
 1087614:	003f6b06 	br	10873c4 <_realloc_r+0x170>
 1087618:	a80b883a 	mov	r5,r21
 108761c:	9009883a 	mov	r4,r18
 1087620:	1085fd40 	call	1085fd4 <memmove>
 1087624:	003f4e06 	br	1087360 <_realloc_r+0x10c>
 1087628:	89000404 	addi	r4,r17,16
 108762c:	b93fbc16 	blt	r23,r4,1087520 <_realloc_r+0x2cc>
 1087630:	b0800317 	ldw	r2,12(r22)
 1087634:	b0c00217 	ldw	r3,8(r22)
 1087638:	81bfff04 	addi	r6,r16,-4
 108763c:	01000904 	movi	r4,36
 1087640:	18800315 	stw	r2,12(r3)
 1087644:	10c00215 	stw	r3,8(r2)
 1087648:	b4800204 	addi	r18,r22,8
 108764c:	21804336 	bltu	r4,r6,108775c <_realloc_r+0x508>
 1087650:	008004c4 	movi	r2,19
 1087654:	11803f2e 	bgeu	r2,r6,1087754 <_realloc_r+0x500>
 1087658:	a8800017 	ldw	r2,0(r21)
 108765c:	b0800215 	stw	r2,8(r22)
 1087660:	a8800117 	ldw	r2,4(r21)
 1087664:	b0800315 	stw	r2,12(r22)
 1087668:	008006c4 	movi	r2,27
 108766c:	11803f36 	bltu	r2,r6,108776c <_realloc_r+0x518>
 1087670:	b0800404 	addi	r2,r22,16
 1087674:	ad400204 	addi	r21,r21,8
 1087678:	a8c00017 	ldw	r3,0(r21)
 108767c:	10c00015 	stw	r3,0(r2)
 1087680:	a8c00117 	ldw	r3,4(r21)
 1087684:	10c00115 	stw	r3,4(r2)
 1087688:	a8c00217 	ldw	r3,8(r21)
 108768c:	10c00215 	stw	r3,8(r2)
 1087690:	b447883a 	add	r3,r22,r17
 1087694:	bc45c83a 	sub	r2,r23,r17
 1087698:	e0c00215 	stw	r3,8(fp)
 108769c:	10800054 	ori	r2,r2,1
 10876a0:	18800115 	stw	r2,4(r3)
 10876a4:	b0800117 	ldw	r2,4(r22)
 10876a8:	a009883a 	mov	r4,r20
 10876ac:	1080004c 	andi	r2,r2,1
 10876b0:	1462b03a 	or	r17,r2,r17
 10876b4:	b4400115 	stw	r17,4(r22)
 10876b8:	108d4000 	call	108d400 <__malloc_unlock>
 10876bc:	9005883a 	mov	r2,r18
 10876c0:	003f4006 	br	10873c4 <_realloc_r+0x170>
 10876c4:	a8c00217 	ldw	r3,8(r21)
 10876c8:	90c00215 	stw	r3,8(r18)
 10876cc:	a8c00317 	ldw	r3,12(r21)
 10876d0:	90c00315 	stw	r3,12(r18)
 10876d4:	30801126 	beq	r6,r2,108771c <_realloc_r+0x4c8>
 10876d8:	90800404 	addi	r2,r18,16
 10876dc:	a8c00404 	addi	r3,r21,16
 10876e0:	003f1906 	br	1087348 <_realloc_r+0xf4>
 10876e4:	90ffff17 	ldw	r3,-4(r18)
 10876e8:	00bfff04 	movi	r2,-4
 10876ec:	a825883a 	mov	r18,r21
 10876f0:	1884703a 	and	r2,r3,r2
 10876f4:	80a1883a 	add	r16,r16,r2
 10876f8:	003f2406 	br	108738c <_realloc_r+0x138>
 10876fc:	a8800217 	ldw	r2,8(r21)
 1087700:	b0800415 	stw	r2,16(r22)
 1087704:	a8800317 	ldw	r2,12(r21)
 1087708:	b0800515 	stw	r2,20(r22)
 108770c:	31000a26 	beq	r6,r4,1087738 <_realloc_r+0x4e4>
 1087710:	b0800604 	addi	r2,r22,24
 1087714:	ad400404 	addi	r21,r21,16
 1087718:	003fa906 	br	10875c0 <_realloc_r+0x36c>
 108771c:	a9000417 	ldw	r4,16(r21)
 1087720:	90800604 	addi	r2,r18,24
 1087724:	a8c00604 	addi	r3,r21,24
 1087728:	91000415 	stw	r4,16(r18)
 108772c:	a9000517 	ldw	r4,20(r21)
 1087730:	91000515 	stw	r4,20(r18)
 1087734:	003f0406 	br	1087348 <_realloc_r+0xf4>
 1087738:	a8c00417 	ldw	r3,16(r21)
 108773c:	ad400604 	addi	r21,r21,24
 1087740:	b0800804 	addi	r2,r22,32
 1087744:	b0c00615 	stw	r3,24(r22)
 1087748:	a8ffff17 	ldw	r3,-4(r21)
 108774c:	b0c00715 	stw	r3,28(r22)
 1087750:	003f9b06 	br	10875c0 <_realloc_r+0x36c>
 1087754:	9005883a 	mov	r2,r18
 1087758:	003fc706 	br	1087678 <_realloc_r+0x424>
 108775c:	a80b883a 	mov	r5,r21
 1087760:	9009883a 	mov	r4,r18
 1087764:	1085fd40 	call	1085fd4 <memmove>
 1087768:	003fc906 	br	1087690 <_realloc_r+0x43c>
 108776c:	a8800217 	ldw	r2,8(r21)
 1087770:	b0800415 	stw	r2,16(r22)
 1087774:	a8800317 	ldw	r2,12(r21)
 1087778:	b0800515 	stw	r2,20(r22)
 108777c:	31000726 	beq	r6,r4,108779c <_realloc_r+0x548>
 1087780:	b0800604 	addi	r2,r22,24
 1087784:	ad400404 	addi	r21,r21,16
 1087788:	003fbb06 	br	1087678 <_realloc_r+0x424>
 108778c:	a009883a 	mov	r4,r20
 1087790:	108d4000 	call	108d400 <__malloc_unlock>
 1087794:	0005883a 	mov	r2,zero
 1087798:	003f0a06 	br	10873c4 <_realloc_r+0x170>
 108779c:	a8c00417 	ldw	r3,16(r21)
 10877a0:	ad400604 	addi	r21,r21,24
 10877a4:	b0800804 	addi	r2,r22,32
 10877a8:	b0c00615 	stw	r3,24(r22)
 10877ac:	a8ffff17 	ldw	r3,-4(r21)
 10877b0:	b0c00715 	stw	r3,28(r22)
 10877b4:	003fb006 	br	1087678 <_realloc_r+0x424>

010877b8 <__fpclassifyd>:
 10877b8:	00a00034 	movhi	r2,32768
 10877bc:	10bfffc4 	addi	r2,r2,-1
 10877c0:	2884703a 	and	r2,r5,r2
 10877c4:	10000726 	beq	r2,zero,10877e4 <__fpclassifyd+0x2c>
 10877c8:	00fffc34 	movhi	r3,65520
 10877cc:	019ff834 	movhi	r6,32736
 10877d0:	28c7883a 	add	r3,r5,r3
 10877d4:	31bfffc4 	addi	r6,r6,-1
 10877d8:	30c00536 	bltu	r6,r3,10877f0 <__fpclassifyd+0x38>
 10877dc:	00800104 	movi	r2,4
 10877e0:	f800283a 	ret
 10877e4:	2000021e 	bne	r4,zero,10877f0 <__fpclassifyd+0x38>
 10877e8:	00800084 	movi	r2,2
 10877ec:	f800283a 	ret
 10877f0:	00dffc34 	movhi	r3,32752
 10877f4:	019ff834 	movhi	r6,32736
 10877f8:	28cb883a 	add	r5,r5,r3
 10877fc:	31bfffc4 	addi	r6,r6,-1
 1087800:	317ff62e 	bgeu	r6,r5,10877dc <__fpclassifyd+0x24>
 1087804:	01400434 	movhi	r5,16
 1087808:	297fffc4 	addi	r5,r5,-1
 108780c:	28800236 	bltu	r5,r2,1087818 <__fpclassifyd+0x60>
 1087810:	008000c4 	movi	r2,3
 1087814:	f800283a 	ret
 1087818:	10c00226 	beq	r2,r3,1087824 <__fpclassifyd+0x6c>
 108781c:	0005883a 	mov	r2,zero
 1087820:	f800283a 	ret
 1087824:	2005003a 	cmpeq	r2,r4,zero
 1087828:	f800283a 	ret

0108782c <_sbrk_r>:
 108782c:	defffd04 	addi	sp,sp,-12
 1087830:	dc000015 	stw	r16,0(sp)
 1087834:	04004274 	movhi	r16,265
 1087838:	dc400115 	stw	r17,4(sp)
 108783c:	840aff04 	addi	r16,r16,11260
 1087840:	2023883a 	mov	r17,r4
 1087844:	2809883a 	mov	r4,r5
 1087848:	dfc00215 	stw	ra,8(sp)
 108784c:	80000015 	stw	zero,0(r16)
 1087850:	108d5c00 	call	108d5c0 <sbrk>
 1087854:	00ffffc4 	movi	r3,-1
 1087858:	10c00526 	beq	r2,r3,1087870 <_sbrk_r+0x44>
 108785c:	dfc00217 	ldw	ra,8(sp)
 1087860:	dc400117 	ldw	r17,4(sp)
 1087864:	dc000017 	ldw	r16,0(sp)
 1087868:	dec00304 	addi	sp,sp,12
 108786c:	f800283a 	ret
 1087870:	80c00017 	ldw	r3,0(r16)
 1087874:	183ff926 	beq	r3,zero,108785c <_sbrk_r+0x30>
 1087878:	88c00015 	stw	r3,0(r17)
 108787c:	003ff706 	br	108785c <_sbrk_r+0x30>

01087880 <__sread>:
 1087880:	defffe04 	addi	sp,sp,-8
 1087884:	dc000015 	stw	r16,0(sp)
 1087888:	2821883a 	mov	r16,r5
 108788c:	2940038f 	ldh	r5,14(r5)
 1087890:	dfc00115 	stw	ra,4(sp)
 1087894:	10896740 	call	1089674 <_read_r>
 1087898:	10000716 	blt	r2,zero,10878b8 <__sread+0x38>
 108789c:	80c01417 	ldw	r3,80(r16)
 10878a0:	1887883a 	add	r3,r3,r2
 10878a4:	80c01415 	stw	r3,80(r16)
 10878a8:	dfc00117 	ldw	ra,4(sp)
 10878ac:	dc000017 	ldw	r16,0(sp)
 10878b0:	dec00204 	addi	sp,sp,8
 10878b4:	f800283a 	ret
 10878b8:	80c0030b 	ldhu	r3,12(r16)
 10878bc:	18fbffcc 	andi	r3,r3,61439
 10878c0:	80c0030d 	sth	r3,12(r16)
 10878c4:	dfc00117 	ldw	ra,4(sp)
 10878c8:	dc000017 	ldw	r16,0(sp)
 10878cc:	dec00204 	addi	sp,sp,8
 10878d0:	f800283a 	ret

010878d4 <__seofread>:
 10878d4:	0005883a 	mov	r2,zero
 10878d8:	f800283a 	ret

010878dc <__swrite>:
 10878dc:	2880030b 	ldhu	r2,12(r5)
 10878e0:	defffb04 	addi	sp,sp,-20
 10878e4:	dcc00315 	stw	r19,12(sp)
 10878e8:	dc800215 	stw	r18,8(sp)
 10878ec:	dc400115 	stw	r17,4(sp)
 10878f0:	dc000015 	stw	r16,0(sp)
 10878f4:	dfc00415 	stw	ra,16(sp)
 10878f8:	10c0400c 	andi	r3,r2,256
 10878fc:	2821883a 	mov	r16,r5
 1087900:	2023883a 	mov	r17,r4
 1087904:	3025883a 	mov	r18,r6
 1087908:	3827883a 	mov	r19,r7
 108790c:	18000526 	beq	r3,zero,1087924 <__swrite+0x48>
 1087910:	2940038f 	ldh	r5,14(r5)
 1087914:	01c00084 	movi	r7,2
 1087918:	000d883a 	mov	r6,zero
 108791c:	10896140 	call	1089614 <_lseek_r>
 1087920:	8080030b 	ldhu	r2,12(r16)
 1087924:	8140038f 	ldh	r5,14(r16)
 1087928:	10bbffcc 	andi	r2,r2,61439
 108792c:	980f883a 	mov	r7,r19
 1087930:	900d883a 	mov	r6,r18
 1087934:	8809883a 	mov	r4,r17
 1087938:	8080030d 	sth	r2,12(r16)
 108793c:	dfc00417 	ldw	ra,16(sp)
 1087940:	dcc00317 	ldw	r19,12(sp)
 1087944:	dc800217 	ldw	r18,8(sp)
 1087948:	dc400117 	ldw	r17,4(sp)
 108794c:	dc000017 	ldw	r16,0(sp)
 1087950:	dec00504 	addi	sp,sp,20
 1087954:	10890e01 	jmpi	10890e0 <_write_r>

01087958 <__sseek>:
 1087958:	defffe04 	addi	sp,sp,-8
 108795c:	dc000015 	stw	r16,0(sp)
 1087960:	2821883a 	mov	r16,r5
 1087964:	2940038f 	ldh	r5,14(r5)
 1087968:	dfc00115 	stw	ra,4(sp)
 108796c:	10896140 	call	1089614 <_lseek_r>
 1087970:	00ffffc4 	movi	r3,-1
 1087974:	10c00826 	beq	r2,r3,1087998 <__sseek+0x40>
 1087978:	80c0030b 	ldhu	r3,12(r16)
 108797c:	80801415 	stw	r2,80(r16)
 1087980:	18c40014 	ori	r3,r3,4096
 1087984:	80c0030d 	sth	r3,12(r16)
 1087988:	dfc00117 	ldw	ra,4(sp)
 108798c:	dc000017 	ldw	r16,0(sp)
 1087990:	dec00204 	addi	sp,sp,8
 1087994:	f800283a 	ret
 1087998:	80c0030b 	ldhu	r3,12(r16)
 108799c:	18fbffcc 	andi	r3,r3,61439
 10879a0:	80c0030d 	sth	r3,12(r16)
 10879a4:	dfc00117 	ldw	ra,4(sp)
 10879a8:	dc000017 	ldw	r16,0(sp)
 10879ac:	dec00204 	addi	sp,sp,8
 10879b0:	f800283a 	ret

010879b4 <__sclose>:
 10879b4:	2940038f 	ldh	r5,14(r5)
 10879b8:	10891401 	jmpi	1089140 <_close_r>

010879bc <strcmp>:
 10879bc:	2144b03a 	or	r2,r4,r5
 10879c0:	108000cc 	andi	r2,r2,3
 10879c4:	1000171e 	bne	r2,zero,1087a24 <strcmp+0x68>
 10879c8:	20800017 	ldw	r2,0(r4)
 10879cc:	28c00017 	ldw	r3,0(r5)
 10879d0:	10c0141e 	bne	r2,r3,1087a24 <strcmp+0x68>
 10879d4:	027fbff4 	movhi	r9,65279
 10879d8:	4a7fbfc4 	addi	r9,r9,-257
 10879dc:	0086303a 	nor	r3,zero,r2
 10879e0:	02202074 	movhi	r8,32897
 10879e4:	1245883a 	add	r2,r2,r9
 10879e8:	42202004 	addi	r8,r8,-32640
 10879ec:	10c4703a 	and	r2,r2,r3
 10879f0:	1204703a 	and	r2,r2,r8
 10879f4:	10000226 	beq	r2,zero,1087a00 <strcmp+0x44>
 10879f8:	00002306 	br	1087a88 <strcmp+0xcc>
 10879fc:	1000221e 	bne	r2,zero,1087a88 <strcmp+0xcc>
 1087a00:	21000104 	addi	r4,r4,4
 1087a04:	20c00017 	ldw	r3,0(r4)
 1087a08:	29400104 	addi	r5,r5,4
 1087a0c:	29800017 	ldw	r6,0(r5)
 1087a10:	1a4f883a 	add	r7,r3,r9
 1087a14:	00c4303a 	nor	r2,zero,r3
 1087a18:	3884703a 	and	r2,r7,r2
 1087a1c:	1204703a 	and	r2,r2,r8
 1087a20:	19bff626 	beq	r3,r6,10879fc <strcmp+0x40>
 1087a24:	20800003 	ldbu	r2,0(r4)
 1087a28:	10c03fcc 	andi	r3,r2,255
 1087a2c:	18c0201c 	xori	r3,r3,128
 1087a30:	18ffe004 	addi	r3,r3,-128
 1087a34:	18000c26 	beq	r3,zero,1087a68 <strcmp+0xac>
 1087a38:	29800007 	ldb	r6,0(r5)
 1087a3c:	19800326 	beq	r3,r6,1087a4c <strcmp+0x90>
 1087a40:	00001306 	br	1087a90 <strcmp+0xd4>
 1087a44:	29800007 	ldb	r6,0(r5)
 1087a48:	11800b1e 	bne	r2,r6,1087a78 <strcmp+0xbc>
 1087a4c:	21000044 	addi	r4,r4,1
 1087a50:	20c00003 	ldbu	r3,0(r4)
 1087a54:	29400044 	addi	r5,r5,1
 1087a58:	18803fcc 	andi	r2,r3,255
 1087a5c:	1080201c 	xori	r2,r2,128
 1087a60:	10bfe004 	addi	r2,r2,-128
 1087a64:	103ff71e 	bne	r2,zero,1087a44 <strcmp+0x88>
 1087a68:	0007883a 	mov	r3,zero
 1087a6c:	28800003 	ldbu	r2,0(r5)
 1087a70:	1885c83a 	sub	r2,r3,r2
 1087a74:	f800283a 	ret
 1087a78:	28800003 	ldbu	r2,0(r5)
 1087a7c:	18c03fcc 	andi	r3,r3,255
 1087a80:	1885c83a 	sub	r2,r3,r2
 1087a84:	f800283a 	ret
 1087a88:	0005883a 	mov	r2,zero
 1087a8c:	f800283a 	ret
 1087a90:	10c03fcc 	andi	r3,r2,255
 1087a94:	003ff506 	br	1087a6c <strcmp+0xb0>

01087a98 <__sprint_r.part.0>:
 1087a98:	28801917 	ldw	r2,100(r5)
 1087a9c:	defff604 	addi	sp,sp,-40
 1087aa0:	dd400515 	stw	r21,20(sp)
 1087aa4:	dfc00915 	stw	ra,36(sp)
 1087aa8:	df000815 	stw	fp,32(sp)
 1087aac:	ddc00715 	stw	r23,28(sp)
 1087ab0:	dd800615 	stw	r22,24(sp)
 1087ab4:	dd000415 	stw	r20,16(sp)
 1087ab8:	dcc00315 	stw	r19,12(sp)
 1087abc:	dc800215 	stw	r18,8(sp)
 1087ac0:	dc400115 	stw	r17,4(sp)
 1087ac4:	dc000015 	stw	r16,0(sp)
 1087ac8:	1088000c 	andi	r2,r2,8192
 1087acc:	302b883a 	mov	r21,r6
 1087ad0:	10002e26 	beq	r2,zero,1087b8c <__sprint_r.part.0+0xf4>
 1087ad4:	30800217 	ldw	r2,8(r6)
 1087ad8:	35800017 	ldw	r22,0(r6)
 1087adc:	10002926 	beq	r2,zero,1087b84 <__sprint_r.part.0+0xec>
 1087ae0:	2827883a 	mov	r19,r5
 1087ae4:	2029883a 	mov	r20,r4
 1087ae8:	b5c00104 	addi	r23,r22,4
 1087aec:	04bfffc4 	movi	r18,-1
 1087af0:	bc400017 	ldw	r17,0(r23)
 1087af4:	b4000017 	ldw	r16,0(r22)
 1087af8:	0039883a 	mov	fp,zero
 1087afc:	8822d0ba 	srli	r17,r17,2
 1087b00:	8800031e 	bne	r17,zero,1087b10 <__sprint_r.part.0+0x78>
 1087b04:	00001806 	br	1087b68 <__sprint_r.part.0+0xd0>
 1087b08:	84000104 	addi	r16,r16,4
 1087b0c:	8f001526 	beq	r17,fp,1087b64 <__sprint_r.part.0+0xcc>
 1087b10:	81400017 	ldw	r5,0(r16)
 1087b14:	980d883a 	mov	r6,r19
 1087b18:	a009883a 	mov	r4,r20
 1087b1c:	10894c00 	call	10894c0 <_fputwc_r>
 1087b20:	e7000044 	addi	fp,fp,1
 1087b24:	14bff81e 	bne	r2,r18,1087b08 <__sprint_r.part.0+0x70>
 1087b28:	9005883a 	mov	r2,r18
 1087b2c:	a8000215 	stw	zero,8(r21)
 1087b30:	a8000115 	stw	zero,4(r21)
 1087b34:	dfc00917 	ldw	ra,36(sp)
 1087b38:	df000817 	ldw	fp,32(sp)
 1087b3c:	ddc00717 	ldw	r23,28(sp)
 1087b40:	dd800617 	ldw	r22,24(sp)
 1087b44:	dd400517 	ldw	r21,20(sp)
 1087b48:	dd000417 	ldw	r20,16(sp)
 1087b4c:	dcc00317 	ldw	r19,12(sp)
 1087b50:	dc800217 	ldw	r18,8(sp)
 1087b54:	dc400117 	ldw	r17,4(sp)
 1087b58:	dc000017 	ldw	r16,0(sp)
 1087b5c:	dec00a04 	addi	sp,sp,40
 1087b60:	f800283a 	ret
 1087b64:	a8800217 	ldw	r2,8(r21)
 1087b68:	8c63883a 	add	r17,r17,r17
 1087b6c:	8c63883a 	add	r17,r17,r17
 1087b70:	1445c83a 	sub	r2,r2,r17
 1087b74:	a8800215 	stw	r2,8(r21)
 1087b78:	b5800204 	addi	r22,r22,8
 1087b7c:	bdc00204 	addi	r23,r23,8
 1087b80:	103fdb1e 	bne	r2,zero,1087af0 <__sprint_r.part.0+0x58>
 1087b84:	0005883a 	mov	r2,zero
 1087b88:	003fe806 	br	1087b2c <__sprint_r.part.0+0x94>
 1087b8c:	1084cc00 	call	1084cc0 <__sfvwrite_r>
 1087b90:	003fe606 	br	1087b2c <__sprint_r.part.0+0x94>

01087b94 <__sprint_r>:
 1087b94:	30c00217 	ldw	r3,8(r6)
 1087b98:	18000126 	beq	r3,zero,1087ba0 <__sprint_r+0xc>
 1087b9c:	1087a981 	jmpi	1087a98 <__sprint_r.part.0>
 1087ba0:	30000115 	stw	zero,4(r6)
 1087ba4:	0005883a 	mov	r2,zero
 1087ba8:	f800283a 	ret

01087bac <___vfiprintf_internal_r>:
 1087bac:	deffc904 	addi	sp,sp,-220
 1087bb0:	df003515 	stw	fp,212(sp)
 1087bb4:	dd003115 	stw	r20,196(sp)
 1087bb8:	dfc03615 	stw	ra,216(sp)
 1087bbc:	ddc03415 	stw	r23,208(sp)
 1087bc0:	dd803315 	stw	r22,204(sp)
 1087bc4:	dd403215 	stw	r21,200(sp)
 1087bc8:	dcc03015 	stw	r19,192(sp)
 1087bcc:	dc802f15 	stw	r18,188(sp)
 1087bd0:	dc402e15 	stw	r17,184(sp)
 1087bd4:	dc002d15 	stw	r16,180(sp)
 1087bd8:	d9002015 	stw	r4,128(sp)
 1087bdc:	d9c02215 	stw	r7,136(sp)
 1087be0:	2829883a 	mov	r20,r5
 1087be4:	3039883a 	mov	fp,r6
 1087be8:	20000226 	beq	r4,zero,1087bf4 <___vfiprintf_internal_r+0x48>
 1087bec:	20800e17 	ldw	r2,56(r4)
 1087bf0:	1000cf26 	beq	r2,zero,1087f30 <___vfiprintf_internal_r+0x384>
 1087bf4:	a080030b 	ldhu	r2,12(r20)
 1087bf8:	10c8000c 	andi	r3,r2,8192
 1087bfc:	1800061e 	bne	r3,zero,1087c18 <___vfiprintf_internal_r+0x6c>
 1087c00:	a1001917 	ldw	r4,100(r20)
 1087c04:	00f7ffc4 	movi	r3,-8193
 1087c08:	10880014 	ori	r2,r2,8192
 1087c0c:	20c6703a 	and	r3,r4,r3
 1087c10:	a080030d 	sth	r2,12(r20)
 1087c14:	a0c01915 	stw	r3,100(r20)
 1087c18:	10c0020c 	andi	r3,r2,8
 1087c1c:	1800a926 	beq	r3,zero,1087ec4 <___vfiprintf_internal_r+0x318>
 1087c20:	a0c00417 	ldw	r3,16(r20)
 1087c24:	1800a726 	beq	r3,zero,1087ec4 <___vfiprintf_internal_r+0x318>
 1087c28:	1080068c 	andi	r2,r2,26
 1087c2c:	00c00284 	movi	r3,10
 1087c30:	10c0ac26 	beq	r2,r3,1087ee4 <___vfiprintf_internal_r+0x338>
 1087c34:	da801a04 	addi	r10,sp,104
 1087c38:	da801e15 	stw	r10,120(sp)
 1087c3c:	d8801e17 	ldw	r2,120(sp)
 1087c40:	da8019c4 	addi	r10,sp,103
 1087c44:	05804274 	movhi	r22,265
 1087c48:	05c04274 	movhi	r23,265
 1087c4c:	da801f15 	stw	r10,124(sp)
 1087c50:	1295c83a 	sub	r10,r2,r10
 1087c54:	b5bd1604 	addi	r22,r22,-2984
 1087c58:	bdfd1204 	addi	r23,r23,-3000
 1087c5c:	dec01a15 	stw	sp,104(sp)
 1087c60:	d8001c15 	stw	zero,112(sp)
 1087c64:	d8001b15 	stw	zero,108(sp)
 1087c68:	d8002615 	stw	zero,152(sp)
 1087c6c:	d8002315 	stw	zero,140(sp)
 1087c70:	da802715 	stw	r10,156(sp)
 1087c74:	d811883a 	mov	r8,sp
 1087c78:	dd002115 	stw	r20,132(sp)
 1087c7c:	e021883a 	mov	r16,fp
 1087c80:	80800007 	ldb	r2,0(r16)
 1087c84:	1003ea26 	beq	r2,zero,1088c30 <___vfiprintf_internal_r+0x1084>
 1087c88:	00c00944 	movi	r3,37
 1087c8c:	8025883a 	mov	r18,r16
 1087c90:	10c0021e 	bne	r2,r3,1087c9c <___vfiprintf_internal_r+0xf0>
 1087c94:	00001606 	br	1087cf0 <___vfiprintf_internal_r+0x144>
 1087c98:	10c00326 	beq	r2,r3,1087ca8 <___vfiprintf_internal_r+0xfc>
 1087c9c:	94800044 	addi	r18,r18,1
 1087ca0:	90800007 	ldb	r2,0(r18)
 1087ca4:	103ffc1e 	bne	r2,zero,1087c98 <___vfiprintf_internal_r+0xec>
 1087ca8:	9423c83a 	sub	r17,r18,r16
 1087cac:	88001026 	beq	r17,zero,1087cf0 <___vfiprintf_internal_r+0x144>
 1087cb0:	d8c01c17 	ldw	r3,112(sp)
 1087cb4:	d8801b17 	ldw	r2,108(sp)
 1087cb8:	44000015 	stw	r16,0(r8)
 1087cbc:	88c7883a 	add	r3,r17,r3
 1087cc0:	10800044 	addi	r2,r2,1
 1087cc4:	44400115 	stw	r17,4(r8)
 1087cc8:	d8c01c15 	stw	r3,112(sp)
 1087ccc:	d8801b15 	stw	r2,108(sp)
 1087cd0:	010001c4 	movi	r4,7
 1087cd4:	2080760e 	bge	r4,r2,1087eb0 <___vfiprintf_internal_r+0x304>
 1087cd8:	1803821e 	bne	r3,zero,1088ae4 <___vfiprintf_internal_r+0xf38>
 1087cdc:	da802317 	ldw	r10,140(sp)
 1087ce0:	d8001b15 	stw	zero,108(sp)
 1087ce4:	d811883a 	mov	r8,sp
 1087ce8:	5455883a 	add	r10,r10,r17
 1087cec:	da802315 	stw	r10,140(sp)
 1087cf0:	90800007 	ldb	r2,0(r18)
 1087cf4:	10044626 	beq	r2,zero,1088e10 <___vfiprintf_internal_r+0x1264>
 1087cf8:	90c00047 	ldb	r3,1(r18)
 1087cfc:	94000044 	addi	r16,r18,1
 1087d00:	d8001d85 	stb	zero,118(sp)
 1087d04:	0009883a 	mov	r4,zero
 1087d08:	000f883a 	mov	r7,zero
 1087d0c:	027fffc4 	movi	r9,-1
 1087d10:	0023883a 	mov	r17,zero
 1087d14:	0029883a 	mov	r20,zero
 1087d18:	01401604 	movi	r5,88
 1087d1c:	01800244 	movi	r6,9
 1087d20:	03400a84 	movi	r13,42
 1087d24:	03001b04 	movi	r12,108
 1087d28:	84000044 	addi	r16,r16,1
 1087d2c:	18bff804 	addi	r2,r3,-32
 1087d30:	28827336 	bltu	r5,r2,1088700 <___vfiprintf_internal_r+0xb54>
 1087d34:	100490ba 	slli	r2,r2,2
 1087d38:	02804234 	movhi	r10,264
 1087d3c:	529f5304 	addi	r10,r10,32076
 1087d40:	1285883a 	add	r2,r2,r10
 1087d44:	10800017 	ldw	r2,0(r2)
 1087d48:	1000683a 	jmp	r2
 1087d4c:	01088434 	movhi	r4,8720
 1087d50:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d54:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d58:	01088454 	movui	r4,8721
 1087d5c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d60:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d64:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d68:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d6c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d70:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d74:	0108863c 	xorhi	r4,zero,8728
 1087d78:	01088658 	cmpnei	r4,zero,8729
 1087d7c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d80:	01087f40 	call	1087f4 <__alt_mem_new_sdram_controller_0-0x6f780c>
 1087d84:	01088668 	cmpgeui	r4,zero,8729
 1087d88:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087d8c:	01088460 	cmpeqi	r4,zero,8721
 1087d90:	0108846c 	andhi	r4,zero,8721
 1087d94:	0108846c 	andhi	r4,zero,8721
 1087d98:	0108846c 	andhi	r4,zero,8721
 1087d9c:	0108846c 	andhi	r4,zero,8721
 1087da0:	0108846c 	andhi	r4,zero,8721
 1087da4:	0108846c 	andhi	r4,zero,8721
 1087da8:	0108846c 	andhi	r4,zero,8721
 1087dac:	0108846c 	andhi	r4,zero,8721
 1087db0:	0108846c 	andhi	r4,zero,8721
 1087db4:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087db8:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dbc:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dc0:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dc4:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dc8:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dcc:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dd0:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dd4:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dd8:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087ddc:	01088498 	cmpnei	r4,zero,8722
 1087de0:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087de4:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087de8:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dec:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087df0:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087df4:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087df8:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087dfc:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e00:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e04:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e08:	010884d0 	cmplti	r4,zero,8723
 1087e0c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e10:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e14:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e18:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e1c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e20:	01088528 	cmpgeui	r4,zero,8724
 1087e24:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e28:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e2c:	01088598 	cmpnei	r4,zero,8726
 1087e30:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e34:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e38:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e3c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e40:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e44:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e48:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e4c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e50:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e54:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e58:	01088344 	movi	r4,8717
 1087e5c:	01088370 	cmpltui	r4,zero,8717
 1087e60:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e64:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e68:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e6c:	010886a8 	cmpgeui	r4,zero,8730
 1087e70:	01088370 	cmpltui	r4,zero,8717
 1087e74:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e78:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e7c:	01088204 	movi	r4,8712
 1087e80:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e84:	01088214 	movui	r4,8712
 1087e88:	01088250 	cmplti	r4,zero,8713
 1087e8c:	01087f4c 	andi	r4,zero,8701
 1087e90:	010881f8 	rdprs	r4,zero,8711
 1087e94:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087e98:	010885d4 	movui	r4,8727
 1087e9c:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087ea0:	0108862c 	andhi	r4,zero,8728
 1087ea4:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087ea8:	01088700 	call	108870 <__alt_mem_new_sdram_controller_0-0x6f7790>
 1087eac:	010882f0 	cmpltui	r4,zero,8715
 1087eb0:	42000204 	addi	r8,r8,8
 1087eb4:	da802317 	ldw	r10,140(sp)
 1087eb8:	5455883a 	add	r10,r10,r17
 1087ebc:	da802315 	stw	r10,140(sp)
 1087ec0:	003f8b06 	br	1087cf0 <___vfiprintf_internal_r+0x144>
 1087ec4:	d9002017 	ldw	r4,128(sp)
 1087ec8:	a00b883a 	mov	r5,r20
 1087ecc:	10828680 	call	1082868 <__swsetup_r>
 1087ed0:	1003b11e 	bne	r2,zero,1088d98 <___vfiprintf_internal_r+0x11ec>
 1087ed4:	a080030b 	ldhu	r2,12(r20)
 1087ed8:	00c00284 	movi	r3,10
 1087edc:	1080068c 	andi	r2,r2,26
 1087ee0:	10ff541e 	bne	r2,r3,1087c34 <___vfiprintf_internal_r+0x88>
 1087ee4:	a080038f 	ldh	r2,14(r20)
 1087ee8:	103f5216 	blt	r2,zero,1087c34 <___vfiprintf_internal_r+0x88>
 1087eec:	d9c02217 	ldw	r7,136(sp)
 1087ef0:	d9002017 	ldw	r4,128(sp)
 1087ef4:	e00d883a 	mov	r6,fp
 1087ef8:	a00b883a 	mov	r5,r20
 1087efc:	10890240 	call	1089024 <__sbprintf>
 1087f00:	dfc03617 	ldw	ra,216(sp)
 1087f04:	df003517 	ldw	fp,212(sp)
 1087f08:	ddc03417 	ldw	r23,208(sp)
 1087f0c:	dd803317 	ldw	r22,204(sp)
 1087f10:	dd403217 	ldw	r21,200(sp)
 1087f14:	dd003117 	ldw	r20,196(sp)
 1087f18:	dcc03017 	ldw	r19,192(sp)
 1087f1c:	dc802f17 	ldw	r18,188(sp)
 1087f20:	dc402e17 	ldw	r17,184(sp)
 1087f24:	dc002d17 	ldw	r16,180(sp)
 1087f28:	dec03704 	addi	sp,sp,220
 1087f2c:	f800283a 	ret
 1087f30:	108483c0 	call	108483c <__sinit>
 1087f34:	003f2f06 	br	1087bf4 <___vfiprintf_internal_r+0x48>
 1087f38:	0463c83a 	sub	r17,zero,r17
 1087f3c:	d8802215 	stw	r2,136(sp)
 1087f40:	a5000114 	ori	r20,r20,4
 1087f44:	80c00007 	ldb	r3,0(r16)
 1087f48:	003f7706 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1087f4c:	00800c04 	movi	r2,48
 1087f50:	da802217 	ldw	r10,136(sp)
 1087f54:	d8801d05 	stb	r2,116(sp)
 1087f58:	00801e04 	movi	r2,120
 1087f5c:	d8801d45 	stb	r2,117(sp)
 1087f60:	d8001d85 	stb	zero,118(sp)
 1087f64:	50c00104 	addi	r3,r10,4
 1087f68:	54800017 	ldw	r18,0(r10)
 1087f6c:	0027883a 	mov	r19,zero
 1087f70:	a0800094 	ori	r2,r20,2
 1087f74:	48030b16 	blt	r9,zero,1088ba4 <___vfiprintf_internal_r+0xff8>
 1087f78:	00bfdfc4 	movi	r2,-129
 1087f7c:	a096703a 	and	r11,r20,r2
 1087f80:	d8c02215 	stw	r3,136(sp)
 1087f84:	5d000094 	ori	r20,r11,2
 1087f88:	90032b1e 	bne	r18,zero,1088c38 <___vfiprintf_internal_r+0x108c>
 1087f8c:	00804274 	movhi	r2,265
 1087f90:	10bcb104 	addi	r2,r2,-3388
 1087f94:	d8802615 	stw	r2,152(sp)
 1087f98:	0039883a 	mov	fp,zero
 1087f9c:	48017b1e 	bne	r9,zero,108858c <___vfiprintf_internal_r+0x9e0>
 1087fa0:	0013883a 	mov	r9,zero
 1087fa4:	0027883a 	mov	r19,zero
 1087fa8:	dd401a04 	addi	r21,sp,104
 1087fac:	4825883a 	mov	r18,r9
 1087fb0:	4cc0010e 	bge	r9,r19,1087fb8 <___vfiprintf_internal_r+0x40c>
 1087fb4:	9825883a 	mov	r18,r19
 1087fb8:	e7003fcc 	andi	fp,fp,255
 1087fbc:	e700201c 	xori	fp,fp,128
 1087fc0:	e73fe004 	addi	fp,fp,-128
 1087fc4:	e0000126 	beq	fp,zero,1087fcc <___vfiprintf_internal_r+0x420>
 1087fc8:	94800044 	addi	r18,r18,1
 1087fcc:	a380008c 	andi	r14,r20,2
 1087fd0:	70000126 	beq	r14,zero,1087fd8 <___vfiprintf_internal_r+0x42c>
 1087fd4:	94800084 	addi	r18,r18,2
 1087fd8:	a700210c 	andi	fp,r20,132
 1087fdc:	e001df1e 	bne	fp,zero,108875c <___vfiprintf_internal_r+0xbb0>
 1087fe0:	8c87c83a 	sub	r3,r17,r18
 1087fe4:	00c1dd0e 	bge	zero,r3,108875c <___vfiprintf_internal_r+0xbb0>
 1087fe8:	01c00404 	movi	r7,16
 1087fec:	d8801c17 	ldw	r2,112(sp)
 1087ff0:	38c3ad0e 	bge	r7,r3,1088ea8 <___vfiprintf_internal_r+0x12fc>
 1087ff4:	02804274 	movhi	r10,265
 1087ff8:	52bd1604 	addi	r10,r10,-2984
 1087ffc:	dc002915 	stw	r16,164(sp)
 1088000:	d9801b17 	ldw	r6,108(sp)
 1088004:	da802415 	stw	r10,144(sp)
 1088008:	03c001c4 	movi	r15,7
 108800c:	da402515 	stw	r9,148(sp)
 1088010:	db802815 	stw	r14,160(sp)
 1088014:	1821883a 	mov	r16,r3
 1088018:	00000506 	br	1088030 <___vfiprintf_internal_r+0x484>
 108801c:	31400084 	addi	r5,r6,2
 1088020:	42000204 	addi	r8,r8,8
 1088024:	200d883a 	mov	r6,r4
 1088028:	843ffc04 	addi	r16,r16,-16
 108802c:	3c000d0e 	bge	r7,r16,1088064 <___vfiprintf_internal_r+0x4b8>
 1088030:	10800404 	addi	r2,r2,16
 1088034:	31000044 	addi	r4,r6,1
 1088038:	45800015 	stw	r22,0(r8)
 108803c:	41c00115 	stw	r7,4(r8)
 1088040:	d8801c15 	stw	r2,112(sp)
 1088044:	d9001b15 	stw	r4,108(sp)
 1088048:	793ff40e 	bge	r15,r4,108801c <___vfiprintf_internal_r+0x470>
 108804c:	1001b51e 	bne	r2,zero,1088724 <___vfiprintf_internal_r+0xb78>
 1088050:	843ffc04 	addi	r16,r16,-16
 1088054:	000d883a 	mov	r6,zero
 1088058:	01400044 	movi	r5,1
 108805c:	d811883a 	mov	r8,sp
 1088060:	3c3ff316 	blt	r7,r16,1088030 <___vfiprintf_internal_r+0x484>
 1088064:	8007883a 	mov	r3,r16
 1088068:	da402517 	ldw	r9,148(sp)
 108806c:	db802817 	ldw	r14,160(sp)
 1088070:	dc002917 	ldw	r16,164(sp)
 1088074:	da802417 	ldw	r10,144(sp)
 1088078:	1885883a 	add	r2,r3,r2
 108807c:	40c00115 	stw	r3,4(r8)
 1088080:	42800015 	stw	r10,0(r8)
 1088084:	d8801c15 	stw	r2,112(sp)
 1088088:	d9401b15 	stw	r5,108(sp)
 108808c:	00c001c4 	movi	r3,7
 1088090:	19426016 	blt	r3,r5,1088a14 <___vfiprintf_internal_r+0xe68>
 1088094:	d8c01d87 	ldb	r3,118(sp)
 1088098:	42000204 	addi	r8,r8,8
 108809c:	29000044 	addi	r4,r5,1
 10880a0:	1801b31e 	bne	r3,zero,1088770 <___vfiprintf_internal_r+0xbc4>
 10880a4:	7001c026 	beq	r14,zero,10887a8 <___vfiprintf_internal_r+0xbfc>
 10880a8:	d8c01d04 	addi	r3,sp,116
 10880ac:	10800084 	addi	r2,r2,2
 10880b0:	40c00015 	stw	r3,0(r8)
 10880b4:	00c00084 	movi	r3,2
 10880b8:	40c00115 	stw	r3,4(r8)
 10880bc:	d8801c15 	stw	r2,112(sp)
 10880c0:	d9001b15 	stw	r4,108(sp)
 10880c4:	00c001c4 	movi	r3,7
 10880c8:	1902650e 	bge	r3,r4,1088a60 <___vfiprintf_internal_r+0xeb4>
 10880cc:	10029a1e 	bne	r2,zero,1088b38 <___vfiprintf_internal_r+0xf8c>
 10880d0:	00c02004 	movi	r3,128
 10880d4:	01000044 	movi	r4,1
 10880d8:	000b883a 	mov	r5,zero
 10880dc:	d811883a 	mov	r8,sp
 10880e0:	e0c1b31e 	bne	fp,r3,10887b0 <___vfiprintf_internal_r+0xc04>
 10880e4:	8cb9c83a 	sub	fp,r17,r18
 10880e8:	0701b10e 	bge	zero,fp,10887b0 <___vfiprintf_internal_r+0xc04>
 10880ec:	01c00404 	movi	r7,16
 10880f0:	3f03890e 	bge	r7,fp,1088f18 <___vfiprintf_internal_r+0x136c>
 10880f4:	00c04274 	movhi	r3,265
 10880f8:	18fd1204 	addi	r3,r3,-3000
 10880fc:	d8c02415 	stw	r3,144(sp)
 1088100:	8007883a 	mov	r3,r16
 1088104:	034001c4 	movi	r13,7
 1088108:	e021883a 	mov	r16,fp
 108810c:	da402515 	stw	r9,148(sp)
 1088110:	1839883a 	mov	fp,r3
 1088114:	00000506 	br	108812c <___vfiprintf_internal_r+0x580>
 1088118:	29800084 	addi	r6,r5,2
 108811c:	42000204 	addi	r8,r8,8
 1088120:	180b883a 	mov	r5,r3
 1088124:	843ffc04 	addi	r16,r16,-16
 1088128:	3c000d0e 	bge	r7,r16,1088160 <___vfiprintf_internal_r+0x5b4>
 108812c:	10800404 	addi	r2,r2,16
 1088130:	28c00044 	addi	r3,r5,1
 1088134:	45c00015 	stw	r23,0(r8)
 1088138:	41c00115 	stw	r7,4(r8)
 108813c:	d8801c15 	stw	r2,112(sp)
 1088140:	d8c01b15 	stw	r3,108(sp)
 1088144:	68fff40e 	bge	r13,r3,1088118 <___vfiprintf_internal_r+0x56c>
 1088148:	1002241e 	bne	r2,zero,10889dc <___vfiprintf_internal_r+0xe30>
 108814c:	843ffc04 	addi	r16,r16,-16
 1088150:	01800044 	movi	r6,1
 1088154:	000b883a 	mov	r5,zero
 1088158:	d811883a 	mov	r8,sp
 108815c:	3c3ff316 	blt	r7,r16,108812c <___vfiprintf_internal_r+0x580>
 1088160:	da402517 	ldw	r9,148(sp)
 1088164:	e007883a 	mov	r3,fp
 1088168:	8039883a 	mov	fp,r16
 108816c:	1821883a 	mov	r16,r3
 1088170:	d8c02417 	ldw	r3,144(sp)
 1088174:	1705883a 	add	r2,r2,fp
 1088178:	47000115 	stw	fp,4(r8)
 108817c:	40c00015 	stw	r3,0(r8)
 1088180:	d8801c15 	stw	r2,112(sp)
 1088184:	d9801b15 	stw	r6,108(sp)
 1088188:	00c001c4 	movi	r3,7
 108818c:	19827616 	blt	r3,r6,1088b68 <___vfiprintf_internal_r+0xfbc>
 1088190:	4cf9c83a 	sub	fp,r9,r19
 1088194:	42000204 	addi	r8,r8,8
 1088198:	31000044 	addi	r4,r6,1
 108819c:	300b883a 	mov	r5,r6
 10881a0:	07018516 	blt	zero,fp,10887b8 <___vfiprintf_internal_r+0xc0c>
 10881a4:	9885883a 	add	r2,r19,r2
 10881a8:	45400015 	stw	r21,0(r8)
 10881ac:	44c00115 	stw	r19,4(r8)
 10881b0:	d8801c15 	stw	r2,112(sp)
 10881b4:	d9001b15 	stw	r4,108(sp)
 10881b8:	00c001c4 	movi	r3,7
 10881bc:	1901dd0e 	bge	r3,r4,1088934 <___vfiprintf_internal_r+0xd88>
 10881c0:	1002401e 	bne	r2,zero,1088ac4 <___vfiprintf_internal_r+0xf18>
 10881c4:	d8001b15 	stw	zero,108(sp)
 10881c8:	a2c0010c 	andi	r11,r20,4
 10881cc:	58000226 	beq	r11,zero,10881d8 <___vfiprintf_internal_r+0x62c>
 10881d0:	8ca7c83a 	sub	r19,r17,r18
 10881d4:	04c2f216 	blt	zero,r19,1088da0 <___vfiprintf_internal_r+0x11f4>
 10881d8:	8c80010e 	bge	r17,r18,10881e0 <___vfiprintf_internal_r+0x634>
 10881dc:	9023883a 	mov	r17,r18
 10881e0:	da802317 	ldw	r10,140(sp)
 10881e4:	5455883a 	add	r10,r10,r17
 10881e8:	da802315 	stw	r10,140(sp)
 10881ec:	d8001b15 	stw	zero,108(sp)
 10881f0:	d811883a 	mov	r8,sp
 10881f4:	003ea206 	br	1087c80 <___vfiprintf_internal_r+0xd4>
 10881f8:	a5000814 	ori	r20,r20,32
 10881fc:	80c00007 	ldb	r3,0(r16)
 1088200:	003ec906 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088204:	80c00007 	ldb	r3,0(r16)
 1088208:	1b030926 	beq	r3,r12,1088e30 <___vfiprintf_internal_r+0x1284>
 108820c:	a5000414 	ori	r20,r20,16
 1088210:	003ec506 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088214:	21003fcc 	andi	r4,r4,255
 1088218:	20035e1e 	bne	r4,zero,1088f94 <___vfiprintf_internal_r+0x13e8>
 108821c:	a080080c 	andi	r2,r20,32
 1088220:	1002a526 	beq	r2,zero,1088cb8 <___vfiprintf_internal_r+0x110c>
 1088224:	da802217 	ldw	r10,136(sp)
 1088228:	50800017 	ldw	r2,0(r10)
 108822c:	da802317 	ldw	r10,140(sp)
 1088230:	5007d7fa 	srai	r3,r10,31
 1088234:	da802217 	ldw	r10,136(sp)
 1088238:	10c00115 	stw	r3,4(r2)
 108823c:	52800104 	addi	r10,r10,4
 1088240:	da802215 	stw	r10,136(sp)
 1088244:	da802317 	ldw	r10,140(sp)
 1088248:	12800015 	stw	r10,0(r2)
 108824c:	003e8c06 	br	1087c80 <___vfiprintf_internal_r+0xd4>
 1088250:	21003fcc 	andi	r4,r4,255
 1088254:	2003511e 	bne	r4,zero,1088f9c <___vfiprintf_internal_r+0x13f0>
 1088258:	a080080c 	andi	r2,r20,32
 108825c:	1000a126 	beq	r2,zero,10884e4 <___vfiprintf_internal_r+0x938>
 1088260:	da802217 	ldw	r10,136(sp)
 1088264:	d8001d85 	stb	zero,118(sp)
 1088268:	50800204 	addi	r2,r10,8
 108826c:	54800017 	ldw	r18,0(r10)
 1088270:	54c00117 	ldw	r19,4(r10)
 1088274:	4802b416 	blt	r9,zero,1088d48 <___vfiprintf_internal_r+0x119c>
 1088278:	013fdfc4 	movi	r4,-129
 108827c:	94c6b03a 	or	r3,r18,r19
 1088280:	d8802215 	stw	r2,136(sp)
 1088284:	a128703a 	and	r20,r20,r4
 1088288:	1800a226 	beq	r3,zero,1088514 <___vfiprintf_internal_r+0x968>
 108828c:	0039883a 	mov	fp,zero
 1088290:	dd401a04 	addi	r21,sp,104
 1088294:	9006d0fa 	srli	r3,r18,3
 1088298:	9808977a 	slli	r4,r19,29
 108829c:	9826d0fa 	srli	r19,r19,3
 10882a0:	948001cc 	andi	r18,r18,7
 10882a4:	90800c04 	addi	r2,r18,48
 10882a8:	ad7fffc4 	addi	r21,r21,-1
 10882ac:	20e4b03a 	or	r18,r4,r3
 10882b0:	a8800005 	stb	r2,0(r21)
 10882b4:	94c6b03a 	or	r3,r18,r19
 10882b8:	183ff61e 	bne	r3,zero,1088294 <___vfiprintf_internal_r+0x6e8>
 10882bc:	a0c0004c 	andi	r3,r20,1
 10882c0:	18005926 	beq	r3,zero,1088428 <___vfiprintf_internal_r+0x87c>
 10882c4:	10803fcc 	andi	r2,r2,255
 10882c8:	1080201c 	xori	r2,r2,128
 10882cc:	10bfe004 	addi	r2,r2,-128
 10882d0:	00c00c04 	movi	r3,48
 10882d4:	10c05426 	beq	r2,r3,1088428 <___vfiprintf_internal_r+0x87c>
 10882d8:	da801e17 	ldw	r10,120(sp)
 10882dc:	a8bfffc4 	addi	r2,r21,-1
 10882e0:	a8ffffc5 	stb	r3,-1(r21)
 10882e4:	50a7c83a 	sub	r19,r10,r2
 10882e8:	102b883a 	mov	r21,r2
 10882ec:	003f2f06 	br	1087fac <___vfiprintf_internal_r+0x400>
 10882f0:	21003fcc 	andi	r4,r4,255
 10882f4:	2003421e 	bne	r4,zero,1089000 <___vfiprintf_internal_r+0x1454>
 10882f8:	00804274 	movhi	r2,265
 10882fc:	10bcb104 	addi	r2,r2,-3388
 1088300:	d8802615 	stw	r2,152(sp)
 1088304:	a080080c 	andi	r2,r20,32
 1088308:	1000aa26 	beq	r2,zero,10885b4 <___vfiprintf_internal_r+0xa08>
 108830c:	da802217 	ldw	r10,136(sp)
 1088310:	54800017 	ldw	r18,0(r10)
 1088314:	54c00117 	ldw	r19,4(r10)
 1088318:	52800204 	addi	r10,r10,8
 108831c:	da802215 	stw	r10,136(sp)
 1088320:	a080004c 	andi	r2,r20,1
 1088324:	1001d226 	beq	r2,zero,1088a70 <___vfiprintf_internal_r+0xec4>
 1088328:	94c4b03a 	or	r2,r18,r19
 108832c:	1002351e 	bne	r2,zero,1088c04 <___vfiprintf_internal_r+0x1058>
 1088330:	d8001d85 	stb	zero,118(sp)
 1088334:	48022216 	blt	r9,zero,1088bc0 <___vfiprintf_internal_r+0x1014>
 1088338:	00bfdfc4 	movi	r2,-129
 108833c:	a0a8703a 	and	r20,r20,r2
 1088340:	003f1506 	br	1087f98 <___vfiprintf_internal_r+0x3ec>
 1088344:	da802217 	ldw	r10,136(sp)
 1088348:	04800044 	movi	r18,1
 108834c:	d8001d85 	stb	zero,118(sp)
 1088350:	50800017 	ldw	r2,0(r10)
 1088354:	52800104 	addi	r10,r10,4
 1088358:	da802215 	stw	r10,136(sp)
 108835c:	d8801005 	stb	r2,64(sp)
 1088360:	9027883a 	mov	r19,r18
 1088364:	dd401004 	addi	r21,sp,64
 1088368:	0013883a 	mov	r9,zero
 108836c:	003f1706 	br	1087fcc <___vfiprintf_internal_r+0x420>
 1088370:	21003fcc 	andi	r4,r4,255
 1088374:	2003201e 	bne	r4,zero,1088ff8 <___vfiprintf_internal_r+0x144c>
 1088378:	a080080c 	andi	r2,r20,32
 108837c:	10004b26 	beq	r2,zero,10884ac <___vfiprintf_internal_r+0x900>
 1088380:	da802217 	ldw	r10,136(sp)
 1088384:	50800117 	ldw	r2,4(r10)
 1088388:	54800017 	ldw	r18,0(r10)
 108838c:	52800204 	addi	r10,r10,8
 1088390:	da802215 	stw	r10,136(sp)
 1088394:	1027883a 	mov	r19,r2
 1088398:	10022c16 	blt	r2,zero,1088c4c <___vfiprintf_internal_r+0x10a0>
 108839c:	df001d83 	ldbu	fp,118(sp)
 10883a0:	48007216 	blt	r9,zero,108856c <___vfiprintf_internal_r+0x9c0>
 10883a4:	00ffdfc4 	movi	r3,-129
 10883a8:	94c4b03a 	or	r2,r18,r19
 10883ac:	a0e8703a 	and	r20,r20,r3
 10883b0:	1000cc26 	beq	r2,zero,10886e4 <___vfiprintf_internal_r+0xb38>
 10883b4:	98021026 	beq	r19,zero,1088bf8 <___vfiprintf_internal_r+0x104c>
 10883b8:	dc402415 	stw	r17,144(sp)
 10883bc:	dc002515 	stw	r16,148(sp)
 10883c0:	9823883a 	mov	r17,r19
 10883c4:	9021883a 	mov	r16,r18
 10883c8:	dd401a04 	addi	r21,sp,104
 10883cc:	4825883a 	mov	r18,r9
 10883d0:	4027883a 	mov	r19,r8
 10883d4:	8009883a 	mov	r4,r16
 10883d8:	880b883a 	mov	r5,r17
 10883dc:	01800284 	movi	r6,10
 10883e0:	000f883a 	mov	r7,zero
 10883e4:	1089f8c0 	call	1089f8c <__umoddi3>
 10883e8:	10800c04 	addi	r2,r2,48
 10883ec:	ad7fffc4 	addi	r21,r21,-1
 10883f0:	8009883a 	mov	r4,r16
 10883f4:	880b883a 	mov	r5,r17
 10883f8:	a8800005 	stb	r2,0(r21)
 10883fc:	01800284 	movi	r6,10
 1088400:	000f883a 	mov	r7,zero
 1088404:	1089a140 	call	1089a14 <__udivdi3>
 1088408:	1021883a 	mov	r16,r2
 108840c:	10c4b03a 	or	r2,r2,r3
 1088410:	1823883a 	mov	r17,r3
 1088414:	103fef1e 	bne	r2,zero,10883d4 <___vfiprintf_internal_r+0x828>
 1088418:	dc402417 	ldw	r17,144(sp)
 108841c:	dc002517 	ldw	r16,148(sp)
 1088420:	9013883a 	mov	r9,r18
 1088424:	9811883a 	mov	r8,r19
 1088428:	da801e17 	ldw	r10,120(sp)
 108842c:	5567c83a 	sub	r19,r10,r21
 1088430:	003ede06 	br	1087fac <___vfiprintf_internal_r+0x400>
 1088434:	38803fcc 	andi	r2,r7,255
 1088438:	1080201c 	xori	r2,r2,128
 108843c:	10bfe004 	addi	r2,r2,-128
 1088440:	1002371e 	bne	r2,zero,1088d20 <___vfiprintf_internal_r+0x1174>
 1088444:	01000044 	movi	r4,1
 1088448:	01c00804 	movi	r7,32
 108844c:	80c00007 	ldb	r3,0(r16)
 1088450:	003e3506 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088454:	a5000054 	ori	r20,r20,1
 1088458:	80c00007 	ldb	r3,0(r16)
 108845c:	003e3206 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088460:	a5002014 	ori	r20,r20,128
 1088464:	80c00007 	ldb	r3,0(r16)
 1088468:	003e2f06 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 108846c:	8015883a 	mov	r10,r16
 1088470:	0023883a 	mov	r17,zero
 1088474:	18bff404 	addi	r2,r3,-48
 1088478:	50c00007 	ldb	r3,0(r10)
 108847c:	8c4002a4 	muli	r17,r17,10
 1088480:	84000044 	addi	r16,r16,1
 1088484:	8015883a 	mov	r10,r16
 1088488:	1463883a 	add	r17,r2,r17
 108848c:	18bff404 	addi	r2,r3,-48
 1088490:	30bff92e 	bgeu	r6,r2,1088478 <___vfiprintf_internal_r+0x8cc>
 1088494:	003e2506 	br	1087d2c <___vfiprintf_internal_r+0x180>
 1088498:	21003fcc 	andi	r4,r4,255
 108849c:	2002d41e 	bne	r4,zero,1088ff0 <___vfiprintf_internal_r+0x1444>
 10884a0:	a5000414 	ori	r20,r20,16
 10884a4:	a080080c 	andi	r2,r20,32
 10884a8:	103fb51e 	bne	r2,zero,1088380 <___vfiprintf_internal_r+0x7d4>
 10884ac:	a080040c 	andi	r2,r20,16
 10884b0:	1001f826 	beq	r2,zero,1088c94 <___vfiprintf_internal_r+0x10e8>
 10884b4:	da802217 	ldw	r10,136(sp)
 10884b8:	54800017 	ldw	r18,0(r10)
 10884bc:	52800104 	addi	r10,r10,4
 10884c0:	da802215 	stw	r10,136(sp)
 10884c4:	9027d7fa 	srai	r19,r18,31
 10884c8:	9805883a 	mov	r2,r19
 10884cc:	003fb206 	br	1088398 <___vfiprintf_internal_r+0x7ec>
 10884d0:	21003fcc 	andi	r4,r4,255
 10884d4:	2002c41e 	bne	r4,zero,1088fe8 <___vfiprintf_internal_r+0x143c>
 10884d8:	a5000414 	ori	r20,r20,16
 10884dc:	a080080c 	andi	r2,r20,32
 10884e0:	103f5f1e 	bne	r2,zero,1088260 <___vfiprintf_internal_r+0x6b4>
 10884e4:	a080040c 	andi	r2,r20,16
 10884e8:	10020f26 	beq	r2,zero,1088d28 <___vfiprintf_internal_r+0x117c>
 10884ec:	da802217 	ldw	r10,136(sp)
 10884f0:	d8001d85 	stb	zero,118(sp)
 10884f4:	0027883a 	mov	r19,zero
 10884f8:	50800104 	addi	r2,r10,4
 10884fc:	54800017 	ldw	r18,0(r10)
 1088500:	48021116 	blt	r9,zero,1088d48 <___vfiprintf_internal_r+0x119c>
 1088504:	00ffdfc4 	movi	r3,-129
 1088508:	d8802215 	stw	r2,136(sp)
 108850c:	a0e8703a 	and	r20,r20,r3
 1088510:	903f5e1e 	bne	r18,zero,108828c <___vfiprintf_internal_r+0x6e0>
 1088514:	0039883a 	mov	fp,zero
 1088518:	4802a626 	beq	r9,zero,1088fb4 <___vfiprintf_internal_r+0x1408>
 108851c:	0025883a 	mov	r18,zero
 1088520:	0027883a 	mov	r19,zero
 1088524:	003f5a06 	br	1088290 <___vfiprintf_internal_r+0x6e4>
 1088528:	21003fcc 	andi	r4,r4,255
 108852c:	20029f1e 	bne	r4,zero,1088fac <___vfiprintf_internal_r+0x1400>
 1088530:	a5000414 	ori	r20,r20,16
 1088534:	a080080c 	andi	r2,r20,32
 1088538:	10005e1e 	bne	r2,zero,10886b4 <___vfiprintf_internal_r+0xb08>
 108853c:	a080040c 	andi	r2,r20,16
 1088540:	1001a21e 	bne	r2,zero,1088bcc <___vfiprintf_internal_r+0x1020>
 1088544:	a080100c 	andi	r2,r20,64
 1088548:	d8001d85 	stb	zero,118(sp)
 108854c:	da802217 	ldw	r10,136(sp)
 1088550:	1002231e 	bne	r2,zero,1088de0 <___vfiprintf_internal_r+0x1234>
 1088554:	50800104 	addi	r2,r10,4
 1088558:	54800017 	ldw	r18,0(r10)
 108855c:	0027883a 	mov	r19,zero
 1088560:	4801a00e 	bge	r9,zero,1088be4 <___vfiprintf_internal_r+0x1038>
 1088564:	d8802215 	stw	r2,136(sp)
 1088568:	0039883a 	mov	fp,zero
 108856c:	94c4b03a 	or	r2,r18,r19
 1088570:	103f901e 	bne	r2,zero,10883b4 <___vfiprintf_internal_r+0x808>
 1088574:	00800044 	movi	r2,1
 1088578:	10803fcc 	andi	r2,r2,255
 108857c:	00c00044 	movi	r3,1
 1088580:	10c05926 	beq	r2,r3,10886e8 <___vfiprintf_internal_r+0xb3c>
 1088584:	00c00084 	movi	r3,2
 1088588:	10ffe41e 	bne	r2,r3,108851c <___vfiprintf_internal_r+0x970>
 108858c:	0025883a 	mov	r18,zero
 1088590:	0027883a 	mov	r19,zero
 1088594:	00013d06 	br	1088a8c <___vfiprintf_internal_r+0xee0>
 1088598:	21003fcc 	andi	r4,r4,255
 108859c:	2002811e 	bne	r4,zero,1088fa4 <___vfiprintf_internal_r+0x13f8>
 10885a0:	00804274 	movhi	r2,265
 10885a4:	10bcac04 	addi	r2,r2,-3408
 10885a8:	d8802615 	stw	r2,152(sp)
 10885ac:	a080080c 	andi	r2,r20,32
 10885b0:	103f561e 	bne	r2,zero,108830c <___vfiprintf_internal_r+0x760>
 10885b4:	a080040c 	andi	r2,r20,16
 10885b8:	1001d126 	beq	r2,zero,1088d00 <___vfiprintf_internal_r+0x1154>
 10885bc:	da802217 	ldw	r10,136(sp)
 10885c0:	0027883a 	mov	r19,zero
 10885c4:	54800017 	ldw	r18,0(r10)
 10885c8:	52800104 	addi	r10,r10,4
 10885cc:	da802215 	stw	r10,136(sp)
 10885d0:	003f5306 	br	1088320 <___vfiprintf_internal_r+0x774>
 10885d4:	da802217 	ldw	r10,136(sp)
 10885d8:	d8001d85 	stb	zero,118(sp)
 10885dc:	55400017 	ldw	r21,0(r10)
 10885e0:	50c00104 	addi	r3,r10,4
 10885e4:	a8024226 	beq	r21,zero,1088ef0 <___vfiprintf_internal_r+0x1344>
 10885e8:	48021816 	blt	r9,zero,1088e4c <___vfiprintf_internal_r+0x12a0>
 10885ec:	480d883a 	mov	r6,r9
 10885f0:	000b883a 	mov	r5,zero
 10885f4:	a809883a 	mov	r4,r21
 10885f8:	d8c02a15 	stw	r3,168(sp)
 10885fc:	da002b15 	stw	r8,172(sp)
 1088600:	da402c15 	stw	r9,176(sp)
 1088604:	1085da80 	call	1085da8 <memchr>
 1088608:	d8c02a17 	ldw	r3,168(sp)
 108860c:	da002b17 	ldw	r8,172(sp)
 1088610:	da402c17 	ldw	r9,176(sp)
 1088614:	10024826 	beq	r2,zero,1088f38 <___vfiprintf_internal_r+0x138c>
 1088618:	1567c83a 	sub	r19,r2,r21
 108861c:	df001d83 	ldbu	fp,118(sp)
 1088620:	d8c02215 	stw	r3,136(sp)
 1088624:	0013883a 	mov	r9,zero
 1088628:	003e6006 	br	1087fac <___vfiprintf_internal_r+0x400>
 108862c:	21003fcc 	andi	r4,r4,255
 1088630:	203fc026 	beq	r4,zero,1088534 <___vfiprintf_internal_r+0x988>
 1088634:	d9c01d85 	stb	r7,118(sp)
 1088638:	003fbe06 	br	1088534 <___vfiprintf_internal_r+0x988>
 108863c:	da802217 	ldw	r10,136(sp)
 1088640:	54400017 	ldw	r17,0(r10)
 1088644:	50800104 	addi	r2,r10,4
 1088648:	883e3b16 	blt	r17,zero,1087f38 <___vfiprintf_internal_r+0x38c>
 108864c:	d8802215 	stw	r2,136(sp)
 1088650:	80c00007 	ldb	r3,0(r16)
 1088654:	003db406 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088658:	01000044 	movi	r4,1
 108865c:	01c00ac4 	movi	r7,43
 1088660:	80c00007 	ldb	r3,0(r16)
 1088664:	003db006 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088668:	80c00007 	ldb	r3,0(r16)
 108866c:	82800044 	addi	r10,r16,1
 1088670:	1b423c26 	beq	r3,r13,1088f64 <___vfiprintf_internal_r+0x13b8>
 1088674:	18bff404 	addi	r2,r3,-48
 1088678:	0013883a 	mov	r9,zero
 108867c:	30822b36 	bltu	r6,r2,1088f2c <___vfiprintf_internal_r+0x1380>
 1088680:	50c00007 	ldb	r3,0(r10)
 1088684:	4a4002a4 	muli	r9,r9,10
 1088688:	54000044 	addi	r16,r10,1
 108868c:	8015883a 	mov	r10,r16
 1088690:	4893883a 	add	r9,r9,r2
 1088694:	18bff404 	addi	r2,r3,-48
 1088698:	30bff92e 	bgeu	r6,r2,1088680 <___vfiprintf_internal_r+0xad4>
 108869c:	483da30e 	bge	r9,zero,1087d2c <___vfiprintf_internal_r+0x180>
 10886a0:	027fffc4 	movi	r9,-1
 10886a4:	003da106 	br	1087d2c <___vfiprintf_internal_r+0x180>
 10886a8:	a5001014 	ori	r20,r20,64
 10886ac:	80c00007 	ldb	r3,0(r16)
 10886b0:	003d9d06 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 10886b4:	da802217 	ldw	r10,136(sp)
 10886b8:	d8001d85 	stb	zero,118(sp)
 10886bc:	50c00204 	addi	r3,r10,8
 10886c0:	54800017 	ldw	r18,0(r10)
 10886c4:	54c00117 	ldw	r19,4(r10)
 10886c8:	4801ca16 	blt	r9,zero,1088df4 <___vfiprintf_internal_r+0x1248>
 10886cc:	013fdfc4 	movi	r4,-129
 10886d0:	94c4b03a 	or	r2,r18,r19
 10886d4:	d8c02215 	stw	r3,136(sp)
 10886d8:	a128703a 	and	r20,r20,r4
 10886dc:	0039883a 	mov	fp,zero
 10886e0:	103f341e 	bne	r2,zero,10883b4 <___vfiprintf_internal_r+0x808>
 10886e4:	483e2e26 	beq	r9,zero,1087fa0 <___vfiprintf_internal_r+0x3f4>
 10886e8:	0025883a 	mov	r18,zero
 10886ec:	94800c04 	addi	r18,r18,48
 10886f0:	dc8019c5 	stb	r18,103(sp)
 10886f4:	dcc02717 	ldw	r19,156(sp)
 10886f8:	dd4019c4 	addi	r21,sp,103
 10886fc:	003e2b06 	br	1087fac <___vfiprintf_internal_r+0x400>
 1088700:	21003fcc 	andi	r4,r4,255
 1088704:	2002361e 	bne	r4,zero,1088fe0 <___vfiprintf_internal_r+0x1434>
 1088708:	1801c126 	beq	r3,zero,1088e10 <___vfiprintf_internal_r+0x1264>
 108870c:	04800044 	movi	r18,1
 1088710:	d8c01005 	stb	r3,64(sp)
 1088714:	d8001d85 	stb	zero,118(sp)
 1088718:	9027883a 	mov	r19,r18
 108871c:	dd401004 	addi	r21,sp,64
 1088720:	003f1106 	br	1088368 <___vfiprintf_internal_r+0x7bc>
 1088724:	d9402117 	ldw	r5,132(sp)
 1088728:	d9002017 	ldw	r4,128(sp)
 108872c:	d9801a04 	addi	r6,sp,104
 1088730:	d9c02b15 	stw	r7,172(sp)
 1088734:	dbc02a15 	stw	r15,168(sp)
 1088738:	1087a980 	call	1087a98 <__sprint_r.part.0>
 108873c:	d9c02b17 	ldw	r7,172(sp)
 1088740:	dbc02a17 	ldw	r15,168(sp)
 1088744:	10006d1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088748:	d9801b17 	ldw	r6,108(sp)
 108874c:	d8801c17 	ldw	r2,112(sp)
 1088750:	d811883a 	mov	r8,sp
 1088754:	31400044 	addi	r5,r6,1
 1088758:	003e3306 	br	1088028 <___vfiprintf_internal_r+0x47c>
 108875c:	d9401b17 	ldw	r5,108(sp)
 1088760:	d8801c17 	ldw	r2,112(sp)
 1088764:	29000044 	addi	r4,r5,1
 1088768:	d8c01d87 	ldb	r3,118(sp)
 108876c:	183e4d26 	beq	r3,zero,10880a4 <___vfiprintf_internal_r+0x4f8>
 1088770:	00c00044 	movi	r3,1
 1088774:	d9401d84 	addi	r5,sp,118
 1088778:	10c5883a 	add	r2,r2,r3
 108877c:	41400015 	stw	r5,0(r8)
 1088780:	40c00115 	stw	r3,4(r8)
 1088784:	d8801c15 	stw	r2,112(sp)
 1088788:	d9001b15 	stw	r4,108(sp)
 108878c:	014001c4 	movi	r5,7
 1088790:	2900a90e 	bge	r5,r4,1088a38 <___vfiprintf_internal_r+0xe8c>
 1088794:	1000da1e 	bne	r2,zero,1088b00 <___vfiprintf_internal_r+0xf54>
 1088798:	7000ab1e 	bne	r14,zero,1088a48 <___vfiprintf_internal_r+0xe9c>
 108879c:	000b883a 	mov	r5,zero
 10887a0:	1809883a 	mov	r4,r3
 10887a4:	d811883a 	mov	r8,sp
 10887a8:	00c02004 	movi	r3,128
 10887ac:	e0fe4d26 	beq	fp,r3,10880e4 <___vfiprintf_internal_r+0x538>
 10887b0:	4cf9c83a 	sub	fp,r9,r19
 10887b4:	073e7b0e 	bge	zero,fp,10881a4 <___vfiprintf_internal_r+0x5f8>
 10887b8:	01c00404 	movi	r7,16
 10887bc:	3f01900e 	bge	r7,fp,1088e00 <___vfiprintf_internal_r+0x1254>
 10887c0:	00c04274 	movhi	r3,265
 10887c4:	18fd1204 	addi	r3,r3,-3000
 10887c8:	d8c02415 	stw	r3,144(sp)
 10887cc:	034001c4 	movi	r13,7
 10887d0:	00000506 	br	10887e8 <___vfiprintf_internal_r+0xc3c>
 10887d4:	29000084 	addi	r4,r5,2
 10887d8:	42000204 	addi	r8,r8,8
 10887dc:	180b883a 	mov	r5,r3
 10887e0:	e73ffc04 	addi	fp,fp,-16
 10887e4:	3f000d0e 	bge	r7,fp,108881c <___vfiprintf_internal_r+0xc70>
 10887e8:	10800404 	addi	r2,r2,16
 10887ec:	28c00044 	addi	r3,r5,1
 10887f0:	45c00015 	stw	r23,0(r8)
 10887f4:	41c00115 	stw	r7,4(r8)
 10887f8:	d8801c15 	stw	r2,112(sp)
 10887fc:	d8c01b15 	stw	r3,108(sp)
 1088800:	68fff40e 	bge	r13,r3,10887d4 <___vfiprintf_internal_r+0xc28>
 1088804:	1000101e 	bne	r2,zero,1088848 <___vfiprintf_internal_r+0xc9c>
 1088808:	e73ffc04 	addi	fp,fp,-16
 108880c:	01000044 	movi	r4,1
 1088810:	000b883a 	mov	r5,zero
 1088814:	d811883a 	mov	r8,sp
 1088818:	3f3ff316 	blt	r7,fp,10887e8 <___vfiprintf_internal_r+0xc3c>
 108881c:	da802417 	ldw	r10,144(sp)
 1088820:	1705883a 	add	r2,r2,fp
 1088824:	47000115 	stw	fp,4(r8)
 1088828:	42800015 	stw	r10,0(r8)
 108882c:	d8801c15 	stw	r2,112(sp)
 1088830:	d9001b15 	stw	r4,108(sp)
 1088834:	00c001c4 	movi	r3,7
 1088838:	19003616 	blt	r3,r4,1088914 <___vfiprintf_internal_r+0xd68>
 108883c:	42000204 	addi	r8,r8,8
 1088840:	21000044 	addi	r4,r4,1
 1088844:	003e5706 	br	10881a4 <___vfiprintf_internal_r+0x5f8>
 1088848:	d9402117 	ldw	r5,132(sp)
 108884c:	d9002017 	ldw	r4,128(sp)
 1088850:	d9801a04 	addi	r6,sp,104
 1088854:	d9c02b15 	stw	r7,172(sp)
 1088858:	db402a15 	stw	r13,168(sp)
 108885c:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088860:	d9c02b17 	ldw	r7,172(sp)
 1088864:	db402a17 	ldw	r13,168(sp)
 1088868:	1000241e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 108886c:	d9401b17 	ldw	r5,108(sp)
 1088870:	d8801c17 	ldw	r2,112(sp)
 1088874:	d811883a 	mov	r8,sp
 1088878:	29000044 	addi	r4,r5,1
 108887c:	003fd806 	br	10887e0 <___vfiprintf_internal_r+0xc34>
 1088880:	d9401b17 	ldw	r5,108(sp)
 1088884:	00c04274 	movhi	r3,265
 1088888:	18fd1604 	addi	r3,r3,-2984
 108888c:	d8c02415 	stw	r3,144(sp)
 1088890:	29400044 	addi	r5,r5,1
 1088894:	d8c02417 	ldw	r3,144(sp)
 1088898:	14c5883a 	add	r2,r2,r19
 108889c:	44c00115 	stw	r19,4(r8)
 10888a0:	40c00015 	stw	r3,0(r8)
 10888a4:	d8801c15 	stw	r2,112(sp)
 10888a8:	d9401b15 	stw	r5,108(sp)
 10888ac:	00c001c4 	movi	r3,7
 10888b0:	1940070e 	bge	r3,r5,10888d0 <___vfiprintf_internal_r+0xd24>
 10888b4:	103e4826 	beq	r2,zero,10881d8 <___vfiprintf_internal_r+0x62c>
 10888b8:	d9402117 	ldw	r5,132(sp)
 10888bc:	d9002017 	ldw	r4,128(sp)
 10888c0:	d9801a04 	addi	r6,sp,104
 10888c4:	1087a980 	call	1087a98 <__sprint_r.part.0>
 10888c8:	10000c1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 10888cc:	d8801c17 	ldw	r2,112(sp)
 10888d0:	8c80010e 	bge	r17,r18,10888d8 <___vfiprintf_internal_r+0xd2c>
 10888d4:	9023883a 	mov	r17,r18
 10888d8:	da802317 	ldw	r10,140(sp)
 10888dc:	5455883a 	add	r10,r10,r17
 10888e0:	da802315 	stw	r10,140(sp)
 10888e4:	103e4126 	beq	r2,zero,10881ec <___vfiprintf_internal_r+0x640>
 10888e8:	d9402117 	ldw	r5,132(sp)
 10888ec:	d9002017 	ldw	r4,128(sp)
 10888f0:	d9801a04 	addi	r6,sp,104
 10888f4:	1087a980 	call	1087a98 <__sprint_r.part.0>
 10888f8:	103e3c26 	beq	r2,zero,10881ec <___vfiprintf_internal_r+0x640>
 10888fc:	dd002117 	ldw	r20,132(sp)
 1088900:	a080030b 	ldhu	r2,12(r20)
 1088904:	1080100c 	andi	r2,r2,64
 1088908:	1001231e 	bne	r2,zero,1088d98 <___vfiprintf_internal_r+0x11ec>
 108890c:	d8802317 	ldw	r2,140(sp)
 1088910:	003d7b06 	br	1087f00 <___vfiprintf_internal_r+0x354>
 1088914:	1000991e 	bne	r2,zero,1088b7c <___vfiprintf_internal_r+0xfd0>
 1088918:	00c00044 	movi	r3,1
 108891c:	9805883a 	mov	r2,r19
 1088920:	dd400015 	stw	r21,0(sp)
 1088924:	dcc00115 	stw	r19,4(sp)
 1088928:	dcc01c15 	stw	r19,112(sp)
 108892c:	d8c01b15 	stw	r3,108(sp)
 1088930:	d811883a 	mov	r8,sp
 1088934:	42000204 	addi	r8,r8,8
 1088938:	a2c0010c 	andi	r11,r20,4
 108893c:	583fe426 	beq	r11,zero,10888d0 <___vfiprintf_internal_r+0xd24>
 1088940:	8ca7c83a 	sub	r19,r17,r18
 1088944:	04ffe20e 	bge	zero,r19,10888d0 <___vfiprintf_internal_r+0xd24>
 1088948:	01c00404 	movi	r7,16
 108894c:	3cffcc0e 	bge	r7,r19,1088880 <___vfiprintf_internal_r+0xcd4>
 1088950:	02804274 	movhi	r10,265
 1088954:	52bd1604 	addi	r10,r10,-2984
 1088958:	d9001b17 	ldw	r4,108(sp)
 108895c:	da802415 	stw	r10,144(sp)
 1088960:	382b883a 	mov	r21,r7
 1088964:	050001c4 	movi	r20,7
 1088968:	df002017 	ldw	fp,128(sp)
 108896c:	00000506 	br	1088984 <___vfiprintf_internal_r+0xdd8>
 1088970:	21400084 	addi	r5,r4,2
 1088974:	42000204 	addi	r8,r8,8
 1088978:	1809883a 	mov	r4,r3
 108897c:	9cfffc04 	addi	r19,r19,-16
 1088980:	acffc40e 	bge	r21,r19,1088894 <___vfiprintf_internal_r+0xce8>
 1088984:	10800404 	addi	r2,r2,16
 1088988:	20c00044 	addi	r3,r4,1
 108898c:	45800015 	stw	r22,0(r8)
 1088990:	45400115 	stw	r21,4(r8)
 1088994:	d8801c15 	stw	r2,112(sp)
 1088998:	d8c01b15 	stw	r3,108(sp)
 108899c:	a0fff40e 	bge	r20,r3,1088970 <___vfiprintf_internal_r+0xdc4>
 10889a0:	1000041e 	bne	r2,zero,10889b4 <___vfiprintf_internal_r+0xe08>
 10889a4:	01400044 	movi	r5,1
 10889a8:	0009883a 	mov	r4,zero
 10889ac:	d811883a 	mov	r8,sp
 10889b0:	003ff206 	br	108897c <___vfiprintf_internal_r+0xdd0>
 10889b4:	d9402117 	ldw	r5,132(sp)
 10889b8:	d9801a04 	addi	r6,sp,104
 10889bc:	e009883a 	mov	r4,fp
 10889c0:	1087a980 	call	1087a98 <__sprint_r.part.0>
 10889c4:	103fcd1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 10889c8:	d9001b17 	ldw	r4,108(sp)
 10889cc:	d8801c17 	ldw	r2,112(sp)
 10889d0:	d811883a 	mov	r8,sp
 10889d4:	21400044 	addi	r5,r4,1
 10889d8:	003fe806 	br	108897c <___vfiprintf_internal_r+0xdd0>
 10889dc:	d9402117 	ldw	r5,132(sp)
 10889e0:	d9002017 	ldw	r4,128(sp)
 10889e4:	d9801a04 	addi	r6,sp,104
 10889e8:	d9c02b15 	stw	r7,172(sp)
 10889ec:	db402a15 	stw	r13,168(sp)
 10889f0:	1087a980 	call	1087a98 <__sprint_r.part.0>
 10889f4:	d9c02b17 	ldw	r7,172(sp)
 10889f8:	db402a17 	ldw	r13,168(sp)
 10889fc:	103fbf1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088a00:	d9401b17 	ldw	r5,108(sp)
 1088a04:	d8801c17 	ldw	r2,112(sp)
 1088a08:	d811883a 	mov	r8,sp
 1088a0c:	29800044 	addi	r6,r5,1
 1088a10:	003dc406 	br	1088124 <___vfiprintf_internal_r+0x578>
 1088a14:	1000d21e 	bne	r2,zero,1088d60 <___vfiprintf_internal_r+0x11b4>
 1088a18:	d8c01d87 	ldb	r3,118(sp)
 1088a1c:	18009526 	beq	r3,zero,1088c74 <___vfiprintf_internal_r+0x10c8>
 1088a20:	00800044 	movi	r2,1
 1088a24:	d8c01d84 	addi	r3,sp,118
 1088a28:	1009883a 	mov	r4,r2
 1088a2c:	d8c00015 	stw	r3,0(sp)
 1088a30:	d8800115 	stw	r2,4(sp)
 1088a34:	d811883a 	mov	r8,sp
 1088a38:	200b883a 	mov	r5,r4
 1088a3c:	42000204 	addi	r8,r8,8
 1088a40:	21000044 	addi	r4,r4,1
 1088a44:	003d9706 	br	10880a4 <___vfiprintf_internal_r+0x4f8>
 1088a48:	d9001d04 	addi	r4,sp,116
 1088a4c:	00800084 	movi	r2,2
 1088a50:	d9000015 	stw	r4,0(sp)
 1088a54:	d8800115 	stw	r2,4(sp)
 1088a58:	1809883a 	mov	r4,r3
 1088a5c:	d811883a 	mov	r8,sp
 1088a60:	200b883a 	mov	r5,r4
 1088a64:	42000204 	addi	r8,r8,8
 1088a68:	21000044 	addi	r4,r4,1
 1088a6c:	003f4e06 	br	10887a8 <___vfiprintf_internal_r+0xbfc>
 1088a70:	d8001d85 	stb	zero,118(sp)
 1088a74:	48005016 	blt	r9,zero,1088bb8 <___vfiprintf_internal_r+0x100c>
 1088a78:	00ffdfc4 	movi	r3,-129
 1088a7c:	94c4b03a 	or	r2,r18,r19
 1088a80:	a0e8703a 	and	r20,r20,r3
 1088a84:	103d4426 	beq	r2,zero,1087f98 <___vfiprintf_internal_r+0x3ec>
 1088a88:	0039883a 	mov	fp,zero
 1088a8c:	d9002617 	ldw	r4,152(sp)
 1088a90:	dd401a04 	addi	r21,sp,104
 1088a94:	908003cc 	andi	r2,r18,15
 1088a98:	9806973a 	slli	r3,r19,28
 1088a9c:	2085883a 	add	r2,r4,r2
 1088aa0:	9024d13a 	srli	r18,r18,4
 1088aa4:	10800003 	ldbu	r2,0(r2)
 1088aa8:	9826d13a 	srli	r19,r19,4
 1088aac:	ad7fffc4 	addi	r21,r21,-1
 1088ab0:	1ca4b03a 	or	r18,r3,r18
 1088ab4:	a8800005 	stb	r2,0(r21)
 1088ab8:	94c4b03a 	or	r2,r18,r19
 1088abc:	103ff51e 	bne	r2,zero,1088a94 <___vfiprintf_internal_r+0xee8>
 1088ac0:	003e5906 	br	1088428 <___vfiprintf_internal_r+0x87c>
 1088ac4:	d9402117 	ldw	r5,132(sp)
 1088ac8:	d9002017 	ldw	r4,128(sp)
 1088acc:	d9801a04 	addi	r6,sp,104
 1088ad0:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088ad4:	103f891e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088ad8:	d8801c17 	ldw	r2,112(sp)
 1088adc:	d811883a 	mov	r8,sp
 1088ae0:	003f9506 	br	1088938 <___vfiprintf_internal_r+0xd8c>
 1088ae4:	d9402117 	ldw	r5,132(sp)
 1088ae8:	d9002017 	ldw	r4,128(sp)
 1088aec:	d9801a04 	addi	r6,sp,104
 1088af0:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088af4:	103f811e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088af8:	d811883a 	mov	r8,sp
 1088afc:	003ced06 	br	1087eb4 <___vfiprintf_internal_r+0x308>
 1088b00:	d9402117 	ldw	r5,132(sp)
 1088b04:	d9002017 	ldw	r4,128(sp)
 1088b08:	d9801a04 	addi	r6,sp,104
 1088b0c:	da402c15 	stw	r9,176(sp)
 1088b10:	db802a15 	stw	r14,168(sp)
 1088b14:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088b18:	da402c17 	ldw	r9,176(sp)
 1088b1c:	db802a17 	ldw	r14,168(sp)
 1088b20:	103f761e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088b24:	d9401b17 	ldw	r5,108(sp)
 1088b28:	d8801c17 	ldw	r2,112(sp)
 1088b2c:	d811883a 	mov	r8,sp
 1088b30:	29000044 	addi	r4,r5,1
 1088b34:	003d5b06 	br	10880a4 <___vfiprintf_internal_r+0x4f8>
 1088b38:	d9402117 	ldw	r5,132(sp)
 1088b3c:	d9002017 	ldw	r4,128(sp)
 1088b40:	d9801a04 	addi	r6,sp,104
 1088b44:	da402c15 	stw	r9,176(sp)
 1088b48:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088b4c:	da402c17 	ldw	r9,176(sp)
 1088b50:	103f6a1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088b54:	d9401b17 	ldw	r5,108(sp)
 1088b58:	d8801c17 	ldw	r2,112(sp)
 1088b5c:	d811883a 	mov	r8,sp
 1088b60:	29000044 	addi	r4,r5,1
 1088b64:	003f1006 	br	10887a8 <___vfiprintf_internal_r+0xbfc>
 1088b68:	1000c31e 	bne	r2,zero,1088e78 <___vfiprintf_internal_r+0x12cc>
 1088b6c:	01000044 	movi	r4,1
 1088b70:	000b883a 	mov	r5,zero
 1088b74:	d811883a 	mov	r8,sp
 1088b78:	003f0d06 	br	10887b0 <___vfiprintf_internal_r+0xc04>
 1088b7c:	d9402117 	ldw	r5,132(sp)
 1088b80:	d9002017 	ldw	r4,128(sp)
 1088b84:	d9801a04 	addi	r6,sp,104
 1088b88:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088b8c:	103f5b1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088b90:	d9001b17 	ldw	r4,108(sp)
 1088b94:	d8801c17 	ldw	r2,112(sp)
 1088b98:	d811883a 	mov	r8,sp
 1088b9c:	21000044 	addi	r4,r4,1
 1088ba0:	003d8006 	br	10881a4 <___vfiprintf_internal_r+0x5f8>
 1088ba4:	01004274 	movhi	r4,265
 1088ba8:	213cb104 	addi	r4,r4,-3388
 1088bac:	d9002615 	stw	r4,152(sp)
 1088bb0:	d8c02215 	stw	r3,136(sp)
 1088bb4:	1029883a 	mov	r20,r2
 1088bb8:	94c4b03a 	or	r2,r18,r19
 1088bbc:	103fb21e 	bne	r2,zero,1088a88 <___vfiprintf_internal_r+0xedc>
 1088bc0:	0039883a 	mov	fp,zero
 1088bc4:	00800084 	movi	r2,2
 1088bc8:	003e6b06 	br	1088578 <___vfiprintf_internal_r+0x9cc>
 1088bcc:	da802217 	ldw	r10,136(sp)
 1088bd0:	d8001d85 	stb	zero,118(sp)
 1088bd4:	0027883a 	mov	r19,zero
 1088bd8:	50800104 	addi	r2,r10,4
 1088bdc:	54800017 	ldw	r18,0(r10)
 1088be0:	483e6016 	blt	r9,zero,1088564 <___vfiprintf_internal_r+0x9b8>
 1088be4:	00ffdfc4 	movi	r3,-129
 1088be8:	d8802215 	stw	r2,136(sp)
 1088bec:	a0e8703a 	and	r20,r20,r3
 1088bf0:	0039883a 	mov	fp,zero
 1088bf4:	903ebb26 	beq	r18,zero,10886e4 <___vfiprintf_internal_r+0xb38>
 1088bf8:	00800244 	movi	r2,9
 1088bfc:	14bdee36 	bltu	r2,r18,10883b8 <___vfiprintf_internal_r+0x80c>
 1088c00:	003eba06 	br	10886ec <___vfiprintf_internal_r+0xb40>
 1088c04:	00800c04 	movi	r2,48
 1088c08:	d8c01d45 	stb	r3,117(sp)
 1088c0c:	d8801d05 	stb	r2,116(sp)
 1088c10:	d8001d85 	stb	zero,118(sp)
 1088c14:	a0c00094 	ori	r3,r20,2
 1088c18:	4800a916 	blt	r9,zero,1088ec0 <___vfiprintf_internal_r+0x1314>
 1088c1c:	00bfdfc4 	movi	r2,-129
 1088c20:	a096703a 	and	r11,r20,r2
 1088c24:	5d000094 	ori	r20,r11,2
 1088c28:	0039883a 	mov	fp,zero
 1088c2c:	003f9706 	br	1088a8c <___vfiprintf_internal_r+0xee0>
 1088c30:	8025883a 	mov	r18,r16
 1088c34:	003c2e06 	br	1087cf0 <___vfiprintf_internal_r+0x144>
 1088c38:	00804274 	movhi	r2,265
 1088c3c:	10bcb104 	addi	r2,r2,-3388
 1088c40:	0039883a 	mov	fp,zero
 1088c44:	d8802615 	stw	r2,152(sp)
 1088c48:	003f9006 	br	1088a8c <___vfiprintf_internal_r+0xee0>
 1088c4c:	04a5c83a 	sub	r18,zero,r18
 1088c50:	07000b44 	movi	fp,45
 1088c54:	9004c03a 	cmpne	r2,r18,zero
 1088c58:	04e7c83a 	sub	r19,zero,r19
 1088c5c:	df001d85 	stb	fp,118(sp)
 1088c60:	98a7c83a 	sub	r19,r19,r2
 1088c64:	48009f16 	blt	r9,zero,1088ee4 <___vfiprintf_internal_r+0x1338>
 1088c68:	00bfdfc4 	movi	r2,-129
 1088c6c:	a0a8703a 	and	r20,r20,r2
 1088c70:	003dd006 	br	10883b4 <___vfiprintf_internal_r+0x808>
 1088c74:	70004c26 	beq	r14,zero,1088da8 <___vfiprintf_internal_r+0x11fc>
 1088c78:	00800084 	movi	r2,2
 1088c7c:	d8c01d04 	addi	r3,sp,116
 1088c80:	d8c00015 	stw	r3,0(sp)
 1088c84:	d8800115 	stw	r2,4(sp)
 1088c88:	01000044 	movi	r4,1
 1088c8c:	d811883a 	mov	r8,sp
 1088c90:	003f7306 	br	1088a60 <___vfiprintf_internal_r+0xeb4>
 1088c94:	a080100c 	andi	r2,r20,64
 1088c98:	da802217 	ldw	r10,136(sp)
 1088c9c:	103e0626 	beq	r2,zero,10884b8 <___vfiprintf_internal_r+0x90c>
 1088ca0:	5480000f 	ldh	r18,0(r10)
 1088ca4:	52800104 	addi	r10,r10,4
 1088ca8:	da802215 	stw	r10,136(sp)
 1088cac:	9027d7fa 	srai	r19,r18,31
 1088cb0:	9805883a 	mov	r2,r19
 1088cb4:	003db806 	br	1088398 <___vfiprintf_internal_r+0x7ec>
 1088cb8:	a080040c 	andi	r2,r20,16
 1088cbc:	1000091e 	bne	r2,zero,1088ce4 <___vfiprintf_internal_r+0x1138>
 1088cc0:	a2c0100c 	andi	r11,r20,64
 1088cc4:	58000726 	beq	r11,zero,1088ce4 <___vfiprintf_internal_r+0x1138>
 1088cc8:	da802217 	ldw	r10,136(sp)
 1088ccc:	50800017 	ldw	r2,0(r10)
 1088cd0:	52800104 	addi	r10,r10,4
 1088cd4:	da802215 	stw	r10,136(sp)
 1088cd8:	da802317 	ldw	r10,140(sp)
 1088cdc:	1280000d 	sth	r10,0(r2)
 1088ce0:	003be706 	br	1087c80 <___vfiprintf_internal_r+0xd4>
 1088ce4:	da802217 	ldw	r10,136(sp)
 1088ce8:	50800017 	ldw	r2,0(r10)
 1088cec:	52800104 	addi	r10,r10,4
 1088cf0:	da802215 	stw	r10,136(sp)
 1088cf4:	da802317 	ldw	r10,140(sp)
 1088cf8:	12800015 	stw	r10,0(r2)
 1088cfc:	003be006 	br	1087c80 <___vfiprintf_internal_r+0xd4>
 1088d00:	a080100c 	andi	r2,r20,64
 1088d04:	da802217 	ldw	r10,136(sp)
 1088d08:	10003026 	beq	r2,zero,1088dcc <___vfiprintf_internal_r+0x1220>
 1088d0c:	5480000b 	ldhu	r18,0(r10)
 1088d10:	52800104 	addi	r10,r10,4
 1088d14:	0027883a 	mov	r19,zero
 1088d18:	da802215 	stw	r10,136(sp)
 1088d1c:	003d8006 	br	1088320 <___vfiprintf_internal_r+0x774>
 1088d20:	80c00007 	ldb	r3,0(r16)
 1088d24:	003c0006 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088d28:	a080100c 	andi	r2,r20,64
 1088d2c:	d8001d85 	stb	zero,118(sp)
 1088d30:	da802217 	ldw	r10,136(sp)
 1088d34:	1000201e 	bne	r2,zero,1088db8 <___vfiprintf_internal_r+0x120c>
 1088d38:	50800104 	addi	r2,r10,4
 1088d3c:	54800017 	ldw	r18,0(r10)
 1088d40:	0027883a 	mov	r19,zero
 1088d44:	483def0e 	bge	r9,zero,1088504 <___vfiprintf_internal_r+0x958>
 1088d48:	94c6b03a 	or	r3,r18,r19
 1088d4c:	d8802215 	stw	r2,136(sp)
 1088d50:	183d4e1e 	bne	r3,zero,108828c <___vfiprintf_internal_r+0x6e0>
 1088d54:	0039883a 	mov	fp,zero
 1088d58:	0005883a 	mov	r2,zero
 1088d5c:	003e0606 	br	1088578 <___vfiprintf_internal_r+0x9cc>
 1088d60:	d9402117 	ldw	r5,132(sp)
 1088d64:	d9002017 	ldw	r4,128(sp)
 1088d68:	d9801a04 	addi	r6,sp,104
 1088d6c:	da402c15 	stw	r9,176(sp)
 1088d70:	db802a15 	stw	r14,168(sp)
 1088d74:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088d78:	da402c17 	ldw	r9,176(sp)
 1088d7c:	db802a17 	ldw	r14,168(sp)
 1088d80:	103ede1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088d84:	d9401b17 	ldw	r5,108(sp)
 1088d88:	d8801c17 	ldw	r2,112(sp)
 1088d8c:	d811883a 	mov	r8,sp
 1088d90:	29000044 	addi	r4,r5,1
 1088d94:	003e7406 	br	1088768 <___vfiprintf_internal_r+0xbbc>
 1088d98:	00bfffc4 	movi	r2,-1
 1088d9c:	003c5806 	br	1087f00 <___vfiprintf_internal_r+0x354>
 1088da0:	d811883a 	mov	r8,sp
 1088da4:	003ee806 	br	1088948 <___vfiprintf_internal_r+0xd9c>
 1088da8:	000b883a 	mov	r5,zero
 1088dac:	01000044 	movi	r4,1
 1088db0:	d811883a 	mov	r8,sp
 1088db4:	003e7c06 	br	10887a8 <___vfiprintf_internal_r+0xbfc>
 1088db8:	50800104 	addi	r2,r10,4
 1088dbc:	5480000b 	ldhu	r18,0(r10)
 1088dc0:	0027883a 	mov	r19,zero
 1088dc4:	483dcf0e 	bge	r9,zero,1088504 <___vfiprintf_internal_r+0x958>
 1088dc8:	003fdf06 	br	1088d48 <___vfiprintf_internal_r+0x119c>
 1088dcc:	54800017 	ldw	r18,0(r10)
 1088dd0:	52800104 	addi	r10,r10,4
 1088dd4:	0027883a 	mov	r19,zero
 1088dd8:	da802215 	stw	r10,136(sp)
 1088ddc:	003d5006 	br	1088320 <___vfiprintf_internal_r+0x774>
 1088de0:	50800104 	addi	r2,r10,4
 1088de4:	5480000b 	ldhu	r18,0(r10)
 1088de8:	0027883a 	mov	r19,zero
 1088dec:	483f7d0e 	bge	r9,zero,1088be4 <___vfiprintf_internal_r+0x1038>
 1088df0:	003ddc06 	br	1088564 <___vfiprintf_internal_r+0x9b8>
 1088df4:	d8c02215 	stw	r3,136(sp)
 1088df8:	0039883a 	mov	fp,zero
 1088dfc:	003ddb06 	br	108856c <___vfiprintf_internal_r+0x9c0>
 1088e00:	02804274 	movhi	r10,265
 1088e04:	52bd1204 	addi	r10,r10,-3000
 1088e08:	da802415 	stw	r10,144(sp)
 1088e0c:	003e8306 	br	108881c <___vfiprintf_internal_r+0xc70>
 1088e10:	d8801c17 	ldw	r2,112(sp)
 1088e14:	dd002117 	ldw	r20,132(sp)
 1088e18:	103eb926 	beq	r2,zero,1088900 <___vfiprintf_internal_r+0xd54>
 1088e1c:	d9002017 	ldw	r4,128(sp)
 1088e20:	d9801a04 	addi	r6,sp,104
 1088e24:	a00b883a 	mov	r5,r20
 1088e28:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088e2c:	003eb406 	br	1088900 <___vfiprintf_internal_r+0xd54>
 1088e30:	80c00043 	ldbu	r3,1(r16)
 1088e34:	a5000814 	ori	r20,r20,32
 1088e38:	84000044 	addi	r16,r16,1
 1088e3c:	18c03fcc 	andi	r3,r3,255
 1088e40:	18c0201c 	xori	r3,r3,128
 1088e44:	18ffe004 	addi	r3,r3,-128
 1088e48:	003bb706 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088e4c:	a809883a 	mov	r4,r21
 1088e50:	d8c02a15 	stw	r3,168(sp)
 1088e54:	da002b15 	stw	r8,172(sp)
 1088e58:	10805000 	call	1080500 <strlen>
 1088e5c:	d8c02a17 	ldw	r3,168(sp)
 1088e60:	1027883a 	mov	r19,r2
 1088e64:	df001d83 	ldbu	fp,118(sp)
 1088e68:	d8c02215 	stw	r3,136(sp)
 1088e6c:	0013883a 	mov	r9,zero
 1088e70:	da002b17 	ldw	r8,172(sp)
 1088e74:	003c4d06 	br	1087fac <___vfiprintf_internal_r+0x400>
 1088e78:	d9402117 	ldw	r5,132(sp)
 1088e7c:	d9002017 	ldw	r4,128(sp)
 1088e80:	d9801a04 	addi	r6,sp,104
 1088e84:	da402c15 	stw	r9,176(sp)
 1088e88:	1087a980 	call	1087a98 <__sprint_r.part.0>
 1088e8c:	da402c17 	ldw	r9,176(sp)
 1088e90:	103e9a1e 	bne	r2,zero,10888fc <___vfiprintf_internal_r+0xd50>
 1088e94:	d9401b17 	ldw	r5,108(sp)
 1088e98:	d8801c17 	ldw	r2,112(sp)
 1088e9c:	d811883a 	mov	r8,sp
 1088ea0:	29000044 	addi	r4,r5,1
 1088ea4:	003e4206 	br	10887b0 <___vfiprintf_internal_r+0xc04>
 1088ea8:	d9401b17 	ldw	r5,108(sp)
 1088eac:	01004274 	movhi	r4,265
 1088eb0:	213d1604 	addi	r4,r4,-2984
 1088eb4:	d9002415 	stw	r4,144(sp)
 1088eb8:	29400044 	addi	r5,r5,1
 1088ebc:	003c6d06 	br	1088074 <___vfiprintf_internal_r+0x4c8>
 1088ec0:	0039883a 	mov	fp,zero
 1088ec4:	00800084 	movi	r2,2
 1088ec8:	10803fcc 	andi	r2,r2,255
 1088ecc:	01000044 	movi	r4,1
 1088ed0:	11001e26 	beq	r2,r4,1088f4c <___vfiprintf_internal_r+0x13a0>
 1088ed4:	01000084 	movi	r4,2
 1088ed8:	11001e1e 	bne	r2,r4,1088f54 <___vfiprintf_internal_r+0x13a8>
 1088edc:	1829883a 	mov	r20,r3
 1088ee0:	003eea06 	br	1088a8c <___vfiprintf_internal_r+0xee0>
 1088ee4:	a007883a 	mov	r3,r20
 1088ee8:	00800044 	movi	r2,1
 1088eec:	003ff606 	br	1088ec8 <___vfiprintf_internal_r+0x131c>
 1088ef0:	00800184 	movi	r2,6
 1088ef4:	1240012e 	bgeu	r2,r9,1088efc <___vfiprintf_internal_r+0x1350>
 1088ef8:	1013883a 	mov	r9,r2
 1088efc:	4827883a 	mov	r19,r9
 1088f00:	4825883a 	mov	r18,r9
 1088f04:	48001516 	blt	r9,zero,1088f5c <___vfiprintf_internal_r+0x13b0>
 1088f08:	05404274 	movhi	r21,265
 1088f0c:	d8c02215 	stw	r3,136(sp)
 1088f10:	ad7cb604 	addi	r21,r21,-3368
 1088f14:	003d1406 	br	1088368 <___vfiprintf_internal_r+0x7bc>
 1088f18:	02804274 	movhi	r10,265
 1088f1c:	52bd1204 	addi	r10,r10,-3000
 1088f20:	da802415 	stw	r10,144(sp)
 1088f24:	200d883a 	mov	r6,r4
 1088f28:	003c9106 	br	1088170 <___vfiprintf_internal_r+0x5c4>
 1088f2c:	5021883a 	mov	r16,r10
 1088f30:	0013883a 	mov	r9,zero
 1088f34:	003b7d06 	br	1087d2c <___vfiprintf_internal_r+0x180>
 1088f38:	4827883a 	mov	r19,r9
 1088f3c:	df001d83 	ldbu	fp,118(sp)
 1088f40:	d8c02215 	stw	r3,136(sp)
 1088f44:	0013883a 	mov	r9,zero
 1088f48:	003c1806 	br	1087fac <___vfiprintf_internal_r+0x400>
 1088f4c:	1829883a 	mov	r20,r3
 1088f50:	003d1806 	br	10883b4 <___vfiprintf_internal_r+0x808>
 1088f54:	1829883a 	mov	r20,r3
 1088f58:	003ccd06 	br	1088290 <___vfiprintf_internal_r+0x6e4>
 1088f5c:	0025883a 	mov	r18,zero
 1088f60:	003fe906 	br	1088f08 <___vfiprintf_internal_r+0x135c>
 1088f64:	d8802217 	ldw	r2,136(sp)
 1088f68:	80c00043 	ldbu	r3,1(r16)
 1088f6c:	5021883a 	mov	r16,r10
 1088f70:	12400017 	ldw	r9,0(r2)
 1088f74:	10800104 	addi	r2,r2,4
 1088f78:	d8802215 	stw	r2,136(sp)
 1088f7c:	483faf0e 	bge	r9,zero,1088e3c <___vfiprintf_internal_r+0x1290>
 1088f80:	18c03fcc 	andi	r3,r3,255
 1088f84:	18c0201c 	xori	r3,r3,128
 1088f88:	027fffc4 	movi	r9,-1
 1088f8c:	18ffe004 	addi	r3,r3,-128
 1088f90:	003b6506 	br	1087d28 <___vfiprintf_internal_r+0x17c>
 1088f94:	d9c01d85 	stb	r7,118(sp)
 1088f98:	003ca006 	br	108821c <___vfiprintf_internal_r+0x670>
 1088f9c:	d9c01d85 	stb	r7,118(sp)
 1088fa0:	003cad06 	br	1088258 <___vfiprintf_internal_r+0x6ac>
 1088fa4:	d9c01d85 	stb	r7,118(sp)
 1088fa8:	003d7d06 	br	10885a0 <___vfiprintf_internal_r+0x9f4>
 1088fac:	d9c01d85 	stb	r7,118(sp)
 1088fb0:	003d5f06 	br	1088530 <___vfiprintf_internal_r+0x984>
 1088fb4:	a080004c 	andi	r2,r20,1
 1088fb8:	0039883a 	mov	fp,zero
 1088fbc:	10000526 	beq	r2,zero,1088fd4 <___vfiprintf_internal_r+0x1428>
 1088fc0:	00800c04 	movi	r2,48
 1088fc4:	d88019c5 	stb	r2,103(sp)
 1088fc8:	dcc02717 	ldw	r19,156(sp)
 1088fcc:	dd4019c4 	addi	r21,sp,103
 1088fd0:	003bf606 	br	1087fac <___vfiprintf_internal_r+0x400>
 1088fd4:	0027883a 	mov	r19,zero
 1088fd8:	dd401a04 	addi	r21,sp,104
 1088fdc:	003bf306 	br	1087fac <___vfiprintf_internal_r+0x400>
 1088fe0:	d9c01d85 	stb	r7,118(sp)
 1088fe4:	003dc806 	br	1088708 <___vfiprintf_internal_r+0xb5c>
 1088fe8:	d9c01d85 	stb	r7,118(sp)
 1088fec:	003d3a06 	br	10884d8 <___vfiprintf_internal_r+0x92c>
 1088ff0:	d9c01d85 	stb	r7,118(sp)
 1088ff4:	003d2a06 	br	10884a0 <___vfiprintf_internal_r+0x8f4>
 1088ff8:	d9c01d85 	stb	r7,118(sp)
 1088ffc:	003cde06 	br	1088378 <___vfiprintf_internal_r+0x7cc>
 1089000:	d9c01d85 	stb	r7,118(sp)
 1089004:	003cbc06 	br	10882f8 <___vfiprintf_internal_r+0x74c>

01089008 <__vfiprintf_internal>:
 1089008:	00804274 	movhi	r2,265
 108900c:	10842304 	addi	r2,r2,4236
 1089010:	300f883a 	mov	r7,r6
 1089014:	280d883a 	mov	r6,r5
 1089018:	200b883a 	mov	r5,r4
 108901c:	11000017 	ldw	r4,0(r2)
 1089020:	1087bac1 	jmpi	1087bac <___vfiprintf_internal_r>

01089024 <__sbprintf>:
 1089024:	2880030b 	ldhu	r2,12(r5)
 1089028:	2ac01917 	ldw	r11,100(r5)
 108902c:	2a80038b 	ldhu	r10,14(r5)
 1089030:	2a400717 	ldw	r9,28(r5)
 1089034:	2a000917 	ldw	r8,36(r5)
 1089038:	defee204 	addi	sp,sp,-1144
 108903c:	00c10004 	movi	r3,1024
 1089040:	dc011a15 	stw	r16,1128(sp)
 1089044:	10bfff4c 	andi	r2,r2,65533
 1089048:	2821883a 	mov	r16,r5
 108904c:	d8cb883a 	add	r5,sp,r3
 1089050:	dc811c15 	stw	r18,1136(sp)
 1089054:	dc411b15 	stw	r17,1132(sp)
 1089058:	dfc11d15 	stw	ra,1140(sp)
 108905c:	2025883a 	mov	r18,r4
 1089060:	d881030d 	sth	r2,1036(sp)
 1089064:	dac11915 	stw	r11,1124(sp)
 1089068:	da81038d 	sth	r10,1038(sp)
 108906c:	da410715 	stw	r9,1052(sp)
 1089070:	da010915 	stw	r8,1060(sp)
 1089074:	dec10015 	stw	sp,1024(sp)
 1089078:	dec10415 	stw	sp,1040(sp)
 108907c:	d8c10215 	stw	r3,1032(sp)
 1089080:	d8c10515 	stw	r3,1044(sp)
 1089084:	d8010615 	stw	zero,1048(sp)
 1089088:	1087bac0 	call	1087bac <___vfiprintf_internal_r>
 108908c:	1023883a 	mov	r17,r2
 1089090:	10000416 	blt	r2,zero,10890a4 <__sbprintf+0x80>
 1089094:	d9410004 	addi	r5,sp,1024
 1089098:	9009883a 	mov	r4,r18
 108909c:	10844600 	call	1084460 <_fflush_r>
 10890a0:	10000d1e 	bne	r2,zero,10890d8 <__sbprintf+0xb4>
 10890a4:	d881030b 	ldhu	r2,1036(sp)
 10890a8:	1080100c 	andi	r2,r2,64
 10890ac:	10000326 	beq	r2,zero,10890bc <__sbprintf+0x98>
 10890b0:	8080030b 	ldhu	r2,12(r16)
 10890b4:	10801014 	ori	r2,r2,64
 10890b8:	8080030d 	sth	r2,12(r16)
 10890bc:	8805883a 	mov	r2,r17
 10890c0:	dfc11d17 	ldw	ra,1140(sp)
 10890c4:	dc811c17 	ldw	r18,1136(sp)
 10890c8:	dc411b17 	ldw	r17,1132(sp)
 10890cc:	dc011a17 	ldw	r16,1128(sp)
 10890d0:	dec11e04 	addi	sp,sp,1144
 10890d4:	f800283a 	ret
 10890d8:	047fffc4 	movi	r17,-1
 10890dc:	003ff106 	br	10890a4 <__sbprintf+0x80>

010890e0 <_write_r>:
 10890e0:	defffd04 	addi	sp,sp,-12
 10890e4:	2805883a 	mov	r2,r5
 10890e8:	dc000015 	stw	r16,0(sp)
 10890ec:	04004274 	movhi	r16,265
 10890f0:	dc400115 	stw	r17,4(sp)
 10890f4:	300b883a 	mov	r5,r6
 10890f8:	840aff04 	addi	r16,r16,11260
 10890fc:	2023883a 	mov	r17,r4
 1089100:	380d883a 	mov	r6,r7
 1089104:	1009883a 	mov	r4,r2
 1089108:	dfc00215 	stw	ra,8(sp)
 108910c:	80000015 	stw	zero,0(r16)
 1089110:	108d6ac0 	call	108d6ac <write>
 1089114:	00ffffc4 	movi	r3,-1
 1089118:	10c00526 	beq	r2,r3,1089130 <_write_r+0x50>
 108911c:	dfc00217 	ldw	ra,8(sp)
 1089120:	dc400117 	ldw	r17,4(sp)
 1089124:	dc000017 	ldw	r16,0(sp)
 1089128:	dec00304 	addi	sp,sp,12
 108912c:	f800283a 	ret
 1089130:	80c00017 	ldw	r3,0(r16)
 1089134:	183ff926 	beq	r3,zero,108911c <_write_r+0x3c>
 1089138:	88c00015 	stw	r3,0(r17)
 108913c:	003ff706 	br	108911c <_write_r+0x3c>

01089140 <_close_r>:
 1089140:	defffd04 	addi	sp,sp,-12
 1089144:	dc000015 	stw	r16,0(sp)
 1089148:	04004274 	movhi	r16,265
 108914c:	dc400115 	stw	r17,4(sp)
 1089150:	840aff04 	addi	r16,r16,11260
 1089154:	2023883a 	mov	r17,r4
 1089158:	2809883a 	mov	r4,r5
 108915c:	dfc00215 	stw	ra,8(sp)
 1089160:	80000015 	stw	zero,0(r16)
 1089164:	108cd1c0 	call	108cd1c <close>
 1089168:	00ffffc4 	movi	r3,-1
 108916c:	10c00526 	beq	r2,r3,1089184 <_close_r+0x44>
 1089170:	dfc00217 	ldw	ra,8(sp)
 1089174:	dc400117 	ldw	r17,4(sp)
 1089178:	dc000017 	ldw	r16,0(sp)
 108917c:	dec00304 	addi	sp,sp,12
 1089180:	f800283a 	ret
 1089184:	80c00017 	ldw	r3,0(r16)
 1089188:	183ff926 	beq	r3,zero,1089170 <_close_r+0x30>
 108918c:	88c00015 	stw	r3,0(r17)
 1089190:	003ff706 	br	1089170 <_close_r+0x30>

01089194 <_calloc_r>:
 1089194:	298b383a 	mul	r5,r5,r6
 1089198:	defffe04 	addi	sp,sp,-8
 108919c:	dfc00115 	stw	ra,4(sp)
 10891a0:	dc000015 	stw	r16,0(sp)
 10891a4:	108559c0 	call	108559c <_malloc_r>
 10891a8:	10002926 	beq	r2,zero,1089250 <_calloc_r+0xbc>
 10891ac:	11bfff17 	ldw	r6,-4(r2)
 10891b0:	1021883a 	mov	r16,r2
 10891b4:	00bfff04 	movi	r2,-4
 10891b8:	308c703a 	and	r6,r6,r2
 10891bc:	00c00904 	movi	r3,36
 10891c0:	308d883a 	add	r6,r6,r2
 10891c4:	19801636 	bltu	r3,r6,1089220 <_calloc_r+0x8c>
 10891c8:	008004c4 	movi	r2,19
 10891cc:	11800b2e 	bgeu	r2,r6,10891fc <_calloc_r+0x68>
 10891d0:	80000015 	stw	zero,0(r16)
 10891d4:	80000115 	stw	zero,4(r16)
 10891d8:	008006c4 	movi	r2,27
 10891dc:	11801a2e 	bgeu	r2,r6,1089248 <_calloc_r+0xb4>
 10891e0:	80000215 	stw	zero,8(r16)
 10891e4:	80000315 	stw	zero,12(r16)
 10891e8:	30c0151e 	bne	r6,r3,1089240 <_calloc_r+0xac>
 10891ec:	80000415 	stw	zero,16(r16)
 10891f0:	80800604 	addi	r2,r16,24
 10891f4:	80000515 	stw	zero,20(r16)
 10891f8:	00000106 	br	1089200 <_calloc_r+0x6c>
 10891fc:	8005883a 	mov	r2,r16
 1089200:	10000015 	stw	zero,0(r2)
 1089204:	10000115 	stw	zero,4(r2)
 1089208:	10000215 	stw	zero,8(r2)
 108920c:	8005883a 	mov	r2,r16
 1089210:	dfc00117 	ldw	ra,4(sp)
 1089214:	dc000017 	ldw	r16,0(sp)
 1089218:	dec00204 	addi	sp,sp,8
 108921c:	f800283a 	ret
 1089220:	000b883a 	mov	r5,zero
 1089224:	8009883a 	mov	r4,r16
 1089228:	10861300 	call	1086130 <memset>
 108922c:	8005883a 	mov	r2,r16
 1089230:	dfc00117 	ldw	ra,4(sp)
 1089234:	dc000017 	ldw	r16,0(sp)
 1089238:	dec00204 	addi	sp,sp,8
 108923c:	f800283a 	ret
 1089240:	80800404 	addi	r2,r16,16
 1089244:	003fee06 	br	1089200 <_calloc_r+0x6c>
 1089248:	80800204 	addi	r2,r16,8
 108924c:	003fec06 	br	1089200 <_calloc_r+0x6c>
 1089250:	0005883a 	mov	r2,zero
 1089254:	003fee06 	br	1089210 <_calloc_r+0x7c>

01089258 <_fclose_r>:
 1089258:	28003926 	beq	r5,zero,1089340 <_fclose_r+0xe8>
 108925c:	defffc04 	addi	sp,sp,-16
 1089260:	dc400115 	stw	r17,4(sp)
 1089264:	dc000015 	stw	r16,0(sp)
 1089268:	dfc00315 	stw	ra,12(sp)
 108926c:	dc800215 	stw	r18,8(sp)
 1089270:	2023883a 	mov	r17,r4
 1089274:	2821883a 	mov	r16,r5
 1089278:	20000226 	beq	r4,zero,1089284 <_fclose_r+0x2c>
 108927c:	20800e17 	ldw	r2,56(r4)
 1089280:	10002726 	beq	r2,zero,1089320 <_fclose_r+0xc8>
 1089284:	8080030f 	ldh	r2,12(r16)
 1089288:	1000071e 	bne	r2,zero,10892a8 <_fclose_r+0x50>
 108928c:	0005883a 	mov	r2,zero
 1089290:	dfc00317 	ldw	ra,12(sp)
 1089294:	dc800217 	ldw	r18,8(sp)
 1089298:	dc400117 	ldw	r17,4(sp)
 108929c:	dc000017 	ldw	r16,0(sp)
 10892a0:	dec00404 	addi	sp,sp,16
 10892a4:	f800283a 	ret
 10892a8:	800b883a 	mov	r5,r16
 10892ac:	8809883a 	mov	r4,r17
 10892b0:	10842440 	call	1084244 <__sflush_r>
 10892b4:	1025883a 	mov	r18,r2
 10892b8:	80800b17 	ldw	r2,44(r16)
 10892bc:	10000426 	beq	r2,zero,10892d0 <_fclose_r+0x78>
 10892c0:	81400717 	ldw	r5,28(r16)
 10892c4:	8809883a 	mov	r4,r17
 10892c8:	103ee83a 	callr	r2
 10892cc:	10001616 	blt	r2,zero,1089328 <_fclose_r+0xd0>
 10892d0:	8080030b 	ldhu	r2,12(r16)
 10892d4:	1080200c 	andi	r2,r2,128
 10892d8:	1000151e 	bne	r2,zero,1089330 <_fclose_r+0xd8>
 10892dc:	81400c17 	ldw	r5,48(r16)
 10892e0:	28000526 	beq	r5,zero,10892f8 <_fclose_r+0xa0>
 10892e4:	80801004 	addi	r2,r16,64
 10892e8:	28800226 	beq	r5,r2,10892f4 <_fclose_r+0x9c>
 10892ec:	8809883a 	mov	r4,r17
 10892f0:	10849b00 	call	10849b0 <_free_r>
 10892f4:	80000c15 	stw	zero,48(r16)
 10892f8:	81401117 	ldw	r5,68(r16)
 10892fc:	28000326 	beq	r5,zero,108930c <_fclose_r+0xb4>
 1089300:	8809883a 	mov	r4,r17
 1089304:	10849b00 	call	10849b0 <_free_r>
 1089308:	80001115 	stw	zero,68(r16)
 108930c:	108484c0 	call	108484c <__sfp_lock_acquire>
 1089310:	8000030d 	sth	zero,12(r16)
 1089314:	10848500 	call	1084850 <__sfp_lock_release>
 1089318:	9005883a 	mov	r2,r18
 108931c:	003fdc06 	br	1089290 <_fclose_r+0x38>
 1089320:	108483c0 	call	108483c <__sinit>
 1089324:	003fd706 	br	1089284 <_fclose_r+0x2c>
 1089328:	04bfffc4 	movi	r18,-1
 108932c:	003fe806 	br	10892d0 <_fclose_r+0x78>
 1089330:	81400417 	ldw	r5,16(r16)
 1089334:	8809883a 	mov	r4,r17
 1089338:	10849b00 	call	10849b0 <_free_r>
 108933c:	003fe706 	br	10892dc <_fclose_r+0x84>
 1089340:	0005883a 	mov	r2,zero
 1089344:	f800283a 	ret

01089348 <fclose>:
 1089348:	00804274 	movhi	r2,265
 108934c:	10842304 	addi	r2,r2,4236
 1089350:	200b883a 	mov	r5,r4
 1089354:	11000017 	ldw	r4,0(r2)
 1089358:	10892581 	jmpi	1089258 <_fclose_r>

0108935c <__fputwc>:
 108935c:	defff804 	addi	sp,sp,-32
 1089360:	dcc00415 	stw	r19,16(sp)
 1089364:	dc800315 	stw	r18,12(sp)
 1089368:	dc000115 	stw	r16,4(sp)
 108936c:	dfc00715 	stw	ra,28(sp)
 1089370:	dd400615 	stw	r21,24(sp)
 1089374:	dd000515 	stw	r20,20(sp)
 1089378:	dc400215 	stw	r17,8(sp)
 108937c:	2027883a 	mov	r19,r4
 1089380:	2825883a 	mov	r18,r5
 1089384:	3021883a 	mov	r16,r6
 1089388:	108538c0 	call	108538c <__locale_mb_cur_max>
 108938c:	00c00044 	movi	r3,1
 1089390:	10c03e26 	beq	r2,r3,108948c <__fputwc+0x130>
 1089394:	81c01704 	addi	r7,r16,92
 1089398:	900d883a 	mov	r6,r18
 108939c:	d80b883a 	mov	r5,sp
 10893a0:	9809883a 	mov	r4,r19
 10893a4:	108982c0 	call	108982c <_wcrtomb_r>
 10893a8:	1029883a 	mov	r20,r2
 10893ac:	00bfffc4 	movi	r2,-1
 10893b0:	a0802026 	beq	r20,r2,1089434 <__fputwc+0xd8>
 10893b4:	d9400003 	ldbu	r5,0(sp)
 10893b8:	a0001c26 	beq	r20,zero,108942c <__fputwc+0xd0>
 10893bc:	0023883a 	mov	r17,zero
 10893c0:	05400284 	movi	r21,10
 10893c4:	00000906 	br	10893ec <__fputwc+0x90>
 10893c8:	80800017 	ldw	r2,0(r16)
 10893cc:	11400005 	stb	r5,0(r2)
 10893d0:	80c00017 	ldw	r3,0(r16)
 10893d4:	18c00044 	addi	r3,r3,1
 10893d8:	80c00015 	stw	r3,0(r16)
 10893dc:	8c400044 	addi	r17,r17,1
 10893e0:	dc45883a 	add	r2,sp,r17
 10893e4:	8d00112e 	bgeu	r17,r20,108942c <__fputwc+0xd0>
 10893e8:	11400003 	ldbu	r5,0(r2)
 10893ec:	80c00217 	ldw	r3,8(r16)
 10893f0:	18ffffc4 	addi	r3,r3,-1
 10893f4:	80c00215 	stw	r3,8(r16)
 10893f8:	183ff30e 	bge	r3,zero,10893c8 <__fputwc+0x6c>
 10893fc:	80800617 	ldw	r2,24(r16)
 1089400:	18801916 	blt	r3,r2,1089468 <__fputwc+0x10c>
 1089404:	80800017 	ldw	r2,0(r16)
 1089408:	11400005 	stb	r5,0(r2)
 108940c:	80800017 	ldw	r2,0(r16)
 1089410:	10c00003 	ldbu	r3,0(r2)
 1089414:	10800044 	addi	r2,r2,1
 1089418:	1d402326 	beq	r3,r21,10894a8 <__fputwc+0x14c>
 108941c:	80800015 	stw	r2,0(r16)
 1089420:	8c400044 	addi	r17,r17,1
 1089424:	dc45883a 	add	r2,sp,r17
 1089428:	8d3fef36 	bltu	r17,r20,10893e8 <__fputwc+0x8c>
 108942c:	9005883a 	mov	r2,r18
 1089430:	00000406 	br	1089444 <__fputwc+0xe8>
 1089434:	80c0030b 	ldhu	r3,12(r16)
 1089438:	a005883a 	mov	r2,r20
 108943c:	18c01014 	ori	r3,r3,64
 1089440:	80c0030d 	sth	r3,12(r16)
 1089444:	dfc00717 	ldw	ra,28(sp)
 1089448:	dd400617 	ldw	r21,24(sp)
 108944c:	dd000517 	ldw	r20,20(sp)
 1089450:	dcc00417 	ldw	r19,16(sp)
 1089454:	dc800317 	ldw	r18,12(sp)
 1089458:	dc400217 	ldw	r17,8(sp)
 108945c:	dc000117 	ldw	r16,4(sp)
 1089460:	dec00804 	addi	sp,sp,32
 1089464:	f800283a 	ret
 1089468:	800d883a 	mov	r6,r16
 108946c:	29403fcc 	andi	r5,r5,255
 1089470:	9809883a 	mov	r4,r19
 1089474:	10896d40 	call	10896d4 <__swbuf_r>
 1089478:	10bfffe0 	cmpeqi	r2,r2,-1
 108947c:	10803fcc 	andi	r2,r2,255
 1089480:	103fd626 	beq	r2,zero,10893dc <__fputwc+0x80>
 1089484:	00bfffc4 	movi	r2,-1
 1089488:	003fee06 	br	1089444 <__fputwc+0xe8>
 108948c:	90ffffc4 	addi	r3,r18,-1
 1089490:	01003f84 	movi	r4,254
 1089494:	20ffbf36 	bltu	r4,r3,1089394 <__fputwc+0x38>
 1089498:	900b883a 	mov	r5,r18
 108949c:	dc800005 	stb	r18,0(sp)
 10894a0:	1029883a 	mov	r20,r2
 10894a4:	003fc506 	br	10893bc <__fputwc+0x60>
 10894a8:	800d883a 	mov	r6,r16
 10894ac:	a80b883a 	mov	r5,r21
 10894b0:	9809883a 	mov	r4,r19
 10894b4:	10896d40 	call	10896d4 <__swbuf_r>
 10894b8:	10bfffe0 	cmpeqi	r2,r2,-1
 10894bc:	003fef06 	br	108947c <__fputwc+0x120>

010894c0 <_fputwc_r>:
 10894c0:	3080030b 	ldhu	r2,12(r6)
 10894c4:	10c8000c 	andi	r3,r2,8192
 10894c8:	1800051e 	bne	r3,zero,10894e0 <_fputwc_r+0x20>
 10894cc:	30c01917 	ldw	r3,100(r6)
 10894d0:	10880014 	ori	r2,r2,8192
 10894d4:	3080030d 	sth	r2,12(r6)
 10894d8:	18880014 	ori	r2,r3,8192
 10894dc:	30801915 	stw	r2,100(r6)
 10894e0:	108935c1 	jmpi	108935c <__fputwc>

010894e4 <fputwc>:
 10894e4:	00804274 	movhi	r2,265
 10894e8:	defffc04 	addi	sp,sp,-16
 10894ec:	10842304 	addi	r2,r2,4236
 10894f0:	dc000115 	stw	r16,4(sp)
 10894f4:	14000017 	ldw	r16,0(r2)
 10894f8:	dc400215 	stw	r17,8(sp)
 10894fc:	dfc00315 	stw	ra,12(sp)
 1089500:	2023883a 	mov	r17,r4
 1089504:	80000226 	beq	r16,zero,1089510 <fputwc+0x2c>
 1089508:	80800e17 	ldw	r2,56(r16)
 108950c:	10001026 	beq	r2,zero,1089550 <fputwc+0x6c>
 1089510:	2880030b 	ldhu	r2,12(r5)
 1089514:	10c8000c 	andi	r3,r2,8192
 1089518:	1800051e 	bne	r3,zero,1089530 <fputwc+0x4c>
 108951c:	28c01917 	ldw	r3,100(r5)
 1089520:	10880014 	ori	r2,r2,8192
 1089524:	2880030d 	sth	r2,12(r5)
 1089528:	18880014 	ori	r2,r3,8192
 108952c:	28801915 	stw	r2,100(r5)
 1089530:	280d883a 	mov	r6,r5
 1089534:	8009883a 	mov	r4,r16
 1089538:	880b883a 	mov	r5,r17
 108953c:	dfc00317 	ldw	ra,12(sp)
 1089540:	dc400217 	ldw	r17,8(sp)
 1089544:	dc000117 	ldw	r16,4(sp)
 1089548:	dec00404 	addi	sp,sp,16
 108954c:	108935c1 	jmpi	108935c <__fputwc>
 1089550:	8009883a 	mov	r4,r16
 1089554:	d9400015 	stw	r5,0(sp)
 1089558:	108483c0 	call	108483c <__sinit>
 108955c:	d9400017 	ldw	r5,0(sp)
 1089560:	003feb06 	br	1089510 <fputwc+0x2c>

01089564 <_fstat_r>:
 1089564:	defffd04 	addi	sp,sp,-12
 1089568:	2805883a 	mov	r2,r5
 108956c:	dc000015 	stw	r16,0(sp)
 1089570:	04004274 	movhi	r16,265
 1089574:	dc400115 	stw	r17,4(sp)
 1089578:	840aff04 	addi	r16,r16,11260
 108957c:	2023883a 	mov	r17,r4
 1089580:	300b883a 	mov	r5,r6
 1089584:	1009883a 	mov	r4,r2
 1089588:	dfc00215 	stw	ra,8(sp)
 108958c:	80000015 	stw	zero,0(r16)
 1089590:	108ce540 	call	108ce54 <fstat>
 1089594:	00ffffc4 	movi	r3,-1
 1089598:	10c00526 	beq	r2,r3,10895b0 <_fstat_r+0x4c>
 108959c:	dfc00217 	ldw	ra,8(sp)
 10895a0:	dc400117 	ldw	r17,4(sp)
 10895a4:	dc000017 	ldw	r16,0(sp)
 10895a8:	dec00304 	addi	sp,sp,12
 10895ac:	f800283a 	ret
 10895b0:	80c00017 	ldw	r3,0(r16)
 10895b4:	183ff926 	beq	r3,zero,108959c <_fstat_r+0x38>
 10895b8:	88c00015 	stw	r3,0(r17)
 10895bc:	003ff706 	br	108959c <_fstat_r+0x38>

010895c0 <_isatty_r>:
 10895c0:	defffd04 	addi	sp,sp,-12
 10895c4:	dc000015 	stw	r16,0(sp)
 10895c8:	04004274 	movhi	r16,265
 10895cc:	dc400115 	stw	r17,4(sp)
 10895d0:	840aff04 	addi	r16,r16,11260
 10895d4:	2023883a 	mov	r17,r4
 10895d8:	2809883a 	mov	r4,r5
 10895dc:	dfc00215 	stw	ra,8(sp)
 10895e0:	80000015 	stw	zero,0(r16)
 10895e4:	108d0c00 	call	108d0c0 <isatty>
 10895e8:	00ffffc4 	movi	r3,-1
 10895ec:	10c00526 	beq	r2,r3,1089604 <_isatty_r+0x44>
 10895f0:	dfc00217 	ldw	ra,8(sp)
 10895f4:	dc400117 	ldw	r17,4(sp)
 10895f8:	dc000017 	ldw	r16,0(sp)
 10895fc:	dec00304 	addi	sp,sp,12
 1089600:	f800283a 	ret
 1089604:	80c00017 	ldw	r3,0(r16)
 1089608:	183ff926 	beq	r3,zero,10895f0 <_isatty_r+0x30>
 108960c:	88c00015 	stw	r3,0(r17)
 1089610:	003ff706 	br	10895f0 <_isatty_r+0x30>

01089614 <_lseek_r>:
 1089614:	defffd04 	addi	sp,sp,-12
 1089618:	2805883a 	mov	r2,r5
 108961c:	dc000015 	stw	r16,0(sp)
 1089620:	04004274 	movhi	r16,265
 1089624:	dc400115 	stw	r17,4(sp)
 1089628:	300b883a 	mov	r5,r6
 108962c:	840aff04 	addi	r16,r16,11260
 1089630:	2023883a 	mov	r17,r4
 1089634:	380d883a 	mov	r6,r7
 1089638:	1009883a 	mov	r4,r2
 108963c:	dfc00215 	stw	ra,8(sp)
 1089640:	80000015 	stw	zero,0(r16)
 1089644:	108d28c0 	call	108d28c <lseek>
 1089648:	00ffffc4 	movi	r3,-1
 108964c:	10c00526 	beq	r2,r3,1089664 <_lseek_r+0x50>
 1089650:	dfc00217 	ldw	ra,8(sp)
 1089654:	dc400117 	ldw	r17,4(sp)
 1089658:	dc000017 	ldw	r16,0(sp)
 108965c:	dec00304 	addi	sp,sp,12
 1089660:	f800283a 	ret
 1089664:	80c00017 	ldw	r3,0(r16)
 1089668:	183ff926 	beq	r3,zero,1089650 <_lseek_r+0x3c>
 108966c:	88c00015 	stw	r3,0(r17)
 1089670:	003ff706 	br	1089650 <_lseek_r+0x3c>

01089674 <_read_r>:
 1089674:	defffd04 	addi	sp,sp,-12
 1089678:	2805883a 	mov	r2,r5
 108967c:	dc000015 	stw	r16,0(sp)
 1089680:	04004274 	movhi	r16,265
 1089684:	dc400115 	stw	r17,4(sp)
 1089688:	300b883a 	mov	r5,r6
 108968c:	840aff04 	addi	r16,r16,11260
 1089690:	2023883a 	mov	r17,r4
 1089694:	380d883a 	mov	r6,r7
 1089698:	1009883a 	mov	r4,r2
 108969c:	dfc00215 	stw	ra,8(sp)
 10896a0:	80000015 	stw	zero,0(r16)
 10896a4:	108d4600 	call	108d460 <read>
 10896a8:	00ffffc4 	movi	r3,-1
 10896ac:	10c00526 	beq	r2,r3,10896c4 <_read_r+0x50>
 10896b0:	dfc00217 	ldw	ra,8(sp)
 10896b4:	dc400117 	ldw	r17,4(sp)
 10896b8:	dc000017 	ldw	r16,0(sp)
 10896bc:	dec00304 	addi	sp,sp,12
 10896c0:	f800283a 	ret
 10896c4:	80c00017 	ldw	r3,0(r16)
 10896c8:	183ff926 	beq	r3,zero,10896b0 <_read_r+0x3c>
 10896cc:	88c00015 	stw	r3,0(r17)
 10896d0:	003ff706 	br	10896b0 <_read_r+0x3c>

010896d4 <__swbuf_r>:
 10896d4:	defffb04 	addi	sp,sp,-20
 10896d8:	dcc00315 	stw	r19,12(sp)
 10896dc:	dc800215 	stw	r18,8(sp)
 10896e0:	dc000015 	stw	r16,0(sp)
 10896e4:	dfc00415 	stw	ra,16(sp)
 10896e8:	dc400115 	stw	r17,4(sp)
 10896ec:	2025883a 	mov	r18,r4
 10896f0:	2827883a 	mov	r19,r5
 10896f4:	3021883a 	mov	r16,r6
 10896f8:	20000226 	beq	r4,zero,1089704 <__swbuf_r+0x30>
 10896fc:	20800e17 	ldw	r2,56(r4)
 1089700:	10004226 	beq	r2,zero,108980c <__swbuf_r+0x138>
 1089704:	80800617 	ldw	r2,24(r16)
 1089708:	8100030b 	ldhu	r4,12(r16)
 108970c:	80800215 	stw	r2,8(r16)
 1089710:	2080020c 	andi	r2,r4,8
 1089714:	10003626 	beq	r2,zero,10897f0 <__swbuf_r+0x11c>
 1089718:	80c00417 	ldw	r3,16(r16)
 108971c:	18003426 	beq	r3,zero,10897f0 <__swbuf_r+0x11c>
 1089720:	2088000c 	andi	r2,r4,8192
 1089724:	9c403fcc 	andi	r17,r19,255
 1089728:	10001a26 	beq	r2,zero,1089794 <__swbuf_r+0xc0>
 108972c:	80800017 	ldw	r2,0(r16)
 1089730:	81000517 	ldw	r4,20(r16)
 1089734:	10c7c83a 	sub	r3,r2,r3
 1089738:	1900200e 	bge	r3,r4,10897bc <__swbuf_r+0xe8>
 108973c:	18c00044 	addi	r3,r3,1
 1089740:	81000217 	ldw	r4,8(r16)
 1089744:	11400044 	addi	r5,r2,1
 1089748:	81400015 	stw	r5,0(r16)
 108974c:	213fffc4 	addi	r4,r4,-1
 1089750:	81000215 	stw	r4,8(r16)
 1089754:	14c00005 	stb	r19,0(r2)
 1089758:	80800517 	ldw	r2,20(r16)
 108975c:	10c01e26 	beq	r2,r3,10897d8 <__swbuf_r+0x104>
 1089760:	8080030b 	ldhu	r2,12(r16)
 1089764:	1080004c 	andi	r2,r2,1
 1089768:	10000226 	beq	r2,zero,1089774 <__swbuf_r+0xa0>
 108976c:	00800284 	movi	r2,10
 1089770:	88801926 	beq	r17,r2,10897d8 <__swbuf_r+0x104>
 1089774:	8805883a 	mov	r2,r17
 1089778:	dfc00417 	ldw	ra,16(sp)
 108977c:	dcc00317 	ldw	r19,12(sp)
 1089780:	dc800217 	ldw	r18,8(sp)
 1089784:	dc400117 	ldw	r17,4(sp)
 1089788:	dc000017 	ldw	r16,0(sp)
 108978c:	dec00504 	addi	sp,sp,20
 1089790:	f800283a 	ret
 1089794:	81401917 	ldw	r5,100(r16)
 1089798:	00b7ffc4 	movi	r2,-8193
 108979c:	21080014 	ori	r4,r4,8192
 10897a0:	2884703a 	and	r2,r5,r2
 10897a4:	80801915 	stw	r2,100(r16)
 10897a8:	80800017 	ldw	r2,0(r16)
 10897ac:	8100030d 	sth	r4,12(r16)
 10897b0:	81000517 	ldw	r4,20(r16)
 10897b4:	10c7c83a 	sub	r3,r2,r3
 10897b8:	193fe016 	blt	r3,r4,108973c <__swbuf_r+0x68>
 10897bc:	800b883a 	mov	r5,r16
 10897c0:	9009883a 	mov	r4,r18
 10897c4:	10844600 	call	1084460 <_fflush_r>
 10897c8:	1000071e 	bne	r2,zero,10897e8 <__swbuf_r+0x114>
 10897cc:	80800017 	ldw	r2,0(r16)
 10897d0:	00c00044 	movi	r3,1
 10897d4:	003fda06 	br	1089740 <__swbuf_r+0x6c>
 10897d8:	800b883a 	mov	r5,r16
 10897dc:	9009883a 	mov	r4,r18
 10897e0:	10844600 	call	1084460 <_fflush_r>
 10897e4:	103fe326 	beq	r2,zero,1089774 <__swbuf_r+0xa0>
 10897e8:	00bfffc4 	movi	r2,-1
 10897ec:	003fe206 	br	1089778 <__swbuf_r+0xa4>
 10897f0:	800b883a 	mov	r5,r16
 10897f4:	9009883a 	mov	r4,r18
 10897f8:	10828680 	call	1082868 <__swsetup_r>
 10897fc:	103ffa1e 	bne	r2,zero,10897e8 <__swbuf_r+0x114>
 1089800:	8100030b 	ldhu	r4,12(r16)
 1089804:	80c00417 	ldw	r3,16(r16)
 1089808:	003fc506 	br	1089720 <__swbuf_r+0x4c>
 108980c:	108483c0 	call	108483c <__sinit>
 1089810:	003fbc06 	br	1089704 <__swbuf_r+0x30>

01089814 <__swbuf>:
 1089814:	00804274 	movhi	r2,265
 1089818:	10842304 	addi	r2,r2,4236
 108981c:	280d883a 	mov	r6,r5
 1089820:	200b883a 	mov	r5,r4
 1089824:	11000017 	ldw	r4,0(r2)
 1089828:	10896d41 	jmpi	10896d4 <__swbuf_r>

0108982c <_wcrtomb_r>:
 108982c:	defff604 	addi	sp,sp,-40
 1089830:	00804274 	movhi	r2,265
 1089834:	dc800815 	stw	r18,32(sp)
 1089838:	dc400715 	stw	r17,28(sp)
 108983c:	dc000615 	stw	r16,24(sp)
 1089840:	10842704 	addi	r2,r2,4252
 1089844:	dfc00915 	stw	ra,36(sp)
 1089848:	2021883a 	mov	r16,r4
 108984c:	3823883a 	mov	r17,r7
 1089850:	14800017 	ldw	r18,0(r2)
 1089854:	28001426 	beq	r5,zero,10898a8 <_wcrtomb_r+0x7c>
 1089858:	d9400415 	stw	r5,16(sp)
 108985c:	d9800515 	stw	r6,20(sp)
 1089860:	10853800 	call	1085380 <__locale_charset>
 1089864:	d9800517 	ldw	r6,20(sp)
 1089868:	d9400417 	ldw	r5,16(sp)
 108986c:	100f883a 	mov	r7,r2
 1089870:	dc400015 	stw	r17,0(sp)
 1089874:	8009883a 	mov	r4,r16
 1089878:	903ee83a 	callr	r18
 108987c:	00ffffc4 	movi	r3,-1
 1089880:	10c0031e 	bne	r2,r3,1089890 <_wcrtomb_r+0x64>
 1089884:	88000015 	stw	zero,0(r17)
 1089888:	00c02284 	movi	r3,138
 108988c:	80c00015 	stw	r3,0(r16)
 1089890:	dfc00917 	ldw	ra,36(sp)
 1089894:	dc800817 	ldw	r18,32(sp)
 1089898:	dc400717 	ldw	r17,28(sp)
 108989c:	dc000617 	ldw	r16,24(sp)
 10898a0:	dec00a04 	addi	sp,sp,40
 10898a4:	f800283a 	ret
 10898a8:	10853800 	call	1085380 <__locale_charset>
 10898ac:	100f883a 	mov	r7,r2
 10898b0:	dc400015 	stw	r17,0(sp)
 10898b4:	000d883a 	mov	r6,zero
 10898b8:	d9400104 	addi	r5,sp,4
 10898bc:	8009883a 	mov	r4,r16
 10898c0:	903ee83a 	callr	r18
 10898c4:	003fed06 	br	108987c <_wcrtomb_r+0x50>

010898c8 <wcrtomb>:
 10898c8:	defff604 	addi	sp,sp,-40
 10898cc:	00804274 	movhi	r2,265
 10898d0:	dc800615 	stw	r18,24(sp)
 10898d4:	dc400515 	stw	r17,20(sp)
 10898d8:	10842304 	addi	r2,r2,4236
 10898dc:	dfc00915 	stw	ra,36(sp)
 10898e0:	dd000815 	stw	r20,32(sp)
 10898e4:	dcc00715 	stw	r19,28(sp)
 10898e8:	dc000415 	stw	r16,16(sp)
 10898ec:	3025883a 	mov	r18,r6
 10898f0:	14400017 	ldw	r17,0(r2)
 10898f4:	20001926 	beq	r4,zero,108995c <wcrtomb+0x94>
 10898f8:	00804274 	movhi	r2,265
 10898fc:	10842704 	addi	r2,r2,4252
 1089900:	15000017 	ldw	r20,0(r2)
 1089904:	2021883a 	mov	r16,r4
 1089908:	2827883a 	mov	r19,r5
 108990c:	10853800 	call	1085380 <__locale_charset>
 1089910:	100f883a 	mov	r7,r2
 1089914:	dc800015 	stw	r18,0(sp)
 1089918:	980d883a 	mov	r6,r19
 108991c:	800b883a 	mov	r5,r16
 1089920:	8809883a 	mov	r4,r17
 1089924:	a03ee83a 	callr	r20
 1089928:	00ffffc4 	movi	r3,-1
 108992c:	10c0031e 	bne	r2,r3,108993c <wcrtomb+0x74>
 1089930:	90000015 	stw	zero,0(r18)
 1089934:	00c02284 	movi	r3,138
 1089938:	88c00015 	stw	r3,0(r17)
 108993c:	dfc00917 	ldw	ra,36(sp)
 1089940:	dd000817 	ldw	r20,32(sp)
 1089944:	dcc00717 	ldw	r19,28(sp)
 1089948:	dc800617 	ldw	r18,24(sp)
 108994c:	dc400517 	ldw	r17,20(sp)
 1089950:	dc000417 	ldw	r16,16(sp)
 1089954:	dec00a04 	addi	sp,sp,40
 1089958:	f800283a 	ret
 108995c:	00804274 	movhi	r2,265
 1089960:	10842704 	addi	r2,r2,4252
 1089964:	14000017 	ldw	r16,0(r2)
 1089968:	10853800 	call	1085380 <__locale_charset>
 108996c:	100f883a 	mov	r7,r2
 1089970:	dc800015 	stw	r18,0(sp)
 1089974:	000d883a 	mov	r6,zero
 1089978:	d9400104 	addi	r5,sp,4
 108997c:	8809883a 	mov	r4,r17
 1089980:	803ee83a 	callr	r16
 1089984:	003fe806 	br	1089928 <wcrtomb+0x60>

01089988 <__ascii_wctomb>:
 1089988:	28000526 	beq	r5,zero,10899a0 <__ascii_wctomb+0x18>
 108998c:	00803fc4 	movi	r2,255
 1089990:	11800536 	bltu	r2,r6,10899a8 <__ascii_wctomb+0x20>
 1089994:	29800005 	stb	r6,0(r5)
 1089998:	00800044 	movi	r2,1
 108999c:	f800283a 	ret
 10899a0:	0005883a 	mov	r2,zero
 10899a4:	f800283a 	ret
 10899a8:	00802284 	movi	r2,138
 10899ac:	20800015 	stw	r2,0(r4)
 10899b0:	00bfffc4 	movi	r2,-1
 10899b4:	f800283a 	ret

010899b8 <_wctomb_r>:
 10899b8:	00804274 	movhi	r2,265
 10899bc:	defff904 	addi	sp,sp,-28
 10899c0:	10842704 	addi	r2,r2,4252
 10899c4:	dfc00615 	stw	ra,24(sp)
 10899c8:	dc400515 	stw	r17,20(sp)
 10899cc:	dc000415 	stw	r16,16(sp)
 10899d0:	3823883a 	mov	r17,r7
 10899d4:	14000017 	ldw	r16,0(r2)
 10899d8:	d9000115 	stw	r4,4(sp)
 10899dc:	d9400215 	stw	r5,8(sp)
 10899e0:	d9800315 	stw	r6,12(sp)
 10899e4:	10853800 	call	1085380 <__locale_charset>
 10899e8:	d9800317 	ldw	r6,12(sp)
 10899ec:	d9400217 	ldw	r5,8(sp)
 10899f0:	d9000117 	ldw	r4,4(sp)
 10899f4:	100f883a 	mov	r7,r2
 10899f8:	dc400015 	stw	r17,0(sp)
 10899fc:	803ee83a 	callr	r16
 1089a00:	dfc00617 	ldw	ra,24(sp)
 1089a04:	dc400517 	ldw	r17,20(sp)
 1089a08:	dc000417 	ldw	r16,16(sp)
 1089a0c:	dec00704 	addi	sp,sp,28
 1089a10:	f800283a 	ret

01089a14 <__udivdi3>:
 1089a14:	defff504 	addi	sp,sp,-44
 1089a18:	dcc00415 	stw	r19,16(sp)
 1089a1c:	dc000115 	stw	r16,4(sp)
 1089a20:	dfc00a15 	stw	ra,40(sp)
 1089a24:	df000915 	stw	fp,36(sp)
 1089a28:	ddc00815 	stw	r23,32(sp)
 1089a2c:	dd800715 	stw	r22,28(sp)
 1089a30:	dd400615 	stw	r21,24(sp)
 1089a34:	dd000515 	stw	r20,20(sp)
 1089a38:	dc800315 	stw	r18,12(sp)
 1089a3c:	dc400215 	stw	r17,8(sp)
 1089a40:	2027883a 	mov	r19,r4
 1089a44:	2821883a 	mov	r16,r5
 1089a48:	3800411e 	bne	r7,zero,1089b50 <__udivdi3+0x13c>
 1089a4c:	3023883a 	mov	r17,r6
 1089a50:	2025883a 	mov	r18,r4
 1089a54:	2980522e 	bgeu	r5,r6,1089ba0 <__udivdi3+0x18c>
 1089a58:	00bfffd4 	movui	r2,65535
 1089a5c:	282d883a 	mov	r22,r5
 1089a60:	1180a836 	bltu	r2,r6,1089d04 <__udivdi3+0x2f0>
 1089a64:	00803fc4 	movi	r2,255
 1089a68:	1185803a 	cmpltu	r2,r2,r6
 1089a6c:	100490fa 	slli	r2,r2,3
 1089a70:	3086d83a 	srl	r3,r6,r2
 1089a74:	01004274 	movhi	r4,265
 1089a78:	213d1a04 	addi	r4,r4,-2968
 1089a7c:	20c7883a 	add	r3,r4,r3
 1089a80:	18c00003 	ldbu	r3,0(r3)
 1089a84:	1885883a 	add	r2,r3,r2
 1089a88:	00c00804 	movi	r3,32
 1089a8c:	1887c83a 	sub	r3,r3,r2
 1089a90:	18000526 	beq	r3,zero,1089aa8 <__udivdi3+0x94>
 1089a94:	80e0983a 	sll	r16,r16,r3
 1089a98:	9884d83a 	srl	r2,r19,r2
 1089a9c:	30e2983a 	sll	r17,r6,r3
 1089aa0:	98e4983a 	sll	r18,r19,r3
 1089aa4:	142cb03a 	or	r22,r2,r16
 1089aa8:	882ad43a 	srli	r21,r17,16
 1089aac:	b009883a 	mov	r4,r22
 1089ab0:	8d3fffcc 	andi	r20,r17,65535
 1089ab4:	a80b883a 	mov	r5,r21
 1089ab8:	108a6200 	call	108a620 <__umodsi3>
 1089abc:	b009883a 	mov	r4,r22
 1089ac0:	a80b883a 	mov	r5,r21
 1089ac4:	1027883a 	mov	r19,r2
 1089ac8:	108a5bc0 	call	108a5bc <__udivsi3>
 1089acc:	102d883a 	mov	r22,r2
 1089ad0:	9826943a 	slli	r19,r19,16
 1089ad4:	9004d43a 	srli	r2,r18,16
 1089ad8:	a5a1383a 	mul	r16,r20,r22
 1089adc:	14c4b03a 	or	r2,r2,r19
 1089ae0:	1400052e 	bgeu	r2,r16,1089af8 <__udivdi3+0xe4>
 1089ae4:	1445883a 	add	r2,r2,r17
 1089ae8:	b0ffffc4 	addi	r3,r22,-1
 1089aec:	14400136 	bltu	r2,r17,1089af4 <__udivdi3+0xe0>
 1089af0:	14012336 	bltu	r2,r16,1089f80 <__udivdi3+0x56c>
 1089af4:	182d883a 	mov	r22,r3
 1089af8:	1421c83a 	sub	r16,r2,r16
 1089afc:	a80b883a 	mov	r5,r21
 1089b00:	8009883a 	mov	r4,r16
 1089b04:	108a6200 	call	108a620 <__umodsi3>
 1089b08:	1027883a 	mov	r19,r2
 1089b0c:	a80b883a 	mov	r5,r21
 1089b10:	8009883a 	mov	r4,r16
 1089b14:	108a5bc0 	call	108a5bc <__udivsi3>
 1089b18:	9826943a 	slli	r19,r19,16
 1089b1c:	a0a9383a 	mul	r20,r20,r2
 1089b20:	94bfffcc 	andi	r18,r18,65535
 1089b24:	94e4b03a 	or	r18,r18,r19
 1089b28:	9500052e 	bgeu	r18,r20,1089b40 <__udivdi3+0x12c>
 1089b2c:	8ca5883a 	add	r18,r17,r18
 1089b30:	10ffffc4 	addi	r3,r2,-1
 1089b34:	9440f136 	bltu	r18,r17,1089efc <__udivdi3+0x4e8>
 1089b38:	9500f02e 	bgeu	r18,r20,1089efc <__udivdi3+0x4e8>
 1089b3c:	10bfff84 	addi	r2,r2,-2
 1089b40:	b00c943a 	slli	r6,r22,16
 1089b44:	0007883a 	mov	r3,zero
 1089b48:	3084b03a 	or	r2,r6,r2
 1089b4c:	00005906 	br	1089cb4 <__udivdi3+0x2a0>
 1089b50:	29c05636 	bltu	r5,r7,1089cac <__udivdi3+0x298>
 1089b54:	00bfffd4 	movui	r2,65535
 1089b58:	11c0622e 	bgeu	r2,r7,1089ce4 <__udivdi3+0x2d0>
 1089b5c:	00804034 	movhi	r2,256
 1089b60:	10bfffc4 	addi	r2,r2,-1
 1089b64:	11c0ee36 	bltu	r2,r7,1089f20 <__udivdi3+0x50c>
 1089b68:	00800404 	movi	r2,16
 1089b6c:	3886d83a 	srl	r3,r7,r2
 1089b70:	01004274 	movhi	r4,265
 1089b74:	213d1a04 	addi	r4,r4,-2968
 1089b78:	20c7883a 	add	r3,r4,r3
 1089b7c:	18c00003 	ldbu	r3,0(r3)
 1089b80:	05400804 	movi	r21,32
 1089b84:	1885883a 	add	r2,r3,r2
 1089b88:	a8abc83a 	sub	r21,r21,r2
 1089b8c:	a800621e 	bne	r21,zero,1089d18 <__udivdi3+0x304>
 1089b90:	3c00e936 	bltu	r7,r16,1089f38 <__udivdi3+0x524>
 1089b94:	9985403a 	cmpgeu	r2,r19,r6
 1089b98:	0007883a 	mov	r3,zero
 1089b9c:	00004506 	br	1089cb4 <__udivdi3+0x2a0>
 1089ba0:	3000041e 	bne	r6,zero,1089bb4 <__udivdi3+0x1a0>
 1089ba4:	000b883a 	mov	r5,zero
 1089ba8:	01000044 	movi	r4,1
 1089bac:	108a5bc0 	call	108a5bc <__udivsi3>
 1089bb0:	1023883a 	mov	r17,r2
 1089bb4:	00bfffd4 	movui	r2,65535
 1089bb8:	14404e2e 	bgeu	r2,r17,1089cf4 <__udivdi3+0x2e0>
 1089bbc:	00804034 	movhi	r2,256
 1089bc0:	10bfffc4 	addi	r2,r2,-1
 1089bc4:	1440d836 	bltu	r2,r17,1089f28 <__udivdi3+0x514>
 1089bc8:	00800404 	movi	r2,16
 1089bcc:	8886d83a 	srl	r3,r17,r2
 1089bd0:	01004274 	movhi	r4,265
 1089bd4:	213d1a04 	addi	r4,r4,-2968
 1089bd8:	20c7883a 	add	r3,r4,r3
 1089bdc:	18c00003 	ldbu	r3,0(r3)
 1089be0:	1885883a 	add	r2,r3,r2
 1089be4:	00c00804 	movi	r3,32
 1089be8:	1887c83a 	sub	r3,r3,r2
 1089bec:	18008f1e 	bne	r3,zero,1089e2c <__udivdi3+0x418>
 1089bf0:	882ad43a 	srli	r21,r17,16
 1089bf4:	8461c83a 	sub	r16,r16,r17
 1089bf8:	8d3fffcc 	andi	r20,r17,65535
 1089bfc:	00c00044 	movi	r3,1
 1089c00:	8009883a 	mov	r4,r16
 1089c04:	a80b883a 	mov	r5,r21
 1089c08:	d8c00015 	stw	r3,0(sp)
 1089c0c:	108a6200 	call	108a620 <__umodsi3>
 1089c10:	8009883a 	mov	r4,r16
 1089c14:	a80b883a 	mov	r5,r21
 1089c18:	1027883a 	mov	r19,r2
 1089c1c:	108a5bc0 	call	108a5bc <__udivsi3>
 1089c20:	9826943a 	slli	r19,r19,16
 1089c24:	9008d43a 	srli	r4,r18,16
 1089c28:	1521383a 	mul	r16,r2,r20
 1089c2c:	102d883a 	mov	r22,r2
 1089c30:	24c8b03a 	or	r4,r4,r19
 1089c34:	d8c00017 	ldw	r3,0(sp)
 1089c38:	2400052e 	bgeu	r4,r16,1089c50 <__udivdi3+0x23c>
 1089c3c:	2449883a 	add	r4,r4,r17
 1089c40:	b0bfffc4 	addi	r2,r22,-1
 1089c44:	24400136 	bltu	r4,r17,1089c4c <__udivdi3+0x238>
 1089c48:	2400ca36 	bltu	r4,r16,1089f74 <__udivdi3+0x560>
 1089c4c:	102d883a 	mov	r22,r2
 1089c50:	2421c83a 	sub	r16,r4,r16
 1089c54:	a80b883a 	mov	r5,r21
 1089c58:	8009883a 	mov	r4,r16
 1089c5c:	d8c00015 	stw	r3,0(sp)
 1089c60:	108a6200 	call	108a620 <__umodsi3>
 1089c64:	1027883a 	mov	r19,r2
 1089c68:	a80b883a 	mov	r5,r21
 1089c6c:	8009883a 	mov	r4,r16
 1089c70:	108a5bc0 	call	108a5bc <__udivsi3>
 1089c74:	9826943a 	slli	r19,r19,16
 1089c78:	1529383a 	mul	r20,r2,r20
 1089c7c:	94bfffcc 	andi	r18,r18,65535
 1089c80:	94e4b03a 	or	r18,r18,r19
 1089c84:	d8c00017 	ldw	r3,0(sp)
 1089c88:	9500052e 	bgeu	r18,r20,1089ca0 <__udivdi3+0x28c>
 1089c8c:	8ca5883a 	add	r18,r17,r18
 1089c90:	113fffc4 	addi	r4,r2,-1
 1089c94:	94409736 	bltu	r18,r17,1089ef4 <__udivdi3+0x4e0>
 1089c98:	9500962e 	bgeu	r18,r20,1089ef4 <__udivdi3+0x4e0>
 1089c9c:	10bfff84 	addi	r2,r2,-2
 1089ca0:	b00c943a 	slli	r6,r22,16
 1089ca4:	3084b03a 	or	r2,r6,r2
 1089ca8:	00000206 	br	1089cb4 <__udivdi3+0x2a0>
 1089cac:	0007883a 	mov	r3,zero
 1089cb0:	0005883a 	mov	r2,zero
 1089cb4:	dfc00a17 	ldw	ra,40(sp)
 1089cb8:	df000917 	ldw	fp,36(sp)
 1089cbc:	ddc00817 	ldw	r23,32(sp)
 1089cc0:	dd800717 	ldw	r22,28(sp)
 1089cc4:	dd400617 	ldw	r21,24(sp)
 1089cc8:	dd000517 	ldw	r20,20(sp)
 1089ccc:	dcc00417 	ldw	r19,16(sp)
 1089cd0:	dc800317 	ldw	r18,12(sp)
 1089cd4:	dc400217 	ldw	r17,8(sp)
 1089cd8:	dc000117 	ldw	r16,4(sp)
 1089cdc:	dec00b04 	addi	sp,sp,44
 1089ce0:	f800283a 	ret
 1089ce4:	00803fc4 	movi	r2,255
 1089ce8:	11c5803a 	cmpltu	r2,r2,r7
 1089cec:	100490fa 	slli	r2,r2,3
 1089cf0:	003f9e06 	br	1089b6c <__udivdi3+0x158>
 1089cf4:	00803fc4 	movi	r2,255
 1089cf8:	1445803a 	cmpltu	r2,r2,r17
 1089cfc:	100490fa 	slli	r2,r2,3
 1089d00:	003fb206 	br	1089bcc <__udivdi3+0x1b8>
 1089d04:	00804034 	movhi	r2,256
 1089d08:	10bfffc4 	addi	r2,r2,-1
 1089d0c:	11808836 	bltu	r2,r6,1089f30 <__udivdi3+0x51c>
 1089d10:	00800404 	movi	r2,16
 1089d14:	003f5606 	br	1089a70 <__udivdi3+0x5c>
 1089d18:	30aed83a 	srl	r23,r6,r2
 1089d1c:	3d4e983a 	sll	r7,r7,r21
 1089d20:	80acd83a 	srl	r22,r16,r2
 1089d24:	9884d83a 	srl	r2,r19,r2
 1089d28:	3deeb03a 	or	r23,r7,r23
 1089d2c:	b824d43a 	srli	r18,r23,16
 1089d30:	8560983a 	sll	r16,r16,r21
 1089d34:	b009883a 	mov	r4,r22
 1089d38:	900b883a 	mov	r5,r18
 1089d3c:	3568983a 	sll	r20,r6,r21
 1089d40:	1420b03a 	or	r16,r2,r16
 1089d44:	108a6200 	call	108a620 <__umodsi3>
 1089d48:	b009883a 	mov	r4,r22
 1089d4c:	900b883a 	mov	r5,r18
 1089d50:	1023883a 	mov	r17,r2
 1089d54:	108a5bc0 	call	108a5bc <__udivsi3>
 1089d58:	8808943a 	slli	r4,r17,16
 1089d5c:	bf3fffcc 	andi	fp,r23,65535
 1089d60:	8006d43a 	srli	r3,r16,16
 1089d64:	e0a3383a 	mul	r17,fp,r2
 1089d68:	100d883a 	mov	r6,r2
 1089d6c:	1906b03a 	or	r3,r3,r4
 1089d70:	1c40042e 	bgeu	r3,r17,1089d84 <__udivdi3+0x370>
 1089d74:	1dc7883a 	add	r3,r3,r23
 1089d78:	10bfffc4 	addi	r2,r2,-1
 1089d7c:	1dc0752e 	bgeu	r3,r23,1089f54 <__udivdi3+0x540>
 1089d80:	100d883a 	mov	r6,r2
 1089d84:	1c63c83a 	sub	r17,r3,r17
 1089d88:	900b883a 	mov	r5,r18
 1089d8c:	8809883a 	mov	r4,r17
 1089d90:	d9800015 	stw	r6,0(sp)
 1089d94:	108a6200 	call	108a620 <__umodsi3>
 1089d98:	102d883a 	mov	r22,r2
 1089d9c:	8809883a 	mov	r4,r17
 1089da0:	900b883a 	mov	r5,r18
 1089da4:	108a5bc0 	call	108a5bc <__udivsi3>
 1089da8:	b02c943a 	slli	r22,r22,16
 1089dac:	e089383a 	mul	r4,fp,r2
 1089db0:	843fffcc 	andi	r16,r16,65535
 1089db4:	85a0b03a 	or	r16,r16,r22
 1089db8:	d9800017 	ldw	r6,0(sp)
 1089dbc:	8100042e 	bgeu	r16,r4,1089dd0 <__udivdi3+0x3bc>
 1089dc0:	85e1883a 	add	r16,r16,r23
 1089dc4:	10ffffc4 	addi	r3,r2,-1
 1089dc8:	85c05e2e 	bgeu	r16,r23,1089f44 <__udivdi3+0x530>
 1089dcc:	1805883a 	mov	r2,r3
 1089dd0:	300c943a 	slli	r6,r6,16
 1089dd4:	a17fffcc 	andi	r5,r20,65535
 1089dd8:	a028d43a 	srli	r20,r20,16
 1089ddc:	3084b03a 	or	r2,r6,r2
 1089de0:	10ffffcc 	andi	r3,r2,65535
 1089de4:	100cd43a 	srli	r6,r2,16
 1089de8:	194f383a 	mul	r7,r3,r5
 1089dec:	1d07383a 	mul	r3,r3,r20
 1089df0:	314b383a 	mul	r5,r6,r5
 1089df4:	3810d43a 	srli	r8,r7,16
 1089df8:	8121c83a 	sub	r16,r16,r4
 1089dfc:	1947883a 	add	r3,r3,r5
 1089e00:	40c7883a 	add	r3,r8,r3
 1089e04:	350d383a 	mul	r6,r6,r20
 1089e08:	1940022e 	bgeu	r3,r5,1089e14 <__udivdi3+0x400>
 1089e0c:	01000074 	movhi	r4,1
 1089e10:	310d883a 	add	r6,r6,r4
 1089e14:	1828d43a 	srli	r20,r3,16
 1089e18:	a18d883a 	add	r6,r20,r6
 1089e1c:	81803e36 	bltu	r16,r6,1089f18 <__udivdi3+0x504>
 1089e20:	81803826 	beq	r16,r6,1089f04 <__udivdi3+0x4f0>
 1089e24:	0007883a 	mov	r3,zero
 1089e28:	003fa206 	br	1089cb4 <__udivdi3+0x2a0>
 1089e2c:	88e2983a 	sll	r17,r17,r3
 1089e30:	80a8d83a 	srl	r20,r16,r2
 1089e34:	80e0983a 	sll	r16,r16,r3
 1089e38:	882ad43a 	srli	r21,r17,16
 1089e3c:	9884d83a 	srl	r2,r19,r2
 1089e40:	a009883a 	mov	r4,r20
 1089e44:	a80b883a 	mov	r5,r21
 1089e48:	142eb03a 	or	r23,r2,r16
 1089e4c:	98e4983a 	sll	r18,r19,r3
 1089e50:	108a6200 	call	108a620 <__umodsi3>
 1089e54:	a009883a 	mov	r4,r20
 1089e58:	a80b883a 	mov	r5,r21
 1089e5c:	1021883a 	mov	r16,r2
 1089e60:	108a5bc0 	call	108a5bc <__udivsi3>
 1089e64:	1039883a 	mov	fp,r2
 1089e68:	8d3fffcc 	andi	r20,r17,65535
 1089e6c:	8020943a 	slli	r16,r16,16
 1089e70:	b804d43a 	srli	r2,r23,16
 1089e74:	a72d383a 	mul	r22,r20,fp
 1089e78:	1404b03a 	or	r2,r2,r16
 1089e7c:	1580062e 	bgeu	r2,r22,1089e98 <__udivdi3+0x484>
 1089e80:	1445883a 	add	r2,r2,r17
 1089e84:	e0ffffc4 	addi	r3,fp,-1
 1089e88:	14403836 	bltu	r2,r17,1089f6c <__udivdi3+0x558>
 1089e8c:	1580372e 	bgeu	r2,r22,1089f6c <__udivdi3+0x558>
 1089e90:	e73fff84 	addi	fp,fp,-2
 1089e94:	1445883a 	add	r2,r2,r17
 1089e98:	15adc83a 	sub	r22,r2,r22
 1089e9c:	a80b883a 	mov	r5,r21
 1089ea0:	b009883a 	mov	r4,r22
 1089ea4:	108a6200 	call	108a620 <__umodsi3>
 1089ea8:	1027883a 	mov	r19,r2
 1089eac:	b009883a 	mov	r4,r22
 1089eb0:	a80b883a 	mov	r5,r21
 1089eb4:	108a5bc0 	call	108a5bc <__udivsi3>
 1089eb8:	9826943a 	slli	r19,r19,16
 1089ebc:	a0a1383a 	mul	r16,r20,r2
 1089ec0:	b93fffcc 	andi	r4,r23,65535
 1089ec4:	24c8b03a 	or	r4,r4,r19
 1089ec8:	2400062e 	bgeu	r4,r16,1089ee4 <__udivdi3+0x4d0>
 1089ecc:	2449883a 	add	r4,r4,r17
 1089ed0:	10ffffc4 	addi	r3,r2,-1
 1089ed4:	24402336 	bltu	r4,r17,1089f64 <__udivdi3+0x550>
 1089ed8:	2400222e 	bgeu	r4,r16,1089f64 <__udivdi3+0x550>
 1089edc:	10bfff84 	addi	r2,r2,-2
 1089ee0:	2449883a 	add	r4,r4,r17
 1089ee4:	e038943a 	slli	fp,fp,16
 1089ee8:	2421c83a 	sub	r16,r4,r16
 1089eec:	e086b03a 	or	r3,fp,r2
 1089ef0:	003f4306 	br	1089c00 <__udivdi3+0x1ec>
 1089ef4:	2005883a 	mov	r2,r4
 1089ef8:	003f6906 	br	1089ca0 <__udivdi3+0x28c>
 1089efc:	1805883a 	mov	r2,r3
 1089f00:	003f0f06 	br	1089b40 <__udivdi3+0x12c>
 1089f04:	1806943a 	slli	r3,r3,16
 1089f08:	9d66983a 	sll	r19,r19,r21
 1089f0c:	39ffffcc 	andi	r7,r7,65535
 1089f10:	19c7883a 	add	r3,r3,r7
 1089f14:	98ffc32e 	bgeu	r19,r3,1089e24 <__udivdi3+0x410>
 1089f18:	10bfffc4 	addi	r2,r2,-1
 1089f1c:	003fc106 	br	1089e24 <__udivdi3+0x410>
 1089f20:	00800604 	movi	r2,24
 1089f24:	003f1106 	br	1089b6c <__udivdi3+0x158>
 1089f28:	00800604 	movi	r2,24
 1089f2c:	003f2706 	br	1089bcc <__udivdi3+0x1b8>
 1089f30:	00800604 	movi	r2,24
 1089f34:	003ece06 	br	1089a70 <__udivdi3+0x5c>
 1089f38:	0007883a 	mov	r3,zero
 1089f3c:	00800044 	movi	r2,1
 1089f40:	003f5c06 	br	1089cb4 <__udivdi3+0x2a0>
 1089f44:	813fa12e 	bgeu	r16,r4,1089dcc <__udivdi3+0x3b8>
 1089f48:	10bfff84 	addi	r2,r2,-2
 1089f4c:	85e1883a 	add	r16,r16,r23
 1089f50:	003f9f06 	br	1089dd0 <__udivdi3+0x3bc>
 1089f54:	1c7f8a2e 	bgeu	r3,r17,1089d80 <__udivdi3+0x36c>
 1089f58:	31bfff84 	addi	r6,r6,-2
 1089f5c:	1dc7883a 	add	r3,r3,r23
 1089f60:	003f8806 	br	1089d84 <__udivdi3+0x370>
 1089f64:	1805883a 	mov	r2,r3
 1089f68:	003fde06 	br	1089ee4 <__udivdi3+0x4d0>
 1089f6c:	1839883a 	mov	fp,r3
 1089f70:	003fc906 	br	1089e98 <__udivdi3+0x484>
 1089f74:	b5bfff84 	addi	r22,r22,-2
 1089f78:	2449883a 	add	r4,r4,r17
 1089f7c:	003f3406 	br	1089c50 <__udivdi3+0x23c>
 1089f80:	b5bfff84 	addi	r22,r22,-2
 1089f84:	1445883a 	add	r2,r2,r17
 1089f88:	003edb06 	br	1089af8 <__udivdi3+0xe4>

01089f8c <__umoddi3>:
 1089f8c:	defff404 	addi	sp,sp,-48
 1089f90:	df000a15 	stw	fp,40(sp)
 1089f94:	dc400315 	stw	r17,12(sp)
 1089f98:	dc000215 	stw	r16,8(sp)
 1089f9c:	dfc00b15 	stw	ra,44(sp)
 1089fa0:	ddc00915 	stw	r23,36(sp)
 1089fa4:	dd800815 	stw	r22,32(sp)
 1089fa8:	dd400715 	stw	r21,28(sp)
 1089fac:	dd000615 	stw	r20,24(sp)
 1089fb0:	dcc00515 	stw	r19,20(sp)
 1089fb4:	dc800415 	stw	r18,16(sp)
 1089fb8:	2021883a 	mov	r16,r4
 1089fbc:	2823883a 	mov	r17,r5
 1089fc0:	2839883a 	mov	fp,r5
 1089fc4:	38003c1e 	bne	r7,zero,108a0b8 <__umoddi3+0x12c>
 1089fc8:	3027883a 	mov	r19,r6
 1089fcc:	2029883a 	mov	r20,r4
 1089fd0:	2980512e 	bgeu	r5,r6,108a118 <__umoddi3+0x18c>
 1089fd4:	00bfffd4 	movui	r2,65535
 1089fd8:	11809a36 	bltu	r2,r6,108a244 <__umoddi3+0x2b8>
 1089fdc:	01003fc4 	movi	r4,255
 1089fe0:	2189803a 	cmpltu	r4,r4,r6
 1089fe4:	200890fa 	slli	r4,r4,3
 1089fe8:	3104d83a 	srl	r2,r6,r4
 1089fec:	00c04274 	movhi	r3,265
 1089ff0:	18fd1a04 	addi	r3,r3,-2968
 1089ff4:	1885883a 	add	r2,r3,r2
 1089ff8:	10c00003 	ldbu	r3,0(r2)
 1089ffc:	00800804 	movi	r2,32
 108a000:	1909883a 	add	r4,r3,r4
 108a004:	1125c83a 	sub	r18,r2,r4
 108a008:	90000526 	beq	r18,zero,108a020 <__umoddi3+0x94>
 108a00c:	8ca2983a 	sll	r17,r17,r18
 108a010:	8108d83a 	srl	r4,r16,r4
 108a014:	34a6983a 	sll	r19,r6,r18
 108a018:	84a8983a 	sll	r20,r16,r18
 108a01c:	2478b03a 	or	fp,r4,r17
 108a020:	982ed43a 	srli	r23,r19,16
 108a024:	e009883a 	mov	r4,fp
 108a028:	9dbfffcc 	andi	r22,r19,65535
 108a02c:	b80b883a 	mov	r5,r23
 108a030:	108a6200 	call	108a620 <__umodsi3>
 108a034:	e009883a 	mov	r4,fp
 108a038:	b80b883a 	mov	r5,r23
 108a03c:	102b883a 	mov	r21,r2
 108a040:	108a5bc0 	call	108a5bc <__udivsi3>
 108a044:	a806943a 	slli	r3,r21,16
 108a048:	a008d43a 	srli	r4,r20,16
 108a04c:	b085383a 	mul	r2,r22,r2
 108a050:	20c8b03a 	or	r4,r4,r3
 108a054:	2080032e 	bgeu	r4,r2,108a064 <__umoddi3+0xd8>
 108a058:	24c9883a 	add	r4,r4,r19
 108a05c:	24c00136 	bltu	r4,r19,108a064 <__umoddi3+0xd8>
 108a060:	20811036 	bltu	r4,r2,108a4a4 <__umoddi3+0x518>
 108a064:	20abc83a 	sub	r21,r4,r2
 108a068:	b80b883a 	mov	r5,r23
 108a06c:	a809883a 	mov	r4,r21
 108a070:	108a6200 	call	108a620 <__umodsi3>
 108a074:	1023883a 	mov	r17,r2
 108a078:	b80b883a 	mov	r5,r23
 108a07c:	a809883a 	mov	r4,r21
 108a080:	108a5bc0 	call	108a5bc <__udivsi3>
 108a084:	8822943a 	slli	r17,r17,16
 108a088:	b085383a 	mul	r2,r22,r2
 108a08c:	a0ffffcc 	andi	r3,r20,65535
 108a090:	1c46b03a 	or	r3,r3,r17
 108a094:	1880042e 	bgeu	r3,r2,108a0a8 <__umoddi3+0x11c>
 108a098:	1cc7883a 	add	r3,r3,r19
 108a09c:	1cc00236 	bltu	r3,r19,108a0a8 <__umoddi3+0x11c>
 108a0a0:	1880012e 	bgeu	r3,r2,108a0a8 <__umoddi3+0x11c>
 108a0a4:	1cc7883a 	add	r3,r3,r19
 108a0a8:	1885c83a 	sub	r2,r3,r2
 108a0ac:	1484d83a 	srl	r2,r2,r18
 108a0b0:	0007883a 	mov	r3,zero
 108a0b4:	00004f06 	br	108a1f4 <__umoddi3+0x268>
 108a0b8:	29c04c36 	bltu	r5,r7,108a1ec <__umoddi3+0x260>
 108a0bc:	00bfffd4 	movui	r2,65535
 108a0c0:	11c0582e 	bgeu	r2,r7,108a224 <__umoddi3+0x298>
 108a0c4:	00804034 	movhi	r2,256
 108a0c8:	10bfffc4 	addi	r2,r2,-1
 108a0cc:	11c0e736 	bltu	r2,r7,108a46c <__umoddi3+0x4e0>
 108a0d0:	01000404 	movi	r4,16
 108a0d4:	3904d83a 	srl	r2,r7,r4
 108a0d8:	00c04274 	movhi	r3,265
 108a0dc:	18fd1a04 	addi	r3,r3,-2968
 108a0e0:	1885883a 	add	r2,r3,r2
 108a0e4:	14c00003 	ldbu	r19,0(r2)
 108a0e8:	00c00804 	movi	r3,32
 108a0ec:	9927883a 	add	r19,r19,r4
 108a0f0:	1ce9c83a 	sub	r20,r3,r19
 108a0f4:	a000581e 	bne	r20,zero,108a258 <__umoddi3+0x2cc>
 108a0f8:	3c400136 	bltu	r7,r17,108a100 <__umoddi3+0x174>
 108a0fc:	8180eb36 	bltu	r16,r6,108a4ac <__umoddi3+0x520>
 108a100:	8185c83a 	sub	r2,r16,r6
 108a104:	89e3c83a 	sub	r17,r17,r7
 108a108:	8089803a 	cmpltu	r4,r16,r2
 108a10c:	8939c83a 	sub	fp,r17,r4
 108a110:	e007883a 	mov	r3,fp
 108a114:	00003706 	br	108a1f4 <__umoddi3+0x268>
 108a118:	3000041e 	bne	r6,zero,108a12c <__umoddi3+0x1a0>
 108a11c:	000b883a 	mov	r5,zero
 108a120:	01000044 	movi	r4,1
 108a124:	108a5bc0 	call	108a5bc <__udivsi3>
 108a128:	1027883a 	mov	r19,r2
 108a12c:	00bfffd4 	movui	r2,65535
 108a130:	14c0402e 	bgeu	r2,r19,108a234 <__umoddi3+0x2a8>
 108a134:	00804034 	movhi	r2,256
 108a138:	10bfffc4 	addi	r2,r2,-1
 108a13c:	14c0cd36 	bltu	r2,r19,108a474 <__umoddi3+0x4e8>
 108a140:	00800404 	movi	r2,16
 108a144:	9886d83a 	srl	r3,r19,r2
 108a148:	01004274 	movhi	r4,265
 108a14c:	213d1a04 	addi	r4,r4,-2968
 108a150:	20c7883a 	add	r3,r4,r3
 108a154:	18c00003 	ldbu	r3,0(r3)
 108a158:	1887883a 	add	r3,r3,r2
 108a15c:	00800804 	movi	r2,32
 108a160:	10e5c83a 	sub	r18,r2,r3
 108a164:	9000901e 	bne	r18,zero,108a3a8 <__umoddi3+0x41c>
 108a168:	982cd43a 	srli	r22,r19,16
 108a16c:	8ce3c83a 	sub	r17,r17,r19
 108a170:	9d7fffcc 	andi	r21,r19,65535
 108a174:	b00b883a 	mov	r5,r22
 108a178:	8809883a 	mov	r4,r17
 108a17c:	108a6200 	call	108a620 <__umodsi3>
 108a180:	8809883a 	mov	r4,r17
 108a184:	b00b883a 	mov	r5,r22
 108a188:	1021883a 	mov	r16,r2
 108a18c:	108a5bc0 	call	108a5bc <__udivsi3>
 108a190:	8006943a 	slli	r3,r16,16
 108a194:	a008d43a 	srli	r4,r20,16
 108a198:	1545383a 	mul	r2,r2,r21
 108a19c:	20c8b03a 	or	r4,r4,r3
 108a1a0:	2080042e 	bgeu	r4,r2,108a1b4 <__umoddi3+0x228>
 108a1a4:	24c9883a 	add	r4,r4,r19
 108a1a8:	24c00236 	bltu	r4,r19,108a1b4 <__umoddi3+0x228>
 108a1ac:	2080012e 	bgeu	r4,r2,108a1b4 <__umoddi3+0x228>
 108a1b0:	24c9883a 	add	r4,r4,r19
 108a1b4:	20a1c83a 	sub	r16,r4,r2
 108a1b8:	b00b883a 	mov	r5,r22
 108a1bc:	8009883a 	mov	r4,r16
 108a1c0:	108a6200 	call	108a620 <__umodsi3>
 108a1c4:	1023883a 	mov	r17,r2
 108a1c8:	b00b883a 	mov	r5,r22
 108a1cc:	8009883a 	mov	r4,r16
 108a1d0:	108a5bc0 	call	108a5bc <__udivsi3>
 108a1d4:	8822943a 	slli	r17,r17,16
 108a1d8:	1545383a 	mul	r2,r2,r21
 108a1dc:	a53fffcc 	andi	r20,r20,65535
 108a1e0:	a446b03a 	or	r3,r20,r17
 108a1e4:	18bfb02e 	bgeu	r3,r2,108a0a8 <__umoddi3+0x11c>
 108a1e8:	003fab06 	br	108a098 <__umoddi3+0x10c>
 108a1ec:	2005883a 	mov	r2,r4
 108a1f0:	2807883a 	mov	r3,r5
 108a1f4:	dfc00b17 	ldw	ra,44(sp)
 108a1f8:	df000a17 	ldw	fp,40(sp)
 108a1fc:	ddc00917 	ldw	r23,36(sp)
 108a200:	dd800817 	ldw	r22,32(sp)
 108a204:	dd400717 	ldw	r21,28(sp)
 108a208:	dd000617 	ldw	r20,24(sp)
 108a20c:	dcc00517 	ldw	r19,20(sp)
 108a210:	dc800417 	ldw	r18,16(sp)
 108a214:	dc400317 	ldw	r17,12(sp)
 108a218:	dc000217 	ldw	r16,8(sp)
 108a21c:	dec00c04 	addi	sp,sp,48
 108a220:	f800283a 	ret
 108a224:	04c03fc4 	movi	r19,255
 108a228:	99c9803a 	cmpltu	r4,r19,r7
 108a22c:	200890fa 	slli	r4,r4,3
 108a230:	003fa806 	br	108a0d4 <__umoddi3+0x148>
 108a234:	00803fc4 	movi	r2,255
 108a238:	14c5803a 	cmpltu	r2,r2,r19
 108a23c:	100490fa 	slli	r2,r2,3
 108a240:	003fc006 	br	108a144 <__umoddi3+0x1b8>
 108a244:	00804034 	movhi	r2,256
 108a248:	10bfffc4 	addi	r2,r2,-1
 108a24c:	11808b36 	bltu	r2,r6,108a47c <__umoddi3+0x4f0>
 108a250:	01000404 	movi	r4,16
 108a254:	003f6406 	br	1089fe8 <__umoddi3+0x5c>
 108a258:	34c4d83a 	srl	r2,r6,r19
 108a25c:	3d0e983a 	sll	r7,r7,r20
 108a260:	8cf8d83a 	srl	fp,r17,r19
 108a264:	8d10983a 	sll	r8,r17,r20
 108a268:	38aab03a 	or	r21,r7,r2
 108a26c:	a82cd43a 	srli	r22,r21,16
 108a270:	84e2d83a 	srl	r17,r16,r19
 108a274:	e009883a 	mov	r4,fp
 108a278:	b00b883a 	mov	r5,r22
 108a27c:	8a22b03a 	or	r17,r17,r8
 108a280:	3524983a 	sll	r18,r6,r20
 108a284:	108a6200 	call	108a620 <__umodsi3>
 108a288:	e009883a 	mov	r4,fp
 108a28c:	b00b883a 	mov	r5,r22
 108a290:	102f883a 	mov	r23,r2
 108a294:	108a5bc0 	call	108a5bc <__udivsi3>
 108a298:	100d883a 	mov	r6,r2
 108a29c:	b808943a 	slli	r4,r23,16
 108a2a0:	aa3fffcc 	andi	r8,r21,65535
 108a2a4:	8804d43a 	srli	r2,r17,16
 108a2a8:	41af383a 	mul	r23,r8,r6
 108a2ac:	8520983a 	sll	r16,r16,r20
 108a2b0:	1104b03a 	or	r2,r2,r4
 108a2b4:	15c0042e 	bgeu	r2,r23,108a2c8 <__umoddi3+0x33c>
 108a2b8:	1545883a 	add	r2,r2,r21
 108a2bc:	30ffffc4 	addi	r3,r6,-1
 108a2c0:	1540742e 	bgeu	r2,r21,108a494 <__umoddi3+0x508>
 108a2c4:	180d883a 	mov	r6,r3
 108a2c8:	15efc83a 	sub	r23,r2,r23
 108a2cc:	b00b883a 	mov	r5,r22
 108a2d0:	b809883a 	mov	r4,r23
 108a2d4:	d9800115 	stw	r6,4(sp)
 108a2d8:	da000015 	stw	r8,0(sp)
 108a2dc:	108a6200 	call	108a620 <__umodsi3>
 108a2e0:	b00b883a 	mov	r5,r22
 108a2e4:	b809883a 	mov	r4,r23
 108a2e8:	1039883a 	mov	fp,r2
 108a2ec:	108a5bc0 	call	108a5bc <__udivsi3>
 108a2f0:	da000017 	ldw	r8,0(sp)
 108a2f4:	e038943a 	slli	fp,fp,16
 108a2f8:	100b883a 	mov	r5,r2
 108a2fc:	4089383a 	mul	r4,r8,r2
 108a300:	8a3fffcc 	andi	r8,r17,65535
 108a304:	4710b03a 	or	r8,r8,fp
 108a308:	d9800117 	ldw	r6,4(sp)
 108a30c:	4100042e 	bgeu	r8,r4,108a320 <__umoddi3+0x394>
 108a310:	4551883a 	add	r8,r8,r21
 108a314:	10bfffc4 	addi	r2,r2,-1
 108a318:	45405a2e 	bgeu	r8,r21,108a484 <__umoddi3+0x4f8>
 108a31c:	100b883a 	mov	r5,r2
 108a320:	300c943a 	slli	r6,r6,16
 108a324:	91ffffcc 	andi	r7,r18,65535
 108a328:	9004d43a 	srli	r2,r18,16
 108a32c:	314cb03a 	or	r6,r6,r5
 108a330:	317fffcc 	andi	r5,r6,65535
 108a334:	300cd43a 	srli	r6,r6,16
 108a338:	29d3383a 	mul	r9,r5,r7
 108a33c:	288b383a 	mul	r5,r5,r2
 108a340:	31cf383a 	mul	r7,r6,r7
 108a344:	4806d43a 	srli	r3,r9,16
 108a348:	4111c83a 	sub	r8,r8,r4
 108a34c:	29cb883a 	add	r5,r5,r7
 108a350:	194b883a 	add	r5,r3,r5
 108a354:	3085383a 	mul	r2,r6,r2
 108a358:	29c0022e 	bgeu	r5,r7,108a364 <__umoddi3+0x3d8>
 108a35c:	00c00074 	movhi	r3,1
 108a360:	10c5883a 	add	r2,r2,r3
 108a364:	2808d43a 	srli	r4,r5,16
 108a368:	280a943a 	slli	r5,r5,16
 108a36c:	4a7fffcc 	andi	r9,r9,65535
 108a370:	2085883a 	add	r2,r4,r2
 108a374:	2a4b883a 	add	r5,r5,r9
 108a378:	40803636 	bltu	r8,r2,108a454 <__umoddi3+0x4c8>
 108a37c:	40804d26 	beq	r8,r2,108a4b4 <__umoddi3+0x528>
 108a380:	4089c83a 	sub	r4,r8,r2
 108a384:	280f883a 	mov	r7,r5
 108a388:	81cfc83a 	sub	r7,r16,r7
 108a38c:	81c7803a 	cmpltu	r3,r16,r7
 108a390:	20c7c83a 	sub	r3,r4,r3
 108a394:	1cc4983a 	sll	r2,r3,r19
 108a398:	3d0ed83a 	srl	r7,r7,r20
 108a39c:	1d06d83a 	srl	r3,r3,r20
 108a3a0:	11c4b03a 	or	r2,r2,r7
 108a3a4:	003f9306 	br	108a1f4 <__umoddi3+0x268>
 108a3a8:	9ca6983a 	sll	r19,r19,r18
 108a3ac:	88e8d83a 	srl	r20,r17,r3
 108a3b0:	80c4d83a 	srl	r2,r16,r3
 108a3b4:	982cd43a 	srli	r22,r19,16
 108a3b8:	8ca2983a 	sll	r17,r17,r18
 108a3bc:	a009883a 	mov	r4,r20
 108a3c0:	b00b883a 	mov	r5,r22
 108a3c4:	1478b03a 	or	fp,r2,r17
 108a3c8:	108a6200 	call	108a620 <__umodsi3>
 108a3cc:	a009883a 	mov	r4,r20
 108a3d0:	b00b883a 	mov	r5,r22
 108a3d4:	1023883a 	mov	r17,r2
 108a3d8:	108a5bc0 	call	108a5bc <__udivsi3>
 108a3dc:	9d7fffcc 	andi	r21,r19,65535
 108a3e0:	880a943a 	slli	r5,r17,16
 108a3e4:	e008d43a 	srli	r4,fp,16
 108a3e8:	a885383a 	mul	r2,r21,r2
 108a3ec:	84a8983a 	sll	r20,r16,r18
 108a3f0:	2148b03a 	or	r4,r4,r5
 108a3f4:	2080042e 	bgeu	r4,r2,108a408 <__umoddi3+0x47c>
 108a3f8:	24c9883a 	add	r4,r4,r19
 108a3fc:	24c00236 	bltu	r4,r19,108a408 <__umoddi3+0x47c>
 108a400:	2080012e 	bgeu	r4,r2,108a408 <__umoddi3+0x47c>
 108a404:	24c9883a 	add	r4,r4,r19
 108a408:	20a3c83a 	sub	r17,r4,r2
 108a40c:	b00b883a 	mov	r5,r22
 108a410:	8809883a 	mov	r4,r17
 108a414:	108a6200 	call	108a620 <__umodsi3>
 108a418:	102f883a 	mov	r23,r2
 108a41c:	8809883a 	mov	r4,r17
 108a420:	b00b883a 	mov	r5,r22
 108a424:	108a5bc0 	call	108a5bc <__udivsi3>
 108a428:	b82e943a 	slli	r23,r23,16
 108a42c:	a885383a 	mul	r2,r21,r2
 108a430:	e13fffcc 	andi	r4,fp,65535
 108a434:	25c8b03a 	or	r4,r4,r23
 108a438:	2080042e 	bgeu	r4,r2,108a44c <__umoddi3+0x4c0>
 108a43c:	24c9883a 	add	r4,r4,r19
 108a440:	24c00236 	bltu	r4,r19,108a44c <__umoddi3+0x4c0>
 108a444:	2080012e 	bgeu	r4,r2,108a44c <__umoddi3+0x4c0>
 108a448:	24c9883a 	add	r4,r4,r19
 108a44c:	20a3c83a 	sub	r17,r4,r2
 108a450:	003f4806 	br	108a174 <__umoddi3+0x1e8>
 108a454:	2c8fc83a 	sub	r7,r5,r18
 108a458:	1545c83a 	sub	r2,r2,r21
 108a45c:	29cb803a 	cmpltu	r5,r5,r7
 108a460:	1145c83a 	sub	r2,r2,r5
 108a464:	4089c83a 	sub	r4,r8,r2
 108a468:	003fc706 	br	108a388 <__umoddi3+0x3fc>
 108a46c:	01000604 	movi	r4,24
 108a470:	003f1806 	br	108a0d4 <__umoddi3+0x148>
 108a474:	00800604 	movi	r2,24
 108a478:	003f3206 	br	108a144 <__umoddi3+0x1b8>
 108a47c:	01000604 	movi	r4,24
 108a480:	003ed906 	br	1089fe8 <__umoddi3+0x5c>
 108a484:	413fa52e 	bgeu	r8,r4,108a31c <__umoddi3+0x390>
 108a488:	297fff84 	addi	r5,r5,-2
 108a48c:	4551883a 	add	r8,r8,r21
 108a490:	003fa306 	br	108a320 <__umoddi3+0x394>
 108a494:	15ff8b2e 	bgeu	r2,r23,108a2c4 <__umoddi3+0x338>
 108a498:	31bfff84 	addi	r6,r6,-2
 108a49c:	1545883a 	add	r2,r2,r21
 108a4a0:	003f8906 	br	108a2c8 <__umoddi3+0x33c>
 108a4a4:	24c9883a 	add	r4,r4,r19
 108a4a8:	003eee06 	br	108a064 <__umoddi3+0xd8>
 108a4ac:	8005883a 	mov	r2,r16
 108a4b0:	003f1706 	br	108a110 <__umoddi3+0x184>
 108a4b4:	817fe736 	bltu	r16,r5,108a454 <__umoddi3+0x4c8>
 108a4b8:	280f883a 	mov	r7,r5
 108a4bc:	0009883a 	mov	r4,zero
 108a4c0:	003fb106 	br	108a388 <__umoddi3+0x3fc>

0108a4c4 <__divsi3>:
 108a4c4:	20001b16 	blt	r4,zero,108a534 <__divsi3+0x70>
 108a4c8:	000f883a 	mov	r7,zero
 108a4cc:	28001616 	blt	r5,zero,108a528 <__divsi3+0x64>
 108a4d0:	200d883a 	mov	r6,r4
 108a4d4:	29001a2e 	bgeu	r5,r4,108a540 <__divsi3+0x7c>
 108a4d8:	00800804 	movi	r2,32
 108a4dc:	00c00044 	movi	r3,1
 108a4e0:	00000106 	br	108a4e8 <__divsi3+0x24>
 108a4e4:	10000d26 	beq	r2,zero,108a51c <__divsi3+0x58>
 108a4e8:	294b883a 	add	r5,r5,r5
 108a4ec:	10bfffc4 	addi	r2,r2,-1
 108a4f0:	18c7883a 	add	r3,r3,r3
 108a4f4:	293ffb36 	bltu	r5,r4,108a4e4 <__divsi3+0x20>
 108a4f8:	0005883a 	mov	r2,zero
 108a4fc:	18000726 	beq	r3,zero,108a51c <__divsi3+0x58>
 108a500:	0005883a 	mov	r2,zero
 108a504:	31400236 	bltu	r6,r5,108a510 <__divsi3+0x4c>
 108a508:	314dc83a 	sub	r6,r6,r5
 108a50c:	10c4b03a 	or	r2,r2,r3
 108a510:	1806d07a 	srli	r3,r3,1
 108a514:	280ad07a 	srli	r5,r5,1
 108a518:	183ffa1e 	bne	r3,zero,108a504 <__divsi3+0x40>
 108a51c:	38000126 	beq	r7,zero,108a524 <__divsi3+0x60>
 108a520:	0085c83a 	sub	r2,zero,r2
 108a524:	f800283a 	ret
 108a528:	014bc83a 	sub	r5,zero,r5
 108a52c:	39c0005c 	xori	r7,r7,1
 108a530:	003fe706 	br	108a4d0 <__divsi3+0xc>
 108a534:	0109c83a 	sub	r4,zero,r4
 108a538:	01c00044 	movi	r7,1
 108a53c:	003fe306 	br	108a4cc <__divsi3+0x8>
 108a540:	00c00044 	movi	r3,1
 108a544:	003fee06 	br	108a500 <__divsi3+0x3c>

0108a548 <__modsi3>:
 108a548:	20001716 	blt	r4,zero,108a5a8 <__modsi3+0x60>
 108a54c:	000f883a 	mov	r7,zero
 108a550:	2005883a 	mov	r2,r4
 108a554:	28001216 	blt	r5,zero,108a5a0 <__modsi3+0x58>
 108a558:	2900162e 	bgeu	r5,r4,108a5b4 <__modsi3+0x6c>
 108a55c:	01800804 	movi	r6,32
 108a560:	00c00044 	movi	r3,1
 108a564:	00000106 	br	108a56c <__modsi3+0x24>
 108a568:	30000a26 	beq	r6,zero,108a594 <__modsi3+0x4c>
 108a56c:	294b883a 	add	r5,r5,r5
 108a570:	31bfffc4 	addi	r6,r6,-1
 108a574:	18c7883a 	add	r3,r3,r3
 108a578:	293ffb36 	bltu	r5,r4,108a568 <__modsi3+0x20>
 108a57c:	18000526 	beq	r3,zero,108a594 <__modsi3+0x4c>
 108a580:	1806d07a 	srli	r3,r3,1
 108a584:	11400136 	bltu	r2,r5,108a58c <__modsi3+0x44>
 108a588:	1145c83a 	sub	r2,r2,r5
 108a58c:	280ad07a 	srli	r5,r5,1
 108a590:	183ffb1e 	bne	r3,zero,108a580 <__modsi3+0x38>
 108a594:	38000126 	beq	r7,zero,108a59c <__modsi3+0x54>
 108a598:	0085c83a 	sub	r2,zero,r2
 108a59c:	f800283a 	ret
 108a5a0:	014bc83a 	sub	r5,zero,r5
 108a5a4:	003fec06 	br	108a558 <__modsi3+0x10>
 108a5a8:	0109c83a 	sub	r4,zero,r4
 108a5ac:	01c00044 	movi	r7,1
 108a5b0:	003fe706 	br	108a550 <__modsi3+0x8>
 108a5b4:	00c00044 	movi	r3,1
 108a5b8:	003ff106 	br	108a580 <__modsi3+0x38>

0108a5bc <__udivsi3>:
 108a5bc:	200d883a 	mov	r6,r4
 108a5c0:	2900152e 	bgeu	r5,r4,108a618 <__udivsi3+0x5c>
 108a5c4:	28001416 	blt	r5,zero,108a618 <__udivsi3+0x5c>
 108a5c8:	00800804 	movi	r2,32
 108a5cc:	00c00044 	movi	r3,1
 108a5d0:	00000206 	br	108a5dc <__udivsi3+0x20>
 108a5d4:	10000e26 	beq	r2,zero,108a610 <__udivsi3+0x54>
 108a5d8:	28000516 	blt	r5,zero,108a5f0 <__udivsi3+0x34>
 108a5dc:	294b883a 	add	r5,r5,r5
 108a5e0:	10bfffc4 	addi	r2,r2,-1
 108a5e4:	18c7883a 	add	r3,r3,r3
 108a5e8:	293ffa36 	bltu	r5,r4,108a5d4 <__udivsi3+0x18>
 108a5ec:	18000826 	beq	r3,zero,108a610 <__udivsi3+0x54>
 108a5f0:	0005883a 	mov	r2,zero
 108a5f4:	31400236 	bltu	r6,r5,108a600 <__udivsi3+0x44>
 108a5f8:	314dc83a 	sub	r6,r6,r5
 108a5fc:	10c4b03a 	or	r2,r2,r3
 108a600:	1806d07a 	srli	r3,r3,1
 108a604:	280ad07a 	srli	r5,r5,1
 108a608:	183ffa1e 	bne	r3,zero,108a5f4 <__udivsi3+0x38>
 108a60c:	f800283a 	ret
 108a610:	0005883a 	mov	r2,zero
 108a614:	f800283a 	ret
 108a618:	00c00044 	movi	r3,1
 108a61c:	003ff406 	br	108a5f0 <__udivsi3+0x34>

0108a620 <__umodsi3>:
 108a620:	2005883a 	mov	r2,r4
 108a624:	2900122e 	bgeu	r5,r4,108a670 <__umodsi3+0x50>
 108a628:	28001116 	blt	r5,zero,108a670 <__umodsi3+0x50>
 108a62c:	01800804 	movi	r6,32
 108a630:	00c00044 	movi	r3,1
 108a634:	00000206 	br	108a640 <__umodsi3+0x20>
 108a638:	30000c26 	beq	r6,zero,108a66c <__umodsi3+0x4c>
 108a63c:	28000516 	blt	r5,zero,108a654 <__umodsi3+0x34>
 108a640:	294b883a 	add	r5,r5,r5
 108a644:	31bfffc4 	addi	r6,r6,-1
 108a648:	18c7883a 	add	r3,r3,r3
 108a64c:	293ffa36 	bltu	r5,r4,108a638 <__umodsi3+0x18>
 108a650:	18000626 	beq	r3,zero,108a66c <__umodsi3+0x4c>
 108a654:	1806d07a 	srli	r3,r3,1
 108a658:	11400136 	bltu	r2,r5,108a660 <__umodsi3+0x40>
 108a65c:	1145c83a 	sub	r2,r2,r5
 108a660:	280ad07a 	srli	r5,r5,1
 108a664:	183ffb1e 	bne	r3,zero,108a654 <__umodsi3+0x34>
 108a668:	f800283a 	ret
 108a66c:	f800283a 	ret
 108a670:	00c00044 	movi	r3,1
 108a674:	003ff706 	br	108a654 <__umodsi3+0x34>

0108a678 <__adddf3>:
 108a678:	02c00434 	movhi	r11,16
 108a67c:	5affffc4 	addi	r11,r11,-1
 108a680:	2806d7fa 	srli	r3,r5,31
 108a684:	2ad4703a 	and	r10,r5,r11
 108a688:	3ad2703a 	and	r9,r7,r11
 108a68c:	3804d53a 	srli	r2,r7,20
 108a690:	3018d77a 	srli	r12,r6,29
 108a694:	280ad53a 	srli	r5,r5,20
 108a698:	501490fa 	slli	r10,r10,3
 108a69c:	2010d77a 	srli	r8,r4,29
 108a6a0:	481290fa 	slli	r9,r9,3
 108a6a4:	380ed7fa 	srli	r7,r7,31
 108a6a8:	defffb04 	addi	sp,sp,-20
 108a6ac:	dc800215 	stw	r18,8(sp)
 108a6b0:	dc400115 	stw	r17,4(sp)
 108a6b4:	dc000015 	stw	r16,0(sp)
 108a6b8:	dfc00415 	stw	ra,16(sp)
 108a6bc:	dcc00315 	stw	r19,12(sp)
 108a6c0:	1c803fcc 	andi	r18,r3,255
 108a6c4:	2c01ffcc 	andi	r16,r5,2047
 108a6c8:	5210b03a 	or	r8,r10,r8
 108a6cc:	202290fa 	slli	r17,r4,3
 108a6d0:	1081ffcc 	andi	r2,r2,2047
 108a6d4:	4b12b03a 	or	r9,r9,r12
 108a6d8:	300c90fa 	slli	r6,r6,3
 108a6dc:	91c07526 	beq	r18,r7,108a8b4 <__adddf3+0x23c>
 108a6e0:	8087c83a 	sub	r3,r16,r2
 108a6e4:	00c0ab0e 	bge	zero,r3,108a994 <__adddf3+0x31c>
 108a6e8:	10002a1e 	bne	r2,zero,108a794 <__adddf3+0x11c>
 108a6ec:	4984b03a 	or	r2,r9,r6
 108a6f0:	1000961e 	bne	r2,zero,108a94c <__adddf3+0x2d4>
 108a6f4:	888001cc 	andi	r2,r17,7
 108a6f8:	10000726 	beq	r2,zero,108a718 <__adddf3+0xa0>
 108a6fc:	888003cc 	andi	r2,r17,15
 108a700:	00c00104 	movi	r3,4
 108a704:	10c00426 	beq	r2,r3,108a718 <__adddf3+0xa0>
 108a708:	88c7883a 	add	r3,r17,r3
 108a70c:	1c63803a 	cmpltu	r17,r3,r17
 108a710:	4451883a 	add	r8,r8,r17
 108a714:	1823883a 	mov	r17,r3
 108a718:	4080202c 	andhi	r2,r8,128
 108a71c:	10005926 	beq	r2,zero,108a884 <__adddf3+0x20c>
 108a720:	84000044 	addi	r16,r16,1
 108a724:	0081ffc4 	movi	r2,2047
 108a728:	8080ba26 	beq	r16,r2,108aa14 <__adddf3+0x39c>
 108a72c:	00bfe034 	movhi	r2,65408
 108a730:	10bfffc4 	addi	r2,r2,-1
 108a734:	4090703a 	and	r8,r8,r2
 108a738:	4004977a 	slli	r2,r8,29
 108a73c:	4010927a 	slli	r8,r8,9
 108a740:	8822d0fa 	srli	r17,r17,3
 108a744:	8401ffcc 	andi	r16,r16,2047
 108a748:	4010d33a 	srli	r8,r8,12
 108a74c:	9007883a 	mov	r3,r18
 108a750:	1444b03a 	or	r2,r2,r17
 108a754:	8401ffcc 	andi	r16,r16,2047
 108a758:	8020953a 	slli	r16,r16,20
 108a75c:	18c03fcc 	andi	r3,r3,255
 108a760:	01000434 	movhi	r4,16
 108a764:	213fffc4 	addi	r4,r4,-1
 108a768:	180697fa 	slli	r3,r3,31
 108a76c:	4110703a 	and	r8,r8,r4
 108a770:	4410b03a 	or	r8,r8,r16
 108a774:	40c6b03a 	or	r3,r8,r3
 108a778:	dfc00417 	ldw	ra,16(sp)
 108a77c:	dcc00317 	ldw	r19,12(sp)
 108a780:	dc800217 	ldw	r18,8(sp)
 108a784:	dc400117 	ldw	r17,4(sp)
 108a788:	dc000017 	ldw	r16,0(sp)
 108a78c:	dec00504 	addi	sp,sp,20
 108a790:	f800283a 	ret
 108a794:	0081ffc4 	movi	r2,2047
 108a798:	80bfd626 	beq	r16,r2,108a6f4 <__adddf3+0x7c>
 108a79c:	4a402034 	orhi	r9,r9,128
 108a7a0:	00800e04 	movi	r2,56
 108a7a4:	10c09f16 	blt	r2,r3,108aa24 <__adddf3+0x3ac>
 108a7a8:	008007c4 	movi	r2,31
 108a7ac:	10c0c216 	blt	r2,r3,108aab8 <__adddf3+0x440>
 108a7b0:	00800804 	movi	r2,32
 108a7b4:	10c5c83a 	sub	r2,r2,r3
 108a7b8:	488a983a 	sll	r5,r9,r2
 108a7bc:	30c8d83a 	srl	r4,r6,r3
 108a7c0:	3084983a 	sll	r2,r6,r2
 108a7c4:	48c6d83a 	srl	r3,r9,r3
 108a7c8:	290cb03a 	or	r6,r5,r4
 108a7cc:	1004c03a 	cmpne	r2,r2,zero
 108a7d0:	308cb03a 	or	r6,r6,r2
 108a7d4:	898dc83a 	sub	r6,r17,r6
 108a7d8:	89a3803a 	cmpltu	r17,r17,r6
 108a7dc:	40d1c83a 	sub	r8,r8,r3
 108a7e0:	4451c83a 	sub	r8,r8,r17
 108a7e4:	3023883a 	mov	r17,r6
 108a7e8:	4080202c 	andhi	r2,r8,128
 108a7ec:	10002326 	beq	r2,zero,108a87c <__adddf3+0x204>
 108a7f0:	04c02034 	movhi	r19,128
 108a7f4:	9cffffc4 	addi	r19,r19,-1
 108a7f8:	44e6703a 	and	r19,r8,r19
 108a7fc:	98007626 	beq	r19,zero,108a9d8 <__adddf3+0x360>
 108a800:	9809883a 	mov	r4,r19
 108a804:	108cc7c0 	call	108cc7c <__clzsi2>
 108a808:	10fffe04 	addi	r3,r2,-8
 108a80c:	010007c4 	movi	r4,31
 108a810:	20c07716 	blt	r4,r3,108a9f0 <__adddf3+0x378>
 108a814:	00800804 	movi	r2,32
 108a818:	10c5c83a 	sub	r2,r2,r3
 108a81c:	8884d83a 	srl	r2,r17,r2
 108a820:	98d0983a 	sll	r8,r19,r3
 108a824:	88e2983a 	sll	r17,r17,r3
 108a828:	1204b03a 	or	r2,r2,r8
 108a82c:	1c007416 	blt	r3,r16,108aa00 <__adddf3+0x388>
 108a830:	1c21c83a 	sub	r16,r3,r16
 108a834:	82000044 	addi	r8,r16,1
 108a838:	00c007c4 	movi	r3,31
 108a83c:	1a009116 	blt	r3,r8,108aa84 <__adddf3+0x40c>
 108a840:	00c00804 	movi	r3,32
 108a844:	1a07c83a 	sub	r3,r3,r8
 108a848:	8a08d83a 	srl	r4,r17,r8
 108a84c:	88e2983a 	sll	r17,r17,r3
 108a850:	10c6983a 	sll	r3,r2,r3
 108a854:	1210d83a 	srl	r8,r2,r8
 108a858:	8804c03a 	cmpne	r2,r17,zero
 108a85c:	1906b03a 	or	r3,r3,r4
 108a860:	18a2b03a 	or	r17,r3,r2
 108a864:	0021883a 	mov	r16,zero
 108a868:	003fa206 	br	108a6f4 <__adddf3+0x7c>
 108a86c:	1890b03a 	or	r8,r3,r2
 108a870:	40017d26 	beq	r8,zero,108ae68 <__adddf3+0x7f0>
 108a874:	1011883a 	mov	r8,r2
 108a878:	1823883a 	mov	r17,r3
 108a87c:	888001cc 	andi	r2,r17,7
 108a880:	103f9e1e 	bne	r2,zero,108a6fc <__adddf3+0x84>
 108a884:	4004977a 	slli	r2,r8,29
 108a888:	8822d0fa 	srli	r17,r17,3
 108a88c:	4010d0fa 	srli	r8,r8,3
 108a890:	9007883a 	mov	r3,r18
 108a894:	1444b03a 	or	r2,r2,r17
 108a898:	0101ffc4 	movi	r4,2047
 108a89c:	81002426 	beq	r16,r4,108a930 <__adddf3+0x2b8>
 108a8a0:	8120703a 	and	r16,r16,r4
 108a8a4:	01000434 	movhi	r4,16
 108a8a8:	213fffc4 	addi	r4,r4,-1
 108a8ac:	4110703a 	and	r8,r8,r4
 108a8b0:	003fa806 	br	108a754 <__adddf3+0xdc>
 108a8b4:	8089c83a 	sub	r4,r16,r2
 108a8b8:	01005e0e 	bge	zero,r4,108aa34 <__adddf3+0x3bc>
 108a8bc:	10002b26 	beq	r2,zero,108a96c <__adddf3+0x2f4>
 108a8c0:	0081ffc4 	movi	r2,2047
 108a8c4:	80bf8b26 	beq	r16,r2,108a6f4 <__adddf3+0x7c>
 108a8c8:	4a402034 	orhi	r9,r9,128
 108a8cc:	00800e04 	movi	r2,56
 108a8d0:	1100a40e 	bge	r2,r4,108ab64 <__adddf3+0x4ec>
 108a8d4:	498cb03a 	or	r6,r9,r6
 108a8d8:	300ac03a 	cmpne	r5,r6,zero
 108a8dc:	0013883a 	mov	r9,zero
 108a8e0:	2c4b883a 	add	r5,r5,r17
 108a8e4:	2c63803a 	cmpltu	r17,r5,r17
 108a8e8:	4a11883a 	add	r8,r9,r8
 108a8ec:	8a11883a 	add	r8,r17,r8
 108a8f0:	2823883a 	mov	r17,r5
 108a8f4:	4080202c 	andhi	r2,r8,128
 108a8f8:	103fe026 	beq	r2,zero,108a87c <__adddf3+0x204>
 108a8fc:	84000044 	addi	r16,r16,1
 108a900:	0081ffc4 	movi	r2,2047
 108a904:	8080d226 	beq	r16,r2,108ac50 <__adddf3+0x5d8>
 108a908:	00bfe034 	movhi	r2,65408
 108a90c:	10bfffc4 	addi	r2,r2,-1
 108a910:	4090703a 	and	r8,r8,r2
 108a914:	880ad07a 	srli	r5,r17,1
 108a918:	400897fa 	slli	r4,r8,31
 108a91c:	88c0004c 	andi	r3,r17,1
 108a920:	28e2b03a 	or	r17,r5,r3
 108a924:	4010d07a 	srli	r8,r8,1
 108a928:	2462b03a 	or	r17,r4,r17
 108a92c:	003f7106 	br	108a6f4 <__adddf3+0x7c>
 108a930:	4088b03a 	or	r4,r8,r2
 108a934:	20014526 	beq	r4,zero,108ae4c <__adddf3+0x7d4>
 108a938:	01000434 	movhi	r4,16
 108a93c:	42000234 	orhi	r8,r8,8
 108a940:	213fffc4 	addi	r4,r4,-1
 108a944:	4110703a 	and	r8,r8,r4
 108a948:	003f8206 	br	108a754 <__adddf3+0xdc>
 108a94c:	18ffffc4 	addi	r3,r3,-1
 108a950:	1800491e 	bne	r3,zero,108aa78 <__adddf3+0x400>
 108a954:	898bc83a 	sub	r5,r17,r6
 108a958:	8963803a 	cmpltu	r17,r17,r5
 108a95c:	4251c83a 	sub	r8,r8,r9
 108a960:	4451c83a 	sub	r8,r8,r17
 108a964:	2823883a 	mov	r17,r5
 108a968:	003f9f06 	br	108a7e8 <__adddf3+0x170>
 108a96c:	4984b03a 	or	r2,r9,r6
 108a970:	103f6026 	beq	r2,zero,108a6f4 <__adddf3+0x7c>
 108a974:	213fffc4 	addi	r4,r4,-1
 108a978:	2000931e 	bne	r4,zero,108abc8 <__adddf3+0x550>
 108a97c:	898d883a 	add	r6,r17,r6
 108a980:	3463803a 	cmpltu	r17,r6,r17
 108a984:	4251883a 	add	r8,r8,r9
 108a988:	8a11883a 	add	r8,r17,r8
 108a98c:	3023883a 	mov	r17,r6
 108a990:	003fd806 	br	108a8f4 <__adddf3+0x27c>
 108a994:	1800541e 	bne	r3,zero,108aae8 <__adddf3+0x470>
 108a998:	80800044 	addi	r2,r16,1
 108a99c:	1081ffcc 	andi	r2,r2,2047
 108a9a0:	00c00044 	movi	r3,1
 108a9a4:	1880a00e 	bge	r3,r2,108ac28 <__adddf3+0x5b0>
 108a9a8:	8989c83a 	sub	r4,r17,r6
 108a9ac:	8905803a 	cmpltu	r2,r17,r4
 108a9b0:	4267c83a 	sub	r19,r8,r9
 108a9b4:	98a7c83a 	sub	r19,r19,r2
 108a9b8:	9880202c 	andhi	r2,r19,128
 108a9bc:	10006326 	beq	r2,zero,108ab4c <__adddf3+0x4d4>
 108a9c0:	3463c83a 	sub	r17,r6,r17
 108a9c4:	4a07c83a 	sub	r3,r9,r8
 108a9c8:	344d803a 	cmpltu	r6,r6,r17
 108a9cc:	19a7c83a 	sub	r19,r3,r6
 108a9d0:	3825883a 	mov	r18,r7
 108a9d4:	983f8a1e 	bne	r19,zero,108a800 <__adddf3+0x188>
 108a9d8:	8809883a 	mov	r4,r17
 108a9dc:	108cc7c0 	call	108cc7c <__clzsi2>
 108a9e0:	10800804 	addi	r2,r2,32
 108a9e4:	10fffe04 	addi	r3,r2,-8
 108a9e8:	010007c4 	movi	r4,31
 108a9ec:	20ff890e 	bge	r4,r3,108a814 <__adddf3+0x19c>
 108a9f0:	10bff604 	addi	r2,r2,-40
 108a9f4:	8884983a 	sll	r2,r17,r2
 108a9f8:	0023883a 	mov	r17,zero
 108a9fc:	1c3f8c0e 	bge	r3,r16,108a830 <__adddf3+0x1b8>
 108aa00:	023fe034 	movhi	r8,65408
 108aa04:	423fffc4 	addi	r8,r8,-1
 108aa08:	80e1c83a 	sub	r16,r16,r3
 108aa0c:	1210703a 	and	r8,r2,r8
 108aa10:	003f3806 	br	108a6f4 <__adddf3+0x7c>
 108aa14:	9007883a 	mov	r3,r18
 108aa18:	0011883a 	mov	r8,zero
 108aa1c:	0005883a 	mov	r2,zero
 108aa20:	003f4c06 	br	108a754 <__adddf3+0xdc>
 108aa24:	498cb03a 	or	r6,r9,r6
 108aa28:	300cc03a 	cmpne	r6,r6,zero
 108aa2c:	0007883a 	mov	r3,zero
 108aa30:	003f6806 	br	108a7d4 <__adddf3+0x15c>
 108aa34:	20009c1e 	bne	r4,zero,108aca8 <__adddf3+0x630>
 108aa38:	80800044 	addi	r2,r16,1
 108aa3c:	1141ffcc 	andi	r5,r2,2047
 108aa40:	01000044 	movi	r4,1
 108aa44:	2140670e 	bge	r4,r5,108abe4 <__adddf3+0x56c>
 108aa48:	0101ffc4 	movi	r4,2047
 108aa4c:	11007f26 	beq	r2,r4,108ac4c <__adddf3+0x5d4>
 108aa50:	898d883a 	add	r6,r17,r6
 108aa54:	4247883a 	add	r3,r8,r9
 108aa58:	3451803a 	cmpltu	r8,r6,r17
 108aa5c:	40d1883a 	add	r8,r8,r3
 108aa60:	402297fa 	slli	r17,r8,31
 108aa64:	300cd07a 	srli	r6,r6,1
 108aa68:	4010d07a 	srli	r8,r8,1
 108aa6c:	1021883a 	mov	r16,r2
 108aa70:	89a2b03a 	or	r17,r17,r6
 108aa74:	003f1f06 	br	108a6f4 <__adddf3+0x7c>
 108aa78:	0081ffc4 	movi	r2,2047
 108aa7c:	80bf481e 	bne	r16,r2,108a7a0 <__adddf3+0x128>
 108aa80:	003f1c06 	br	108a6f4 <__adddf3+0x7c>
 108aa84:	843ff844 	addi	r16,r16,-31
 108aa88:	01000804 	movi	r4,32
 108aa8c:	1406d83a 	srl	r3,r2,r16
 108aa90:	41005026 	beq	r8,r4,108abd4 <__adddf3+0x55c>
 108aa94:	01001004 	movi	r4,64
 108aa98:	2211c83a 	sub	r8,r4,r8
 108aa9c:	1204983a 	sll	r2,r2,r8
 108aaa0:	88a2b03a 	or	r17,r17,r2
 108aaa4:	8822c03a 	cmpne	r17,r17,zero
 108aaa8:	1c62b03a 	or	r17,r3,r17
 108aaac:	0011883a 	mov	r8,zero
 108aab0:	0021883a 	mov	r16,zero
 108aab4:	003f7106 	br	108a87c <__adddf3+0x204>
 108aab8:	193ff804 	addi	r4,r3,-32
 108aabc:	00800804 	movi	r2,32
 108aac0:	4908d83a 	srl	r4,r9,r4
 108aac4:	18804526 	beq	r3,r2,108abdc <__adddf3+0x564>
 108aac8:	00801004 	movi	r2,64
 108aacc:	10c5c83a 	sub	r2,r2,r3
 108aad0:	4886983a 	sll	r3,r9,r2
 108aad4:	198cb03a 	or	r6,r3,r6
 108aad8:	300cc03a 	cmpne	r6,r6,zero
 108aadc:	218cb03a 	or	r6,r4,r6
 108aae0:	0007883a 	mov	r3,zero
 108aae4:	003f3b06 	br	108a7d4 <__adddf3+0x15c>
 108aae8:	80002a26 	beq	r16,zero,108ab94 <__adddf3+0x51c>
 108aaec:	0101ffc4 	movi	r4,2047
 108aaf0:	11006826 	beq	r2,r4,108ac94 <__adddf3+0x61c>
 108aaf4:	00c7c83a 	sub	r3,zero,r3
 108aaf8:	42002034 	orhi	r8,r8,128
 108aafc:	01000e04 	movi	r4,56
 108ab00:	20c07c16 	blt	r4,r3,108acf4 <__adddf3+0x67c>
 108ab04:	010007c4 	movi	r4,31
 108ab08:	20c0da16 	blt	r4,r3,108ae74 <__adddf3+0x7fc>
 108ab0c:	01000804 	movi	r4,32
 108ab10:	20c9c83a 	sub	r4,r4,r3
 108ab14:	4114983a 	sll	r10,r8,r4
 108ab18:	88cad83a 	srl	r5,r17,r3
 108ab1c:	8908983a 	sll	r4,r17,r4
 108ab20:	40c6d83a 	srl	r3,r8,r3
 108ab24:	5162b03a 	or	r17,r10,r5
 108ab28:	2008c03a 	cmpne	r4,r4,zero
 108ab2c:	8922b03a 	or	r17,r17,r4
 108ab30:	3463c83a 	sub	r17,r6,r17
 108ab34:	48c7c83a 	sub	r3,r9,r3
 108ab38:	344d803a 	cmpltu	r6,r6,r17
 108ab3c:	1991c83a 	sub	r8,r3,r6
 108ab40:	1021883a 	mov	r16,r2
 108ab44:	3825883a 	mov	r18,r7
 108ab48:	003f2706 	br	108a7e8 <__adddf3+0x170>
 108ab4c:	24d0b03a 	or	r8,r4,r19
 108ab50:	40001b1e 	bne	r8,zero,108abc0 <__adddf3+0x548>
 108ab54:	0005883a 	mov	r2,zero
 108ab58:	0007883a 	mov	r3,zero
 108ab5c:	0021883a 	mov	r16,zero
 108ab60:	003f4d06 	br	108a898 <__adddf3+0x220>
 108ab64:	008007c4 	movi	r2,31
 108ab68:	11003c16 	blt	r2,r4,108ac5c <__adddf3+0x5e4>
 108ab6c:	00800804 	movi	r2,32
 108ab70:	1105c83a 	sub	r2,r2,r4
 108ab74:	488e983a 	sll	r7,r9,r2
 108ab78:	310ad83a 	srl	r5,r6,r4
 108ab7c:	3084983a 	sll	r2,r6,r2
 108ab80:	4912d83a 	srl	r9,r9,r4
 108ab84:	394ab03a 	or	r5,r7,r5
 108ab88:	1004c03a 	cmpne	r2,r2,zero
 108ab8c:	288ab03a 	or	r5,r5,r2
 108ab90:	003f5306 	br	108a8e0 <__adddf3+0x268>
 108ab94:	4448b03a 	or	r4,r8,r17
 108ab98:	20003e26 	beq	r4,zero,108ac94 <__adddf3+0x61c>
 108ab9c:	00c6303a 	nor	r3,zero,r3
 108aba0:	18003a1e 	bne	r3,zero,108ac8c <__adddf3+0x614>
 108aba4:	3463c83a 	sub	r17,r6,r17
 108aba8:	4a07c83a 	sub	r3,r9,r8
 108abac:	344d803a 	cmpltu	r6,r6,r17
 108abb0:	1991c83a 	sub	r8,r3,r6
 108abb4:	1021883a 	mov	r16,r2
 108abb8:	3825883a 	mov	r18,r7
 108abbc:	003f0a06 	br	108a7e8 <__adddf3+0x170>
 108abc0:	2023883a 	mov	r17,r4
 108abc4:	003f0d06 	br	108a7fc <__adddf3+0x184>
 108abc8:	0081ffc4 	movi	r2,2047
 108abcc:	80bf3f1e 	bne	r16,r2,108a8cc <__adddf3+0x254>
 108abd0:	003ec806 	br	108a6f4 <__adddf3+0x7c>
 108abd4:	0005883a 	mov	r2,zero
 108abd8:	003fb106 	br	108aaa0 <__adddf3+0x428>
 108abdc:	0007883a 	mov	r3,zero
 108abe0:	003fbc06 	br	108aad4 <__adddf3+0x45c>
 108abe4:	4444b03a 	or	r2,r8,r17
 108abe8:	8000871e 	bne	r16,zero,108ae08 <__adddf3+0x790>
 108abec:	1000ba26 	beq	r2,zero,108aed8 <__adddf3+0x860>
 108abf0:	4984b03a 	or	r2,r9,r6
 108abf4:	103ebf26 	beq	r2,zero,108a6f4 <__adddf3+0x7c>
 108abf8:	8985883a 	add	r2,r17,r6
 108abfc:	4247883a 	add	r3,r8,r9
 108ac00:	1451803a 	cmpltu	r8,r2,r17
 108ac04:	40d1883a 	add	r8,r8,r3
 108ac08:	40c0202c 	andhi	r3,r8,128
 108ac0c:	1023883a 	mov	r17,r2
 108ac10:	183f1a26 	beq	r3,zero,108a87c <__adddf3+0x204>
 108ac14:	00bfe034 	movhi	r2,65408
 108ac18:	10bfffc4 	addi	r2,r2,-1
 108ac1c:	2021883a 	mov	r16,r4
 108ac20:	4090703a 	and	r8,r8,r2
 108ac24:	003eb306 	br	108a6f4 <__adddf3+0x7c>
 108ac28:	4444b03a 	or	r2,r8,r17
 108ac2c:	8000291e 	bne	r16,zero,108acd4 <__adddf3+0x65c>
 108ac30:	10004b1e 	bne	r2,zero,108ad60 <__adddf3+0x6e8>
 108ac34:	4990b03a 	or	r8,r9,r6
 108ac38:	40008b26 	beq	r8,zero,108ae68 <__adddf3+0x7f0>
 108ac3c:	4811883a 	mov	r8,r9
 108ac40:	3023883a 	mov	r17,r6
 108ac44:	3825883a 	mov	r18,r7
 108ac48:	003eaa06 	br	108a6f4 <__adddf3+0x7c>
 108ac4c:	1021883a 	mov	r16,r2
 108ac50:	0011883a 	mov	r8,zero
 108ac54:	0005883a 	mov	r2,zero
 108ac58:	003f0f06 	br	108a898 <__adddf3+0x220>
 108ac5c:	217ff804 	addi	r5,r4,-32
 108ac60:	00800804 	movi	r2,32
 108ac64:	494ad83a 	srl	r5,r9,r5
 108ac68:	20807d26 	beq	r4,r2,108ae60 <__adddf3+0x7e8>
 108ac6c:	00801004 	movi	r2,64
 108ac70:	1109c83a 	sub	r4,r2,r4
 108ac74:	4912983a 	sll	r9,r9,r4
 108ac78:	498cb03a 	or	r6,r9,r6
 108ac7c:	300cc03a 	cmpne	r6,r6,zero
 108ac80:	298ab03a 	or	r5,r5,r6
 108ac84:	0013883a 	mov	r9,zero
 108ac88:	003f1506 	br	108a8e0 <__adddf3+0x268>
 108ac8c:	0101ffc4 	movi	r4,2047
 108ac90:	113f9a1e 	bne	r2,r4,108aafc <__adddf3+0x484>
 108ac94:	4811883a 	mov	r8,r9
 108ac98:	3023883a 	mov	r17,r6
 108ac9c:	1021883a 	mov	r16,r2
 108aca0:	3825883a 	mov	r18,r7
 108aca4:	003e9306 	br	108a6f4 <__adddf3+0x7c>
 108aca8:	8000161e 	bne	r16,zero,108ad04 <__adddf3+0x68c>
 108acac:	444ab03a 	or	r5,r8,r17
 108acb0:	28005126 	beq	r5,zero,108adf8 <__adddf3+0x780>
 108acb4:	0108303a 	nor	r4,zero,r4
 108acb8:	20004d1e 	bne	r4,zero,108adf0 <__adddf3+0x778>
 108acbc:	89a3883a 	add	r17,r17,r6
 108acc0:	4253883a 	add	r9,r8,r9
 108acc4:	898d803a 	cmpltu	r6,r17,r6
 108acc8:	3251883a 	add	r8,r6,r9
 108accc:	1021883a 	mov	r16,r2
 108acd0:	003f0806 	br	108a8f4 <__adddf3+0x27c>
 108acd4:	1000301e 	bne	r2,zero,108ad98 <__adddf3+0x720>
 108acd8:	4984b03a 	or	r2,r9,r6
 108acdc:	10007126 	beq	r2,zero,108aea4 <__adddf3+0x82c>
 108ace0:	4811883a 	mov	r8,r9
 108ace4:	3023883a 	mov	r17,r6
 108ace8:	3825883a 	mov	r18,r7
 108acec:	0401ffc4 	movi	r16,2047
 108acf0:	003e8006 	br	108a6f4 <__adddf3+0x7c>
 108acf4:	4462b03a 	or	r17,r8,r17
 108acf8:	8822c03a 	cmpne	r17,r17,zero
 108acfc:	0007883a 	mov	r3,zero
 108ad00:	003f8b06 	br	108ab30 <__adddf3+0x4b8>
 108ad04:	0141ffc4 	movi	r5,2047
 108ad08:	11403b26 	beq	r2,r5,108adf8 <__adddf3+0x780>
 108ad0c:	0109c83a 	sub	r4,zero,r4
 108ad10:	42002034 	orhi	r8,r8,128
 108ad14:	01400e04 	movi	r5,56
 108ad18:	29006716 	blt	r5,r4,108aeb8 <__adddf3+0x840>
 108ad1c:	014007c4 	movi	r5,31
 108ad20:	29007016 	blt	r5,r4,108aee4 <__adddf3+0x86c>
 108ad24:	01400804 	movi	r5,32
 108ad28:	290bc83a 	sub	r5,r5,r4
 108ad2c:	4154983a 	sll	r10,r8,r5
 108ad30:	890ed83a 	srl	r7,r17,r4
 108ad34:	894a983a 	sll	r5,r17,r5
 108ad38:	4108d83a 	srl	r4,r8,r4
 108ad3c:	51e2b03a 	or	r17,r10,r7
 108ad40:	280ac03a 	cmpne	r5,r5,zero
 108ad44:	8962b03a 	or	r17,r17,r5
 108ad48:	89a3883a 	add	r17,r17,r6
 108ad4c:	2253883a 	add	r9,r4,r9
 108ad50:	898d803a 	cmpltu	r6,r17,r6
 108ad54:	3251883a 	add	r8,r6,r9
 108ad58:	1021883a 	mov	r16,r2
 108ad5c:	003ee506 	br	108a8f4 <__adddf3+0x27c>
 108ad60:	4984b03a 	or	r2,r9,r6
 108ad64:	103e6326 	beq	r2,zero,108a6f4 <__adddf3+0x7c>
 108ad68:	8987c83a 	sub	r3,r17,r6
 108ad6c:	88c9803a 	cmpltu	r4,r17,r3
 108ad70:	4245c83a 	sub	r2,r8,r9
 108ad74:	1105c83a 	sub	r2,r2,r4
 108ad78:	1100202c 	andhi	r4,r2,128
 108ad7c:	203ebb26 	beq	r4,zero,108a86c <__adddf3+0x1f4>
 108ad80:	3463c83a 	sub	r17,r6,r17
 108ad84:	4a07c83a 	sub	r3,r9,r8
 108ad88:	344d803a 	cmpltu	r6,r6,r17
 108ad8c:	1991c83a 	sub	r8,r3,r6
 108ad90:	3825883a 	mov	r18,r7
 108ad94:	003e5706 	br	108a6f4 <__adddf3+0x7c>
 108ad98:	4984b03a 	or	r2,r9,r6
 108ad9c:	10002e26 	beq	r2,zero,108ae58 <__adddf3+0x7e0>
 108ada0:	4004d0fa 	srli	r2,r8,3
 108ada4:	8822d0fa 	srli	r17,r17,3
 108ada8:	4010977a 	slli	r8,r8,29
 108adac:	10c0022c 	andhi	r3,r2,8
 108adb0:	4462b03a 	or	r17,r8,r17
 108adb4:	18000826 	beq	r3,zero,108add8 <__adddf3+0x760>
 108adb8:	4808d0fa 	srli	r4,r9,3
 108adbc:	20c0022c 	andhi	r3,r4,8
 108adc0:	1800051e 	bne	r3,zero,108add8 <__adddf3+0x760>
 108adc4:	300cd0fa 	srli	r6,r6,3
 108adc8:	4806977a 	slli	r3,r9,29
 108adcc:	2005883a 	mov	r2,r4
 108add0:	3825883a 	mov	r18,r7
 108add4:	19a2b03a 	or	r17,r3,r6
 108add8:	8810d77a 	srli	r8,r17,29
 108addc:	100490fa 	slli	r2,r2,3
 108ade0:	882290fa 	slli	r17,r17,3
 108ade4:	0401ffc4 	movi	r16,2047
 108ade8:	4090b03a 	or	r8,r8,r2
 108adec:	003e4106 	br	108a6f4 <__adddf3+0x7c>
 108adf0:	0141ffc4 	movi	r5,2047
 108adf4:	117fc71e 	bne	r2,r5,108ad14 <__adddf3+0x69c>
 108adf8:	4811883a 	mov	r8,r9
 108adfc:	3023883a 	mov	r17,r6
 108ae00:	1021883a 	mov	r16,r2
 108ae04:	003e3b06 	br	108a6f4 <__adddf3+0x7c>
 108ae08:	10002f26 	beq	r2,zero,108aec8 <__adddf3+0x850>
 108ae0c:	4984b03a 	or	r2,r9,r6
 108ae10:	10001126 	beq	r2,zero,108ae58 <__adddf3+0x7e0>
 108ae14:	4004d0fa 	srli	r2,r8,3
 108ae18:	8822d0fa 	srli	r17,r17,3
 108ae1c:	4010977a 	slli	r8,r8,29
 108ae20:	10c0022c 	andhi	r3,r2,8
 108ae24:	4462b03a 	or	r17,r8,r17
 108ae28:	183feb26 	beq	r3,zero,108add8 <__adddf3+0x760>
 108ae2c:	4808d0fa 	srli	r4,r9,3
 108ae30:	20c0022c 	andhi	r3,r4,8
 108ae34:	183fe81e 	bne	r3,zero,108add8 <__adddf3+0x760>
 108ae38:	300cd0fa 	srli	r6,r6,3
 108ae3c:	4806977a 	slli	r3,r9,29
 108ae40:	2005883a 	mov	r2,r4
 108ae44:	19a2b03a 	or	r17,r3,r6
 108ae48:	003fe306 	br	108add8 <__adddf3+0x760>
 108ae4c:	0011883a 	mov	r8,zero
 108ae50:	0005883a 	mov	r2,zero
 108ae54:	003e3f06 	br	108a754 <__adddf3+0xdc>
 108ae58:	0401ffc4 	movi	r16,2047
 108ae5c:	003e2506 	br	108a6f4 <__adddf3+0x7c>
 108ae60:	0013883a 	mov	r9,zero
 108ae64:	003f8406 	br	108ac78 <__adddf3+0x600>
 108ae68:	0005883a 	mov	r2,zero
 108ae6c:	0007883a 	mov	r3,zero
 108ae70:	003e8906 	br	108a898 <__adddf3+0x220>
 108ae74:	197ff804 	addi	r5,r3,-32
 108ae78:	01000804 	movi	r4,32
 108ae7c:	414ad83a 	srl	r5,r8,r5
 108ae80:	19002426 	beq	r3,r4,108af14 <__adddf3+0x89c>
 108ae84:	01001004 	movi	r4,64
 108ae88:	20c7c83a 	sub	r3,r4,r3
 108ae8c:	40c6983a 	sll	r3,r8,r3
 108ae90:	1c46b03a 	or	r3,r3,r17
 108ae94:	1806c03a 	cmpne	r3,r3,zero
 108ae98:	28e2b03a 	or	r17,r5,r3
 108ae9c:	0007883a 	mov	r3,zero
 108aea0:	003f2306 	br	108ab30 <__adddf3+0x4b8>
 108aea4:	0007883a 	mov	r3,zero
 108aea8:	5811883a 	mov	r8,r11
 108aeac:	00bfffc4 	movi	r2,-1
 108aeb0:	0401ffc4 	movi	r16,2047
 108aeb4:	003e7806 	br	108a898 <__adddf3+0x220>
 108aeb8:	4462b03a 	or	r17,r8,r17
 108aebc:	8822c03a 	cmpne	r17,r17,zero
 108aec0:	0009883a 	mov	r4,zero
 108aec4:	003fa006 	br	108ad48 <__adddf3+0x6d0>
 108aec8:	4811883a 	mov	r8,r9
 108aecc:	3023883a 	mov	r17,r6
 108aed0:	0401ffc4 	movi	r16,2047
 108aed4:	003e0706 	br	108a6f4 <__adddf3+0x7c>
 108aed8:	4811883a 	mov	r8,r9
 108aedc:	3023883a 	mov	r17,r6
 108aee0:	003e0406 	br	108a6f4 <__adddf3+0x7c>
 108aee4:	21fff804 	addi	r7,r4,-32
 108aee8:	01400804 	movi	r5,32
 108aeec:	41ced83a 	srl	r7,r8,r7
 108aef0:	21400a26 	beq	r4,r5,108af1c <__adddf3+0x8a4>
 108aef4:	01401004 	movi	r5,64
 108aef8:	2909c83a 	sub	r4,r5,r4
 108aefc:	4108983a 	sll	r4,r8,r4
 108af00:	2448b03a 	or	r4,r4,r17
 108af04:	2008c03a 	cmpne	r4,r4,zero
 108af08:	3922b03a 	or	r17,r7,r4
 108af0c:	0009883a 	mov	r4,zero
 108af10:	003f8d06 	br	108ad48 <__adddf3+0x6d0>
 108af14:	0007883a 	mov	r3,zero
 108af18:	003fdd06 	br	108ae90 <__adddf3+0x818>
 108af1c:	0009883a 	mov	r4,zero
 108af20:	003ff706 	br	108af00 <__adddf3+0x888>

0108af24 <__divdf3>:
 108af24:	defff204 	addi	sp,sp,-56
 108af28:	dd400915 	stw	r21,36(sp)
 108af2c:	282ad53a 	srli	r21,r5,20
 108af30:	dd000815 	stw	r20,32(sp)
 108af34:	2828d7fa 	srli	r20,r5,31
 108af38:	dc000415 	stw	r16,16(sp)
 108af3c:	04000434 	movhi	r16,16
 108af40:	df000c15 	stw	fp,48(sp)
 108af44:	843fffc4 	addi	r16,r16,-1
 108af48:	dfc00d15 	stw	ra,52(sp)
 108af4c:	ddc00b15 	stw	r23,44(sp)
 108af50:	dd800a15 	stw	r22,40(sp)
 108af54:	dcc00715 	stw	r19,28(sp)
 108af58:	dc800615 	stw	r18,24(sp)
 108af5c:	dc400515 	stw	r17,20(sp)
 108af60:	ad41ffcc 	andi	r21,r21,2047
 108af64:	2c20703a 	and	r16,r5,r16
 108af68:	a7003fcc 	andi	fp,r20,255
 108af6c:	a8006126 	beq	r21,zero,108b0f4 <__divdf3+0x1d0>
 108af70:	0081ffc4 	movi	r2,2047
 108af74:	2025883a 	mov	r18,r4
 108af78:	a8803726 	beq	r21,r2,108b058 <__divdf3+0x134>
 108af7c:	80800434 	orhi	r2,r16,16
 108af80:	100490fa 	slli	r2,r2,3
 108af84:	2020d77a 	srli	r16,r4,29
 108af88:	202490fa 	slli	r18,r4,3
 108af8c:	ad7f0044 	addi	r21,r21,-1023
 108af90:	80a0b03a 	or	r16,r16,r2
 108af94:	0027883a 	mov	r19,zero
 108af98:	0013883a 	mov	r9,zero
 108af9c:	3804d53a 	srli	r2,r7,20
 108afa0:	382cd7fa 	srli	r22,r7,31
 108afa4:	04400434 	movhi	r17,16
 108afa8:	8c7fffc4 	addi	r17,r17,-1
 108afac:	1081ffcc 	andi	r2,r2,2047
 108afb0:	3011883a 	mov	r8,r6
 108afb4:	3c62703a 	and	r17,r7,r17
 108afb8:	b5c03fcc 	andi	r23,r22,255
 108afbc:	10006c26 	beq	r2,zero,108b170 <__divdf3+0x24c>
 108afc0:	00c1ffc4 	movi	r3,2047
 108afc4:	10c06426 	beq	r2,r3,108b158 <__divdf3+0x234>
 108afc8:	88c00434 	orhi	r3,r17,16
 108afcc:	180690fa 	slli	r3,r3,3
 108afd0:	3022d77a 	srli	r17,r6,29
 108afd4:	301090fa 	slli	r8,r6,3
 108afd8:	10bf0044 	addi	r2,r2,-1023
 108afdc:	88e2b03a 	or	r17,r17,r3
 108afe0:	000f883a 	mov	r7,zero
 108afe4:	a58cf03a 	xor	r6,r20,r22
 108afe8:	3cc8b03a 	or	r4,r7,r19
 108afec:	a8abc83a 	sub	r21,r21,r2
 108aff0:	008003c4 	movi	r2,15
 108aff4:	3007883a 	mov	r3,r6
 108aff8:	34c03fcc 	andi	r19,r6,255
 108affc:	11009036 	bltu	r2,r4,108b240 <__divdf3+0x31c>
 108b000:	200890ba 	slli	r4,r4,2
 108b004:	00804274 	movhi	r2,265
 108b008:	10ac0604 	addi	r2,r2,-20456
 108b00c:	2089883a 	add	r4,r4,r2
 108b010:	20800017 	ldw	r2,0(r4)
 108b014:	1000683a 	jmp	r2
 108b018:	0108b240 	call	108b24 <__alt_mem_new_sdram_controller_0-0x6f74dc>
 108b01c:	0108b090 	cmplti	r4,zero,8898
 108b020:	0108b230 	cmpltui	r4,zero,8904
 108b024:	0108b084 	movi	r4,8898
 108b028:	0108b230 	cmpltui	r4,zero,8904
 108b02c:	0108b204 	movi	r4,8904
 108b030:	0108b230 	cmpltui	r4,zero,8904
 108b034:	0108b084 	movi	r4,8898
 108b038:	0108b090 	cmplti	r4,zero,8898
 108b03c:	0108b090 	cmplti	r4,zero,8898
 108b040:	0108b204 	movi	r4,8904
 108b044:	0108b084 	movi	r4,8898
 108b048:	0108b074 	movhi	r4,8897
 108b04c:	0108b074 	movhi	r4,8897
 108b050:	0108b074 	movhi	r4,8897
 108b054:	0108b524 	muli	r4,zero,8916
 108b058:	2404b03a 	or	r2,r4,r16
 108b05c:	1000661e 	bne	r2,zero,108b1f8 <__divdf3+0x2d4>
 108b060:	04c00204 	movi	r19,8
 108b064:	0021883a 	mov	r16,zero
 108b068:	0025883a 	mov	r18,zero
 108b06c:	02400084 	movi	r9,2
 108b070:	003fca06 	br	108af9c <__divdf3+0x78>
 108b074:	8023883a 	mov	r17,r16
 108b078:	9011883a 	mov	r8,r18
 108b07c:	e02f883a 	mov	r23,fp
 108b080:	480f883a 	mov	r7,r9
 108b084:	00800084 	movi	r2,2
 108b088:	3881311e 	bne	r7,r2,108b550 <__divdf3+0x62c>
 108b08c:	b827883a 	mov	r19,r23
 108b090:	98c0004c 	andi	r3,r19,1
 108b094:	0081ffc4 	movi	r2,2047
 108b098:	000b883a 	mov	r5,zero
 108b09c:	0025883a 	mov	r18,zero
 108b0a0:	1004953a 	slli	r2,r2,20
 108b0a4:	18c03fcc 	andi	r3,r3,255
 108b0a8:	04400434 	movhi	r17,16
 108b0ac:	8c7fffc4 	addi	r17,r17,-1
 108b0b0:	180697fa 	slli	r3,r3,31
 108b0b4:	2c4a703a 	and	r5,r5,r17
 108b0b8:	288ab03a 	or	r5,r5,r2
 108b0bc:	28c6b03a 	or	r3,r5,r3
 108b0c0:	9005883a 	mov	r2,r18
 108b0c4:	dfc00d17 	ldw	ra,52(sp)
 108b0c8:	df000c17 	ldw	fp,48(sp)
 108b0cc:	ddc00b17 	ldw	r23,44(sp)
 108b0d0:	dd800a17 	ldw	r22,40(sp)
 108b0d4:	dd400917 	ldw	r21,36(sp)
 108b0d8:	dd000817 	ldw	r20,32(sp)
 108b0dc:	dcc00717 	ldw	r19,28(sp)
 108b0e0:	dc800617 	ldw	r18,24(sp)
 108b0e4:	dc400517 	ldw	r17,20(sp)
 108b0e8:	dc000417 	ldw	r16,16(sp)
 108b0ec:	dec00e04 	addi	sp,sp,56
 108b0f0:	f800283a 	ret
 108b0f4:	2404b03a 	or	r2,r4,r16
 108b0f8:	2027883a 	mov	r19,r4
 108b0fc:	10003926 	beq	r2,zero,108b1e4 <__divdf3+0x2c0>
 108b100:	80012e26 	beq	r16,zero,108b5bc <__divdf3+0x698>
 108b104:	8009883a 	mov	r4,r16
 108b108:	d9800315 	stw	r6,12(sp)
 108b10c:	d9c00215 	stw	r7,8(sp)
 108b110:	108cc7c0 	call	108cc7c <__clzsi2>
 108b114:	d9800317 	ldw	r6,12(sp)
 108b118:	d9c00217 	ldw	r7,8(sp)
 108b11c:	113ffd44 	addi	r4,r2,-11
 108b120:	00c00704 	movi	r3,28
 108b124:	19012116 	blt	r3,r4,108b5ac <__divdf3+0x688>
 108b128:	00c00744 	movi	r3,29
 108b12c:	147ffe04 	addi	r17,r2,-8
 108b130:	1907c83a 	sub	r3,r3,r4
 108b134:	8460983a 	sll	r16,r16,r17
 108b138:	98c6d83a 	srl	r3,r19,r3
 108b13c:	9c64983a 	sll	r18,r19,r17
 108b140:	1c20b03a 	or	r16,r3,r16
 108b144:	1080fcc4 	addi	r2,r2,1011
 108b148:	00abc83a 	sub	r21,zero,r2
 108b14c:	0027883a 	mov	r19,zero
 108b150:	0013883a 	mov	r9,zero
 108b154:	003f9106 	br	108af9c <__divdf3+0x78>
 108b158:	3446b03a 	or	r3,r6,r17
 108b15c:	18001f1e 	bne	r3,zero,108b1dc <__divdf3+0x2b8>
 108b160:	0023883a 	mov	r17,zero
 108b164:	0011883a 	mov	r8,zero
 108b168:	01c00084 	movi	r7,2
 108b16c:	003f9d06 	br	108afe4 <__divdf3+0xc0>
 108b170:	3446b03a 	or	r3,r6,r17
 108b174:	18001526 	beq	r3,zero,108b1cc <__divdf3+0x2a8>
 108b178:	88011b26 	beq	r17,zero,108b5e8 <__divdf3+0x6c4>
 108b17c:	8809883a 	mov	r4,r17
 108b180:	d9800315 	stw	r6,12(sp)
 108b184:	da400115 	stw	r9,4(sp)
 108b188:	108cc7c0 	call	108cc7c <__clzsi2>
 108b18c:	d9800317 	ldw	r6,12(sp)
 108b190:	da400117 	ldw	r9,4(sp)
 108b194:	113ffd44 	addi	r4,r2,-11
 108b198:	00c00704 	movi	r3,28
 108b19c:	19010e16 	blt	r3,r4,108b5d8 <__divdf3+0x6b4>
 108b1a0:	00c00744 	movi	r3,29
 108b1a4:	123ffe04 	addi	r8,r2,-8
 108b1a8:	1907c83a 	sub	r3,r3,r4
 108b1ac:	8a22983a 	sll	r17,r17,r8
 108b1b0:	30c6d83a 	srl	r3,r6,r3
 108b1b4:	3210983a 	sll	r8,r6,r8
 108b1b8:	1c62b03a 	or	r17,r3,r17
 108b1bc:	1080fcc4 	addi	r2,r2,1011
 108b1c0:	0085c83a 	sub	r2,zero,r2
 108b1c4:	000f883a 	mov	r7,zero
 108b1c8:	003f8606 	br	108afe4 <__divdf3+0xc0>
 108b1cc:	0023883a 	mov	r17,zero
 108b1d0:	0011883a 	mov	r8,zero
 108b1d4:	01c00044 	movi	r7,1
 108b1d8:	003f8206 	br	108afe4 <__divdf3+0xc0>
 108b1dc:	01c000c4 	movi	r7,3
 108b1e0:	003f8006 	br	108afe4 <__divdf3+0xc0>
 108b1e4:	04c00104 	movi	r19,4
 108b1e8:	0021883a 	mov	r16,zero
 108b1ec:	0025883a 	mov	r18,zero
 108b1f0:	02400044 	movi	r9,1
 108b1f4:	003f6906 	br	108af9c <__divdf3+0x78>
 108b1f8:	04c00304 	movi	r19,12
 108b1fc:	024000c4 	movi	r9,3
 108b200:	003f6606 	br	108af9c <__divdf3+0x78>
 108b204:	01400434 	movhi	r5,16
 108b208:	0007883a 	mov	r3,zero
 108b20c:	297fffc4 	addi	r5,r5,-1
 108b210:	04bfffc4 	movi	r18,-1
 108b214:	0081ffc4 	movi	r2,2047
 108b218:	003fa106 	br	108b0a0 <__divdf3+0x17c>
 108b21c:	00c00044 	movi	r3,1
 108b220:	1887c83a 	sub	r3,r3,r2
 108b224:	01000e04 	movi	r4,56
 108b228:	20c1210e 	bge	r4,r3,108b6b0 <__divdf3+0x78c>
 108b22c:	98c0004c 	andi	r3,r19,1
 108b230:	0005883a 	mov	r2,zero
 108b234:	000b883a 	mov	r5,zero
 108b238:	0025883a 	mov	r18,zero
 108b23c:	003f9806 	br	108b0a0 <__divdf3+0x17c>
 108b240:	8c00fd36 	bltu	r17,r16,108b638 <__divdf3+0x714>
 108b244:	8440fb26 	beq	r16,r17,108b634 <__divdf3+0x710>
 108b248:	8007883a 	mov	r3,r16
 108b24c:	ad7fffc4 	addi	r21,r21,-1
 108b250:	0021883a 	mov	r16,zero
 108b254:	4004d63a 	srli	r2,r8,24
 108b258:	8822923a 	slli	r17,r17,8
 108b25c:	1809883a 	mov	r4,r3
 108b260:	402c923a 	slli	r22,r8,8
 108b264:	88b8b03a 	or	fp,r17,r2
 108b268:	e028d43a 	srli	r20,fp,16
 108b26c:	d8c00015 	stw	r3,0(sp)
 108b270:	e5ffffcc 	andi	r23,fp,65535
 108b274:	a00b883a 	mov	r5,r20
 108b278:	108a5bc0 	call	108a5bc <__udivsi3>
 108b27c:	d8c00017 	ldw	r3,0(sp)
 108b280:	a00b883a 	mov	r5,r20
 108b284:	d8800315 	stw	r2,12(sp)
 108b288:	1809883a 	mov	r4,r3
 108b28c:	108a6200 	call	108a620 <__umodsi3>
 108b290:	d9800317 	ldw	r6,12(sp)
 108b294:	1006943a 	slli	r3,r2,16
 108b298:	9004d43a 	srli	r2,r18,16
 108b29c:	b9a3383a 	mul	r17,r23,r6
 108b2a0:	10c4b03a 	or	r2,r2,r3
 108b2a4:	1440062e 	bgeu	r2,r17,108b2c0 <__divdf3+0x39c>
 108b2a8:	1705883a 	add	r2,r2,fp
 108b2ac:	30ffffc4 	addi	r3,r6,-1
 108b2b0:	1700ee36 	bltu	r2,fp,108b66c <__divdf3+0x748>
 108b2b4:	1440ed2e 	bgeu	r2,r17,108b66c <__divdf3+0x748>
 108b2b8:	31bfff84 	addi	r6,r6,-2
 108b2bc:	1705883a 	add	r2,r2,fp
 108b2c0:	1463c83a 	sub	r17,r2,r17
 108b2c4:	a00b883a 	mov	r5,r20
 108b2c8:	8809883a 	mov	r4,r17
 108b2cc:	d9800315 	stw	r6,12(sp)
 108b2d0:	108a5bc0 	call	108a5bc <__udivsi3>
 108b2d4:	a00b883a 	mov	r5,r20
 108b2d8:	8809883a 	mov	r4,r17
 108b2dc:	d8800215 	stw	r2,8(sp)
 108b2e0:	108a6200 	call	108a620 <__umodsi3>
 108b2e4:	d9c00217 	ldw	r7,8(sp)
 108b2e8:	1004943a 	slli	r2,r2,16
 108b2ec:	94bfffcc 	andi	r18,r18,65535
 108b2f0:	b9d1383a 	mul	r8,r23,r7
 108b2f4:	90a4b03a 	or	r18,r18,r2
 108b2f8:	d9800317 	ldw	r6,12(sp)
 108b2fc:	9200062e 	bgeu	r18,r8,108b318 <__divdf3+0x3f4>
 108b300:	9725883a 	add	r18,r18,fp
 108b304:	38bfffc4 	addi	r2,r7,-1
 108b308:	9700d636 	bltu	r18,fp,108b664 <__divdf3+0x740>
 108b30c:	9200d52e 	bgeu	r18,r8,108b664 <__divdf3+0x740>
 108b310:	39ffff84 	addi	r7,r7,-2
 108b314:	9725883a 	add	r18,r18,fp
 108b318:	3004943a 	slli	r2,r6,16
 108b31c:	b012d43a 	srli	r9,r22,16
 108b320:	b1bfffcc 	andi	r6,r22,65535
 108b324:	11e2b03a 	or	r17,r2,r7
 108b328:	8806d43a 	srli	r3,r17,16
 108b32c:	893fffcc 	andi	r4,r17,65535
 108b330:	218b383a 	mul	r5,r4,r6
 108b334:	30c5383a 	mul	r2,r6,r3
 108b338:	2249383a 	mul	r4,r4,r9
 108b33c:	280ed43a 	srli	r7,r5,16
 108b340:	9225c83a 	sub	r18,r18,r8
 108b344:	2089883a 	add	r4,r4,r2
 108b348:	3909883a 	add	r4,r7,r4
 108b34c:	1a47383a 	mul	r3,r3,r9
 108b350:	2080022e 	bgeu	r4,r2,108b35c <__divdf3+0x438>
 108b354:	00800074 	movhi	r2,1
 108b358:	1887883a 	add	r3,r3,r2
 108b35c:	2004d43a 	srli	r2,r4,16
 108b360:	2008943a 	slli	r4,r4,16
 108b364:	297fffcc 	andi	r5,r5,65535
 108b368:	10c7883a 	add	r3,r2,r3
 108b36c:	2149883a 	add	r4,r4,r5
 108b370:	90c0a536 	bltu	r18,r3,108b608 <__divdf3+0x6e4>
 108b374:	90c0bf26 	beq	r18,r3,108b674 <__divdf3+0x750>
 108b378:	90c7c83a 	sub	r3,r18,r3
 108b37c:	810fc83a 	sub	r7,r16,r4
 108b380:	81e5803a 	cmpltu	r18,r16,r7
 108b384:	1ca5c83a 	sub	r18,r3,r18
 108b388:	e480c126 	beq	fp,r18,108b690 <__divdf3+0x76c>
 108b38c:	a00b883a 	mov	r5,r20
 108b390:	9009883a 	mov	r4,r18
 108b394:	d9800315 	stw	r6,12(sp)
 108b398:	d9c00215 	stw	r7,8(sp)
 108b39c:	da400115 	stw	r9,4(sp)
 108b3a0:	108a5bc0 	call	108a5bc <__udivsi3>
 108b3a4:	a00b883a 	mov	r5,r20
 108b3a8:	9009883a 	mov	r4,r18
 108b3ac:	d8800015 	stw	r2,0(sp)
 108b3b0:	108a6200 	call	108a620 <__umodsi3>
 108b3b4:	d9c00217 	ldw	r7,8(sp)
 108b3b8:	da000017 	ldw	r8,0(sp)
 108b3bc:	1006943a 	slli	r3,r2,16
 108b3c0:	3804d43a 	srli	r2,r7,16
 108b3c4:	ba21383a 	mul	r16,r23,r8
 108b3c8:	d9800317 	ldw	r6,12(sp)
 108b3cc:	10c4b03a 	or	r2,r2,r3
 108b3d0:	da400117 	ldw	r9,4(sp)
 108b3d4:	1400062e 	bgeu	r2,r16,108b3f0 <__divdf3+0x4cc>
 108b3d8:	1705883a 	add	r2,r2,fp
 108b3dc:	40ffffc4 	addi	r3,r8,-1
 108b3e0:	1700ad36 	bltu	r2,fp,108b698 <__divdf3+0x774>
 108b3e4:	1400ac2e 	bgeu	r2,r16,108b698 <__divdf3+0x774>
 108b3e8:	423fff84 	addi	r8,r8,-2
 108b3ec:	1705883a 	add	r2,r2,fp
 108b3f0:	1421c83a 	sub	r16,r2,r16
 108b3f4:	a00b883a 	mov	r5,r20
 108b3f8:	8009883a 	mov	r4,r16
 108b3fc:	d9800315 	stw	r6,12(sp)
 108b400:	d9c00215 	stw	r7,8(sp)
 108b404:	da000015 	stw	r8,0(sp)
 108b408:	da400115 	stw	r9,4(sp)
 108b40c:	108a5bc0 	call	108a5bc <__udivsi3>
 108b410:	8009883a 	mov	r4,r16
 108b414:	a00b883a 	mov	r5,r20
 108b418:	1025883a 	mov	r18,r2
 108b41c:	108a6200 	call	108a620 <__umodsi3>
 108b420:	d9c00217 	ldw	r7,8(sp)
 108b424:	1004943a 	slli	r2,r2,16
 108b428:	bcaf383a 	mul	r23,r23,r18
 108b42c:	393fffcc 	andi	r4,r7,65535
 108b430:	2088b03a 	or	r4,r4,r2
 108b434:	d9800317 	ldw	r6,12(sp)
 108b438:	da000017 	ldw	r8,0(sp)
 108b43c:	da400117 	ldw	r9,4(sp)
 108b440:	25c0062e 	bgeu	r4,r23,108b45c <__divdf3+0x538>
 108b444:	2709883a 	add	r4,r4,fp
 108b448:	90bfffc4 	addi	r2,r18,-1
 108b44c:	27009436 	bltu	r4,fp,108b6a0 <__divdf3+0x77c>
 108b450:	25c0932e 	bgeu	r4,r23,108b6a0 <__divdf3+0x77c>
 108b454:	94bfff84 	addi	r18,r18,-2
 108b458:	2709883a 	add	r4,r4,fp
 108b45c:	4004943a 	slli	r2,r8,16
 108b460:	25efc83a 	sub	r23,r4,r23
 108b464:	1490b03a 	or	r8,r2,r18
 108b468:	4008d43a 	srli	r4,r8,16
 108b46c:	40ffffcc 	andi	r3,r8,65535
 108b470:	30c5383a 	mul	r2,r6,r3
 108b474:	1a47383a 	mul	r3,r3,r9
 108b478:	310d383a 	mul	r6,r6,r4
 108b47c:	100ad43a 	srli	r5,r2,16
 108b480:	4913383a 	mul	r9,r9,r4
 108b484:	1987883a 	add	r3,r3,r6
 108b488:	28c7883a 	add	r3,r5,r3
 108b48c:	1980022e 	bgeu	r3,r6,108b498 <__divdf3+0x574>
 108b490:	01000074 	movhi	r4,1
 108b494:	4913883a 	add	r9,r9,r4
 108b498:	1808d43a 	srli	r4,r3,16
 108b49c:	1806943a 	slli	r3,r3,16
 108b4a0:	10bfffcc 	andi	r2,r2,65535
 108b4a4:	2253883a 	add	r9,r4,r9
 108b4a8:	1887883a 	add	r3,r3,r2
 108b4ac:	ba403836 	bltu	r23,r9,108b590 <__divdf3+0x66c>
 108b4b0:	ba403626 	beq	r23,r9,108b58c <__divdf3+0x668>
 108b4b4:	42000054 	ori	r8,r8,1
 108b4b8:	a880ffc4 	addi	r2,r21,1023
 108b4bc:	00bf570e 	bge	zero,r2,108b21c <__divdf3+0x2f8>
 108b4c0:	40c001cc 	andi	r3,r8,7
 108b4c4:	18000726 	beq	r3,zero,108b4e4 <__divdf3+0x5c0>
 108b4c8:	40c003cc 	andi	r3,r8,15
 108b4cc:	01000104 	movi	r4,4
 108b4d0:	19000426 	beq	r3,r4,108b4e4 <__divdf3+0x5c0>
 108b4d4:	4107883a 	add	r3,r8,r4
 108b4d8:	1a11803a 	cmpltu	r8,r3,r8
 108b4dc:	8a23883a 	add	r17,r17,r8
 108b4e0:	1811883a 	mov	r8,r3
 108b4e4:	88c0402c 	andhi	r3,r17,256
 108b4e8:	18000426 	beq	r3,zero,108b4fc <__divdf3+0x5d8>
 108b4ec:	00ffc034 	movhi	r3,65280
 108b4f0:	18ffffc4 	addi	r3,r3,-1
 108b4f4:	a8810004 	addi	r2,r21,1024
 108b4f8:	88e2703a 	and	r17,r17,r3
 108b4fc:	00c1ff84 	movi	r3,2046
 108b500:	18bee316 	blt	r3,r2,108b090 <__divdf3+0x16c>
 108b504:	8824977a 	slli	r18,r17,29
 108b508:	4010d0fa 	srli	r8,r8,3
 108b50c:	8822927a 	slli	r17,r17,9
 108b510:	1081ffcc 	andi	r2,r2,2047
 108b514:	9224b03a 	or	r18,r18,r8
 108b518:	880ad33a 	srli	r5,r17,12
 108b51c:	98c0004c 	andi	r3,r19,1
 108b520:	003edf06 	br	108b0a0 <__divdf3+0x17c>
 108b524:	8080022c 	andhi	r2,r16,8
 108b528:	10001226 	beq	r2,zero,108b574 <__divdf3+0x650>
 108b52c:	8880022c 	andhi	r2,r17,8
 108b530:	1000101e 	bne	r2,zero,108b574 <__divdf3+0x650>
 108b534:	00800434 	movhi	r2,16
 108b538:	89400234 	orhi	r5,r17,8
 108b53c:	10bfffc4 	addi	r2,r2,-1
 108b540:	b007883a 	mov	r3,r22
 108b544:	288a703a 	and	r5,r5,r2
 108b548:	4025883a 	mov	r18,r8
 108b54c:	003f3106 	br	108b214 <__divdf3+0x2f0>
 108b550:	008000c4 	movi	r2,3
 108b554:	3880a626 	beq	r7,r2,108b7f0 <__divdf3+0x8cc>
 108b558:	00800044 	movi	r2,1
 108b55c:	3880521e 	bne	r7,r2,108b6a8 <__divdf3+0x784>
 108b560:	b807883a 	mov	r3,r23
 108b564:	0005883a 	mov	r2,zero
 108b568:	000b883a 	mov	r5,zero
 108b56c:	0025883a 	mov	r18,zero
 108b570:	003ecb06 	br	108b0a0 <__divdf3+0x17c>
 108b574:	00800434 	movhi	r2,16
 108b578:	81400234 	orhi	r5,r16,8
 108b57c:	10bfffc4 	addi	r2,r2,-1
 108b580:	a007883a 	mov	r3,r20
 108b584:	288a703a 	and	r5,r5,r2
 108b588:	003f2206 	br	108b214 <__divdf3+0x2f0>
 108b58c:	183fca26 	beq	r3,zero,108b4b8 <__divdf3+0x594>
 108b590:	e5ef883a 	add	r23,fp,r23
 108b594:	40bfffc4 	addi	r2,r8,-1
 108b598:	bf00392e 	bgeu	r23,fp,108b680 <__divdf3+0x75c>
 108b59c:	1011883a 	mov	r8,r2
 108b5a0:	ba7fc41e 	bne	r23,r9,108b4b4 <__divdf3+0x590>
 108b5a4:	b0ffc31e 	bne	r22,r3,108b4b4 <__divdf3+0x590>
 108b5a8:	003fc306 	br	108b4b8 <__divdf3+0x594>
 108b5ac:	143ff604 	addi	r16,r2,-40
 108b5b0:	9c20983a 	sll	r16,r19,r16
 108b5b4:	0025883a 	mov	r18,zero
 108b5b8:	003ee206 	br	108b144 <__divdf3+0x220>
 108b5bc:	d9800315 	stw	r6,12(sp)
 108b5c0:	d9c00215 	stw	r7,8(sp)
 108b5c4:	108cc7c0 	call	108cc7c <__clzsi2>
 108b5c8:	10800804 	addi	r2,r2,32
 108b5cc:	d9c00217 	ldw	r7,8(sp)
 108b5d0:	d9800317 	ldw	r6,12(sp)
 108b5d4:	003ed106 	br	108b11c <__divdf3+0x1f8>
 108b5d8:	147ff604 	addi	r17,r2,-40
 108b5dc:	3462983a 	sll	r17,r6,r17
 108b5e0:	0011883a 	mov	r8,zero
 108b5e4:	003ef506 	br	108b1bc <__divdf3+0x298>
 108b5e8:	3009883a 	mov	r4,r6
 108b5ec:	d9800315 	stw	r6,12(sp)
 108b5f0:	da400115 	stw	r9,4(sp)
 108b5f4:	108cc7c0 	call	108cc7c <__clzsi2>
 108b5f8:	10800804 	addi	r2,r2,32
 108b5fc:	da400117 	ldw	r9,4(sp)
 108b600:	d9800317 	ldw	r6,12(sp)
 108b604:	003ee306 	br	108b194 <__divdf3+0x270>
 108b608:	85a1883a 	add	r16,r16,r22
 108b60c:	8585803a 	cmpltu	r2,r16,r22
 108b610:	1705883a 	add	r2,r2,fp
 108b614:	14a5883a 	add	r18,r2,r18
 108b618:	88bfffc4 	addi	r2,r17,-1
 108b61c:	e4800c2e 	bgeu	fp,r18,108b650 <__divdf3+0x72c>
 108b620:	90c03e36 	bltu	r18,r3,108b71c <__divdf3+0x7f8>
 108b624:	1c806926 	beq	r3,r18,108b7cc <__divdf3+0x8a8>
 108b628:	90c7c83a 	sub	r3,r18,r3
 108b62c:	1023883a 	mov	r17,r2
 108b630:	003f5206 	br	108b37c <__divdf3+0x458>
 108b634:	923f0436 	bltu	r18,r8,108b248 <__divdf3+0x324>
 108b638:	800897fa 	slli	r4,r16,31
 108b63c:	9004d07a 	srli	r2,r18,1
 108b640:	8006d07a 	srli	r3,r16,1
 108b644:	902097fa 	slli	r16,r18,31
 108b648:	20a4b03a 	or	r18,r4,r2
 108b64c:	003f0106 	br	108b254 <__divdf3+0x330>
 108b650:	e4bff51e 	bne	fp,r18,108b628 <__divdf3+0x704>
 108b654:	85bff22e 	bgeu	r16,r22,108b620 <__divdf3+0x6fc>
 108b658:	e0c7c83a 	sub	r3,fp,r3
 108b65c:	1023883a 	mov	r17,r2
 108b660:	003f4606 	br	108b37c <__divdf3+0x458>
 108b664:	100f883a 	mov	r7,r2
 108b668:	003f2b06 	br	108b318 <__divdf3+0x3f4>
 108b66c:	180d883a 	mov	r6,r3
 108b670:	003f1306 	br	108b2c0 <__divdf3+0x39c>
 108b674:	813fe436 	bltu	r16,r4,108b608 <__divdf3+0x6e4>
 108b678:	0007883a 	mov	r3,zero
 108b67c:	003f3f06 	br	108b37c <__divdf3+0x458>
 108b680:	ba402c36 	bltu	r23,r9,108b734 <__divdf3+0x810>
 108b684:	4dc05426 	beq	r9,r23,108b7d8 <__divdf3+0x8b4>
 108b688:	1011883a 	mov	r8,r2
 108b68c:	003f8906 	br	108b4b4 <__divdf3+0x590>
 108b690:	023fffc4 	movi	r8,-1
 108b694:	003f8806 	br	108b4b8 <__divdf3+0x594>
 108b698:	1811883a 	mov	r8,r3
 108b69c:	003f5406 	br	108b3f0 <__divdf3+0x4cc>
 108b6a0:	1025883a 	mov	r18,r2
 108b6a4:	003f6d06 	br	108b45c <__divdf3+0x538>
 108b6a8:	b827883a 	mov	r19,r23
 108b6ac:	003f8206 	br	108b4b8 <__divdf3+0x594>
 108b6b0:	010007c4 	movi	r4,31
 108b6b4:	20c02616 	blt	r4,r3,108b750 <__divdf3+0x82c>
 108b6b8:	00800804 	movi	r2,32
 108b6bc:	10c5c83a 	sub	r2,r2,r3
 108b6c0:	888a983a 	sll	r5,r17,r2
 108b6c4:	40c8d83a 	srl	r4,r8,r3
 108b6c8:	4084983a 	sll	r2,r8,r2
 108b6cc:	88e2d83a 	srl	r17,r17,r3
 108b6d0:	2906b03a 	or	r3,r5,r4
 108b6d4:	1004c03a 	cmpne	r2,r2,zero
 108b6d8:	1886b03a 	or	r3,r3,r2
 108b6dc:	188001cc 	andi	r2,r3,7
 108b6e0:	10000726 	beq	r2,zero,108b700 <__divdf3+0x7dc>
 108b6e4:	188003cc 	andi	r2,r3,15
 108b6e8:	01000104 	movi	r4,4
 108b6ec:	11000426 	beq	r2,r4,108b700 <__divdf3+0x7dc>
 108b6f0:	1805883a 	mov	r2,r3
 108b6f4:	10c00104 	addi	r3,r2,4
 108b6f8:	1885803a 	cmpltu	r2,r3,r2
 108b6fc:	88a3883a 	add	r17,r17,r2
 108b700:	8880202c 	andhi	r2,r17,128
 108b704:	10002726 	beq	r2,zero,108b7a4 <__divdf3+0x880>
 108b708:	98c0004c 	andi	r3,r19,1
 108b70c:	00800044 	movi	r2,1
 108b710:	000b883a 	mov	r5,zero
 108b714:	0025883a 	mov	r18,zero
 108b718:	003e6106 	br	108b0a0 <__divdf3+0x17c>
 108b71c:	85a1883a 	add	r16,r16,r22
 108b720:	8585803a 	cmpltu	r2,r16,r22
 108b724:	1705883a 	add	r2,r2,fp
 108b728:	14a5883a 	add	r18,r2,r18
 108b72c:	8c7fff84 	addi	r17,r17,-2
 108b730:	003f1106 	br	108b378 <__divdf3+0x454>
 108b734:	b589883a 	add	r4,r22,r22
 108b738:	25ad803a 	cmpltu	r22,r4,r22
 108b73c:	b739883a 	add	fp,r22,fp
 108b740:	40bfff84 	addi	r2,r8,-2
 108b744:	bf2f883a 	add	r23,r23,fp
 108b748:	202d883a 	mov	r22,r4
 108b74c:	003f9306 	br	108b59c <__divdf3+0x678>
 108b750:	013ff844 	movi	r4,-31
 108b754:	2085c83a 	sub	r2,r4,r2
 108b758:	8888d83a 	srl	r4,r17,r2
 108b75c:	00800804 	movi	r2,32
 108b760:	18802126 	beq	r3,r2,108b7e8 <__divdf3+0x8c4>
 108b764:	00801004 	movi	r2,64
 108b768:	10c5c83a 	sub	r2,r2,r3
 108b76c:	8884983a 	sll	r2,r17,r2
 108b770:	1204b03a 	or	r2,r2,r8
 108b774:	1004c03a 	cmpne	r2,r2,zero
 108b778:	2084b03a 	or	r2,r4,r2
 108b77c:	144001cc 	andi	r17,r2,7
 108b780:	88000d1e 	bne	r17,zero,108b7b8 <__divdf3+0x894>
 108b784:	000b883a 	mov	r5,zero
 108b788:	1024d0fa 	srli	r18,r2,3
 108b78c:	98c0004c 	andi	r3,r19,1
 108b790:	0005883a 	mov	r2,zero
 108b794:	9464b03a 	or	r18,r18,r17
 108b798:	003e4106 	br	108b0a0 <__divdf3+0x17c>
 108b79c:	1007883a 	mov	r3,r2
 108b7a0:	0023883a 	mov	r17,zero
 108b7a4:	880a927a 	slli	r5,r17,9
 108b7a8:	1805883a 	mov	r2,r3
 108b7ac:	8822977a 	slli	r17,r17,29
 108b7b0:	280ad33a 	srli	r5,r5,12
 108b7b4:	003ff406 	br	108b788 <__divdf3+0x864>
 108b7b8:	10c003cc 	andi	r3,r2,15
 108b7bc:	01000104 	movi	r4,4
 108b7c0:	193ff626 	beq	r3,r4,108b79c <__divdf3+0x878>
 108b7c4:	0023883a 	mov	r17,zero
 108b7c8:	003fca06 	br	108b6f4 <__divdf3+0x7d0>
 108b7cc:	813fd336 	bltu	r16,r4,108b71c <__divdf3+0x7f8>
 108b7d0:	1023883a 	mov	r17,r2
 108b7d4:	003fa806 	br	108b678 <__divdf3+0x754>
 108b7d8:	b0ffd636 	bltu	r22,r3,108b734 <__divdf3+0x810>
 108b7dc:	1011883a 	mov	r8,r2
 108b7e0:	b0ff341e 	bne	r22,r3,108b4b4 <__divdf3+0x590>
 108b7e4:	003f3406 	br	108b4b8 <__divdf3+0x594>
 108b7e8:	0005883a 	mov	r2,zero
 108b7ec:	003fe006 	br	108b770 <__divdf3+0x84c>
 108b7f0:	00800434 	movhi	r2,16
 108b7f4:	89400234 	orhi	r5,r17,8
 108b7f8:	10bfffc4 	addi	r2,r2,-1
 108b7fc:	b807883a 	mov	r3,r23
 108b800:	288a703a 	and	r5,r5,r2
 108b804:	4025883a 	mov	r18,r8
 108b808:	003e8206 	br	108b214 <__divdf3+0x2f0>

0108b80c <__eqdf2>:
 108b80c:	2804d53a 	srli	r2,r5,20
 108b810:	3806d53a 	srli	r3,r7,20
 108b814:	02000434 	movhi	r8,16
 108b818:	423fffc4 	addi	r8,r8,-1
 108b81c:	1081ffcc 	andi	r2,r2,2047
 108b820:	0281ffc4 	movi	r10,2047
 108b824:	2a12703a 	and	r9,r5,r8
 108b828:	18c1ffcc 	andi	r3,r3,2047
 108b82c:	3a10703a 	and	r8,r7,r8
 108b830:	280ad7fa 	srli	r5,r5,31
 108b834:	380ed7fa 	srli	r7,r7,31
 108b838:	12801026 	beq	r2,r10,108b87c <__eqdf2+0x70>
 108b83c:	0281ffc4 	movi	r10,2047
 108b840:	1a800a26 	beq	r3,r10,108b86c <__eqdf2+0x60>
 108b844:	10c00226 	beq	r2,r3,108b850 <__eqdf2+0x44>
 108b848:	00800044 	movi	r2,1
 108b84c:	f800283a 	ret
 108b850:	4a3ffd1e 	bne	r9,r8,108b848 <__eqdf2+0x3c>
 108b854:	21bffc1e 	bne	r4,r6,108b848 <__eqdf2+0x3c>
 108b858:	29c00c26 	beq	r5,r7,108b88c <__eqdf2+0x80>
 108b85c:	103ffa1e 	bne	r2,zero,108b848 <__eqdf2+0x3c>
 108b860:	2244b03a 	or	r2,r4,r9
 108b864:	1004c03a 	cmpne	r2,r2,zero
 108b868:	f800283a 	ret
 108b86c:	3214b03a 	or	r10,r6,r8
 108b870:	503ff426 	beq	r10,zero,108b844 <__eqdf2+0x38>
 108b874:	00800044 	movi	r2,1
 108b878:	f800283a 	ret
 108b87c:	2254b03a 	or	r10,r4,r9
 108b880:	503fee26 	beq	r10,zero,108b83c <__eqdf2+0x30>
 108b884:	00800044 	movi	r2,1
 108b888:	f800283a 	ret
 108b88c:	0005883a 	mov	r2,zero
 108b890:	f800283a 	ret

0108b894 <__gedf2>:
 108b894:	2804d53a 	srli	r2,r5,20
 108b898:	3806d53a 	srli	r3,r7,20
 108b89c:	02000434 	movhi	r8,16
 108b8a0:	423fffc4 	addi	r8,r8,-1
 108b8a4:	1081ffcc 	andi	r2,r2,2047
 108b8a8:	0241ffc4 	movi	r9,2047
 108b8ac:	2a14703a 	and	r10,r5,r8
 108b8b0:	18c1ffcc 	andi	r3,r3,2047
 108b8b4:	3a10703a 	and	r8,r7,r8
 108b8b8:	280ad7fa 	srli	r5,r5,31
 108b8bc:	380ed7fa 	srli	r7,r7,31
 108b8c0:	12401d26 	beq	r2,r9,108b938 <__gedf2+0xa4>
 108b8c4:	0241ffc4 	movi	r9,2047
 108b8c8:	1a401226 	beq	r3,r9,108b914 <__gedf2+0x80>
 108b8cc:	1000081e 	bne	r2,zero,108b8f0 <__gedf2+0x5c>
 108b8d0:	2296b03a 	or	r11,r4,r10
 108b8d4:	5813003a 	cmpeq	r9,r11,zero
 108b8d8:	1800091e 	bne	r3,zero,108b900 <__gedf2+0x6c>
 108b8dc:	3218b03a 	or	r12,r6,r8
 108b8e0:	6000071e 	bne	r12,zero,108b900 <__gedf2+0x6c>
 108b8e4:	0005883a 	mov	r2,zero
 108b8e8:	5800101e 	bne	r11,zero,108b92c <__gedf2+0x98>
 108b8ec:	f800283a 	ret
 108b8f0:	18000c1e 	bne	r3,zero,108b924 <__gedf2+0x90>
 108b8f4:	3212b03a 	or	r9,r6,r8
 108b8f8:	48000c26 	beq	r9,zero,108b92c <__gedf2+0x98>
 108b8fc:	0013883a 	mov	r9,zero
 108b900:	39c03fcc 	andi	r7,r7,255
 108b904:	48000826 	beq	r9,zero,108b928 <__gedf2+0x94>
 108b908:	38000926 	beq	r7,zero,108b930 <__gedf2+0x9c>
 108b90c:	00800044 	movi	r2,1
 108b910:	f800283a 	ret
 108b914:	3212b03a 	or	r9,r6,r8
 108b918:	483fec26 	beq	r9,zero,108b8cc <__gedf2+0x38>
 108b91c:	00bfff84 	movi	r2,-2
 108b920:	f800283a 	ret
 108b924:	39c03fcc 	andi	r7,r7,255
 108b928:	29c00626 	beq	r5,r7,108b944 <__gedf2+0xb0>
 108b92c:	283ff726 	beq	r5,zero,108b90c <__gedf2+0x78>
 108b930:	00bfffc4 	movi	r2,-1
 108b934:	f800283a 	ret
 108b938:	2292b03a 	or	r9,r4,r10
 108b93c:	483fe126 	beq	r9,zero,108b8c4 <__gedf2+0x30>
 108b940:	003ff606 	br	108b91c <__gedf2+0x88>
 108b944:	18bff916 	blt	r3,r2,108b92c <__gedf2+0x98>
 108b948:	10c00316 	blt	r2,r3,108b958 <__gedf2+0xc4>
 108b94c:	42bff736 	bltu	r8,r10,108b92c <__gedf2+0x98>
 108b950:	52000326 	beq	r10,r8,108b960 <__gedf2+0xcc>
 108b954:	5200042e 	bgeu	r10,r8,108b968 <__gedf2+0xd4>
 108b958:	283fec1e 	bne	r5,zero,108b90c <__gedf2+0x78>
 108b95c:	003ff406 	br	108b930 <__gedf2+0x9c>
 108b960:	313ff236 	bltu	r6,r4,108b92c <__gedf2+0x98>
 108b964:	21bffc36 	bltu	r4,r6,108b958 <__gedf2+0xc4>
 108b968:	0005883a 	mov	r2,zero
 108b96c:	f800283a 	ret

0108b970 <__ledf2>:
 108b970:	2804d53a 	srli	r2,r5,20
 108b974:	3810d53a 	srli	r8,r7,20
 108b978:	00c00434 	movhi	r3,16
 108b97c:	18ffffc4 	addi	r3,r3,-1
 108b980:	1081ffcc 	andi	r2,r2,2047
 108b984:	0241ffc4 	movi	r9,2047
 108b988:	28d4703a 	and	r10,r5,r3
 108b98c:	4201ffcc 	andi	r8,r8,2047
 108b990:	38c6703a 	and	r3,r7,r3
 108b994:	280ad7fa 	srli	r5,r5,31
 108b998:	380ed7fa 	srli	r7,r7,31
 108b99c:	12401f26 	beq	r2,r9,108ba1c <__ledf2+0xac>
 108b9a0:	0241ffc4 	movi	r9,2047
 108b9a4:	42401426 	beq	r8,r9,108b9f8 <__ledf2+0x88>
 108b9a8:	1000091e 	bne	r2,zero,108b9d0 <__ledf2+0x60>
 108b9ac:	2296b03a 	or	r11,r4,r10
 108b9b0:	5813003a 	cmpeq	r9,r11,zero
 108b9b4:	29403fcc 	andi	r5,r5,255
 108b9b8:	40000a1e 	bne	r8,zero,108b9e4 <__ledf2+0x74>
 108b9bc:	30d8b03a 	or	r12,r6,r3
 108b9c0:	6000081e 	bne	r12,zero,108b9e4 <__ledf2+0x74>
 108b9c4:	0005883a 	mov	r2,zero
 108b9c8:	5800111e 	bne	r11,zero,108ba10 <__ledf2+0xa0>
 108b9cc:	f800283a 	ret
 108b9d0:	29403fcc 	andi	r5,r5,255
 108b9d4:	40000c1e 	bne	r8,zero,108ba08 <__ledf2+0x98>
 108b9d8:	30d2b03a 	or	r9,r6,r3
 108b9dc:	48000c26 	beq	r9,zero,108ba10 <__ledf2+0xa0>
 108b9e0:	0013883a 	mov	r9,zero
 108b9e4:	39c03fcc 	andi	r7,r7,255
 108b9e8:	48000826 	beq	r9,zero,108ba0c <__ledf2+0x9c>
 108b9ec:	38001126 	beq	r7,zero,108ba34 <__ledf2+0xc4>
 108b9f0:	00800044 	movi	r2,1
 108b9f4:	f800283a 	ret
 108b9f8:	30d2b03a 	or	r9,r6,r3
 108b9fc:	483fea26 	beq	r9,zero,108b9a8 <__ledf2+0x38>
 108ba00:	00800084 	movi	r2,2
 108ba04:	f800283a 	ret
 108ba08:	39c03fcc 	andi	r7,r7,255
 108ba0c:	39400726 	beq	r7,r5,108ba2c <__ledf2+0xbc>
 108ba10:	2800081e 	bne	r5,zero,108ba34 <__ledf2+0xc4>
 108ba14:	00800044 	movi	r2,1
 108ba18:	f800283a 	ret
 108ba1c:	2292b03a 	or	r9,r4,r10
 108ba20:	483fdf26 	beq	r9,zero,108b9a0 <__ledf2+0x30>
 108ba24:	00800084 	movi	r2,2
 108ba28:	f800283a 	ret
 108ba2c:	4080030e 	bge	r8,r2,108ba3c <__ledf2+0xcc>
 108ba30:	383fef26 	beq	r7,zero,108b9f0 <__ledf2+0x80>
 108ba34:	00bfffc4 	movi	r2,-1
 108ba38:	f800283a 	ret
 108ba3c:	123feb16 	blt	r2,r8,108b9ec <__ledf2+0x7c>
 108ba40:	1abff336 	bltu	r3,r10,108ba10 <__ledf2+0xa0>
 108ba44:	50c00326 	beq	r10,r3,108ba54 <__ledf2+0xe4>
 108ba48:	50c0042e 	bgeu	r10,r3,108ba5c <__ledf2+0xec>
 108ba4c:	283fe81e 	bne	r5,zero,108b9f0 <__ledf2+0x80>
 108ba50:	003ff806 	br	108ba34 <__ledf2+0xc4>
 108ba54:	313fee36 	bltu	r6,r4,108ba10 <__ledf2+0xa0>
 108ba58:	21bffc36 	bltu	r4,r6,108ba4c <__ledf2+0xdc>
 108ba5c:	0005883a 	mov	r2,zero
 108ba60:	f800283a 	ret

0108ba64 <__muldf3>:
 108ba64:	defff304 	addi	sp,sp,-52
 108ba68:	2804d53a 	srli	r2,r5,20
 108ba6c:	dd800915 	stw	r22,36(sp)
 108ba70:	282cd7fa 	srli	r22,r5,31
 108ba74:	dc000315 	stw	r16,12(sp)
 108ba78:	04000434 	movhi	r16,16
 108ba7c:	dd400815 	stw	r21,32(sp)
 108ba80:	dc800515 	stw	r18,20(sp)
 108ba84:	843fffc4 	addi	r16,r16,-1
 108ba88:	dfc00c15 	stw	ra,48(sp)
 108ba8c:	df000b15 	stw	fp,44(sp)
 108ba90:	ddc00a15 	stw	r23,40(sp)
 108ba94:	dd000715 	stw	r20,28(sp)
 108ba98:	dcc00615 	stw	r19,24(sp)
 108ba9c:	dc400415 	stw	r17,16(sp)
 108baa0:	1481ffcc 	andi	r18,r2,2047
 108baa4:	2c20703a 	and	r16,r5,r16
 108baa8:	b02b883a 	mov	r21,r22
 108baac:	b2403fcc 	andi	r9,r22,255
 108bab0:	90006026 	beq	r18,zero,108bc34 <__muldf3+0x1d0>
 108bab4:	0081ffc4 	movi	r2,2047
 108bab8:	2029883a 	mov	r20,r4
 108babc:	90803626 	beq	r18,r2,108bb98 <__muldf3+0x134>
 108bac0:	80800434 	orhi	r2,r16,16
 108bac4:	100490fa 	slli	r2,r2,3
 108bac8:	2020d77a 	srli	r16,r4,29
 108bacc:	202890fa 	slli	r20,r4,3
 108bad0:	94bf0044 	addi	r18,r18,-1023
 108bad4:	80a0b03a 	or	r16,r16,r2
 108bad8:	0027883a 	mov	r19,zero
 108badc:	0039883a 	mov	fp,zero
 108bae0:	3804d53a 	srli	r2,r7,20
 108bae4:	382ed7fa 	srli	r23,r7,31
 108bae8:	04400434 	movhi	r17,16
 108baec:	8c7fffc4 	addi	r17,r17,-1
 108baf0:	1081ffcc 	andi	r2,r2,2047
 108baf4:	3011883a 	mov	r8,r6
 108baf8:	3c62703a 	and	r17,r7,r17
 108bafc:	ba803fcc 	andi	r10,r23,255
 108bb00:	10006d26 	beq	r2,zero,108bcb8 <__muldf3+0x254>
 108bb04:	00c1ffc4 	movi	r3,2047
 108bb08:	10c06526 	beq	r2,r3,108bca0 <__muldf3+0x23c>
 108bb0c:	88c00434 	orhi	r3,r17,16
 108bb10:	180690fa 	slli	r3,r3,3
 108bb14:	3022d77a 	srli	r17,r6,29
 108bb18:	301090fa 	slli	r8,r6,3
 108bb1c:	10bf0044 	addi	r2,r2,-1023
 108bb20:	88e2b03a 	or	r17,r17,r3
 108bb24:	000b883a 	mov	r5,zero
 108bb28:	9085883a 	add	r2,r18,r2
 108bb2c:	2cc8b03a 	or	r4,r5,r19
 108bb30:	00c003c4 	movi	r3,15
 108bb34:	bdacf03a 	xor	r22,r23,r22
 108bb38:	12c00044 	addi	r11,r2,1
 108bb3c:	19009936 	bltu	r3,r4,108bda4 <__muldf3+0x340>
 108bb40:	200890ba 	slli	r4,r4,2
 108bb44:	00c04274 	movhi	r3,265
 108bb48:	18eed604 	addi	r3,r3,-17576
 108bb4c:	20c9883a 	add	r4,r4,r3
 108bb50:	20c00017 	ldw	r3,0(r4)
 108bb54:	1800683a 	jmp	r3
 108bb58:	0108bda4 	muli	r4,zero,8950
 108bb5c:	0108bbb8 	rdprs	r4,zero,8942
 108bb60:	0108bbb8 	rdprs	r4,zero,8942
 108bb64:	0108bbb4 	movhi	r4,8942
 108bb68:	0108bd80 	call	108bd8 <__alt_mem_new_sdram_controller_0-0x6f7428>
 108bb6c:	0108bd80 	call	108bd8 <__alt_mem_new_sdram_controller_0-0x6f7428>
 108bb70:	0108bd68 	cmpgeui	r4,zero,8949
 108bb74:	0108bbb4 	movhi	r4,8942
 108bb78:	0108bd80 	call	108bd8 <__alt_mem_new_sdram_controller_0-0x6f7428>
 108bb7c:	0108bd68 	cmpgeui	r4,zero,8949
 108bb80:	0108bd80 	call	108bd8 <__alt_mem_new_sdram_controller_0-0x6f7428>
 108bb84:	0108bbb4 	movhi	r4,8942
 108bb88:	0108bd90 	cmplti	r4,zero,8950
 108bb8c:	0108bd90 	cmplti	r4,zero,8950
 108bb90:	0108bd90 	cmplti	r4,zero,8950
 108bb94:	0108bfac 	andhi	r4,zero,8958
 108bb98:	2404b03a 	or	r2,r4,r16
 108bb9c:	10006f1e 	bne	r2,zero,108bd5c <__muldf3+0x2f8>
 108bba0:	04c00204 	movi	r19,8
 108bba4:	0021883a 	mov	r16,zero
 108bba8:	0029883a 	mov	r20,zero
 108bbac:	07000084 	movi	fp,2
 108bbb0:	003fcb06 	br	108bae0 <__muldf3+0x7c>
 108bbb4:	502d883a 	mov	r22,r10
 108bbb8:	00800084 	movi	r2,2
 108bbbc:	28805726 	beq	r5,r2,108bd1c <__muldf3+0x2b8>
 108bbc0:	008000c4 	movi	r2,3
 108bbc4:	28816626 	beq	r5,r2,108c160 <__muldf3+0x6fc>
 108bbc8:	00800044 	movi	r2,1
 108bbcc:	2881411e 	bne	r5,r2,108c0d4 <__muldf3+0x670>
 108bbd0:	b02b883a 	mov	r21,r22
 108bbd4:	0005883a 	mov	r2,zero
 108bbd8:	000b883a 	mov	r5,zero
 108bbdc:	0029883a 	mov	r20,zero
 108bbe0:	1004953a 	slli	r2,r2,20
 108bbe4:	a8c03fcc 	andi	r3,r21,255
 108bbe8:	04400434 	movhi	r17,16
 108bbec:	8c7fffc4 	addi	r17,r17,-1
 108bbf0:	180697fa 	slli	r3,r3,31
 108bbf4:	2c4a703a 	and	r5,r5,r17
 108bbf8:	288ab03a 	or	r5,r5,r2
 108bbfc:	28c6b03a 	or	r3,r5,r3
 108bc00:	a005883a 	mov	r2,r20
 108bc04:	dfc00c17 	ldw	ra,48(sp)
 108bc08:	df000b17 	ldw	fp,44(sp)
 108bc0c:	ddc00a17 	ldw	r23,40(sp)
 108bc10:	dd800917 	ldw	r22,36(sp)
 108bc14:	dd400817 	ldw	r21,32(sp)
 108bc18:	dd000717 	ldw	r20,28(sp)
 108bc1c:	dcc00617 	ldw	r19,24(sp)
 108bc20:	dc800517 	ldw	r18,20(sp)
 108bc24:	dc400417 	ldw	r17,16(sp)
 108bc28:	dc000317 	ldw	r16,12(sp)
 108bc2c:	dec00d04 	addi	sp,sp,52
 108bc30:	f800283a 	ret
 108bc34:	2404b03a 	or	r2,r4,r16
 108bc38:	2027883a 	mov	r19,r4
 108bc3c:	10004226 	beq	r2,zero,108bd48 <__muldf3+0x2e4>
 108bc40:	8000fc26 	beq	r16,zero,108c034 <__muldf3+0x5d0>
 108bc44:	8009883a 	mov	r4,r16
 108bc48:	d9800215 	stw	r6,8(sp)
 108bc4c:	d9c00015 	stw	r7,0(sp)
 108bc50:	da400115 	stw	r9,4(sp)
 108bc54:	108cc7c0 	call	108cc7c <__clzsi2>
 108bc58:	d9800217 	ldw	r6,8(sp)
 108bc5c:	d9c00017 	ldw	r7,0(sp)
 108bc60:	da400117 	ldw	r9,4(sp)
 108bc64:	113ffd44 	addi	r4,r2,-11
 108bc68:	00c00704 	movi	r3,28
 108bc6c:	1900ed16 	blt	r3,r4,108c024 <__muldf3+0x5c0>
 108bc70:	00c00744 	movi	r3,29
 108bc74:	147ffe04 	addi	r17,r2,-8
 108bc78:	1907c83a 	sub	r3,r3,r4
 108bc7c:	8460983a 	sll	r16,r16,r17
 108bc80:	98c6d83a 	srl	r3,r19,r3
 108bc84:	9c68983a 	sll	r20,r19,r17
 108bc88:	1c20b03a 	or	r16,r3,r16
 108bc8c:	1080fcc4 	addi	r2,r2,1011
 108bc90:	00a5c83a 	sub	r18,zero,r2
 108bc94:	0027883a 	mov	r19,zero
 108bc98:	0039883a 	mov	fp,zero
 108bc9c:	003f9006 	br	108bae0 <__muldf3+0x7c>
 108bca0:	3446b03a 	or	r3,r6,r17
 108bca4:	1800261e 	bne	r3,zero,108bd40 <__muldf3+0x2dc>
 108bca8:	0023883a 	mov	r17,zero
 108bcac:	0011883a 	mov	r8,zero
 108bcb0:	01400084 	movi	r5,2
 108bcb4:	003f9c06 	br	108bb28 <__muldf3+0xc4>
 108bcb8:	3446b03a 	or	r3,r6,r17
 108bcbc:	18001c26 	beq	r3,zero,108bd30 <__muldf3+0x2cc>
 108bcc0:	8800ce26 	beq	r17,zero,108bffc <__muldf3+0x598>
 108bcc4:	8809883a 	mov	r4,r17
 108bcc8:	d9800215 	stw	r6,8(sp)
 108bccc:	da400115 	stw	r9,4(sp)
 108bcd0:	da800015 	stw	r10,0(sp)
 108bcd4:	108cc7c0 	call	108cc7c <__clzsi2>
 108bcd8:	d9800217 	ldw	r6,8(sp)
 108bcdc:	da400117 	ldw	r9,4(sp)
 108bce0:	da800017 	ldw	r10,0(sp)
 108bce4:	113ffd44 	addi	r4,r2,-11
 108bce8:	00c00704 	movi	r3,28
 108bcec:	1900bf16 	blt	r3,r4,108bfec <__muldf3+0x588>
 108bcf0:	00c00744 	movi	r3,29
 108bcf4:	123ffe04 	addi	r8,r2,-8
 108bcf8:	1907c83a 	sub	r3,r3,r4
 108bcfc:	8a22983a 	sll	r17,r17,r8
 108bd00:	30c6d83a 	srl	r3,r6,r3
 108bd04:	3210983a 	sll	r8,r6,r8
 108bd08:	1c62b03a 	or	r17,r3,r17
 108bd0c:	1080fcc4 	addi	r2,r2,1011
 108bd10:	0085c83a 	sub	r2,zero,r2
 108bd14:	000b883a 	mov	r5,zero
 108bd18:	003f8306 	br	108bb28 <__muldf3+0xc4>
 108bd1c:	b02b883a 	mov	r21,r22
 108bd20:	0081ffc4 	movi	r2,2047
 108bd24:	000b883a 	mov	r5,zero
 108bd28:	0029883a 	mov	r20,zero
 108bd2c:	003fac06 	br	108bbe0 <__muldf3+0x17c>
 108bd30:	0023883a 	mov	r17,zero
 108bd34:	0011883a 	mov	r8,zero
 108bd38:	01400044 	movi	r5,1
 108bd3c:	003f7a06 	br	108bb28 <__muldf3+0xc4>
 108bd40:	014000c4 	movi	r5,3
 108bd44:	003f7806 	br	108bb28 <__muldf3+0xc4>
 108bd48:	04c00104 	movi	r19,4
 108bd4c:	0021883a 	mov	r16,zero
 108bd50:	0029883a 	mov	r20,zero
 108bd54:	07000044 	movi	fp,1
 108bd58:	003f6106 	br	108bae0 <__muldf3+0x7c>
 108bd5c:	04c00304 	movi	r19,12
 108bd60:	070000c4 	movi	fp,3
 108bd64:	003f5e06 	br	108bae0 <__muldf3+0x7c>
 108bd68:	01400434 	movhi	r5,16
 108bd6c:	002b883a 	mov	r21,zero
 108bd70:	297fffc4 	addi	r5,r5,-1
 108bd74:	053fffc4 	movi	r20,-1
 108bd78:	0081ffc4 	movi	r2,2047
 108bd7c:	003f9806 	br	108bbe0 <__muldf3+0x17c>
 108bd80:	8023883a 	mov	r17,r16
 108bd84:	a011883a 	mov	r8,r20
 108bd88:	e00b883a 	mov	r5,fp
 108bd8c:	003f8a06 	br	108bbb8 <__muldf3+0x154>
 108bd90:	8023883a 	mov	r17,r16
 108bd94:	a011883a 	mov	r8,r20
 108bd98:	482d883a 	mov	r22,r9
 108bd9c:	e00b883a 	mov	r5,fp
 108bda0:	003f8506 	br	108bbb8 <__muldf3+0x154>
 108bda4:	a00ad43a 	srli	r5,r20,16
 108bda8:	401ad43a 	srli	r13,r8,16
 108bdac:	a53fffcc 	andi	r20,r20,65535
 108bdb0:	423fffcc 	andi	r8,r8,65535
 108bdb4:	4519383a 	mul	r12,r8,r20
 108bdb8:	4147383a 	mul	r3,r8,r5
 108bdbc:	6d09383a 	mul	r4,r13,r20
 108bdc0:	600cd43a 	srli	r6,r12,16
 108bdc4:	2b5d383a 	mul	r14,r5,r13
 108bdc8:	20c9883a 	add	r4,r4,r3
 108bdcc:	310d883a 	add	r6,r6,r4
 108bdd0:	30c0022e 	bgeu	r6,r3,108bddc <__muldf3+0x378>
 108bdd4:	00c00074 	movhi	r3,1
 108bdd8:	70dd883a 	add	r14,r14,r3
 108bddc:	8826d43a 	srli	r19,r17,16
 108bde0:	8bffffcc 	andi	r15,r17,65535
 108bde4:	7d23383a 	mul	r17,r15,r20
 108bde8:	7949383a 	mul	r4,r15,r5
 108bdec:	9d29383a 	mul	r20,r19,r20
 108bdf0:	8814d43a 	srli	r10,r17,16
 108bdf4:	3012943a 	slli	r9,r6,16
 108bdf8:	a129883a 	add	r20,r20,r4
 108bdfc:	633fffcc 	andi	r12,r12,65535
 108be00:	5515883a 	add	r10,r10,r20
 108be04:	3006d43a 	srli	r3,r6,16
 108be08:	4b13883a 	add	r9,r9,r12
 108be0c:	2ccb383a 	mul	r5,r5,r19
 108be10:	5100022e 	bgeu	r10,r4,108be1c <__muldf3+0x3b8>
 108be14:	01000074 	movhi	r4,1
 108be18:	290b883a 	add	r5,r5,r4
 108be1c:	802ad43a 	srli	r21,r16,16
 108be20:	843fffcc 	andi	r16,r16,65535
 108be24:	440d383a 	mul	r6,r8,r16
 108be28:	4565383a 	mul	r18,r8,r21
 108be2c:	8349383a 	mul	r4,r16,r13
 108be30:	500e943a 	slli	r7,r10,16
 108be34:	3010d43a 	srli	r8,r6,16
 108be38:	5028d43a 	srli	r20,r10,16
 108be3c:	2489883a 	add	r4,r4,r18
 108be40:	8abfffcc 	andi	r10,r17,65535
 108be44:	3a95883a 	add	r10,r7,r10
 108be48:	4119883a 	add	r12,r8,r4
 108be4c:	a169883a 	add	r20,r20,r5
 108be50:	1a87883a 	add	r3,r3,r10
 108be54:	6d5b383a 	mul	r13,r13,r21
 108be58:	6480022e 	bgeu	r12,r18,108be64 <__muldf3+0x400>
 108be5c:	01000074 	movhi	r4,1
 108be60:	691b883a 	add	r13,r13,r4
 108be64:	7c25383a 	mul	r18,r15,r16
 108be68:	7d4b383a 	mul	r5,r15,r21
 108be6c:	84cf383a 	mul	r7,r16,r19
 108be70:	901ed43a 	srli	r15,r18,16
 108be74:	6008d43a 	srli	r4,r12,16
 108be78:	6010943a 	slli	r8,r12,16
 108be7c:	394f883a 	add	r7,r7,r5
 108be80:	333fffcc 	andi	r12,r6,65535
 108be84:	79df883a 	add	r15,r15,r7
 108be88:	235b883a 	add	r13,r4,r13
 108be8c:	9d63383a 	mul	r17,r19,r21
 108be90:	4309883a 	add	r4,r8,r12
 108be94:	7940022e 	bgeu	r15,r5,108bea0 <__muldf3+0x43c>
 108be98:	01400074 	movhi	r5,1
 108be9c:	8963883a 	add	r17,r17,r5
 108bea0:	780a943a 	slli	r5,r15,16
 108bea4:	91bfffcc 	andi	r6,r18,65535
 108bea8:	70c7883a 	add	r3,r14,r3
 108beac:	298d883a 	add	r6,r5,r6
 108beb0:	1a8f803a 	cmpltu	r7,r3,r10
 108beb4:	350b883a 	add	r5,r6,r20
 108beb8:	20c7883a 	add	r3,r4,r3
 108bebc:	3955883a 	add	r10,r7,r5
 108bec0:	1909803a 	cmpltu	r4,r3,r4
 108bec4:	6a91883a 	add	r8,r13,r10
 108bec8:	780cd43a 	srli	r6,r15,16
 108becc:	2219883a 	add	r12,r4,r8
 108bed0:	2d0b803a 	cmpltu	r5,r5,r20
 108bed4:	51cf803a 	cmpltu	r7,r10,r7
 108bed8:	29ceb03a 	or	r7,r5,r7
 108bedc:	4351803a 	cmpltu	r8,r8,r13
 108bee0:	610b803a 	cmpltu	r5,r12,r4
 108bee4:	4148b03a 	or	r4,r8,r5
 108bee8:	398f883a 	add	r7,r7,r6
 108beec:	3909883a 	add	r4,r7,r4
 108bef0:	1810927a 	slli	r8,r3,9
 108bef4:	2449883a 	add	r4,r4,r17
 108bef8:	2008927a 	slli	r4,r4,9
 108befc:	6022d5fa 	srli	r17,r12,23
 108bf00:	1806d5fa 	srli	r3,r3,23
 108bf04:	4252b03a 	or	r9,r8,r9
 108bf08:	600a927a 	slli	r5,r12,9
 108bf0c:	4810c03a 	cmpne	r8,r9,zero
 108bf10:	2462b03a 	or	r17,r4,r17
 108bf14:	40c6b03a 	or	r3,r8,r3
 108bf18:	8900402c 	andhi	r4,r17,256
 108bf1c:	1950b03a 	or	r8,r3,r5
 108bf20:	20000726 	beq	r4,zero,108bf40 <__muldf3+0x4dc>
 108bf24:	4006d07a 	srli	r3,r8,1
 108bf28:	880497fa 	slli	r2,r17,31
 108bf2c:	4200004c 	andi	r8,r8,1
 108bf30:	8822d07a 	srli	r17,r17,1
 108bf34:	1a10b03a 	or	r8,r3,r8
 108bf38:	1210b03a 	or	r8,r2,r8
 108bf3c:	5805883a 	mov	r2,r11
 108bf40:	1140ffc4 	addi	r5,r2,1023
 108bf44:	0140440e 	bge	zero,r5,108c058 <__muldf3+0x5f4>
 108bf48:	40c001cc 	andi	r3,r8,7
 108bf4c:	18000726 	beq	r3,zero,108bf6c <__muldf3+0x508>
 108bf50:	40c003cc 	andi	r3,r8,15
 108bf54:	01000104 	movi	r4,4
 108bf58:	19000426 	beq	r3,r4,108bf6c <__muldf3+0x508>
 108bf5c:	4107883a 	add	r3,r8,r4
 108bf60:	1a11803a 	cmpltu	r8,r3,r8
 108bf64:	8a23883a 	add	r17,r17,r8
 108bf68:	1811883a 	mov	r8,r3
 108bf6c:	88c0402c 	andhi	r3,r17,256
 108bf70:	18000426 	beq	r3,zero,108bf84 <__muldf3+0x520>
 108bf74:	11410004 	addi	r5,r2,1024
 108bf78:	00bfc034 	movhi	r2,65280
 108bf7c:	10bfffc4 	addi	r2,r2,-1
 108bf80:	88a2703a 	and	r17,r17,r2
 108bf84:	0081ff84 	movi	r2,2046
 108bf88:	117f6416 	blt	r2,r5,108bd1c <__muldf3+0x2b8>
 108bf8c:	8828977a 	slli	r20,r17,29
 108bf90:	4010d0fa 	srli	r8,r8,3
 108bf94:	8822927a 	slli	r17,r17,9
 108bf98:	2881ffcc 	andi	r2,r5,2047
 108bf9c:	a228b03a 	or	r20,r20,r8
 108bfa0:	880ad33a 	srli	r5,r17,12
 108bfa4:	b02b883a 	mov	r21,r22
 108bfa8:	003f0d06 	br	108bbe0 <__muldf3+0x17c>
 108bfac:	8080022c 	andhi	r2,r16,8
 108bfb0:	10000926 	beq	r2,zero,108bfd8 <__muldf3+0x574>
 108bfb4:	8880022c 	andhi	r2,r17,8
 108bfb8:	1000071e 	bne	r2,zero,108bfd8 <__muldf3+0x574>
 108bfbc:	00800434 	movhi	r2,16
 108bfc0:	89400234 	orhi	r5,r17,8
 108bfc4:	10bfffc4 	addi	r2,r2,-1
 108bfc8:	b82b883a 	mov	r21,r23
 108bfcc:	288a703a 	and	r5,r5,r2
 108bfd0:	4029883a 	mov	r20,r8
 108bfd4:	003f6806 	br	108bd78 <__muldf3+0x314>
 108bfd8:	00800434 	movhi	r2,16
 108bfdc:	81400234 	orhi	r5,r16,8
 108bfe0:	10bfffc4 	addi	r2,r2,-1
 108bfe4:	288a703a 	and	r5,r5,r2
 108bfe8:	003f6306 	br	108bd78 <__muldf3+0x314>
 108bfec:	147ff604 	addi	r17,r2,-40
 108bff0:	3462983a 	sll	r17,r6,r17
 108bff4:	0011883a 	mov	r8,zero
 108bff8:	003f4406 	br	108bd0c <__muldf3+0x2a8>
 108bffc:	3009883a 	mov	r4,r6
 108c000:	d9800215 	stw	r6,8(sp)
 108c004:	da400115 	stw	r9,4(sp)
 108c008:	da800015 	stw	r10,0(sp)
 108c00c:	108cc7c0 	call	108cc7c <__clzsi2>
 108c010:	10800804 	addi	r2,r2,32
 108c014:	da800017 	ldw	r10,0(sp)
 108c018:	da400117 	ldw	r9,4(sp)
 108c01c:	d9800217 	ldw	r6,8(sp)
 108c020:	003f3006 	br	108bce4 <__muldf3+0x280>
 108c024:	143ff604 	addi	r16,r2,-40
 108c028:	9c20983a 	sll	r16,r19,r16
 108c02c:	0029883a 	mov	r20,zero
 108c030:	003f1606 	br	108bc8c <__muldf3+0x228>
 108c034:	d9800215 	stw	r6,8(sp)
 108c038:	d9c00015 	stw	r7,0(sp)
 108c03c:	da400115 	stw	r9,4(sp)
 108c040:	108cc7c0 	call	108cc7c <__clzsi2>
 108c044:	10800804 	addi	r2,r2,32
 108c048:	da400117 	ldw	r9,4(sp)
 108c04c:	d9c00017 	ldw	r7,0(sp)
 108c050:	d9800217 	ldw	r6,8(sp)
 108c054:	003f0306 	br	108bc64 <__muldf3+0x200>
 108c058:	00c00044 	movi	r3,1
 108c05c:	1947c83a 	sub	r3,r3,r5
 108c060:	00800e04 	movi	r2,56
 108c064:	10feda16 	blt	r2,r3,108bbd0 <__muldf3+0x16c>
 108c068:	008007c4 	movi	r2,31
 108c06c:	10c01b16 	blt	r2,r3,108c0dc <__muldf3+0x678>
 108c070:	00800804 	movi	r2,32
 108c074:	10c5c83a 	sub	r2,r2,r3
 108c078:	888a983a 	sll	r5,r17,r2
 108c07c:	40c8d83a 	srl	r4,r8,r3
 108c080:	4084983a 	sll	r2,r8,r2
 108c084:	88e2d83a 	srl	r17,r17,r3
 108c088:	2906b03a 	or	r3,r5,r4
 108c08c:	1004c03a 	cmpne	r2,r2,zero
 108c090:	1886b03a 	or	r3,r3,r2
 108c094:	188001cc 	andi	r2,r3,7
 108c098:	10000726 	beq	r2,zero,108c0b8 <__muldf3+0x654>
 108c09c:	188003cc 	andi	r2,r3,15
 108c0a0:	01000104 	movi	r4,4
 108c0a4:	11000426 	beq	r2,r4,108c0b8 <__muldf3+0x654>
 108c0a8:	1805883a 	mov	r2,r3
 108c0ac:	10c00104 	addi	r3,r2,4
 108c0b0:	1885803a 	cmpltu	r2,r3,r2
 108c0b4:	88a3883a 	add	r17,r17,r2
 108c0b8:	8880202c 	andhi	r2,r17,128
 108c0bc:	10001c26 	beq	r2,zero,108c130 <__muldf3+0x6cc>
 108c0c0:	b02b883a 	mov	r21,r22
 108c0c4:	00800044 	movi	r2,1
 108c0c8:	000b883a 	mov	r5,zero
 108c0cc:	0029883a 	mov	r20,zero
 108c0d0:	003ec306 	br	108bbe0 <__muldf3+0x17c>
 108c0d4:	5805883a 	mov	r2,r11
 108c0d8:	003f9906 	br	108bf40 <__muldf3+0x4dc>
 108c0dc:	00bff844 	movi	r2,-31
 108c0e0:	1145c83a 	sub	r2,r2,r5
 108c0e4:	8888d83a 	srl	r4,r17,r2
 108c0e8:	00800804 	movi	r2,32
 108c0ec:	18801a26 	beq	r3,r2,108c158 <__muldf3+0x6f4>
 108c0f0:	00801004 	movi	r2,64
 108c0f4:	10c5c83a 	sub	r2,r2,r3
 108c0f8:	8884983a 	sll	r2,r17,r2
 108c0fc:	1204b03a 	or	r2,r2,r8
 108c100:	1004c03a 	cmpne	r2,r2,zero
 108c104:	2084b03a 	or	r2,r4,r2
 108c108:	144001cc 	andi	r17,r2,7
 108c10c:	88000d1e 	bne	r17,zero,108c144 <__muldf3+0x6e0>
 108c110:	000b883a 	mov	r5,zero
 108c114:	1028d0fa 	srli	r20,r2,3
 108c118:	b02b883a 	mov	r21,r22
 108c11c:	0005883a 	mov	r2,zero
 108c120:	a468b03a 	or	r20,r20,r17
 108c124:	003eae06 	br	108bbe0 <__muldf3+0x17c>
 108c128:	1007883a 	mov	r3,r2
 108c12c:	0023883a 	mov	r17,zero
 108c130:	880a927a 	slli	r5,r17,9
 108c134:	1805883a 	mov	r2,r3
 108c138:	8822977a 	slli	r17,r17,29
 108c13c:	280ad33a 	srli	r5,r5,12
 108c140:	003ff406 	br	108c114 <__muldf3+0x6b0>
 108c144:	10c003cc 	andi	r3,r2,15
 108c148:	01000104 	movi	r4,4
 108c14c:	193ff626 	beq	r3,r4,108c128 <__muldf3+0x6c4>
 108c150:	0023883a 	mov	r17,zero
 108c154:	003fd506 	br	108c0ac <__muldf3+0x648>
 108c158:	0005883a 	mov	r2,zero
 108c15c:	003fe706 	br	108c0fc <__muldf3+0x698>
 108c160:	00800434 	movhi	r2,16
 108c164:	89400234 	orhi	r5,r17,8
 108c168:	10bfffc4 	addi	r2,r2,-1
 108c16c:	b02b883a 	mov	r21,r22
 108c170:	288a703a 	and	r5,r5,r2
 108c174:	4029883a 	mov	r20,r8
 108c178:	003eff06 	br	108bd78 <__muldf3+0x314>

0108c17c <__subdf3>:
 108c17c:	02000434 	movhi	r8,16
 108c180:	423fffc4 	addi	r8,r8,-1
 108c184:	defffb04 	addi	sp,sp,-20
 108c188:	2a14703a 	and	r10,r5,r8
 108c18c:	3812d53a 	srli	r9,r7,20
 108c190:	3a10703a 	and	r8,r7,r8
 108c194:	2006d77a 	srli	r3,r4,29
 108c198:	3004d77a 	srli	r2,r6,29
 108c19c:	dc000015 	stw	r16,0(sp)
 108c1a0:	501490fa 	slli	r10,r10,3
 108c1a4:	2820d53a 	srli	r16,r5,20
 108c1a8:	401090fa 	slli	r8,r8,3
 108c1ac:	dc800215 	stw	r18,8(sp)
 108c1b0:	dc400115 	stw	r17,4(sp)
 108c1b4:	dfc00415 	stw	ra,16(sp)
 108c1b8:	202290fa 	slli	r17,r4,3
 108c1bc:	dcc00315 	stw	r19,12(sp)
 108c1c0:	4a41ffcc 	andi	r9,r9,2047
 108c1c4:	0101ffc4 	movi	r4,2047
 108c1c8:	2824d7fa 	srli	r18,r5,31
 108c1cc:	8401ffcc 	andi	r16,r16,2047
 108c1d0:	50c6b03a 	or	r3,r10,r3
 108c1d4:	380ed7fa 	srli	r7,r7,31
 108c1d8:	408ab03a 	or	r5,r8,r2
 108c1dc:	300c90fa 	slli	r6,r6,3
 108c1e0:	49009626 	beq	r9,r4,108c43c <__subdf3+0x2c0>
 108c1e4:	39c0005c 	xori	r7,r7,1
 108c1e8:	8245c83a 	sub	r2,r16,r9
 108c1ec:	3c807426 	beq	r7,r18,108c3c0 <__subdf3+0x244>
 108c1f0:	0080af0e 	bge	zero,r2,108c4b0 <__subdf3+0x334>
 108c1f4:	48002a1e 	bne	r9,zero,108c2a0 <__subdf3+0x124>
 108c1f8:	2988b03a 	or	r4,r5,r6
 108c1fc:	20009a1e 	bne	r4,zero,108c468 <__subdf3+0x2ec>
 108c200:	888001cc 	andi	r2,r17,7
 108c204:	10000726 	beq	r2,zero,108c224 <__subdf3+0xa8>
 108c208:	888003cc 	andi	r2,r17,15
 108c20c:	01000104 	movi	r4,4
 108c210:	11000426 	beq	r2,r4,108c224 <__subdf3+0xa8>
 108c214:	890b883a 	add	r5,r17,r4
 108c218:	2c63803a 	cmpltu	r17,r5,r17
 108c21c:	1c47883a 	add	r3,r3,r17
 108c220:	2823883a 	mov	r17,r5
 108c224:	1880202c 	andhi	r2,r3,128
 108c228:	10005926 	beq	r2,zero,108c390 <__subdf3+0x214>
 108c22c:	84000044 	addi	r16,r16,1
 108c230:	0081ffc4 	movi	r2,2047
 108c234:	8080be26 	beq	r16,r2,108c530 <__subdf3+0x3b4>
 108c238:	017fe034 	movhi	r5,65408
 108c23c:	297fffc4 	addi	r5,r5,-1
 108c240:	1946703a 	and	r3,r3,r5
 108c244:	1804977a 	slli	r2,r3,29
 108c248:	1806927a 	slli	r3,r3,9
 108c24c:	8822d0fa 	srli	r17,r17,3
 108c250:	8401ffcc 	andi	r16,r16,2047
 108c254:	180ad33a 	srli	r5,r3,12
 108c258:	9100004c 	andi	r4,r18,1
 108c25c:	1444b03a 	or	r2,r2,r17
 108c260:	80c1ffcc 	andi	r3,r16,2047
 108c264:	1820953a 	slli	r16,r3,20
 108c268:	20c03fcc 	andi	r3,r4,255
 108c26c:	180897fa 	slli	r4,r3,31
 108c270:	00c00434 	movhi	r3,16
 108c274:	18ffffc4 	addi	r3,r3,-1
 108c278:	28c6703a 	and	r3,r5,r3
 108c27c:	1c06b03a 	or	r3,r3,r16
 108c280:	1906b03a 	or	r3,r3,r4
 108c284:	dfc00417 	ldw	ra,16(sp)
 108c288:	dcc00317 	ldw	r19,12(sp)
 108c28c:	dc800217 	ldw	r18,8(sp)
 108c290:	dc400117 	ldw	r17,4(sp)
 108c294:	dc000017 	ldw	r16,0(sp)
 108c298:	dec00504 	addi	sp,sp,20
 108c29c:	f800283a 	ret
 108c2a0:	0101ffc4 	movi	r4,2047
 108c2a4:	813fd626 	beq	r16,r4,108c200 <__subdf3+0x84>
 108c2a8:	29402034 	orhi	r5,r5,128
 108c2ac:	01000e04 	movi	r4,56
 108c2b0:	2080a316 	blt	r4,r2,108c540 <__subdf3+0x3c4>
 108c2b4:	010007c4 	movi	r4,31
 108c2b8:	2080c616 	blt	r4,r2,108c5d4 <__subdf3+0x458>
 108c2bc:	01000804 	movi	r4,32
 108c2c0:	2089c83a 	sub	r4,r4,r2
 108c2c4:	2910983a 	sll	r8,r5,r4
 108c2c8:	308ed83a 	srl	r7,r6,r2
 108c2cc:	3108983a 	sll	r4,r6,r4
 108c2d0:	2884d83a 	srl	r2,r5,r2
 108c2d4:	41ccb03a 	or	r6,r8,r7
 108c2d8:	2008c03a 	cmpne	r4,r4,zero
 108c2dc:	310cb03a 	or	r6,r6,r4
 108c2e0:	898dc83a 	sub	r6,r17,r6
 108c2e4:	89a3803a 	cmpltu	r17,r17,r6
 108c2e8:	1887c83a 	sub	r3,r3,r2
 108c2ec:	1c47c83a 	sub	r3,r3,r17
 108c2f0:	3023883a 	mov	r17,r6
 108c2f4:	1880202c 	andhi	r2,r3,128
 108c2f8:	10002326 	beq	r2,zero,108c388 <__subdf3+0x20c>
 108c2fc:	04c02034 	movhi	r19,128
 108c300:	9cffffc4 	addi	r19,r19,-1
 108c304:	1ce6703a 	and	r19,r3,r19
 108c308:	98007a26 	beq	r19,zero,108c4f4 <__subdf3+0x378>
 108c30c:	9809883a 	mov	r4,r19
 108c310:	108cc7c0 	call	108cc7c <__clzsi2>
 108c314:	113ffe04 	addi	r4,r2,-8
 108c318:	00c007c4 	movi	r3,31
 108c31c:	19007b16 	blt	r3,r4,108c50c <__subdf3+0x390>
 108c320:	00800804 	movi	r2,32
 108c324:	1105c83a 	sub	r2,r2,r4
 108c328:	8884d83a 	srl	r2,r17,r2
 108c32c:	9906983a 	sll	r3,r19,r4
 108c330:	8922983a 	sll	r17,r17,r4
 108c334:	10c4b03a 	or	r2,r2,r3
 108c338:	24007816 	blt	r4,r16,108c51c <__subdf3+0x3a0>
 108c33c:	2421c83a 	sub	r16,r4,r16
 108c340:	80c00044 	addi	r3,r16,1
 108c344:	010007c4 	movi	r4,31
 108c348:	20c09516 	blt	r4,r3,108c5a0 <__subdf3+0x424>
 108c34c:	01400804 	movi	r5,32
 108c350:	28cbc83a 	sub	r5,r5,r3
 108c354:	88c8d83a 	srl	r4,r17,r3
 108c358:	8962983a 	sll	r17,r17,r5
 108c35c:	114a983a 	sll	r5,r2,r5
 108c360:	10c6d83a 	srl	r3,r2,r3
 108c364:	8804c03a 	cmpne	r2,r17,zero
 108c368:	290ab03a 	or	r5,r5,r4
 108c36c:	28a2b03a 	or	r17,r5,r2
 108c370:	0021883a 	mov	r16,zero
 108c374:	003fa206 	br	108c200 <__subdf3+0x84>
 108c378:	2090b03a 	or	r8,r4,r2
 108c37c:	40018e26 	beq	r8,zero,108c9b8 <__subdf3+0x83c>
 108c380:	1007883a 	mov	r3,r2
 108c384:	2023883a 	mov	r17,r4
 108c388:	888001cc 	andi	r2,r17,7
 108c38c:	103f9e1e 	bne	r2,zero,108c208 <__subdf3+0x8c>
 108c390:	1804977a 	slli	r2,r3,29
 108c394:	8822d0fa 	srli	r17,r17,3
 108c398:	1810d0fa 	srli	r8,r3,3
 108c39c:	9100004c 	andi	r4,r18,1
 108c3a0:	1444b03a 	or	r2,r2,r17
 108c3a4:	00c1ffc4 	movi	r3,2047
 108c3a8:	80c02826 	beq	r16,r3,108c44c <__subdf3+0x2d0>
 108c3ac:	01400434 	movhi	r5,16
 108c3b0:	297fffc4 	addi	r5,r5,-1
 108c3b4:	80e0703a 	and	r16,r16,r3
 108c3b8:	414a703a 	and	r5,r8,r5
 108c3bc:	003fa806 	br	108c260 <__subdf3+0xe4>
 108c3c0:	0080630e 	bge	zero,r2,108c550 <__subdf3+0x3d4>
 108c3c4:	48003026 	beq	r9,zero,108c488 <__subdf3+0x30c>
 108c3c8:	0101ffc4 	movi	r4,2047
 108c3cc:	813f8c26 	beq	r16,r4,108c200 <__subdf3+0x84>
 108c3d0:	29402034 	orhi	r5,r5,128
 108c3d4:	01000e04 	movi	r4,56
 108c3d8:	2080a90e 	bge	r4,r2,108c680 <__subdf3+0x504>
 108c3dc:	298cb03a 	or	r6,r5,r6
 108c3e0:	3012c03a 	cmpne	r9,r6,zero
 108c3e4:	0005883a 	mov	r2,zero
 108c3e8:	4c53883a 	add	r9,r9,r17
 108c3ec:	4c63803a 	cmpltu	r17,r9,r17
 108c3f0:	10c7883a 	add	r3,r2,r3
 108c3f4:	88c7883a 	add	r3,r17,r3
 108c3f8:	4823883a 	mov	r17,r9
 108c3fc:	1880202c 	andhi	r2,r3,128
 108c400:	1000d026 	beq	r2,zero,108c744 <__subdf3+0x5c8>
 108c404:	84000044 	addi	r16,r16,1
 108c408:	0081ffc4 	movi	r2,2047
 108c40c:	8080fe26 	beq	r16,r2,108c808 <__subdf3+0x68c>
 108c410:	00bfe034 	movhi	r2,65408
 108c414:	10bfffc4 	addi	r2,r2,-1
 108c418:	1886703a 	and	r3,r3,r2
 108c41c:	880ad07a 	srli	r5,r17,1
 108c420:	180497fa 	slli	r2,r3,31
 108c424:	8900004c 	andi	r4,r17,1
 108c428:	2922b03a 	or	r17,r5,r4
 108c42c:	1806d07a 	srli	r3,r3,1
 108c430:	1462b03a 	or	r17,r2,r17
 108c434:	3825883a 	mov	r18,r7
 108c438:	003f7106 	br	108c200 <__subdf3+0x84>
 108c43c:	2984b03a 	or	r2,r5,r6
 108c440:	103f6826 	beq	r2,zero,108c1e4 <__subdf3+0x68>
 108c444:	39c03fcc 	andi	r7,r7,255
 108c448:	003f6706 	br	108c1e8 <__subdf3+0x6c>
 108c44c:	4086b03a 	or	r3,r8,r2
 108c450:	18015226 	beq	r3,zero,108c99c <__subdf3+0x820>
 108c454:	00c00434 	movhi	r3,16
 108c458:	41400234 	orhi	r5,r8,8
 108c45c:	18ffffc4 	addi	r3,r3,-1
 108c460:	28ca703a 	and	r5,r5,r3
 108c464:	003f7e06 	br	108c260 <__subdf3+0xe4>
 108c468:	10bfffc4 	addi	r2,r2,-1
 108c46c:	1000491e 	bne	r2,zero,108c594 <__subdf3+0x418>
 108c470:	898fc83a 	sub	r7,r17,r6
 108c474:	89e3803a 	cmpltu	r17,r17,r7
 108c478:	1947c83a 	sub	r3,r3,r5
 108c47c:	1c47c83a 	sub	r3,r3,r17
 108c480:	3823883a 	mov	r17,r7
 108c484:	003f9b06 	br	108c2f4 <__subdf3+0x178>
 108c488:	2988b03a 	or	r4,r5,r6
 108c48c:	203f5c26 	beq	r4,zero,108c200 <__subdf3+0x84>
 108c490:	10bfffc4 	addi	r2,r2,-1
 108c494:	1000931e 	bne	r2,zero,108c6e4 <__subdf3+0x568>
 108c498:	898d883a 	add	r6,r17,r6
 108c49c:	3463803a 	cmpltu	r17,r6,r17
 108c4a0:	1947883a 	add	r3,r3,r5
 108c4a4:	88c7883a 	add	r3,r17,r3
 108c4a8:	3023883a 	mov	r17,r6
 108c4ac:	003fd306 	br	108c3fc <__subdf3+0x280>
 108c4b0:	1000541e 	bne	r2,zero,108c604 <__subdf3+0x488>
 108c4b4:	80800044 	addi	r2,r16,1
 108c4b8:	1081ffcc 	andi	r2,r2,2047
 108c4bc:	01000044 	movi	r4,1
 108c4c0:	2080a20e 	bge	r4,r2,108c74c <__subdf3+0x5d0>
 108c4c4:	8989c83a 	sub	r4,r17,r6
 108c4c8:	8905803a 	cmpltu	r2,r17,r4
 108c4cc:	1967c83a 	sub	r19,r3,r5
 108c4d0:	98a7c83a 	sub	r19,r19,r2
 108c4d4:	9880202c 	andhi	r2,r19,128
 108c4d8:	10006326 	beq	r2,zero,108c668 <__subdf3+0x4ec>
 108c4dc:	3463c83a 	sub	r17,r6,r17
 108c4e0:	28c7c83a 	sub	r3,r5,r3
 108c4e4:	344d803a 	cmpltu	r6,r6,r17
 108c4e8:	19a7c83a 	sub	r19,r3,r6
 108c4ec:	3825883a 	mov	r18,r7
 108c4f0:	983f861e 	bne	r19,zero,108c30c <__subdf3+0x190>
 108c4f4:	8809883a 	mov	r4,r17
 108c4f8:	108cc7c0 	call	108cc7c <__clzsi2>
 108c4fc:	10800804 	addi	r2,r2,32
 108c500:	113ffe04 	addi	r4,r2,-8
 108c504:	00c007c4 	movi	r3,31
 108c508:	193f850e 	bge	r3,r4,108c320 <__subdf3+0x1a4>
 108c50c:	10bff604 	addi	r2,r2,-40
 108c510:	8884983a 	sll	r2,r17,r2
 108c514:	0023883a 	mov	r17,zero
 108c518:	243f880e 	bge	r4,r16,108c33c <__subdf3+0x1c0>
 108c51c:	00ffe034 	movhi	r3,65408
 108c520:	18ffffc4 	addi	r3,r3,-1
 108c524:	8121c83a 	sub	r16,r16,r4
 108c528:	10c6703a 	and	r3,r2,r3
 108c52c:	003f3406 	br	108c200 <__subdf3+0x84>
 108c530:	9100004c 	andi	r4,r18,1
 108c534:	000b883a 	mov	r5,zero
 108c538:	0005883a 	mov	r2,zero
 108c53c:	003f4806 	br	108c260 <__subdf3+0xe4>
 108c540:	298cb03a 	or	r6,r5,r6
 108c544:	300cc03a 	cmpne	r6,r6,zero
 108c548:	0005883a 	mov	r2,zero
 108c54c:	003f6406 	br	108c2e0 <__subdf3+0x164>
 108c550:	10009a1e 	bne	r2,zero,108c7bc <__subdf3+0x640>
 108c554:	82400044 	addi	r9,r16,1
 108c558:	4881ffcc 	andi	r2,r9,2047
 108c55c:	02800044 	movi	r10,1
 108c560:	5080670e 	bge	r10,r2,108c700 <__subdf3+0x584>
 108c564:	0081ffc4 	movi	r2,2047
 108c568:	4880af26 	beq	r9,r2,108c828 <__subdf3+0x6ac>
 108c56c:	898d883a 	add	r6,r17,r6
 108c570:	1945883a 	add	r2,r3,r5
 108c574:	3447803a 	cmpltu	r3,r6,r17
 108c578:	1887883a 	add	r3,r3,r2
 108c57c:	182297fa 	slli	r17,r3,31
 108c580:	300cd07a 	srli	r6,r6,1
 108c584:	1806d07a 	srli	r3,r3,1
 108c588:	4821883a 	mov	r16,r9
 108c58c:	89a2b03a 	or	r17,r17,r6
 108c590:	003f1b06 	br	108c200 <__subdf3+0x84>
 108c594:	0101ffc4 	movi	r4,2047
 108c598:	813f441e 	bne	r16,r4,108c2ac <__subdf3+0x130>
 108c59c:	003f1806 	br	108c200 <__subdf3+0x84>
 108c5a0:	843ff844 	addi	r16,r16,-31
 108c5a4:	01400804 	movi	r5,32
 108c5a8:	1408d83a 	srl	r4,r2,r16
 108c5ac:	19405026 	beq	r3,r5,108c6f0 <__subdf3+0x574>
 108c5b0:	01401004 	movi	r5,64
 108c5b4:	28c7c83a 	sub	r3,r5,r3
 108c5b8:	10c4983a 	sll	r2,r2,r3
 108c5bc:	88a2b03a 	or	r17,r17,r2
 108c5c0:	8822c03a 	cmpne	r17,r17,zero
 108c5c4:	2462b03a 	or	r17,r4,r17
 108c5c8:	0007883a 	mov	r3,zero
 108c5cc:	0021883a 	mov	r16,zero
 108c5d0:	003f6d06 	br	108c388 <__subdf3+0x20c>
 108c5d4:	11fff804 	addi	r7,r2,-32
 108c5d8:	01000804 	movi	r4,32
 108c5dc:	29ced83a 	srl	r7,r5,r7
 108c5e0:	11004526 	beq	r2,r4,108c6f8 <__subdf3+0x57c>
 108c5e4:	01001004 	movi	r4,64
 108c5e8:	2089c83a 	sub	r4,r4,r2
 108c5ec:	2904983a 	sll	r2,r5,r4
 108c5f0:	118cb03a 	or	r6,r2,r6
 108c5f4:	300cc03a 	cmpne	r6,r6,zero
 108c5f8:	398cb03a 	or	r6,r7,r6
 108c5fc:	0005883a 	mov	r2,zero
 108c600:	003f3706 	br	108c2e0 <__subdf3+0x164>
 108c604:	80002a26 	beq	r16,zero,108c6b0 <__subdf3+0x534>
 108c608:	0101ffc4 	movi	r4,2047
 108c60c:	49006626 	beq	r9,r4,108c7a8 <__subdf3+0x62c>
 108c610:	0085c83a 	sub	r2,zero,r2
 108c614:	18c02034 	orhi	r3,r3,128
 108c618:	01000e04 	movi	r4,56
 108c61c:	20807e16 	blt	r4,r2,108c818 <__subdf3+0x69c>
 108c620:	010007c4 	movi	r4,31
 108c624:	2080e716 	blt	r4,r2,108c9c4 <__subdf3+0x848>
 108c628:	01000804 	movi	r4,32
 108c62c:	2089c83a 	sub	r4,r4,r2
 108c630:	1914983a 	sll	r10,r3,r4
 108c634:	8890d83a 	srl	r8,r17,r2
 108c638:	8908983a 	sll	r4,r17,r4
 108c63c:	1884d83a 	srl	r2,r3,r2
 108c640:	5222b03a 	or	r17,r10,r8
 108c644:	2006c03a 	cmpne	r3,r4,zero
 108c648:	88e2b03a 	or	r17,r17,r3
 108c64c:	3463c83a 	sub	r17,r6,r17
 108c650:	2885c83a 	sub	r2,r5,r2
 108c654:	344d803a 	cmpltu	r6,r6,r17
 108c658:	1187c83a 	sub	r3,r2,r6
 108c65c:	4821883a 	mov	r16,r9
 108c660:	3825883a 	mov	r18,r7
 108c664:	003f2306 	br	108c2f4 <__subdf3+0x178>
 108c668:	24d0b03a 	or	r8,r4,r19
 108c66c:	40001b1e 	bne	r8,zero,108c6dc <__subdf3+0x560>
 108c670:	0005883a 	mov	r2,zero
 108c674:	0009883a 	mov	r4,zero
 108c678:	0021883a 	mov	r16,zero
 108c67c:	003f4906 	br	108c3a4 <__subdf3+0x228>
 108c680:	010007c4 	movi	r4,31
 108c684:	20803a16 	blt	r4,r2,108c770 <__subdf3+0x5f4>
 108c688:	01000804 	movi	r4,32
 108c68c:	2089c83a 	sub	r4,r4,r2
 108c690:	2912983a 	sll	r9,r5,r4
 108c694:	3090d83a 	srl	r8,r6,r2
 108c698:	3108983a 	sll	r4,r6,r4
 108c69c:	2884d83a 	srl	r2,r5,r2
 108c6a0:	4a12b03a 	or	r9,r9,r8
 108c6a4:	2008c03a 	cmpne	r4,r4,zero
 108c6a8:	4912b03a 	or	r9,r9,r4
 108c6ac:	003f4e06 	br	108c3e8 <__subdf3+0x26c>
 108c6b0:	1c48b03a 	or	r4,r3,r17
 108c6b4:	20003c26 	beq	r4,zero,108c7a8 <__subdf3+0x62c>
 108c6b8:	0084303a 	nor	r2,zero,r2
 108c6bc:	1000381e 	bne	r2,zero,108c7a0 <__subdf3+0x624>
 108c6c0:	3463c83a 	sub	r17,r6,r17
 108c6c4:	28c5c83a 	sub	r2,r5,r3
 108c6c8:	344d803a 	cmpltu	r6,r6,r17
 108c6cc:	1187c83a 	sub	r3,r2,r6
 108c6d0:	4821883a 	mov	r16,r9
 108c6d4:	3825883a 	mov	r18,r7
 108c6d8:	003f0606 	br	108c2f4 <__subdf3+0x178>
 108c6dc:	2023883a 	mov	r17,r4
 108c6e0:	003f0906 	br	108c308 <__subdf3+0x18c>
 108c6e4:	0101ffc4 	movi	r4,2047
 108c6e8:	813f3a1e 	bne	r16,r4,108c3d4 <__subdf3+0x258>
 108c6ec:	003ec406 	br	108c200 <__subdf3+0x84>
 108c6f0:	0005883a 	mov	r2,zero
 108c6f4:	003fb106 	br	108c5bc <__subdf3+0x440>
 108c6f8:	0005883a 	mov	r2,zero
 108c6fc:	003fbc06 	br	108c5f0 <__subdf3+0x474>
 108c700:	1c44b03a 	or	r2,r3,r17
 108c704:	80008e1e 	bne	r16,zero,108c940 <__subdf3+0x7c4>
 108c708:	1000c826 	beq	r2,zero,108ca2c <__subdf3+0x8b0>
 108c70c:	2984b03a 	or	r2,r5,r6
 108c710:	103ebb26 	beq	r2,zero,108c200 <__subdf3+0x84>
 108c714:	8989883a 	add	r4,r17,r6
 108c718:	1945883a 	add	r2,r3,r5
 108c71c:	2447803a 	cmpltu	r3,r4,r17
 108c720:	1887883a 	add	r3,r3,r2
 108c724:	1880202c 	andhi	r2,r3,128
 108c728:	2023883a 	mov	r17,r4
 108c72c:	103f1626 	beq	r2,zero,108c388 <__subdf3+0x20c>
 108c730:	00bfe034 	movhi	r2,65408
 108c734:	10bfffc4 	addi	r2,r2,-1
 108c738:	5021883a 	mov	r16,r10
 108c73c:	1886703a 	and	r3,r3,r2
 108c740:	003eaf06 	br	108c200 <__subdf3+0x84>
 108c744:	3825883a 	mov	r18,r7
 108c748:	003f0f06 	br	108c388 <__subdf3+0x20c>
 108c74c:	1c44b03a 	or	r2,r3,r17
 108c750:	8000251e 	bne	r16,zero,108c7e8 <__subdf3+0x66c>
 108c754:	1000661e 	bne	r2,zero,108c8f0 <__subdf3+0x774>
 108c758:	2990b03a 	or	r8,r5,r6
 108c75c:	40009626 	beq	r8,zero,108c9b8 <__subdf3+0x83c>
 108c760:	2807883a 	mov	r3,r5
 108c764:	3023883a 	mov	r17,r6
 108c768:	3825883a 	mov	r18,r7
 108c76c:	003ea406 	br	108c200 <__subdf3+0x84>
 108c770:	127ff804 	addi	r9,r2,-32
 108c774:	01000804 	movi	r4,32
 108c778:	2a52d83a 	srl	r9,r5,r9
 108c77c:	11008c26 	beq	r2,r4,108c9b0 <__subdf3+0x834>
 108c780:	01001004 	movi	r4,64
 108c784:	2085c83a 	sub	r2,r4,r2
 108c788:	2884983a 	sll	r2,r5,r2
 108c78c:	118cb03a 	or	r6,r2,r6
 108c790:	300cc03a 	cmpne	r6,r6,zero
 108c794:	4992b03a 	or	r9,r9,r6
 108c798:	0005883a 	mov	r2,zero
 108c79c:	003f1206 	br	108c3e8 <__subdf3+0x26c>
 108c7a0:	0101ffc4 	movi	r4,2047
 108c7a4:	493f9c1e 	bne	r9,r4,108c618 <__subdf3+0x49c>
 108c7a8:	2807883a 	mov	r3,r5
 108c7ac:	3023883a 	mov	r17,r6
 108c7b0:	4821883a 	mov	r16,r9
 108c7b4:	3825883a 	mov	r18,r7
 108c7b8:	003e9106 	br	108c200 <__subdf3+0x84>
 108c7bc:	80001f1e 	bne	r16,zero,108c83c <__subdf3+0x6c0>
 108c7c0:	1c48b03a 	or	r4,r3,r17
 108c7c4:	20005a26 	beq	r4,zero,108c930 <__subdf3+0x7b4>
 108c7c8:	0084303a 	nor	r2,zero,r2
 108c7cc:	1000561e 	bne	r2,zero,108c928 <__subdf3+0x7ac>
 108c7d0:	89a3883a 	add	r17,r17,r6
 108c7d4:	1945883a 	add	r2,r3,r5
 108c7d8:	898d803a 	cmpltu	r6,r17,r6
 108c7dc:	3087883a 	add	r3,r6,r2
 108c7e0:	4821883a 	mov	r16,r9
 108c7e4:	003f0506 	br	108c3fc <__subdf3+0x280>
 108c7e8:	10002b1e 	bne	r2,zero,108c898 <__subdf3+0x71c>
 108c7ec:	2984b03a 	or	r2,r5,r6
 108c7f0:	10008026 	beq	r2,zero,108c9f4 <__subdf3+0x878>
 108c7f4:	2807883a 	mov	r3,r5
 108c7f8:	3023883a 	mov	r17,r6
 108c7fc:	3825883a 	mov	r18,r7
 108c800:	0401ffc4 	movi	r16,2047
 108c804:	003e7e06 	br	108c200 <__subdf3+0x84>
 108c808:	3809883a 	mov	r4,r7
 108c80c:	0011883a 	mov	r8,zero
 108c810:	0005883a 	mov	r2,zero
 108c814:	003ee306 	br	108c3a4 <__subdf3+0x228>
 108c818:	1c62b03a 	or	r17,r3,r17
 108c81c:	8822c03a 	cmpne	r17,r17,zero
 108c820:	0005883a 	mov	r2,zero
 108c824:	003f8906 	br	108c64c <__subdf3+0x4d0>
 108c828:	3809883a 	mov	r4,r7
 108c82c:	4821883a 	mov	r16,r9
 108c830:	0011883a 	mov	r8,zero
 108c834:	0005883a 	mov	r2,zero
 108c838:	003eda06 	br	108c3a4 <__subdf3+0x228>
 108c83c:	0101ffc4 	movi	r4,2047
 108c840:	49003b26 	beq	r9,r4,108c930 <__subdf3+0x7b4>
 108c844:	0085c83a 	sub	r2,zero,r2
 108c848:	18c02034 	orhi	r3,r3,128
 108c84c:	01000e04 	movi	r4,56
 108c850:	20806e16 	blt	r4,r2,108ca0c <__subdf3+0x890>
 108c854:	010007c4 	movi	r4,31
 108c858:	20807716 	blt	r4,r2,108ca38 <__subdf3+0x8bc>
 108c85c:	01000804 	movi	r4,32
 108c860:	2089c83a 	sub	r4,r4,r2
 108c864:	1914983a 	sll	r10,r3,r4
 108c868:	8890d83a 	srl	r8,r17,r2
 108c86c:	8908983a 	sll	r4,r17,r4
 108c870:	1884d83a 	srl	r2,r3,r2
 108c874:	5222b03a 	or	r17,r10,r8
 108c878:	2006c03a 	cmpne	r3,r4,zero
 108c87c:	88e2b03a 	or	r17,r17,r3
 108c880:	89a3883a 	add	r17,r17,r6
 108c884:	1145883a 	add	r2,r2,r5
 108c888:	898d803a 	cmpltu	r6,r17,r6
 108c88c:	3087883a 	add	r3,r6,r2
 108c890:	4821883a 	mov	r16,r9
 108c894:	003ed906 	br	108c3fc <__subdf3+0x280>
 108c898:	2984b03a 	or	r2,r5,r6
 108c89c:	10004226 	beq	r2,zero,108c9a8 <__subdf3+0x82c>
 108c8a0:	1808d0fa 	srli	r4,r3,3
 108c8a4:	8822d0fa 	srli	r17,r17,3
 108c8a8:	1806977a 	slli	r3,r3,29
 108c8ac:	2080022c 	andhi	r2,r4,8
 108c8b0:	1c62b03a 	or	r17,r3,r17
 108c8b4:	10000826 	beq	r2,zero,108c8d8 <__subdf3+0x75c>
 108c8b8:	2812d0fa 	srli	r9,r5,3
 108c8bc:	4880022c 	andhi	r2,r9,8
 108c8c0:	1000051e 	bne	r2,zero,108c8d8 <__subdf3+0x75c>
 108c8c4:	300cd0fa 	srli	r6,r6,3
 108c8c8:	2804977a 	slli	r2,r5,29
 108c8cc:	4809883a 	mov	r4,r9
 108c8d0:	3825883a 	mov	r18,r7
 108c8d4:	11a2b03a 	or	r17,r2,r6
 108c8d8:	8806d77a 	srli	r3,r17,29
 108c8dc:	200890fa 	slli	r4,r4,3
 108c8e0:	882290fa 	slli	r17,r17,3
 108c8e4:	0401ffc4 	movi	r16,2047
 108c8e8:	1906b03a 	or	r3,r3,r4
 108c8ec:	003e4406 	br	108c200 <__subdf3+0x84>
 108c8f0:	2984b03a 	or	r2,r5,r6
 108c8f4:	103e4226 	beq	r2,zero,108c200 <__subdf3+0x84>
 108c8f8:	8989c83a 	sub	r4,r17,r6
 108c8fc:	8911803a 	cmpltu	r8,r17,r4
 108c900:	1945c83a 	sub	r2,r3,r5
 108c904:	1205c83a 	sub	r2,r2,r8
 108c908:	1200202c 	andhi	r8,r2,128
 108c90c:	403e9a26 	beq	r8,zero,108c378 <__subdf3+0x1fc>
 108c910:	3463c83a 	sub	r17,r6,r17
 108c914:	28c5c83a 	sub	r2,r5,r3
 108c918:	344d803a 	cmpltu	r6,r6,r17
 108c91c:	1187c83a 	sub	r3,r2,r6
 108c920:	3825883a 	mov	r18,r7
 108c924:	003e3606 	br	108c200 <__subdf3+0x84>
 108c928:	0101ffc4 	movi	r4,2047
 108c92c:	493fc71e 	bne	r9,r4,108c84c <__subdf3+0x6d0>
 108c930:	2807883a 	mov	r3,r5
 108c934:	3023883a 	mov	r17,r6
 108c938:	4821883a 	mov	r16,r9
 108c93c:	003e3006 	br	108c200 <__subdf3+0x84>
 108c940:	10003626 	beq	r2,zero,108ca1c <__subdf3+0x8a0>
 108c944:	2984b03a 	or	r2,r5,r6
 108c948:	10001726 	beq	r2,zero,108c9a8 <__subdf3+0x82c>
 108c94c:	1808d0fa 	srli	r4,r3,3
 108c950:	8822d0fa 	srli	r17,r17,3
 108c954:	1806977a 	slli	r3,r3,29
 108c958:	2080022c 	andhi	r2,r4,8
 108c95c:	1c62b03a 	or	r17,r3,r17
 108c960:	10000726 	beq	r2,zero,108c980 <__subdf3+0x804>
 108c964:	2812d0fa 	srli	r9,r5,3
 108c968:	4880022c 	andhi	r2,r9,8
 108c96c:	1000041e 	bne	r2,zero,108c980 <__subdf3+0x804>
 108c970:	300cd0fa 	srli	r6,r6,3
 108c974:	2804977a 	slli	r2,r5,29
 108c978:	4809883a 	mov	r4,r9
 108c97c:	11a2b03a 	or	r17,r2,r6
 108c980:	8806d77a 	srli	r3,r17,29
 108c984:	200890fa 	slli	r4,r4,3
 108c988:	882290fa 	slli	r17,r17,3
 108c98c:	3825883a 	mov	r18,r7
 108c990:	1906b03a 	or	r3,r3,r4
 108c994:	0401ffc4 	movi	r16,2047
 108c998:	003e1906 	br	108c200 <__subdf3+0x84>
 108c99c:	000b883a 	mov	r5,zero
 108c9a0:	0005883a 	mov	r2,zero
 108c9a4:	003e2e06 	br	108c260 <__subdf3+0xe4>
 108c9a8:	0401ffc4 	movi	r16,2047
 108c9ac:	003e1406 	br	108c200 <__subdf3+0x84>
 108c9b0:	0005883a 	mov	r2,zero
 108c9b4:	003f7506 	br	108c78c <__subdf3+0x610>
 108c9b8:	0005883a 	mov	r2,zero
 108c9bc:	0009883a 	mov	r4,zero
 108c9c0:	003e7806 	br	108c3a4 <__subdf3+0x228>
 108c9c4:	123ff804 	addi	r8,r2,-32
 108c9c8:	01000804 	movi	r4,32
 108c9cc:	1a10d83a 	srl	r8,r3,r8
 108c9d0:	11002526 	beq	r2,r4,108ca68 <__subdf3+0x8ec>
 108c9d4:	01001004 	movi	r4,64
 108c9d8:	2085c83a 	sub	r2,r4,r2
 108c9dc:	1884983a 	sll	r2,r3,r2
 108c9e0:	1444b03a 	or	r2,r2,r17
 108c9e4:	1004c03a 	cmpne	r2,r2,zero
 108c9e8:	40a2b03a 	or	r17,r8,r2
 108c9ec:	0005883a 	mov	r2,zero
 108c9f0:	003f1606 	br	108c64c <__subdf3+0x4d0>
 108c9f4:	02000434 	movhi	r8,16
 108c9f8:	0009883a 	mov	r4,zero
 108c9fc:	423fffc4 	addi	r8,r8,-1
 108ca00:	00bfffc4 	movi	r2,-1
 108ca04:	0401ffc4 	movi	r16,2047
 108ca08:	003e6606 	br	108c3a4 <__subdf3+0x228>
 108ca0c:	1c62b03a 	or	r17,r3,r17
 108ca10:	8822c03a 	cmpne	r17,r17,zero
 108ca14:	0005883a 	mov	r2,zero
 108ca18:	003f9906 	br	108c880 <__subdf3+0x704>
 108ca1c:	2807883a 	mov	r3,r5
 108ca20:	3023883a 	mov	r17,r6
 108ca24:	0401ffc4 	movi	r16,2047
 108ca28:	003df506 	br	108c200 <__subdf3+0x84>
 108ca2c:	2807883a 	mov	r3,r5
 108ca30:	3023883a 	mov	r17,r6
 108ca34:	003df206 	br	108c200 <__subdf3+0x84>
 108ca38:	123ff804 	addi	r8,r2,-32
 108ca3c:	01000804 	movi	r4,32
 108ca40:	1a10d83a 	srl	r8,r3,r8
 108ca44:	11000a26 	beq	r2,r4,108ca70 <__subdf3+0x8f4>
 108ca48:	01001004 	movi	r4,64
 108ca4c:	2085c83a 	sub	r2,r4,r2
 108ca50:	1884983a 	sll	r2,r3,r2
 108ca54:	1444b03a 	or	r2,r2,r17
 108ca58:	1004c03a 	cmpne	r2,r2,zero
 108ca5c:	40a2b03a 	or	r17,r8,r2
 108ca60:	0005883a 	mov	r2,zero
 108ca64:	003f8606 	br	108c880 <__subdf3+0x704>
 108ca68:	0005883a 	mov	r2,zero
 108ca6c:	003fdc06 	br	108c9e0 <__subdf3+0x864>
 108ca70:	0005883a 	mov	r2,zero
 108ca74:	003ff706 	br	108ca54 <__subdf3+0x8d8>

0108ca78 <__fixdfsi>:
 108ca78:	280cd53a 	srli	r6,r5,20
 108ca7c:	00c00434 	movhi	r3,16
 108ca80:	18ffffc4 	addi	r3,r3,-1
 108ca84:	3181ffcc 	andi	r6,r6,2047
 108ca88:	01c0ff84 	movi	r7,1022
 108ca8c:	28c6703a 	and	r3,r5,r3
 108ca90:	280ad7fa 	srli	r5,r5,31
 108ca94:	3980120e 	bge	r7,r6,108cae0 <__fixdfsi+0x68>
 108ca98:	00810744 	movi	r2,1053
 108ca9c:	11800c16 	blt	r2,r6,108cad0 <__fixdfsi+0x58>
 108caa0:	00810cc4 	movi	r2,1075
 108caa4:	1185c83a 	sub	r2,r2,r6
 108caa8:	01c007c4 	movi	r7,31
 108caac:	18c00434 	orhi	r3,r3,16
 108cab0:	38800d16 	blt	r7,r2,108cae8 <__fixdfsi+0x70>
 108cab4:	31befb44 	addi	r6,r6,-1043
 108cab8:	2084d83a 	srl	r2,r4,r2
 108cabc:	1986983a 	sll	r3,r3,r6
 108cac0:	1884b03a 	or	r2,r3,r2
 108cac4:	28000726 	beq	r5,zero,108cae4 <__fixdfsi+0x6c>
 108cac8:	0085c83a 	sub	r2,zero,r2
 108cacc:	f800283a 	ret
 108cad0:	00a00034 	movhi	r2,32768
 108cad4:	10bfffc4 	addi	r2,r2,-1
 108cad8:	2885883a 	add	r2,r5,r2
 108cadc:	f800283a 	ret
 108cae0:	0005883a 	mov	r2,zero
 108cae4:	f800283a 	ret
 108cae8:	008104c4 	movi	r2,1043
 108caec:	1185c83a 	sub	r2,r2,r6
 108caf0:	1884d83a 	srl	r2,r3,r2
 108caf4:	003ff306 	br	108cac4 <__fixdfsi+0x4c>

0108caf8 <__floatsidf>:
 108caf8:	defffd04 	addi	sp,sp,-12
 108cafc:	dfc00215 	stw	ra,8(sp)
 108cb00:	dc400115 	stw	r17,4(sp)
 108cb04:	dc000015 	stw	r16,0(sp)
 108cb08:	20002b26 	beq	r4,zero,108cbb8 <__floatsidf+0xc0>
 108cb0c:	2023883a 	mov	r17,r4
 108cb10:	2020d7fa 	srli	r16,r4,31
 108cb14:	20002d16 	blt	r4,zero,108cbcc <__floatsidf+0xd4>
 108cb18:	8809883a 	mov	r4,r17
 108cb1c:	108cc7c0 	call	108cc7c <__clzsi2>
 108cb20:	01410784 	movi	r5,1054
 108cb24:	288bc83a 	sub	r5,r5,r2
 108cb28:	01010cc4 	movi	r4,1075
 108cb2c:	2149c83a 	sub	r4,r4,r5
 108cb30:	00c007c4 	movi	r3,31
 108cb34:	1900160e 	bge	r3,r4,108cb90 <__floatsidf+0x98>
 108cb38:	00c104c4 	movi	r3,1043
 108cb3c:	1947c83a 	sub	r3,r3,r5
 108cb40:	88c6983a 	sll	r3,r17,r3
 108cb44:	00800434 	movhi	r2,16
 108cb48:	10bfffc4 	addi	r2,r2,-1
 108cb4c:	1886703a 	and	r3,r3,r2
 108cb50:	2941ffcc 	andi	r5,r5,2047
 108cb54:	800d883a 	mov	r6,r16
 108cb58:	0005883a 	mov	r2,zero
 108cb5c:	280a953a 	slli	r5,r5,20
 108cb60:	31803fcc 	andi	r6,r6,255
 108cb64:	01000434 	movhi	r4,16
 108cb68:	300c97fa 	slli	r6,r6,31
 108cb6c:	213fffc4 	addi	r4,r4,-1
 108cb70:	1906703a 	and	r3,r3,r4
 108cb74:	1946b03a 	or	r3,r3,r5
 108cb78:	1986b03a 	or	r3,r3,r6
 108cb7c:	dfc00217 	ldw	ra,8(sp)
 108cb80:	dc400117 	ldw	r17,4(sp)
 108cb84:	dc000017 	ldw	r16,0(sp)
 108cb88:	dec00304 	addi	sp,sp,12
 108cb8c:	f800283a 	ret
 108cb90:	00c002c4 	movi	r3,11
 108cb94:	1887c83a 	sub	r3,r3,r2
 108cb98:	88c6d83a 	srl	r3,r17,r3
 108cb9c:	8904983a 	sll	r2,r17,r4
 108cba0:	01000434 	movhi	r4,16
 108cba4:	213fffc4 	addi	r4,r4,-1
 108cba8:	2941ffcc 	andi	r5,r5,2047
 108cbac:	1906703a 	and	r3,r3,r4
 108cbb0:	800d883a 	mov	r6,r16
 108cbb4:	003fe906 	br	108cb5c <__floatsidf+0x64>
 108cbb8:	000d883a 	mov	r6,zero
 108cbbc:	000b883a 	mov	r5,zero
 108cbc0:	0007883a 	mov	r3,zero
 108cbc4:	0005883a 	mov	r2,zero
 108cbc8:	003fe406 	br	108cb5c <__floatsidf+0x64>
 108cbcc:	0123c83a 	sub	r17,zero,r4
 108cbd0:	003fd106 	br	108cb18 <__floatsidf+0x20>

0108cbd4 <__floatunsidf>:
 108cbd4:	defffe04 	addi	sp,sp,-8
 108cbd8:	dc000015 	stw	r16,0(sp)
 108cbdc:	dfc00115 	stw	ra,4(sp)
 108cbe0:	2021883a 	mov	r16,r4
 108cbe4:	20002226 	beq	r4,zero,108cc70 <__floatunsidf+0x9c>
 108cbe8:	108cc7c0 	call	108cc7c <__clzsi2>
 108cbec:	01010784 	movi	r4,1054
 108cbf0:	2089c83a 	sub	r4,r4,r2
 108cbf4:	01810cc4 	movi	r6,1075
 108cbf8:	310dc83a 	sub	r6,r6,r4
 108cbfc:	00c007c4 	movi	r3,31
 108cc00:	1980120e 	bge	r3,r6,108cc4c <__floatunsidf+0x78>
 108cc04:	00c104c4 	movi	r3,1043
 108cc08:	1907c83a 	sub	r3,r3,r4
 108cc0c:	80ca983a 	sll	r5,r16,r3
 108cc10:	00800434 	movhi	r2,16
 108cc14:	10bfffc4 	addi	r2,r2,-1
 108cc18:	2101ffcc 	andi	r4,r4,2047
 108cc1c:	0021883a 	mov	r16,zero
 108cc20:	288a703a 	and	r5,r5,r2
 108cc24:	2008953a 	slli	r4,r4,20
 108cc28:	00c00434 	movhi	r3,16
 108cc2c:	18ffffc4 	addi	r3,r3,-1
 108cc30:	28c6703a 	and	r3,r5,r3
 108cc34:	8005883a 	mov	r2,r16
 108cc38:	1906b03a 	or	r3,r3,r4
 108cc3c:	dfc00117 	ldw	ra,4(sp)
 108cc40:	dc000017 	ldw	r16,0(sp)
 108cc44:	dec00204 	addi	sp,sp,8
 108cc48:	f800283a 	ret
 108cc4c:	00c002c4 	movi	r3,11
 108cc50:	188bc83a 	sub	r5,r3,r2
 108cc54:	814ad83a 	srl	r5,r16,r5
 108cc58:	00c00434 	movhi	r3,16
 108cc5c:	18ffffc4 	addi	r3,r3,-1
 108cc60:	81a0983a 	sll	r16,r16,r6
 108cc64:	2101ffcc 	andi	r4,r4,2047
 108cc68:	28ca703a 	and	r5,r5,r3
 108cc6c:	003fed06 	br	108cc24 <__floatunsidf+0x50>
 108cc70:	0009883a 	mov	r4,zero
 108cc74:	000b883a 	mov	r5,zero
 108cc78:	003fea06 	br	108cc24 <__floatunsidf+0x50>

0108cc7c <__clzsi2>:
 108cc7c:	00bfffd4 	movui	r2,65535
 108cc80:	11000536 	bltu	r2,r4,108cc98 <__clzsi2+0x1c>
 108cc84:	00803fc4 	movi	r2,255
 108cc88:	11000f36 	bltu	r2,r4,108ccc8 <__clzsi2+0x4c>
 108cc8c:	00800804 	movi	r2,32
 108cc90:	0007883a 	mov	r3,zero
 108cc94:	00000506 	br	108ccac <__clzsi2+0x30>
 108cc98:	00804034 	movhi	r2,256
 108cc9c:	10bfffc4 	addi	r2,r2,-1
 108cca0:	11000c2e 	bgeu	r2,r4,108ccd4 <__clzsi2+0x58>
 108cca4:	00800204 	movi	r2,8
 108cca8:	00c00604 	movi	r3,24
 108ccac:	20c8d83a 	srl	r4,r4,r3
 108ccb0:	00c04274 	movhi	r3,265
 108ccb4:	18fd1a04 	addi	r3,r3,-2968
 108ccb8:	1909883a 	add	r4,r3,r4
 108ccbc:	20c00003 	ldbu	r3,0(r4)
 108ccc0:	10c5c83a 	sub	r2,r2,r3
 108ccc4:	f800283a 	ret
 108ccc8:	00800604 	movi	r2,24
 108cccc:	00c00204 	movi	r3,8
 108ccd0:	003ff606 	br	108ccac <__clzsi2+0x30>
 108ccd4:	00800404 	movi	r2,16
 108ccd8:	1007883a 	mov	r3,r2
 108ccdc:	003ff306 	br	108ccac <__clzsi2+0x30>

0108cce0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108cce0:	defffe04 	addi	sp,sp,-8
 108cce4:	dfc00115 	stw	ra,4(sp)
 108cce8:	df000015 	stw	fp,0(sp)
 108ccec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108ccf0:	d0a00b17 	ldw	r2,-32724(gp)
 108ccf4:	10000326 	beq	r2,zero,108cd04 <alt_get_errno+0x24>
 108ccf8:	d0a00b17 	ldw	r2,-32724(gp)
 108ccfc:	103ee83a 	callr	r2
 108cd00:	00000106 	br	108cd08 <alt_get_errno+0x28>
 108cd04:	d0a6dd04 	addi	r2,gp,-25740
}
 108cd08:	e037883a 	mov	sp,fp
 108cd0c:	dfc00117 	ldw	ra,4(sp)
 108cd10:	df000017 	ldw	fp,0(sp)
 108cd14:	dec00204 	addi	sp,sp,8
 108cd18:	f800283a 	ret

0108cd1c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 108cd1c:	defffb04 	addi	sp,sp,-20
 108cd20:	dfc00415 	stw	ra,16(sp)
 108cd24:	df000315 	stw	fp,12(sp)
 108cd28:	df000304 	addi	fp,sp,12
 108cd2c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 108cd30:	e0bfff17 	ldw	r2,-4(fp)
 108cd34:	10000616 	blt	r2,zero,108cd50 <close+0x34>
 108cd38:	e0bfff17 	ldw	r2,-4(fp)
 108cd3c:	10c00324 	muli	r3,r2,12
 108cd40:	00804274 	movhi	r2,265
 108cd44:	10bf9e04 	addi	r2,r2,-392
 108cd48:	1885883a 	add	r2,r3,r2
 108cd4c:	00000106 	br	108cd54 <close+0x38>
 108cd50:	0005883a 	mov	r2,zero
 108cd54:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 108cd58:	e0bffd17 	ldw	r2,-12(fp)
 108cd5c:	10001926 	beq	r2,zero,108cdc4 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 108cd60:	e0bffd17 	ldw	r2,-12(fp)
 108cd64:	10800017 	ldw	r2,0(r2)
 108cd68:	10800417 	ldw	r2,16(r2)
 108cd6c:	10000626 	beq	r2,zero,108cd88 <close+0x6c>
 108cd70:	e0bffd17 	ldw	r2,-12(fp)
 108cd74:	10800017 	ldw	r2,0(r2)
 108cd78:	10800417 	ldw	r2,16(r2)
 108cd7c:	e13ffd17 	ldw	r4,-12(fp)
 108cd80:	103ee83a 	callr	r2
 108cd84:	00000106 	br	108cd8c <close+0x70>
 108cd88:	0005883a 	mov	r2,zero
 108cd8c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 108cd90:	e13fff17 	ldw	r4,-4(fp)
 108cd94:	108d55c0 	call	108d55c <alt_release_fd>
    if (rval < 0)
 108cd98:	e0bffe17 	ldw	r2,-8(fp)
 108cd9c:	1000070e 	bge	r2,zero,108cdbc <close+0xa0>
    {
      ALT_ERRNO = -rval;
 108cda0:	108cce00 	call	108cce0 <alt_get_errno>
 108cda4:	1007883a 	mov	r3,r2
 108cda8:	e0bffe17 	ldw	r2,-8(fp)
 108cdac:	0085c83a 	sub	r2,zero,r2
 108cdb0:	18800015 	stw	r2,0(r3)
      return -1;
 108cdb4:	00bfffc4 	movi	r2,-1
 108cdb8:	00000706 	br	108cdd8 <close+0xbc>
    }
    return 0;
 108cdbc:	0005883a 	mov	r2,zero
 108cdc0:	00000506 	br	108cdd8 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 108cdc4:	108cce00 	call	108cce0 <alt_get_errno>
 108cdc8:	1007883a 	mov	r3,r2
 108cdcc:	00801444 	movi	r2,81
 108cdd0:	18800015 	stw	r2,0(r3)
    return -1;
 108cdd4:	00bfffc4 	movi	r2,-1
  }
}
 108cdd8:	e037883a 	mov	sp,fp
 108cddc:	dfc00117 	ldw	ra,4(sp)
 108cde0:	df000017 	ldw	fp,0(sp)
 108cde4:	dec00204 	addi	sp,sp,8
 108cde8:	f800283a 	ret

0108cdec <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 108cdec:	defffc04 	addi	sp,sp,-16
 108cdf0:	df000315 	stw	fp,12(sp)
 108cdf4:	df000304 	addi	fp,sp,12
 108cdf8:	e13ffd15 	stw	r4,-12(fp)
 108cdfc:	e17ffe15 	stw	r5,-8(fp)
 108ce00:	e1bfff15 	stw	r6,-4(fp)
  return len;
 108ce04:	e0bfff17 	ldw	r2,-4(fp)
}
 108ce08:	e037883a 	mov	sp,fp
 108ce0c:	df000017 	ldw	fp,0(sp)
 108ce10:	dec00104 	addi	sp,sp,4
 108ce14:	f800283a 	ret

0108ce18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108ce18:	defffe04 	addi	sp,sp,-8
 108ce1c:	dfc00115 	stw	ra,4(sp)
 108ce20:	df000015 	stw	fp,0(sp)
 108ce24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108ce28:	d0a00b17 	ldw	r2,-32724(gp)
 108ce2c:	10000326 	beq	r2,zero,108ce3c <alt_get_errno+0x24>
 108ce30:	d0a00b17 	ldw	r2,-32724(gp)
 108ce34:	103ee83a 	callr	r2
 108ce38:	00000106 	br	108ce40 <alt_get_errno+0x28>
 108ce3c:	d0a6dd04 	addi	r2,gp,-25740
}
 108ce40:	e037883a 	mov	sp,fp
 108ce44:	dfc00117 	ldw	ra,4(sp)
 108ce48:	df000017 	ldw	fp,0(sp)
 108ce4c:	dec00204 	addi	sp,sp,8
 108ce50:	f800283a 	ret

0108ce54 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 108ce54:	defffb04 	addi	sp,sp,-20
 108ce58:	dfc00415 	stw	ra,16(sp)
 108ce5c:	df000315 	stw	fp,12(sp)
 108ce60:	df000304 	addi	fp,sp,12
 108ce64:	e13ffe15 	stw	r4,-8(fp)
 108ce68:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 108ce6c:	e0bffe17 	ldw	r2,-8(fp)
 108ce70:	10000616 	blt	r2,zero,108ce8c <fstat+0x38>
 108ce74:	e0bffe17 	ldw	r2,-8(fp)
 108ce78:	10c00324 	muli	r3,r2,12
 108ce7c:	00804274 	movhi	r2,265
 108ce80:	10bf9e04 	addi	r2,r2,-392
 108ce84:	1885883a 	add	r2,r3,r2
 108ce88:	00000106 	br	108ce90 <fstat+0x3c>
 108ce8c:	0005883a 	mov	r2,zero
 108ce90:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 108ce94:	e0bffd17 	ldw	r2,-12(fp)
 108ce98:	10001026 	beq	r2,zero,108cedc <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 108ce9c:	e0bffd17 	ldw	r2,-12(fp)
 108cea0:	10800017 	ldw	r2,0(r2)
 108cea4:	10800817 	ldw	r2,32(r2)
 108cea8:	10000726 	beq	r2,zero,108cec8 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 108ceac:	e0bffd17 	ldw	r2,-12(fp)
 108ceb0:	10800017 	ldw	r2,0(r2)
 108ceb4:	10800817 	ldw	r2,32(r2)
 108ceb8:	e17fff17 	ldw	r5,-4(fp)
 108cebc:	e13ffd17 	ldw	r4,-12(fp)
 108cec0:	103ee83a 	callr	r2
 108cec4:	00000a06 	br	108cef0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 108cec8:	e0bfff17 	ldw	r2,-4(fp)
 108cecc:	00c80004 	movi	r3,8192
 108ced0:	10c00115 	stw	r3,4(r2)
      return 0;
 108ced4:	0005883a 	mov	r2,zero
 108ced8:	00000506 	br	108cef0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 108cedc:	108ce180 	call	108ce18 <alt_get_errno>
 108cee0:	1007883a 	mov	r3,r2
 108cee4:	00801444 	movi	r2,81
 108cee8:	18800015 	stw	r2,0(r3)
    return -1;
 108ceec:	00bfffc4 	movi	r2,-1
  }
}
 108cef0:	e037883a 	mov	sp,fp
 108cef4:	dfc00117 	ldw	ra,4(sp)
 108cef8:	df000017 	ldw	fp,0(sp)
 108cefc:	dec00204 	addi	sp,sp,8
 108cf00:	f800283a 	ret

0108cf04 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 108cf04:	defff004 	addi	sp,sp,-64
 108cf08:	df000f15 	stw	fp,60(sp)
 108cf0c:	df000f04 	addi	fp,sp,60
 108cf10:	e13ffd15 	stw	r4,-12(fp)
 108cf14:	e17ffe15 	stw	r5,-8(fp)
 108cf18:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 108cf1c:	00bffa84 	movi	r2,-22
 108cf20:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 108cf24:	e0bffd17 	ldw	r2,-12(fp)
 108cf28:	10800828 	cmpgeui	r2,r2,32
 108cf2c:	1000501e 	bne	r2,zero,108d070 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108cf30:	0005303a 	rdctl	r2,status
 108cf34:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108cf38:	e0fff617 	ldw	r3,-40(fp)
 108cf3c:	00bfff84 	movi	r2,-2
 108cf40:	1884703a 	and	r2,r3,r2
 108cf44:	1001703a 	wrctl	status,r2
  
  return context;
 108cf48:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 108cf4c:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
 108cf50:	00804274 	movhi	r2,265
 108cf54:	108b1104 	addi	r2,r2,11332
 108cf58:	e0fffd17 	ldw	r3,-12(fp)
 108cf5c:	180690fa 	slli	r3,r3,3
 108cf60:	10c5883a 	add	r2,r2,r3
 108cf64:	e0ffff17 	ldw	r3,-4(fp)
 108cf68:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 108cf6c:	00804274 	movhi	r2,265
 108cf70:	108b1104 	addi	r2,r2,11332
 108cf74:	e0fffd17 	ldw	r3,-12(fp)
 108cf78:	180690fa 	slli	r3,r3,3
 108cf7c:	10c5883a 	add	r2,r2,r3
 108cf80:	10800104 	addi	r2,r2,4
 108cf84:	e0fffe17 	ldw	r3,-8(fp)
 108cf88:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 108cf8c:	e0bfff17 	ldw	r2,-4(fp)
 108cf90:	10001926 	beq	r2,zero,108cff8 <alt_irq_register+0xf4>
 108cf94:	e0bffd17 	ldw	r2,-12(fp)
 108cf98:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108cf9c:	0005303a 	rdctl	r2,status
 108cfa0:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108cfa4:	e0fff717 	ldw	r3,-36(fp)
 108cfa8:	00bfff84 	movi	r2,-2
 108cfac:	1884703a 	and	r2,r3,r2
 108cfb0:	1001703a 	wrctl	status,r2
  
  return context;
 108cfb4:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 108cfb8:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
 108cfbc:	00c00044 	movi	r3,1
 108cfc0:	e0bff217 	ldw	r2,-56(fp)
 108cfc4:	1884983a 	sll	r2,r3,r2
 108cfc8:	1007883a 	mov	r3,r2
 108cfcc:	d0a6de17 	ldw	r2,-25736(gp)
 108cfd0:	1884b03a 	or	r2,r3,r2
 108cfd4:	d0a6de15 	stw	r2,-25736(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 108cfd8:	d0a6de17 	ldw	r2,-25736(gp)
 108cfdc:	100170fa 	wrctl	ienable,r2
 108cfe0:	e0bff817 	ldw	r2,-32(fp)
 108cfe4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108cfe8:	e0bff917 	ldw	r2,-28(fp)
 108cfec:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 108cff0:	0005883a 	mov	r2,zero
 108cff4:	00001906 	br	108d05c <alt_irq_register+0x158>
 108cff8:	e0bffd17 	ldw	r2,-12(fp)
 108cffc:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108d000:	0005303a 	rdctl	r2,status
 108d004:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108d008:	e0fffa17 	ldw	r3,-24(fp)
 108d00c:	00bfff84 	movi	r2,-2
 108d010:	1884703a 	and	r2,r3,r2
 108d014:	1001703a 	wrctl	status,r2
  
  return context;
 108d018:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 108d01c:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
 108d020:	00c00044 	movi	r3,1
 108d024:	e0bff417 	ldw	r2,-48(fp)
 108d028:	1884983a 	sll	r2,r3,r2
 108d02c:	0084303a 	nor	r2,zero,r2
 108d030:	1007883a 	mov	r3,r2
 108d034:	d0a6de17 	ldw	r2,-25736(gp)
 108d038:	1884703a 	and	r2,r3,r2
 108d03c:	d0a6de15 	stw	r2,-25736(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 108d040:	d0a6de17 	ldw	r2,-25736(gp)
 108d044:	100170fa 	wrctl	ienable,r2
 108d048:	e0bffb17 	ldw	r2,-20(fp)
 108d04c:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108d050:	e0bffc17 	ldw	r2,-16(fp)
 108d054:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 108d058:	0005883a 	mov	r2,zero
 108d05c:	e0bff115 	stw	r2,-60(fp)
 108d060:	e0bff317 	ldw	r2,-52(fp)
 108d064:	e0bff515 	stw	r2,-44(fp)
 108d068:	e0bff517 	ldw	r2,-44(fp)
 108d06c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 108d070:	e0bff117 	ldw	r2,-60(fp)
}
 108d074:	e037883a 	mov	sp,fp
 108d078:	df000017 	ldw	fp,0(sp)
 108d07c:	dec00104 	addi	sp,sp,4
 108d080:	f800283a 	ret

0108d084 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108d084:	defffe04 	addi	sp,sp,-8
 108d088:	dfc00115 	stw	ra,4(sp)
 108d08c:	df000015 	stw	fp,0(sp)
 108d090:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108d094:	d0a00b17 	ldw	r2,-32724(gp)
 108d098:	10000326 	beq	r2,zero,108d0a8 <alt_get_errno+0x24>
 108d09c:	d0a00b17 	ldw	r2,-32724(gp)
 108d0a0:	103ee83a 	callr	r2
 108d0a4:	00000106 	br	108d0ac <alt_get_errno+0x28>
 108d0a8:	d0a6dd04 	addi	r2,gp,-25740
}
 108d0ac:	e037883a 	mov	sp,fp
 108d0b0:	dfc00117 	ldw	ra,4(sp)
 108d0b4:	df000017 	ldw	fp,0(sp)
 108d0b8:	dec00204 	addi	sp,sp,8
 108d0bc:	f800283a 	ret

0108d0c0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 108d0c0:	deffed04 	addi	sp,sp,-76
 108d0c4:	dfc01215 	stw	ra,72(sp)
 108d0c8:	df001115 	stw	fp,68(sp)
 108d0cc:	df001104 	addi	fp,sp,68
 108d0d0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 108d0d4:	e0bfff17 	ldw	r2,-4(fp)
 108d0d8:	10000616 	blt	r2,zero,108d0f4 <isatty+0x34>
 108d0dc:	e0bfff17 	ldw	r2,-4(fp)
 108d0e0:	10c00324 	muli	r3,r2,12
 108d0e4:	00804274 	movhi	r2,265
 108d0e8:	10bf9e04 	addi	r2,r2,-392
 108d0ec:	1885883a 	add	r2,r3,r2
 108d0f0:	00000106 	br	108d0f8 <isatty+0x38>
 108d0f4:	0005883a 	mov	r2,zero
 108d0f8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 108d0fc:	e0bfef17 	ldw	r2,-68(fp)
 108d100:	10000e26 	beq	r2,zero,108d13c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 108d104:	e0bfef17 	ldw	r2,-68(fp)
 108d108:	10800017 	ldw	r2,0(r2)
 108d10c:	10800817 	ldw	r2,32(r2)
 108d110:	1000021e 	bne	r2,zero,108d11c <isatty+0x5c>
    {
      return 1;
 108d114:	00800044 	movi	r2,1
 108d118:	00000d06 	br	108d150 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 108d11c:	e0bff004 	addi	r2,fp,-64
 108d120:	100b883a 	mov	r5,r2
 108d124:	e13fff17 	ldw	r4,-4(fp)
 108d128:	108ce540 	call	108ce54 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 108d12c:	e0bff117 	ldw	r2,-60(fp)
 108d130:	10880020 	cmpeqi	r2,r2,8192
 108d134:	10803fcc 	andi	r2,r2,255
 108d138:	00000506 	br	108d150 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 108d13c:	108d0840 	call	108d084 <alt_get_errno>
 108d140:	1007883a 	mov	r3,r2
 108d144:	00801444 	movi	r2,81
 108d148:	18800015 	stw	r2,0(r3)
    return 0;
 108d14c:	0005883a 	mov	r2,zero
  }
}
 108d150:	e037883a 	mov	sp,fp
 108d154:	dfc00117 	ldw	ra,4(sp)
 108d158:	df000017 	ldw	fp,0(sp)
 108d15c:	dec00204 	addi	sp,sp,8
 108d160:	f800283a 	ret

0108d164 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 108d164:	defffc04 	addi	sp,sp,-16
 108d168:	df000315 	stw	fp,12(sp)
 108d16c:	df000304 	addi	fp,sp,12
 108d170:	e13ffd15 	stw	r4,-12(fp)
 108d174:	e17ffe15 	stw	r5,-8(fp)
 108d178:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 108d17c:	e0fffe17 	ldw	r3,-8(fp)
 108d180:	e0bffd17 	ldw	r2,-12(fp)
 108d184:	18800c26 	beq	r3,r2,108d1b8 <alt_load_section+0x54>
  {
    while( to != end )
 108d188:	00000806 	br	108d1ac <alt_load_section+0x48>
    {
      *to++ = *from++;
 108d18c:	e0bffe17 	ldw	r2,-8(fp)
 108d190:	10c00104 	addi	r3,r2,4
 108d194:	e0fffe15 	stw	r3,-8(fp)
 108d198:	e0fffd17 	ldw	r3,-12(fp)
 108d19c:	19000104 	addi	r4,r3,4
 108d1a0:	e13ffd15 	stw	r4,-12(fp)
 108d1a4:	18c00017 	ldw	r3,0(r3)
 108d1a8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 108d1ac:	e0fffe17 	ldw	r3,-8(fp)
 108d1b0:	e0bfff17 	ldw	r2,-4(fp)
 108d1b4:	18bff51e 	bne	r3,r2,108d18c <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
 108d1b8:	0001883a 	nop
 108d1bc:	e037883a 	mov	sp,fp
 108d1c0:	df000017 	ldw	fp,0(sp)
 108d1c4:	dec00104 	addi	sp,sp,4
 108d1c8:	f800283a 	ret

0108d1cc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 108d1cc:	defffe04 	addi	sp,sp,-8
 108d1d0:	dfc00115 	stw	ra,4(sp)
 108d1d4:	df000015 	stw	fp,0(sp)
 108d1d8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 108d1dc:	01804274 	movhi	r6,265
 108d1e0:	31843204 	addi	r6,r6,4296
 108d1e4:	01404274 	movhi	r5,265
 108d1e8:	297d6b04 	addi	r5,r5,-2644
 108d1ec:	01004274 	movhi	r4,265
 108d1f0:	21043204 	addi	r4,r4,4296
 108d1f4:	108d1640 	call	108d164 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 108d1f8:	01804234 	movhi	r6,264
 108d1fc:	31809204 	addi	r6,r6,584
 108d200:	01404234 	movhi	r5,264
 108d204:	29400804 	addi	r5,r5,32
 108d208:	01004234 	movhi	r4,264
 108d20c:	21000804 	addi	r4,r4,32
 108d210:	108d1640 	call	108d164 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 108d214:	01804274 	movhi	r6,265
 108d218:	31bd6b04 	addi	r6,r6,-2644
 108d21c:	01404274 	movhi	r5,265
 108d220:	297c9904 	addi	r5,r5,-3484
 108d224:	01004274 	movhi	r4,265
 108d228:	213c9904 	addi	r4,r4,-3484
 108d22c:	108d1640 	call	108d164 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 108d230:	108e3f00 	call	108e3f0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 108d234:	108e5d80 	call	108e5d8 <alt_icache_flush_all>
}
 108d238:	0001883a 	nop
 108d23c:	e037883a 	mov	sp,fp
 108d240:	dfc00117 	ldw	ra,4(sp)
 108d244:	df000017 	ldw	fp,0(sp)
 108d248:	dec00204 	addi	sp,sp,8
 108d24c:	f800283a 	ret

0108d250 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108d250:	defffe04 	addi	sp,sp,-8
 108d254:	dfc00115 	stw	ra,4(sp)
 108d258:	df000015 	stw	fp,0(sp)
 108d25c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108d260:	d0a00b17 	ldw	r2,-32724(gp)
 108d264:	10000326 	beq	r2,zero,108d274 <alt_get_errno+0x24>
 108d268:	d0a00b17 	ldw	r2,-32724(gp)
 108d26c:	103ee83a 	callr	r2
 108d270:	00000106 	br	108d278 <alt_get_errno+0x28>
 108d274:	d0a6dd04 	addi	r2,gp,-25740
}
 108d278:	e037883a 	mov	sp,fp
 108d27c:	dfc00117 	ldw	ra,4(sp)
 108d280:	df000017 	ldw	fp,0(sp)
 108d284:	dec00204 	addi	sp,sp,8
 108d288:	f800283a 	ret

0108d28c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 108d28c:	defff904 	addi	sp,sp,-28
 108d290:	dfc00615 	stw	ra,24(sp)
 108d294:	df000515 	stw	fp,20(sp)
 108d298:	df000504 	addi	fp,sp,20
 108d29c:	e13ffd15 	stw	r4,-12(fp)
 108d2a0:	e17ffe15 	stw	r5,-8(fp)
 108d2a4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 108d2a8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 108d2ac:	e0bffd17 	ldw	r2,-12(fp)
 108d2b0:	10000616 	blt	r2,zero,108d2cc <lseek+0x40>
 108d2b4:	e0bffd17 	ldw	r2,-12(fp)
 108d2b8:	10c00324 	muli	r3,r2,12
 108d2bc:	00804274 	movhi	r2,265
 108d2c0:	10bf9e04 	addi	r2,r2,-392
 108d2c4:	1885883a 	add	r2,r3,r2
 108d2c8:	00000106 	br	108d2d0 <lseek+0x44>
 108d2cc:	0005883a 	mov	r2,zero
 108d2d0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 108d2d4:	e0bffc17 	ldw	r2,-16(fp)
 108d2d8:	10001026 	beq	r2,zero,108d31c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 108d2dc:	e0bffc17 	ldw	r2,-16(fp)
 108d2e0:	10800017 	ldw	r2,0(r2)
 108d2e4:	10800717 	ldw	r2,28(r2)
 108d2e8:	10000926 	beq	r2,zero,108d310 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 108d2ec:	e0bffc17 	ldw	r2,-16(fp)
 108d2f0:	10800017 	ldw	r2,0(r2)
 108d2f4:	10800717 	ldw	r2,28(r2)
 108d2f8:	e1bfff17 	ldw	r6,-4(fp)
 108d2fc:	e17ffe17 	ldw	r5,-8(fp)
 108d300:	e13ffc17 	ldw	r4,-16(fp)
 108d304:	103ee83a 	callr	r2
 108d308:	e0bffb15 	stw	r2,-20(fp)
 108d30c:	00000506 	br	108d324 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 108d310:	00bfde84 	movi	r2,-134
 108d314:	e0bffb15 	stw	r2,-20(fp)
 108d318:	00000206 	br	108d324 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 108d31c:	00bfebc4 	movi	r2,-81
 108d320:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 108d324:	e0bffb17 	ldw	r2,-20(fp)
 108d328:	1000070e 	bge	r2,zero,108d348 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 108d32c:	108d2500 	call	108d250 <alt_get_errno>
 108d330:	1007883a 	mov	r3,r2
 108d334:	e0bffb17 	ldw	r2,-20(fp)
 108d338:	0085c83a 	sub	r2,zero,r2
 108d33c:	18800015 	stw	r2,0(r3)
    rc = -1;
 108d340:	00bfffc4 	movi	r2,-1
 108d344:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 108d348:	e0bffb17 	ldw	r2,-20(fp)
}
 108d34c:	e037883a 	mov	sp,fp
 108d350:	dfc00117 	ldw	ra,4(sp)
 108d354:	df000017 	ldw	fp,0(sp)
 108d358:	dec00204 	addi	sp,sp,8
 108d35c:	f800283a 	ret

0108d360 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 108d360:	defffd04 	addi	sp,sp,-12
 108d364:	dfc00215 	stw	ra,8(sp)
 108d368:	df000115 	stw	fp,4(sp)
 108d36c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 108d370:	0009883a 	mov	r4,zero
 108d374:	108d7d80 	call	108d7d8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 108d378:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 108d37c:	108d8100 	call	108d810 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 108d380:	01804274 	movhi	r6,265
 108d384:	31bd5d04 	addi	r6,r6,-2700
 108d388:	01404274 	movhi	r5,265
 108d38c:	297d5d04 	addi	r5,r5,-2700
 108d390:	01004274 	movhi	r4,265
 108d394:	213d5d04 	addi	r4,r4,-2700
 108d398:	108e6d00 	call	108e6d0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 108d39c:	108e5180 	call	108e518 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 108d3a0:	01004274 	movhi	r4,265
 108d3a4:	21395e04 	addi	r4,r4,-6792
 108d3a8:	108eed00 	call	108eed0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 108d3ac:	d0a6df17 	ldw	r2,-25732(gp)
 108d3b0:	d0e6e017 	ldw	r3,-25728(gp)
 108d3b4:	d126e117 	ldw	r4,-25724(gp)
 108d3b8:	200d883a 	mov	r6,r4
 108d3bc:	180b883a 	mov	r5,r3
 108d3c0:	1009883a 	mov	r4,r2
 108d3c4:	10802ec0 	call	10802ec <main>
 108d3c8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 108d3cc:	01000044 	movi	r4,1
 108d3d0:	108cd1c0 	call	108cd1c <close>
  exit (result);
 108d3d4:	e13fff17 	ldw	r4,-4(fp)
 108d3d8:	108eee40 	call	108eee4 <exit>

0108d3dc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 108d3dc:	defffe04 	addi	sp,sp,-8
 108d3e0:	df000115 	stw	fp,4(sp)
 108d3e4:	df000104 	addi	fp,sp,4
 108d3e8:	e13fff15 	stw	r4,-4(fp)
}
 108d3ec:	0001883a 	nop
 108d3f0:	e037883a 	mov	sp,fp
 108d3f4:	df000017 	ldw	fp,0(sp)
 108d3f8:	dec00104 	addi	sp,sp,4
 108d3fc:	f800283a 	ret

0108d400 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 108d400:	defffe04 	addi	sp,sp,-8
 108d404:	df000115 	stw	fp,4(sp)
 108d408:	df000104 	addi	fp,sp,4
 108d40c:	e13fff15 	stw	r4,-4(fp)
}
 108d410:	0001883a 	nop
 108d414:	e037883a 	mov	sp,fp
 108d418:	df000017 	ldw	fp,0(sp)
 108d41c:	dec00104 	addi	sp,sp,4
 108d420:	f800283a 	ret

0108d424 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108d424:	defffe04 	addi	sp,sp,-8
 108d428:	dfc00115 	stw	ra,4(sp)
 108d42c:	df000015 	stw	fp,0(sp)
 108d430:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108d434:	d0a00b17 	ldw	r2,-32724(gp)
 108d438:	10000326 	beq	r2,zero,108d448 <alt_get_errno+0x24>
 108d43c:	d0a00b17 	ldw	r2,-32724(gp)
 108d440:	103ee83a 	callr	r2
 108d444:	00000106 	br	108d44c <alt_get_errno+0x28>
 108d448:	d0a6dd04 	addi	r2,gp,-25740
}
 108d44c:	e037883a 	mov	sp,fp
 108d450:	dfc00117 	ldw	ra,4(sp)
 108d454:	df000017 	ldw	fp,0(sp)
 108d458:	dec00204 	addi	sp,sp,8
 108d45c:	f800283a 	ret

0108d460 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 108d460:	defff904 	addi	sp,sp,-28
 108d464:	dfc00615 	stw	ra,24(sp)
 108d468:	df000515 	stw	fp,20(sp)
 108d46c:	df000504 	addi	fp,sp,20
 108d470:	e13ffd15 	stw	r4,-12(fp)
 108d474:	e17ffe15 	stw	r5,-8(fp)
 108d478:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 108d47c:	e0bffd17 	ldw	r2,-12(fp)
 108d480:	10000616 	blt	r2,zero,108d49c <read+0x3c>
 108d484:	e0bffd17 	ldw	r2,-12(fp)
 108d488:	10c00324 	muli	r3,r2,12
 108d48c:	00804274 	movhi	r2,265
 108d490:	10bf9e04 	addi	r2,r2,-392
 108d494:	1885883a 	add	r2,r3,r2
 108d498:	00000106 	br	108d4a0 <read+0x40>
 108d49c:	0005883a 	mov	r2,zero
 108d4a0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 108d4a4:	e0bffb17 	ldw	r2,-20(fp)
 108d4a8:	10002226 	beq	r2,zero,108d534 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 108d4ac:	e0bffb17 	ldw	r2,-20(fp)
 108d4b0:	10800217 	ldw	r2,8(r2)
 108d4b4:	108000cc 	andi	r2,r2,3
 108d4b8:	10800060 	cmpeqi	r2,r2,1
 108d4bc:	1000181e 	bne	r2,zero,108d520 <read+0xc0>
        (fd->dev->read))
 108d4c0:	e0bffb17 	ldw	r2,-20(fp)
 108d4c4:	10800017 	ldw	r2,0(r2)
 108d4c8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 108d4cc:	10001426 	beq	r2,zero,108d520 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 108d4d0:	e0bffb17 	ldw	r2,-20(fp)
 108d4d4:	10800017 	ldw	r2,0(r2)
 108d4d8:	10800517 	ldw	r2,20(r2)
 108d4dc:	e0ffff17 	ldw	r3,-4(fp)
 108d4e0:	180d883a 	mov	r6,r3
 108d4e4:	e17ffe17 	ldw	r5,-8(fp)
 108d4e8:	e13ffb17 	ldw	r4,-20(fp)
 108d4ec:	103ee83a 	callr	r2
 108d4f0:	e0bffc15 	stw	r2,-16(fp)
 108d4f4:	e0bffc17 	ldw	r2,-16(fp)
 108d4f8:	1000070e 	bge	r2,zero,108d518 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 108d4fc:	108d4240 	call	108d424 <alt_get_errno>
 108d500:	1007883a 	mov	r3,r2
 108d504:	e0bffc17 	ldw	r2,-16(fp)
 108d508:	0085c83a 	sub	r2,zero,r2
 108d50c:	18800015 	stw	r2,0(r3)
          return -1;
 108d510:	00bfffc4 	movi	r2,-1
 108d514:	00000c06 	br	108d548 <read+0xe8>
        }
        return rval;
 108d518:	e0bffc17 	ldw	r2,-16(fp)
 108d51c:	00000a06 	br	108d548 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 108d520:	108d4240 	call	108d424 <alt_get_errno>
 108d524:	1007883a 	mov	r3,r2
 108d528:	00800344 	movi	r2,13
 108d52c:	18800015 	stw	r2,0(r3)
 108d530:	00000406 	br	108d544 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 108d534:	108d4240 	call	108d424 <alt_get_errno>
 108d538:	1007883a 	mov	r3,r2
 108d53c:	00801444 	movi	r2,81
 108d540:	18800015 	stw	r2,0(r3)
  }
  return -1;
 108d544:	00bfffc4 	movi	r2,-1
}
 108d548:	e037883a 	mov	sp,fp
 108d54c:	dfc00117 	ldw	ra,4(sp)
 108d550:	df000017 	ldw	fp,0(sp)
 108d554:	dec00204 	addi	sp,sp,8
 108d558:	f800283a 	ret

0108d55c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 108d55c:	defffe04 	addi	sp,sp,-8
 108d560:	df000115 	stw	fp,4(sp)
 108d564:	df000104 	addi	fp,sp,4
 108d568:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 108d56c:	e0bfff17 	ldw	r2,-4(fp)
 108d570:	108000d0 	cmplti	r2,r2,3
 108d574:	10000d1e 	bne	r2,zero,108d5ac <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 108d578:	00804274 	movhi	r2,265
 108d57c:	10bf9e04 	addi	r2,r2,-392
 108d580:	e0ffff17 	ldw	r3,-4(fp)
 108d584:	18c00324 	muli	r3,r3,12
 108d588:	10c5883a 	add	r2,r2,r3
 108d58c:	10800204 	addi	r2,r2,8
 108d590:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 108d594:	00804274 	movhi	r2,265
 108d598:	10bf9e04 	addi	r2,r2,-392
 108d59c:	e0ffff17 	ldw	r3,-4(fp)
 108d5a0:	18c00324 	muli	r3,r3,12
 108d5a4:	10c5883a 	add	r2,r2,r3
 108d5a8:	10000015 	stw	zero,0(r2)
  }
}
 108d5ac:	0001883a 	nop
 108d5b0:	e037883a 	mov	sp,fp
 108d5b4:	df000017 	ldw	fp,0(sp)
 108d5b8:	dec00104 	addi	sp,sp,4
 108d5bc:	f800283a 	ret

0108d5c0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 108d5c0:	defff904 	addi	sp,sp,-28
 108d5c4:	df000615 	stw	fp,24(sp)
 108d5c8:	df000604 	addi	fp,sp,24
 108d5cc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108d5d0:	0005303a 	rdctl	r2,status
 108d5d4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108d5d8:	e0fffe17 	ldw	r3,-8(fp)
 108d5dc:	00bfff84 	movi	r2,-2
 108d5e0:	1884703a 	and	r2,r3,r2
 108d5e4:	1001703a 	wrctl	status,r2
  
  return context;
 108d5e8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 108d5ec:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 108d5f0:	d0a00d17 	ldw	r2,-32716(gp)
 108d5f4:	10c000c4 	addi	r3,r2,3
 108d5f8:	00bfff04 	movi	r2,-4
 108d5fc:	1884703a 	and	r2,r3,r2
 108d600:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 108d604:	d0e00d17 	ldw	r3,-32716(gp)
 108d608:	e0bfff17 	ldw	r2,-4(fp)
 108d60c:	1887883a 	add	r3,r3,r2
 108d610:	008043b4 	movhi	r2,270
 108d614:	1086a004 	addi	r2,r2,6784
 108d618:	10c0062e 	bgeu	r2,r3,108d634 <sbrk+0x74>
 108d61c:	e0bffb17 	ldw	r2,-20(fp)
 108d620:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108d624:	e0bffa17 	ldw	r2,-24(fp)
 108d628:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 108d62c:	00bfffc4 	movi	r2,-1
 108d630:	00000b06 	br	108d660 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 108d634:	d0a00d17 	ldw	r2,-32716(gp)
 108d638:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 108d63c:	d0e00d17 	ldw	r3,-32716(gp)
 108d640:	e0bfff17 	ldw	r2,-4(fp)
 108d644:	1885883a 	add	r2,r3,r2
 108d648:	d0a00d15 	stw	r2,-32716(gp)
 108d64c:	e0bffb17 	ldw	r2,-20(fp)
 108d650:	e0bffc15 	stw	r2,-16(fp)
 108d654:	e0bffc17 	ldw	r2,-16(fp)
 108d658:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 108d65c:	e0bffd17 	ldw	r2,-12(fp)
} 
 108d660:	e037883a 	mov	sp,fp
 108d664:	df000017 	ldw	fp,0(sp)
 108d668:	dec00104 	addi	sp,sp,4
 108d66c:	f800283a 	ret

0108d670 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108d670:	defffe04 	addi	sp,sp,-8
 108d674:	dfc00115 	stw	ra,4(sp)
 108d678:	df000015 	stw	fp,0(sp)
 108d67c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108d680:	d0a00b17 	ldw	r2,-32724(gp)
 108d684:	10000326 	beq	r2,zero,108d694 <alt_get_errno+0x24>
 108d688:	d0a00b17 	ldw	r2,-32724(gp)
 108d68c:	103ee83a 	callr	r2
 108d690:	00000106 	br	108d698 <alt_get_errno+0x28>
 108d694:	d0a6dd04 	addi	r2,gp,-25740
}
 108d698:	e037883a 	mov	sp,fp
 108d69c:	dfc00117 	ldw	ra,4(sp)
 108d6a0:	df000017 	ldw	fp,0(sp)
 108d6a4:	dec00204 	addi	sp,sp,8
 108d6a8:	f800283a 	ret

0108d6ac <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 108d6ac:	defff904 	addi	sp,sp,-28
 108d6b0:	dfc00615 	stw	ra,24(sp)
 108d6b4:	df000515 	stw	fp,20(sp)
 108d6b8:	df000504 	addi	fp,sp,20
 108d6bc:	e13ffd15 	stw	r4,-12(fp)
 108d6c0:	e17ffe15 	stw	r5,-8(fp)
 108d6c4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 108d6c8:	e0bffd17 	ldw	r2,-12(fp)
 108d6cc:	10000616 	blt	r2,zero,108d6e8 <write+0x3c>
 108d6d0:	e0bffd17 	ldw	r2,-12(fp)
 108d6d4:	10c00324 	muli	r3,r2,12
 108d6d8:	00804274 	movhi	r2,265
 108d6dc:	10bf9e04 	addi	r2,r2,-392
 108d6e0:	1885883a 	add	r2,r3,r2
 108d6e4:	00000106 	br	108d6ec <write+0x40>
 108d6e8:	0005883a 	mov	r2,zero
 108d6ec:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 108d6f0:	e0bffb17 	ldw	r2,-20(fp)
 108d6f4:	10002126 	beq	r2,zero,108d77c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 108d6f8:	e0bffb17 	ldw	r2,-20(fp)
 108d6fc:	10800217 	ldw	r2,8(r2)
 108d700:	108000cc 	andi	r2,r2,3
 108d704:	10001826 	beq	r2,zero,108d768 <write+0xbc>
 108d708:	e0bffb17 	ldw	r2,-20(fp)
 108d70c:	10800017 	ldw	r2,0(r2)
 108d710:	10800617 	ldw	r2,24(r2)
 108d714:	10001426 	beq	r2,zero,108d768 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 108d718:	e0bffb17 	ldw	r2,-20(fp)
 108d71c:	10800017 	ldw	r2,0(r2)
 108d720:	10800617 	ldw	r2,24(r2)
 108d724:	e0ffff17 	ldw	r3,-4(fp)
 108d728:	180d883a 	mov	r6,r3
 108d72c:	e17ffe17 	ldw	r5,-8(fp)
 108d730:	e13ffb17 	ldw	r4,-20(fp)
 108d734:	103ee83a 	callr	r2
 108d738:	e0bffc15 	stw	r2,-16(fp)
 108d73c:	e0bffc17 	ldw	r2,-16(fp)
 108d740:	1000070e 	bge	r2,zero,108d760 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 108d744:	108d6700 	call	108d670 <alt_get_errno>
 108d748:	1007883a 	mov	r3,r2
 108d74c:	e0bffc17 	ldw	r2,-16(fp)
 108d750:	0085c83a 	sub	r2,zero,r2
 108d754:	18800015 	stw	r2,0(r3)
        return -1;
 108d758:	00bfffc4 	movi	r2,-1
 108d75c:	00000c06 	br	108d790 <write+0xe4>
      }
      return rval;
 108d760:	e0bffc17 	ldw	r2,-16(fp)
 108d764:	00000a06 	br	108d790 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 108d768:	108d6700 	call	108d670 <alt_get_errno>
 108d76c:	1007883a 	mov	r3,r2
 108d770:	00800344 	movi	r2,13
 108d774:	18800015 	stw	r2,0(r3)
 108d778:	00000406 	br	108d78c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 108d77c:	108d6700 	call	108d670 <alt_get_errno>
 108d780:	1007883a 	mov	r3,r2
 108d784:	00801444 	movi	r2,81
 108d788:	18800015 	stw	r2,0(r3)
  }
  return -1;
 108d78c:	00bfffc4 	movi	r2,-1
}
 108d790:	e037883a 	mov	sp,fp
 108d794:	dfc00117 	ldw	ra,4(sp)
 108d798:	df000017 	ldw	fp,0(sp)
 108d79c:	dec00204 	addi	sp,sp,8
 108d7a0:	f800283a 	ret

0108d7a4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 108d7a4:	defffd04 	addi	sp,sp,-12
 108d7a8:	dfc00215 	stw	ra,8(sp)
 108d7ac:	df000115 	stw	fp,4(sp)
 108d7b0:	df000104 	addi	fp,sp,4
 108d7b4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 108d7b8:	d1600804 	addi	r5,gp,-32736
 108d7bc:	e13fff17 	ldw	r4,-4(fp)
 108d7c0:	108e4740 	call	108e474 <alt_dev_llist_insert>
}
 108d7c4:	e037883a 	mov	sp,fp
 108d7c8:	dfc00117 	ldw	ra,4(sp)
 108d7cc:	df000017 	ldw	fp,0(sp)
 108d7d0:	dec00204 	addi	sp,sp,8
 108d7d4:	f800283a 	ret

0108d7d8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 108d7d8:	defffd04 	addi	sp,sp,-12
 108d7dc:	dfc00215 	stw	ra,8(sp)
 108d7e0:	df000115 	stw	fp,4(sp)
 108d7e4:	df000104 	addi	fp,sp,4
 108d7e8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 108d7ec:	108eb440 	call	108eb44 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 108d7f0:	00800044 	movi	r2,1
 108d7f4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 108d7f8:	0001883a 	nop
 108d7fc:	e037883a 	mov	sp,fp
 108d800:	dfc00117 	ldw	ra,4(sp)
 108d804:	df000017 	ldw	fp,0(sp)
 108d808:	dec00204 	addi	sp,sp,8
 108d80c:	f800283a 	ret

0108d810 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 108d810:	defffe04 	addi	sp,sp,-8
 108d814:	dfc00115 	stw	ra,4(sp)
 108d818:	df000015 	stw	fp,0(sp)
 108d81c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 108d820:	01800044 	movi	r6,1
 108d824:	000b883a 	mov	r5,zero
 108d828:	01004274 	movhi	r4,265
 108d82c:	21000804 	addi	r4,r4,32
 108d830:	108d9c80 	call	108d9c8 <altera_avalon_jtag_uart_init>
 108d834:	01004274 	movhi	r4,265
 108d838:	213ffe04 	addi	r4,r4,-8
 108d83c:	108d7a40 	call	108d7a4 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_0, audio_0);
 108d840:	01004274 	movhi	r4,265
 108d844:	21041604 	addi	r4,r4,4184
 108d848:	108d7a40 	call	108d7a4 <alt_dev_reg>
}
 108d84c:	0001883a 	nop
 108d850:	e037883a 	mov	sp,fp
 108d854:	dfc00117 	ldw	ra,4(sp)
 108d858:	df000017 	ldw	fp,0(sp)
 108d85c:	dec00204 	addi	sp,sp,8
 108d860:	f800283a 	ret

0108d864 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 108d864:	defffa04 	addi	sp,sp,-24
 108d868:	dfc00515 	stw	ra,20(sp)
 108d86c:	df000415 	stw	fp,16(sp)
 108d870:	df000404 	addi	fp,sp,16
 108d874:	e13ffd15 	stw	r4,-12(fp)
 108d878:	e17ffe15 	stw	r5,-8(fp)
 108d87c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 108d880:	e0bffd17 	ldw	r2,-12(fp)
 108d884:	10800017 	ldw	r2,0(r2)
 108d888:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 108d88c:	e0bffc17 	ldw	r2,-16(fp)
 108d890:	10c00a04 	addi	r3,r2,40
 108d894:	e0bffd17 	ldw	r2,-12(fp)
 108d898:	10800217 	ldw	r2,8(r2)
 108d89c:	100f883a 	mov	r7,r2
 108d8a0:	e1bfff17 	ldw	r6,-4(fp)
 108d8a4:	e17ffe17 	ldw	r5,-8(fp)
 108d8a8:	1809883a 	mov	r4,r3
 108d8ac:	108de840 	call	108de84 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 108d8b0:	e037883a 	mov	sp,fp
 108d8b4:	dfc00117 	ldw	ra,4(sp)
 108d8b8:	df000017 	ldw	fp,0(sp)
 108d8bc:	dec00204 	addi	sp,sp,8
 108d8c0:	f800283a 	ret

0108d8c4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 108d8c4:	defffa04 	addi	sp,sp,-24
 108d8c8:	dfc00515 	stw	ra,20(sp)
 108d8cc:	df000415 	stw	fp,16(sp)
 108d8d0:	df000404 	addi	fp,sp,16
 108d8d4:	e13ffd15 	stw	r4,-12(fp)
 108d8d8:	e17ffe15 	stw	r5,-8(fp)
 108d8dc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 108d8e0:	e0bffd17 	ldw	r2,-12(fp)
 108d8e4:	10800017 	ldw	r2,0(r2)
 108d8e8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 108d8ec:	e0bffc17 	ldw	r2,-16(fp)
 108d8f0:	10c00a04 	addi	r3,r2,40
 108d8f4:	e0bffd17 	ldw	r2,-12(fp)
 108d8f8:	10800217 	ldw	r2,8(r2)
 108d8fc:	100f883a 	mov	r7,r2
 108d900:	e1bfff17 	ldw	r6,-4(fp)
 108d904:	e17ffe17 	ldw	r5,-8(fp)
 108d908:	1809883a 	mov	r4,r3
 108d90c:	108e0a00 	call	108e0a0 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 108d910:	e037883a 	mov	sp,fp
 108d914:	dfc00117 	ldw	ra,4(sp)
 108d918:	df000017 	ldw	fp,0(sp)
 108d91c:	dec00204 	addi	sp,sp,8
 108d920:	f800283a 	ret

0108d924 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 108d924:	defffc04 	addi	sp,sp,-16
 108d928:	dfc00315 	stw	ra,12(sp)
 108d92c:	df000215 	stw	fp,8(sp)
 108d930:	df000204 	addi	fp,sp,8
 108d934:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 108d938:	e0bfff17 	ldw	r2,-4(fp)
 108d93c:	10800017 	ldw	r2,0(r2)
 108d940:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 108d944:	e0bffe17 	ldw	r2,-8(fp)
 108d948:	10c00a04 	addi	r3,r2,40
 108d94c:	e0bfff17 	ldw	r2,-4(fp)
 108d950:	10800217 	ldw	r2,8(r2)
 108d954:	100b883a 	mov	r5,r2
 108d958:	1809883a 	mov	r4,r3
 108d95c:	108dd2c0 	call	108dd2c <altera_avalon_jtag_uart_close>
}
 108d960:	e037883a 	mov	sp,fp
 108d964:	dfc00117 	ldw	ra,4(sp)
 108d968:	df000017 	ldw	fp,0(sp)
 108d96c:	dec00204 	addi	sp,sp,8
 108d970:	f800283a 	ret

0108d974 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 108d974:	defffa04 	addi	sp,sp,-24
 108d978:	dfc00515 	stw	ra,20(sp)
 108d97c:	df000415 	stw	fp,16(sp)
 108d980:	df000404 	addi	fp,sp,16
 108d984:	e13ffd15 	stw	r4,-12(fp)
 108d988:	e17ffe15 	stw	r5,-8(fp)
 108d98c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 108d990:	e0bffd17 	ldw	r2,-12(fp)
 108d994:	10800017 	ldw	r2,0(r2)
 108d998:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 108d99c:	e0bffc17 	ldw	r2,-16(fp)
 108d9a0:	10800a04 	addi	r2,r2,40
 108d9a4:	e1bfff17 	ldw	r6,-4(fp)
 108d9a8:	e17ffe17 	ldw	r5,-8(fp)
 108d9ac:	1009883a 	mov	r4,r2
 108d9b0:	108dd940 	call	108dd94 <altera_avalon_jtag_uart_ioctl>
}
 108d9b4:	e037883a 	mov	sp,fp
 108d9b8:	dfc00117 	ldw	ra,4(sp)
 108d9bc:	df000017 	ldw	fp,0(sp)
 108d9c0:	dec00204 	addi	sp,sp,8
 108d9c4:	f800283a 	ret

0108d9c8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 108d9c8:	defffb04 	addi	sp,sp,-20
 108d9cc:	dfc00415 	stw	ra,16(sp)
 108d9d0:	df000315 	stw	fp,12(sp)
 108d9d4:	df000304 	addi	fp,sp,12
 108d9d8:	e13ffd15 	stw	r4,-12(fp)
 108d9dc:	e17ffe15 	stw	r5,-8(fp)
 108d9e0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 108d9e4:	e0bffd17 	ldw	r2,-12(fp)
 108d9e8:	00c00044 	movi	r3,1
 108d9ec:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 108d9f0:	e0bffd17 	ldw	r2,-12(fp)
 108d9f4:	10800017 	ldw	r2,0(r2)
 108d9f8:	10800104 	addi	r2,r2,4
 108d9fc:	1007883a 	mov	r3,r2
 108da00:	e0bffd17 	ldw	r2,-12(fp)
 108da04:	10800817 	ldw	r2,32(r2)
 108da08:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 108da0c:	e0bfff17 	ldw	r2,-4(fp)
 108da10:	01804274 	movhi	r6,265
 108da14:	31b69f04 	addi	r6,r6,-9604
 108da18:	e17ffd17 	ldw	r5,-12(fp)
 108da1c:	1009883a 	mov	r4,r2
 108da20:	108cf040 	call	108cf04 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 108da24:	e0bffd17 	ldw	r2,-12(fp)
 108da28:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 108da2c:	e0bffd17 	ldw	r2,-12(fp)
 108da30:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 108da34:	d0e6e217 	ldw	r3,-25720(gp)
 108da38:	e1fffd17 	ldw	r7,-12(fp)
 108da3c:	01804274 	movhi	r6,265
 108da40:	31b72304 	addi	r6,r6,-9076
 108da44:	180b883a 	mov	r5,r3
 108da48:	1009883a 	mov	r4,r2
 108da4c:	108e2c40 	call	108e2c4 <alt_alarm_start>
 108da50:	1000040e 	bge	r2,zero,108da64 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 108da54:	e0fffd17 	ldw	r3,-12(fp)
 108da58:	00a00034 	movhi	r2,32768
 108da5c:	10bfffc4 	addi	r2,r2,-1
 108da60:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 108da64:	0001883a 	nop
 108da68:	e037883a 	mov	sp,fp
 108da6c:	dfc00117 	ldw	ra,4(sp)
 108da70:	df000017 	ldw	fp,0(sp)
 108da74:	dec00204 	addi	sp,sp,8
 108da78:	f800283a 	ret

0108da7c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 108da7c:	defff704 	addi	sp,sp,-36
 108da80:	df000815 	stw	fp,32(sp)
 108da84:	df000804 	addi	fp,sp,32
 108da88:	e13ffe15 	stw	r4,-8(fp)
 108da8c:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 108da90:	e0bffe17 	ldw	r2,-8(fp)
 108da94:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 108da98:	e0bffa17 	ldw	r2,-24(fp)
 108da9c:	10800017 	ldw	r2,0(r2)
 108daa0:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 108daa4:	e0bffb17 	ldw	r2,-20(fp)
 108daa8:	10800104 	addi	r2,r2,4
 108daac:	10800037 	ldwio	r2,0(r2)
 108dab0:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 108dab4:	e0bffc17 	ldw	r2,-16(fp)
 108dab8:	1080c00c 	andi	r2,r2,768
 108dabc:	10006d26 	beq	r2,zero,108dc74 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 108dac0:	e0bffc17 	ldw	r2,-16(fp)
 108dac4:	1080400c 	andi	r2,r2,256
 108dac8:	10003526 	beq	r2,zero,108dba0 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 108dacc:	00800074 	movhi	r2,1
 108dad0:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 108dad4:	e0bffa17 	ldw	r2,-24(fp)
 108dad8:	10800a17 	ldw	r2,40(r2)
 108dadc:	10800044 	addi	r2,r2,1
 108dae0:	1081ffcc 	andi	r2,r2,2047
 108dae4:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 108dae8:	e0bffa17 	ldw	r2,-24(fp)
 108daec:	10c00b17 	ldw	r3,44(r2)
 108daf0:	e0bffd17 	ldw	r2,-12(fp)
 108daf4:	18801526 	beq	r3,r2,108db4c <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 108daf8:	e0bffb17 	ldw	r2,-20(fp)
 108dafc:	10800037 	ldwio	r2,0(r2)
 108db00:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 108db04:	e0bff817 	ldw	r2,-32(fp)
 108db08:	10a0000c 	andi	r2,r2,32768
 108db0c:	10001126 	beq	r2,zero,108db54 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 108db10:	e0bffa17 	ldw	r2,-24(fp)
 108db14:	10800a17 	ldw	r2,40(r2)
 108db18:	e0fff817 	ldw	r3,-32(fp)
 108db1c:	1809883a 	mov	r4,r3
 108db20:	e0fffa17 	ldw	r3,-24(fp)
 108db24:	1885883a 	add	r2,r3,r2
 108db28:	10800e04 	addi	r2,r2,56
 108db2c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 108db30:	e0bffa17 	ldw	r2,-24(fp)
 108db34:	10800a17 	ldw	r2,40(r2)
 108db38:	10800044 	addi	r2,r2,1
 108db3c:	10c1ffcc 	andi	r3,r2,2047
 108db40:	e0bffa17 	ldw	r2,-24(fp)
 108db44:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 108db48:	003fe206 	br	108dad4 <altera_avalon_jtag_uart_irq+0x58>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 108db4c:	0001883a 	nop
 108db50:	00000106 	br	108db58 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 108db54:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 108db58:	e0bff817 	ldw	r2,-32(fp)
 108db5c:	10bfffec 	andhi	r2,r2,65535
 108db60:	10000f26 	beq	r2,zero,108dba0 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 108db64:	e0bffa17 	ldw	r2,-24(fp)
 108db68:	10c00817 	ldw	r3,32(r2)
 108db6c:	00bfff84 	movi	r2,-2
 108db70:	1886703a 	and	r3,r3,r2
 108db74:	e0bffa17 	ldw	r2,-24(fp)
 108db78:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 108db7c:	e0bffb17 	ldw	r2,-20(fp)
 108db80:	10800104 	addi	r2,r2,4
 108db84:	1007883a 	mov	r3,r2
 108db88:	e0bffa17 	ldw	r2,-24(fp)
 108db8c:	10800817 	ldw	r2,32(r2)
 108db90:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 108db94:	e0bffb17 	ldw	r2,-20(fp)
 108db98:	10800104 	addi	r2,r2,4
 108db9c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 108dba0:	e0bffc17 	ldw	r2,-16(fp)
 108dba4:	1080800c 	andi	r2,r2,512
 108dba8:	103fbe26 	beq	r2,zero,108daa4 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 108dbac:	e0bffc17 	ldw	r2,-16(fp)
 108dbb0:	1004d43a 	srli	r2,r2,16
 108dbb4:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 108dbb8:	00001406 	br	108dc0c <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 108dbbc:	e0bffb17 	ldw	r2,-20(fp)
 108dbc0:	e0fffa17 	ldw	r3,-24(fp)
 108dbc4:	18c00d17 	ldw	r3,52(r3)
 108dbc8:	e13ffa17 	ldw	r4,-24(fp)
 108dbcc:	20c7883a 	add	r3,r4,r3
 108dbd0:	18c20e04 	addi	r3,r3,2104
 108dbd4:	18c00003 	ldbu	r3,0(r3)
 108dbd8:	18c03fcc 	andi	r3,r3,255
 108dbdc:	18c0201c 	xori	r3,r3,128
 108dbe0:	18ffe004 	addi	r3,r3,-128
 108dbe4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 108dbe8:	e0bffa17 	ldw	r2,-24(fp)
 108dbec:	10800d17 	ldw	r2,52(r2)
 108dbf0:	10800044 	addi	r2,r2,1
 108dbf4:	10c1ffcc 	andi	r3,r2,2047
 108dbf8:	e0bffa17 	ldw	r2,-24(fp)
 108dbfc:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 108dc00:	e0bff917 	ldw	r2,-28(fp)
 108dc04:	10bfffc4 	addi	r2,r2,-1
 108dc08:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 108dc0c:	e0bff917 	ldw	r2,-28(fp)
 108dc10:	10000526 	beq	r2,zero,108dc28 <altera_avalon_jtag_uart_irq+0x1ac>
 108dc14:	e0bffa17 	ldw	r2,-24(fp)
 108dc18:	10c00d17 	ldw	r3,52(r2)
 108dc1c:	e0bffa17 	ldw	r2,-24(fp)
 108dc20:	10800c17 	ldw	r2,48(r2)
 108dc24:	18bfe51e 	bne	r3,r2,108dbbc <altera_avalon_jtag_uart_irq+0x140>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 108dc28:	e0bff917 	ldw	r2,-28(fp)
 108dc2c:	103f9d26 	beq	r2,zero,108daa4 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 108dc30:	e0bffa17 	ldw	r2,-24(fp)
 108dc34:	10c00817 	ldw	r3,32(r2)
 108dc38:	00bfff44 	movi	r2,-3
 108dc3c:	1886703a 	and	r3,r3,r2
 108dc40:	e0bffa17 	ldw	r2,-24(fp)
 108dc44:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 108dc48:	e0bffa17 	ldw	r2,-24(fp)
 108dc4c:	10800017 	ldw	r2,0(r2)
 108dc50:	10800104 	addi	r2,r2,4
 108dc54:	1007883a 	mov	r3,r2
 108dc58:	e0bffa17 	ldw	r2,-24(fp)
 108dc5c:	10800817 	ldw	r2,32(r2)
 108dc60:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 108dc64:	e0bffb17 	ldw	r2,-20(fp)
 108dc68:	10800104 	addi	r2,r2,4
 108dc6c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 108dc70:	003f8c06 	br	108daa4 <altera_avalon_jtag_uart_irq+0x28>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 108dc74:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 108dc78:	0001883a 	nop
 108dc7c:	e037883a 	mov	sp,fp
 108dc80:	df000017 	ldw	fp,0(sp)
 108dc84:	dec00104 	addi	sp,sp,4
 108dc88:	f800283a 	ret

0108dc8c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 108dc8c:	defff804 	addi	sp,sp,-32
 108dc90:	df000715 	stw	fp,28(sp)
 108dc94:	df000704 	addi	fp,sp,28
 108dc98:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 108dc9c:	e0bffb17 	ldw	r2,-20(fp)
 108dca0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 108dca4:	e0bff917 	ldw	r2,-28(fp)
 108dca8:	10800017 	ldw	r2,0(r2)
 108dcac:	10800104 	addi	r2,r2,4
 108dcb0:	10800037 	ldwio	r2,0(r2)
 108dcb4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 108dcb8:	e0bffa17 	ldw	r2,-24(fp)
 108dcbc:	1081000c 	andi	r2,r2,1024
 108dcc0:	10000b26 	beq	r2,zero,108dcf0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 108dcc4:	e0bff917 	ldw	r2,-28(fp)
 108dcc8:	10800017 	ldw	r2,0(r2)
 108dccc:	10800104 	addi	r2,r2,4
 108dcd0:	1007883a 	mov	r3,r2
 108dcd4:	e0bff917 	ldw	r2,-28(fp)
 108dcd8:	10800817 	ldw	r2,32(r2)
 108dcdc:	10810014 	ori	r2,r2,1024
 108dce0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 108dce4:	e0bff917 	ldw	r2,-28(fp)
 108dce8:	10000915 	stw	zero,36(r2)
 108dcec:	00000a06 	br	108dd18 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 108dcf0:	e0bff917 	ldw	r2,-28(fp)
 108dcf4:	10c00917 	ldw	r3,36(r2)
 108dcf8:	00a00034 	movhi	r2,32768
 108dcfc:	10bfff04 	addi	r2,r2,-4
 108dd00:	10c00536 	bltu	r2,r3,108dd18 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 108dd04:	e0bff917 	ldw	r2,-28(fp)
 108dd08:	10800917 	ldw	r2,36(r2)
 108dd0c:	10c00044 	addi	r3,r2,1
 108dd10:	e0bff917 	ldw	r2,-28(fp)
 108dd14:	10c00915 	stw	r3,36(r2)
 108dd18:	d0a6e217 	ldw	r2,-25720(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 108dd1c:	e037883a 	mov	sp,fp
 108dd20:	df000017 	ldw	fp,0(sp)
 108dd24:	dec00104 	addi	sp,sp,4
 108dd28:	f800283a 	ret

0108dd2c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 108dd2c:	defffd04 	addi	sp,sp,-12
 108dd30:	df000215 	stw	fp,8(sp)
 108dd34:	df000204 	addi	fp,sp,8
 108dd38:	e13ffe15 	stw	r4,-8(fp)
 108dd3c:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 108dd40:	00000506 	br	108dd58 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 108dd44:	e0bfff17 	ldw	r2,-4(fp)
 108dd48:	1090000c 	andi	r2,r2,16384
 108dd4c:	10000226 	beq	r2,zero,108dd58 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 108dd50:	00bffd44 	movi	r2,-11
 108dd54:	00000b06 	br	108dd84 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 108dd58:	e0bffe17 	ldw	r2,-8(fp)
 108dd5c:	10c00d17 	ldw	r3,52(r2)
 108dd60:	e0bffe17 	ldw	r2,-8(fp)
 108dd64:	10800c17 	ldw	r2,48(r2)
 108dd68:	18800526 	beq	r3,r2,108dd80 <altera_avalon_jtag_uart_close+0x54>
 108dd6c:	e0bffe17 	ldw	r2,-8(fp)
 108dd70:	10c00917 	ldw	r3,36(r2)
 108dd74:	e0bffe17 	ldw	r2,-8(fp)
 108dd78:	10800117 	ldw	r2,4(r2)
 108dd7c:	18bff136 	bltu	r3,r2,108dd44 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 108dd80:	0005883a 	mov	r2,zero
}
 108dd84:	e037883a 	mov	sp,fp
 108dd88:	df000017 	ldw	fp,0(sp)
 108dd8c:	dec00104 	addi	sp,sp,4
 108dd90:	f800283a 	ret

0108dd94 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 108dd94:	defffa04 	addi	sp,sp,-24
 108dd98:	df000515 	stw	fp,20(sp)
 108dd9c:	df000504 	addi	fp,sp,20
 108dda0:	e13ffd15 	stw	r4,-12(fp)
 108dda4:	e17ffe15 	stw	r5,-8(fp)
 108dda8:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 108ddac:	00bff9c4 	movi	r2,-25
 108ddb0:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 108ddb4:	e0bffe17 	ldw	r2,-8(fp)
 108ddb8:	10da8060 	cmpeqi	r3,r2,27137
 108ddbc:	1800031e 	bne	r3,zero,108ddcc <altera_avalon_jtag_uart_ioctl+0x38>
 108ddc0:	109a80a0 	cmpeqi	r2,r2,27138
 108ddc4:	1000181e 	bne	r2,zero,108de28 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 108ddc8:	00002906 	br	108de70 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 108ddcc:	e0bffd17 	ldw	r2,-12(fp)
 108ddd0:	10c00117 	ldw	r3,4(r2)
 108ddd4:	00a00034 	movhi	r2,32768
 108ddd8:	10bfffc4 	addi	r2,r2,-1
 108dddc:	18802126 	beq	r3,r2,108de64 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 108dde0:	e0bfff17 	ldw	r2,-4(fp)
 108dde4:	10800017 	ldw	r2,0(r2)
 108dde8:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 108ddec:	e0bffc17 	ldw	r2,-16(fp)
 108ddf0:	10800090 	cmplti	r2,r2,2
 108ddf4:	1000061e 	bne	r2,zero,108de10 <altera_avalon_jtag_uart_ioctl+0x7c>
 108ddf8:	e0fffc17 	ldw	r3,-16(fp)
 108ddfc:	00a00034 	movhi	r2,32768
 108de00:	10bfffc4 	addi	r2,r2,-1
 108de04:	18800226 	beq	r3,r2,108de10 <altera_avalon_jtag_uart_ioctl+0x7c>
 108de08:	e0bffc17 	ldw	r2,-16(fp)
 108de0c:	00000206 	br	108de18 <altera_avalon_jtag_uart_ioctl+0x84>
 108de10:	00a00034 	movhi	r2,32768
 108de14:	10bfff84 	addi	r2,r2,-2
 108de18:	e0fffd17 	ldw	r3,-12(fp)
 108de1c:	18800115 	stw	r2,4(r3)
      rc = 0;
 108de20:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 108de24:	00000f06 	br	108de64 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 108de28:	e0bffd17 	ldw	r2,-12(fp)
 108de2c:	10c00117 	ldw	r3,4(r2)
 108de30:	00a00034 	movhi	r2,32768
 108de34:	10bfffc4 	addi	r2,r2,-1
 108de38:	18800c26 	beq	r3,r2,108de6c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 108de3c:	e0bffd17 	ldw	r2,-12(fp)
 108de40:	10c00917 	ldw	r3,36(r2)
 108de44:	e0bffd17 	ldw	r2,-12(fp)
 108de48:	10800117 	ldw	r2,4(r2)
 108de4c:	1885803a 	cmpltu	r2,r3,r2
 108de50:	10c03fcc 	andi	r3,r2,255
 108de54:	e0bfff17 	ldw	r2,-4(fp)
 108de58:	10c00015 	stw	r3,0(r2)
      rc = 0;
 108de5c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 108de60:	00000206 	br	108de6c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 108de64:	0001883a 	nop
 108de68:	00000106 	br	108de70 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 108de6c:	0001883a 	nop

  default:
    break;
  }

  return rc;
 108de70:	e0bffb17 	ldw	r2,-20(fp)
}
 108de74:	e037883a 	mov	sp,fp
 108de78:	df000017 	ldw	fp,0(sp)
 108de7c:	dec00104 	addi	sp,sp,4
 108de80:	f800283a 	ret

0108de84 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 108de84:	defff304 	addi	sp,sp,-52
 108de88:	dfc00c15 	stw	ra,48(sp)
 108de8c:	df000b15 	stw	fp,44(sp)
 108de90:	df000b04 	addi	fp,sp,44
 108de94:	e13ffc15 	stw	r4,-16(fp)
 108de98:	e17ffd15 	stw	r5,-12(fp)
 108de9c:	e1bffe15 	stw	r6,-8(fp)
 108dea0:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 108dea4:	e0bffd17 	ldw	r2,-12(fp)
 108dea8:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 108deac:	00004706 	br	108dfcc <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 108deb0:	e0bffc17 	ldw	r2,-16(fp)
 108deb4:	10800a17 	ldw	r2,40(r2)
 108deb8:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 108debc:	e0bffc17 	ldw	r2,-16(fp)
 108dec0:	10800b17 	ldw	r2,44(r2)
 108dec4:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 108dec8:	e0fff717 	ldw	r3,-36(fp)
 108decc:	e0bff817 	ldw	r2,-32(fp)
 108ded0:	18800536 	bltu	r3,r2,108dee8 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 108ded4:	e0fff717 	ldw	r3,-36(fp)
 108ded8:	e0bff817 	ldw	r2,-32(fp)
 108dedc:	1885c83a 	sub	r2,r3,r2
 108dee0:	e0bff615 	stw	r2,-40(fp)
 108dee4:	00000406 	br	108def8 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 108dee8:	00c20004 	movi	r3,2048
 108deec:	e0bff817 	ldw	r2,-32(fp)
 108def0:	1885c83a 	sub	r2,r3,r2
 108def4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 108def8:	e0bff617 	ldw	r2,-40(fp)
 108defc:	10001e26 	beq	r2,zero,108df78 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 108df00:	e0fffe17 	ldw	r3,-8(fp)
 108df04:	e0bff617 	ldw	r2,-40(fp)
 108df08:	1880022e 	bgeu	r3,r2,108df14 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 108df0c:	e0bffe17 	ldw	r2,-8(fp)
 108df10:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 108df14:	e0bffc17 	ldw	r2,-16(fp)
 108df18:	10c00e04 	addi	r3,r2,56
 108df1c:	e0bff817 	ldw	r2,-32(fp)
 108df20:	1885883a 	add	r2,r3,r2
 108df24:	e1bff617 	ldw	r6,-40(fp)
 108df28:	100b883a 	mov	r5,r2
 108df2c:	e13ff517 	ldw	r4,-44(fp)
 108df30:	1085e8c0 	call	1085e8c <memcpy>
      ptr   += n;
 108df34:	e0fff517 	ldw	r3,-44(fp)
 108df38:	e0bff617 	ldw	r2,-40(fp)
 108df3c:	1885883a 	add	r2,r3,r2
 108df40:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 108df44:	e0fffe17 	ldw	r3,-8(fp)
 108df48:	e0bff617 	ldw	r2,-40(fp)
 108df4c:	1885c83a 	sub	r2,r3,r2
 108df50:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 108df54:	e0fff817 	ldw	r3,-32(fp)
 108df58:	e0bff617 	ldw	r2,-40(fp)
 108df5c:	1885883a 	add	r2,r3,r2
 108df60:	10c1ffcc 	andi	r3,r2,2047
 108df64:	e0bffc17 	ldw	r2,-16(fp)
 108df68:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 108df6c:	e0bffe17 	ldw	r2,-8(fp)
 108df70:	00bfcf16 	blt	zero,r2,108deb0 <altera_avalon_jtag_uart_read+0x2c>
 108df74:	00000106 	br	108df7c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 108df78:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 108df7c:	e0fff517 	ldw	r3,-44(fp)
 108df80:	e0bffd17 	ldw	r2,-12(fp)
 108df84:	1880141e 	bne	r3,r2,108dfd8 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 108df88:	e0bfff17 	ldw	r2,-4(fp)
 108df8c:	1090000c 	andi	r2,r2,16384
 108df90:	1000131e 	bne	r2,zero,108dfe0 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 108df94:	0001883a 	nop
 108df98:	e0bffc17 	ldw	r2,-16(fp)
 108df9c:	10c00a17 	ldw	r3,40(r2)
 108dfa0:	e0bff717 	ldw	r2,-36(fp)
 108dfa4:	1880051e 	bne	r3,r2,108dfbc <altera_avalon_jtag_uart_read+0x138>
 108dfa8:	e0bffc17 	ldw	r2,-16(fp)
 108dfac:	10c00917 	ldw	r3,36(r2)
 108dfb0:	e0bffc17 	ldw	r2,-16(fp)
 108dfb4:	10800117 	ldw	r2,4(r2)
 108dfb8:	18bff736 	bltu	r3,r2,108df98 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 108dfbc:	e0bffc17 	ldw	r2,-16(fp)
 108dfc0:	10c00a17 	ldw	r3,40(r2)
 108dfc4:	e0bff717 	ldw	r2,-36(fp)
 108dfc8:	18800726 	beq	r3,r2,108dfe8 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 108dfcc:	e0bffe17 	ldw	r2,-8(fp)
 108dfd0:	00bfb716 	blt	zero,r2,108deb0 <altera_avalon_jtag_uart_read+0x2c>
 108dfd4:	00000506 	br	108dfec <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 108dfd8:	0001883a 	nop
 108dfdc:	00000306 	br	108dfec <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 108dfe0:	0001883a 	nop
 108dfe4:	00000106 	br	108dfec <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 108dfe8:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 108dfec:	e0fff517 	ldw	r3,-44(fp)
 108dff0:	e0bffd17 	ldw	r2,-12(fp)
 108dff4:	18801826 	beq	r3,r2,108e058 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108dff8:	0005303a 	rdctl	r2,status
 108dffc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108e000:	e0fffb17 	ldw	r3,-20(fp)
 108e004:	00bfff84 	movi	r2,-2
 108e008:	1884703a 	and	r2,r3,r2
 108e00c:	1001703a 	wrctl	status,r2
  
  return context;
 108e010:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 108e014:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 108e018:	e0bffc17 	ldw	r2,-16(fp)
 108e01c:	10800817 	ldw	r2,32(r2)
 108e020:	10c00054 	ori	r3,r2,1
 108e024:	e0bffc17 	ldw	r2,-16(fp)
 108e028:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 108e02c:	e0bffc17 	ldw	r2,-16(fp)
 108e030:	10800017 	ldw	r2,0(r2)
 108e034:	10800104 	addi	r2,r2,4
 108e038:	1007883a 	mov	r3,r2
 108e03c:	e0bffc17 	ldw	r2,-16(fp)
 108e040:	10800817 	ldw	r2,32(r2)
 108e044:	18800035 	stwio	r2,0(r3)
 108e048:	e0bffa17 	ldw	r2,-24(fp)
 108e04c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108e050:	e0bff917 	ldw	r2,-28(fp)
 108e054:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 108e058:	e0fff517 	ldw	r3,-44(fp)
 108e05c:	e0bffd17 	ldw	r2,-12(fp)
 108e060:	18800426 	beq	r3,r2,108e074 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 108e064:	e0fff517 	ldw	r3,-44(fp)
 108e068:	e0bffd17 	ldw	r2,-12(fp)
 108e06c:	1885c83a 	sub	r2,r3,r2
 108e070:	00000606 	br	108e08c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 108e074:	e0bfff17 	ldw	r2,-4(fp)
 108e078:	1090000c 	andi	r2,r2,16384
 108e07c:	10000226 	beq	r2,zero,108e088 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 108e080:	00bffd44 	movi	r2,-11
 108e084:	00000106 	br	108e08c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 108e088:	00bffec4 	movi	r2,-5
}
 108e08c:	e037883a 	mov	sp,fp
 108e090:	dfc00117 	ldw	ra,4(sp)
 108e094:	df000017 	ldw	fp,0(sp)
 108e098:	dec00204 	addi	sp,sp,8
 108e09c:	f800283a 	ret

0108e0a0 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 108e0a0:	defff304 	addi	sp,sp,-52
 108e0a4:	dfc00c15 	stw	ra,48(sp)
 108e0a8:	df000b15 	stw	fp,44(sp)
 108e0ac:	df000b04 	addi	fp,sp,44
 108e0b0:	e13ffc15 	stw	r4,-16(fp)
 108e0b4:	e17ffd15 	stw	r5,-12(fp)
 108e0b8:	e1bffe15 	stw	r6,-8(fp)
 108e0bc:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 108e0c0:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 108e0c4:	e0bffd17 	ldw	r2,-12(fp)
 108e0c8:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 108e0cc:	00003706 	br	108e1ac <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 108e0d0:	e0bffc17 	ldw	r2,-16(fp)
 108e0d4:	10800c17 	ldw	r2,48(r2)
 108e0d8:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 108e0dc:	e0bffc17 	ldw	r2,-16(fp)
 108e0e0:	10800d17 	ldw	r2,52(r2)
 108e0e4:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 108e0e8:	e0fff917 	ldw	r3,-28(fp)
 108e0ec:	e0bff517 	ldw	r2,-44(fp)
 108e0f0:	1880062e 	bgeu	r3,r2,108e10c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 108e0f4:	e0fff517 	ldw	r3,-44(fp)
 108e0f8:	e0bff917 	ldw	r2,-28(fp)
 108e0fc:	1885c83a 	sub	r2,r3,r2
 108e100:	10bfffc4 	addi	r2,r2,-1
 108e104:	e0bff615 	stw	r2,-40(fp)
 108e108:	00000b06 	br	108e138 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 108e10c:	e0bff517 	ldw	r2,-44(fp)
 108e110:	10000526 	beq	r2,zero,108e128 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 108e114:	00c20004 	movi	r3,2048
 108e118:	e0bff917 	ldw	r2,-28(fp)
 108e11c:	1885c83a 	sub	r2,r3,r2
 108e120:	e0bff615 	stw	r2,-40(fp)
 108e124:	00000406 	br	108e138 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 108e128:	00c1ffc4 	movi	r3,2047
 108e12c:	e0bff917 	ldw	r2,-28(fp)
 108e130:	1885c83a 	sub	r2,r3,r2
 108e134:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 108e138:	e0bff617 	ldw	r2,-40(fp)
 108e13c:	10001e26 	beq	r2,zero,108e1b8 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 108e140:	e0fffe17 	ldw	r3,-8(fp)
 108e144:	e0bff617 	ldw	r2,-40(fp)
 108e148:	1880022e 	bgeu	r3,r2,108e154 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 108e14c:	e0bffe17 	ldw	r2,-8(fp)
 108e150:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 108e154:	e0bffc17 	ldw	r2,-16(fp)
 108e158:	10c20e04 	addi	r3,r2,2104
 108e15c:	e0bff917 	ldw	r2,-28(fp)
 108e160:	1885883a 	add	r2,r3,r2
 108e164:	e1bff617 	ldw	r6,-40(fp)
 108e168:	e17ffd17 	ldw	r5,-12(fp)
 108e16c:	1009883a 	mov	r4,r2
 108e170:	1085e8c0 	call	1085e8c <memcpy>
      ptr   += n;
 108e174:	e0fffd17 	ldw	r3,-12(fp)
 108e178:	e0bff617 	ldw	r2,-40(fp)
 108e17c:	1885883a 	add	r2,r3,r2
 108e180:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 108e184:	e0fffe17 	ldw	r3,-8(fp)
 108e188:	e0bff617 	ldw	r2,-40(fp)
 108e18c:	1885c83a 	sub	r2,r3,r2
 108e190:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 108e194:	e0fff917 	ldw	r3,-28(fp)
 108e198:	e0bff617 	ldw	r2,-40(fp)
 108e19c:	1885883a 	add	r2,r3,r2
 108e1a0:	10c1ffcc 	andi	r3,r2,2047
 108e1a4:	e0bffc17 	ldw	r2,-16(fp)
 108e1a8:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 108e1ac:	e0bffe17 	ldw	r2,-8(fp)
 108e1b0:	00bfc716 	blt	zero,r2,108e0d0 <altera_avalon_jtag_uart_write+0x30>
 108e1b4:	00000106 	br	108e1bc <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 108e1b8:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108e1bc:	0005303a 	rdctl	r2,status
 108e1c0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108e1c4:	e0fffb17 	ldw	r3,-20(fp)
 108e1c8:	00bfff84 	movi	r2,-2
 108e1cc:	1884703a 	and	r2,r3,r2
 108e1d0:	1001703a 	wrctl	status,r2
  
  return context;
 108e1d4:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 108e1d8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 108e1dc:	e0bffc17 	ldw	r2,-16(fp)
 108e1e0:	10800817 	ldw	r2,32(r2)
 108e1e4:	10c00094 	ori	r3,r2,2
 108e1e8:	e0bffc17 	ldw	r2,-16(fp)
 108e1ec:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 108e1f0:	e0bffc17 	ldw	r2,-16(fp)
 108e1f4:	10800017 	ldw	r2,0(r2)
 108e1f8:	10800104 	addi	r2,r2,4
 108e1fc:	1007883a 	mov	r3,r2
 108e200:	e0bffc17 	ldw	r2,-16(fp)
 108e204:	10800817 	ldw	r2,32(r2)
 108e208:	18800035 	stwio	r2,0(r3)
 108e20c:	e0bffa17 	ldw	r2,-24(fp)
 108e210:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108e214:	e0bff817 	ldw	r2,-32(fp)
 108e218:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 108e21c:	e0bffe17 	ldw	r2,-8(fp)
 108e220:	0080100e 	bge	zero,r2,108e264 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 108e224:	e0bfff17 	ldw	r2,-4(fp)
 108e228:	1090000c 	andi	r2,r2,16384
 108e22c:	1000101e 	bne	r2,zero,108e270 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 108e230:	0001883a 	nop
 108e234:	e0bffc17 	ldw	r2,-16(fp)
 108e238:	10c00d17 	ldw	r3,52(r2)
 108e23c:	e0bff517 	ldw	r2,-44(fp)
 108e240:	1880051e 	bne	r3,r2,108e258 <altera_avalon_jtag_uart_write+0x1b8>
 108e244:	e0bffc17 	ldw	r2,-16(fp)
 108e248:	10c00917 	ldw	r3,36(r2)
 108e24c:	e0bffc17 	ldw	r2,-16(fp)
 108e250:	10800117 	ldw	r2,4(r2)
 108e254:	18bff736 	bltu	r3,r2,108e234 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 108e258:	e0bffc17 	ldw	r2,-16(fp)
 108e25c:	10800917 	ldw	r2,36(r2)
 108e260:	1000051e 	bne	r2,zero,108e278 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 108e264:	e0bffe17 	ldw	r2,-8(fp)
 108e268:	00bfd016 	blt	zero,r2,108e1ac <altera_avalon_jtag_uart_write+0x10c>
 108e26c:	00000306 	br	108e27c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 108e270:	0001883a 	nop
 108e274:	00000106 	br	108e27c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 108e278:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 108e27c:	e0fffd17 	ldw	r3,-12(fp)
 108e280:	e0bff717 	ldw	r2,-36(fp)
 108e284:	18800426 	beq	r3,r2,108e298 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 108e288:	e0fffd17 	ldw	r3,-12(fp)
 108e28c:	e0bff717 	ldw	r2,-36(fp)
 108e290:	1885c83a 	sub	r2,r3,r2
 108e294:	00000606 	br	108e2b0 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 108e298:	e0bfff17 	ldw	r2,-4(fp)
 108e29c:	1090000c 	andi	r2,r2,16384
 108e2a0:	10000226 	beq	r2,zero,108e2ac <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 108e2a4:	00bffd44 	movi	r2,-11
 108e2a8:	00000106 	br	108e2b0 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 108e2ac:	00bffec4 	movi	r2,-5
}
 108e2b0:	e037883a 	mov	sp,fp
 108e2b4:	dfc00117 	ldw	ra,4(sp)
 108e2b8:	df000017 	ldw	fp,0(sp)
 108e2bc:	dec00204 	addi	sp,sp,8
 108e2c0:	f800283a 	ret

0108e2c4 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 108e2c4:	defff504 	addi	sp,sp,-44
 108e2c8:	df000a15 	stw	fp,40(sp)
 108e2cc:	df000a04 	addi	fp,sp,40
 108e2d0:	e13ffc15 	stw	r4,-16(fp)
 108e2d4:	e17ffd15 	stw	r5,-12(fp)
 108e2d8:	e1bffe15 	stw	r6,-8(fp)
 108e2dc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 108e2e0:	e03ff615 	stw	zero,-40(fp)
 108e2e4:	d0a6e217 	ldw	r2,-25720(gp)
  
  if (alt_ticks_per_second ())
 108e2e8:	10003c26 	beq	r2,zero,108e3dc <alt_alarm_start+0x118>
  {
    if (alarm)
 108e2ec:	e0bffc17 	ldw	r2,-16(fp)
 108e2f0:	10003826 	beq	r2,zero,108e3d4 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 108e2f4:	e0bffc17 	ldw	r2,-16(fp)
 108e2f8:	e0fffe17 	ldw	r3,-8(fp)
 108e2fc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 108e300:	e0bffc17 	ldw	r2,-16(fp)
 108e304:	e0ffff17 	ldw	r3,-4(fp)
 108e308:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108e30c:	0005303a 	rdctl	r2,status
 108e310:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108e314:	e0fff917 	ldw	r3,-28(fp)
 108e318:	00bfff84 	movi	r2,-2
 108e31c:	1884703a 	and	r2,r3,r2
 108e320:	1001703a 	wrctl	status,r2
  
  return context;
 108e324:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 108e328:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 108e32c:	d0a6e317 	ldw	r2,-25716(gp)
      
      current_nticks = alt_nticks();
 108e330:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 108e334:	e0fffd17 	ldw	r3,-12(fp)
 108e338:	e0bff617 	ldw	r2,-40(fp)
 108e33c:	1885883a 	add	r2,r3,r2
 108e340:	10c00044 	addi	r3,r2,1
 108e344:	e0bffc17 	ldw	r2,-16(fp)
 108e348:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 108e34c:	e0bffc17 	ldw	r2,-16(fp)
 108e350:	10c00217 	ldw	r3,8(r2)
 108e354:	e0bff617 	ldw	r2,-40(fp)
 108e358:	1880042e 	bgeu	r3,r2,108e36c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 108e35c:	e0bffc17 	ldw	r2,-16(fp)
 108e360:	00c00044 	movi	r3,1
 108e364:	10c00405 	stb	r3,16(r2)
 108e368:	00000206 	br	108e374 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 108e36c:	e0bffc17 	ldw	r2,-16(fp)
 108e370:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 108e374:	e0bffc17 	ldw	r2,-16(fp)
 108e378:	d0e00e04 	addi	r3,gp,-32712
 108e37c:	e0fffa15 	stw	r3,-24(fp)
 108e380:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 108e384:	e0bffb17 	ldw	r2,-20(fp)
 108e388:	e0fffa17 	ldw	r3,-24(fp)
 108e38c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 108e390:	e0bffa17 	ldw	r2,-24(fp)
 108e394:	10c00017 	ldw	r3,0(r2)
 108e398:	e0bffb17 	ldw	r2,-20(fp)
 108e39c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 108e3a0:	e0bffa17 	ldw	r2,-24(fp)
 108e3a4:	10800017 	ldw	r2,0(r2)
 108e3a8:	e0fffb17 	ldw	r3,-20(fp)
 108e3ac:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 108e3b0:	e0bffa17 	ldw	r2,-24(fp)
 108e3b4:	e0fffb17 	ldw	r3,-20(fp)
 108e3b8:	10c00015 	stw	r3,0(r2)
 108e3bc:	e0bff817 	ldw	r2,-32(fp)
 108e3c0:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108e3c4:	e0bff717 	ldw	r2,-36(fp)
 108e3c8:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 108e3cc:	0005883a 	mov	r2,zero
 108e3d0:	00000306 	br	108e3e0 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 108e3d4:	00bffa84 	movi	r2,-22
 108e3d8:	00000106 	br	108e3e0 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 108e3dc:	00bfde84 	movi	r2,-134
  }
}
 108e3e0:	e037883a 	mov	sp,fp
 108e3e4:	df000017 	ldw	fp,0(sp)
 108e3e8:	dec00104 	addi	sp,sp,4
 108e3ec:	f800283a 	ret

0108e3f0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 108e3f0:	defffe04 	addi	sp,sp,-8
 108e3f4:	df000115 	stw	fp,4(sp)
 108e3f8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 108e3fc:	e03fff15 	stw	zero,-4(fp)
 108e400:	00000506 	br	108e418 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 108e404:	e0bfff17 	ldw	r2,-4(fp)
 108e408:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 108e40c:	e0bfff17 	ldw	r2,-4(fp)
 108e410:	10800804 	addi	r2,r2,32
 108e414:	e0bfff15 	stw	r2,-4(fp)
 108e418:	e0bfff17 	ldw	r2,-4(fp)
 108e41c:	10820030 	cmpltui	r2,r2,2048
 108e420:	103ff81e 	bne	r2,zero,108e404 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 108e424:	0001883a 	nop
 108e428:	e037883a 	mov	sp,fp
 108e42c:	df000017 	ldw	fp,0(sp)
 108e430:	dec00104 	addi	sp,sp,4
 108e434:	f800283a 	ret

0108e438 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108e438:	defffe04 	addi	sp,sp,-8
 108e43c:	dfc00115 	stw	ra,4(sp)
 108e440:	df000015 	stw	fp,0(sp)
 108e444:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108e448:	d0a00b17 	ldw	r2,-32724(gp)
 108e44c:	10000326 	beq	r2,zero,108e45c <alt_get_errno+0x24>
 108e450:	d0a00b17 	ldw	r2,-32724(gp)
 108e454:	103ee83a 	callr	r2
 108e458:	00000106 	br	108e460 <alt_get_errno+0x28>
 108e45c:	d0a6dd04 	addi	r2,gp,-25740
}
 108e460:	e037883a 	mov	sp,fp
 108e464:	dfc00117 	ldw	ra,4(sp)
 108e468:	df000017 	ldw	fp,0(sp)
 108e46c:	dec00204 	addi	sp,sp,8
 108e470:	f800283a 	ret

0108e474 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 108e474:	defffa04 	addi	sp,sp,-24
 108e478:	dfc00515 	stw	ra,20(sp)
 108e47c:	df000415 	stw	fp,16(sp)
 108e480:	df000404 	addi	fp,sp,16
 108e484:	e13ffe15 	stw	r4,-8(fp)
 108e488:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 108e48c:	e0bffe17 	ldw	r2,-8(fp)
 108e490:	10000326 	beq	r2,zero,108e4a0 <alt_dev_llist_insert+0x2c>
 108e494:	e0bffe17 	ldw	r2,-8(fp)
 108e498:	10800217 	ldw	r2,8(r2)
 108e49c:	1000061e 	bne	r2,zero,108e4b8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 108e4a0:	108e4380 	call	108e438 <alt_get_errno>
 108e4a4:	1007883a 	mov	r3,r2
 108e4a8:	00800584 	movi	r2,22
 108e4ac:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 108e4b0:	00bffa84 	movi	r2,-22
 108e4b4:	00001306 	br	108e504 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 108e4b8:	e0bffe17 	ldw	r2,-8(fp)
 108e4bc:	e0ffff17 	ldw	r3,-4(fp)
 108e4c0:	e0fffc15 	stw	r3,-16(fp)
 108e4c4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 108e4c8:	e0bffd17 	ldw	r2,-12(fp)
 108e4cc:	e0fffc17 	ldw	r3,-16(fp)
 108e4d0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 108e4d4:	e0bffc17 	ldw	r2,-16(fp)
 108e4d8:	10c00017 	ldw	r3,0(r2)
 108e4dc:	e0bffd17 	ldw	r2,-12(fp)
 108e4e0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 108e4e4:	e0bffc17 	ldw	r2,-16(fp)
 108e4e8:	10800017 	ldw	r2,0(r2)
 108e4ec:	e0fffd17 	ldw	r3,-12(fp)
 108e4f0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 108e4f4:	e0bffc17 	ldw	r2,-16(fp)
 108e4f8:	e0fffd17 	ldw	r3,-12(fp)
 108e4fc:	10c00015 	stw	r3,0(r2)

  return 0;  
 108e500:	0005883a 	mov	r2,zero
}
 108e504:	e037883a 	mov	sp,fp
 108e508:	dfc00117 	ldw	ra,4(sp)
 108e50c:	df000017 	ldw	fp,0(sp)
 108e510:	dec00204 	addi	sp,sp,8
 108e514:	f800283a 	ret

0108e518 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 108e518:	defffd04 	addi	sp,sp,-12
 108e51c:	dfc00215 	stw	ra,8(sp)
 108e520:	df000115 	stw	fp,4(sp)
 108e524:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 108e528:	00804274 	movhi	r2,265
 108e52c:	10bc9804 	addi	r2,r2,-3488
 108e530:	e0bfff15 	stw	r2,-4(fp)
 108e534:	00000606 	br	108e550 <_do_ctors+0x38>
        (*ctor) (); 
 108e538:	e0bfff17 	ldw	r2,-4(fp)
 108e53c:	10800017 	ldw	r2,0(r2)
 108e540:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 108e544:	e0bfff17 	ldw	r2,-4(fp)
 108e548:	10bfff04 	addi	r2,r2,-4
 108e54c:	e0bfff15 	stw	r2,-4(fp)
 108e550:	e0ffff17 	ldw	r3,-4(fp)
 108e554:	00804274 	movhi	r2,265
 108e558:	10bc9904 	addi	r2,r2,-3484
 108e55c:	18bff62e 	bgeu	r3,r2,108e538 <_do_ctors+0x20>
        (*ctor) (); 
}
 108e560:	0001883a 	nop
 108e564:	e037883a 	mov	sp,fp
 108e568:	dfc00117 	ldw	ra,4(sp)
 108e56c:	df000017 	ldw	fp,0(sp)
 108e570:	dec00204 	addi	sp,sp,8
 108e574:	f800283a 	ret

0108e578 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 108e578:	defffd04 	addi	sp,sp,-12
 108e57c:	dfc00215 	stw	ra,8(sp)
 108e580:	df000115 	stw	fp,4(sp)
 108e584:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 108e588:	00804274 	movhi	r2,265
 108e58c:	10bc9804 	addi	r2,r2,-3488
 108e590:	e0bfff15 	stw	r2,-4(fp)
 108e594:	00000606 	br	108e5b0 <_do_dtors+0x38>
        (*dtor) (); 
 108e598:	e0bfff17 	ldw	r2,-4(fp)
 108e59c:	10800017 	ldw	r2,0(r2)
 108e5a0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 108e5a4:	e0bfff17 	ldw	r2,-4(fp)
 108e5a8:	10bfff04 	addi	r2,r2,-4
 108e5ac:	e0bfff15 	stw	r2,-4(fp)
 108e5b0:	e0ffff17 	ldw	r3,-4(fp)
 108e5b4:	00804274 	movhi	r2,265
 108e5b8:	10bc9904 	addi	r2,r2,-3484
 108e5bc:	18bff62e 	bgeu	r3,r2,108e598 <_do_dtors+0x20>
        (*dtor) (); 
}
 108e5c0:	0001883a 	nop
 108e5c4:	e037883a 	mov	sp,fp
 108e5c8:	dfc00117 	ldw	ra,4(sp)
 108e5cc:	df000017 	ldw	fp,0(sp)
 108e5d0:	dec00204 	addi	sp,sp,8
 108e5d4:	f800283a 	ret

0108e5d8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 108e5d8:	defffe04 	addi	sp,sp,-8
 108e5dc:	dfc00115 	stw	ra,4(sp)
 108e5e0:	df000015 	stw	fp,0(sp)
 108e5e4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 108e5e8:	01440004 	movi	r5,4096
 108e5ec:	0009883a 	mov	r4,zero
 108e5f0:	108eda40 	call	108eda4 <alt_icache_flush>
#endif
}
 108e5f4:	0001883a 	nop
 108e5f8:	e037883a 	mov	sp,fp
 108e5fc:	dfc00117 	ldw	ra,4(sp)
 108e600:	df000017 	ldw	fp,0(sp)
 108e604:	dec00204 	addi	sp,sp,8
 108e608:	f800283a 	ret

0108e60c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 108e60c:	defff904 	addi	sp,sp,-28
 108e610:	dfc00615 	stw	ra,24(sp)
 108e614:	df000515 	stw	fp,20(sp)
 108e618:	df000504 	addi	fp,sp,20
 108e61c:	e13ffc15 	stw	r4,-16(fp)
 108e620:	e17ffd15 	stw	r5,-12(fp)
 108e624:	e1bffe15 	stw	r6,-8(fp)
 108e628:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 108e62c:	e1bfff17 	ldw	r6,-4(fp)
 108e630:	e17ffe17 	ldw	r5,-8(fp)
 108e634:	e13ffd17 	ldw	r4,-12(fp)
 108e638:	108e84c0 	call	108e84c <open>
 108e63c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 108e640:	e0bffb17 	ldw	r2,-20(fp)
 108e644:	10001c16 	blt	r2,zero,108e6b8 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 108e648:	00804274 	movhi	r2,265
 108e64c:	10bf9e04 	addi	r2,r2,-392
 108e650:	e0fffb17 	ldw	r3,-20(fp)
 108e654:	18c00324 	muli	r3,r3,12
 108e658:	10c5883a 	add	r2,r2,r3
 108e65c:	10c00017 	ldw	r3,0(r2)
 108e660:	e0bffc17 	ldw	r2,-16(fp)
 108e664:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 108e668:	00804274 	movhi	r2,265
 108e66c:	10bf9e04 	addi	r2,r2,-392
 108e670:	e0fffb17 	ldw	r3,-20(fp)
 108e674:	18c00324 	muli	r3,r3,12
 108e678:	10c5883a 	add	r2,r2,r3
 108e67c:	10800104 	addi	r2,r2,4
 108e680:	10c00017 	ldw	r3,0(r2)
 108e684:	e0bffc17 	ldw	r2,-16(fp)
 108e688:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 108e68c:	00804274 	movhi	r2,265
 108e690:	10bf9e04 	addi	r2,r2,-392
 108e694:	e0fffb17 	ldw	r3,-20(fp)
 108e698:	18c00324 	muli	r3,r3,12
 108e69c:	10c5883a 	add	r2,r2,r3
 108e6a0:	10800204 	addi	r2,r2,8
 108e6a4:	10c00017 	ldw	r3,0(r2)
 108e6a8:	e0bffc17 	ldw	r2,-16(fp)
 108e6ac:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 108e6b0:	e13ffb17 	ldw	r4,-20(fp)
 108e6b4:	108d55c0 	call	108d55c <alt_release_fd>
  }
} 
 108e6b8:	0001883a 	nop
 108e6bc:	e037883a 	mov	sp,fp
 108e6c0:	dfc00117 	ldw	ra,4(sp)
 108e6c4:	df000017 	ldw	fp,0(sp)
 108e6c8:	dec00204 	addi	sp,sp,8
 108e6cc:	f800283a 	ret

0108e6d0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 108e6d0:	defffb04 	addi	sp,sp,-20
 108e6d4:	dfc00415 	stw	ra,16(sp)
 108e6d8:	df000315 	stw	fp,12(sp)
 108e6dc:	df000304 	addi	fp,sp,12
 108e6e0:	e13ffd15 	stw	r4,-12(fp)
 108e6e4:	e17ffe15 	stw	r5,-8(fp)
 108e6e8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 108e6ec:	01c07fc4 	movi	r7,511
 108e6f0:	01800044 	movi	r6,1
 108e6f4:	e17ffd17 	ldw	r5,-12(fp)
 108e6f8:	01004274 	movhi	r4,265
 108e6fc:	213fa104 	addi	r4,r4,-380
 108e700:	108e60c0 	call	108e60c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 108e704:	01c07fc4 	movi	r7,511
 108e708:	000d883a 	mov	r6,zero
 108e70c:	e17ffe17 	ldw	r5,-8(fp)
 108e710:	01004274 	movhi	r4,265
 108e714:	213f9e04 	addi	r4,r4,-392
 108e718:	108e60c0 	call	108e60c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 108e71c:	01c07fc4 	movi	r7,511
 108e720:	01800044 	movi	r6,1
 108e724:	e17fff17 	ldw	r5,-4(fp)
 108e728:	01004274 	movhi	r4,265
 108e72c:	213fa404 	addi	r4,r4,-368
 108e730:	108e60c0 	call	108e60c <alt_open_fd>
}  
 108e734:	0001883a 	nop
 108e738:	e037883a 	mov	sp,fp
 108e73c:	dfc00117 	ldw	ra,4(sp)
 108e740:	df000017 	ldw	fp,0(sp)
 108e744:	dec00204 	addi	sp,sp,8
 108e748:	f800283a 	ret

0108e74c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 108e74c:	defffe04 	addi	sp,sp,-8
 108e750:	dfc00115 	stw	ra,4(sp)
 108e754:	df000015 	stw	fp,0(sp)
 108e758:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 108e75c:	d0a00b17 	ldw	r2,-32724(gp)
 108e760:	10000326 	beq	r2,zero,108e770 <alt_get_errno+0x24>
 108e764:	d0a00b17 	ldw	r2,-32724(gp)
 108e768:	103ee83a 	callr	r2
 108e76c:	00000106 	br	108e774 <alt_get_errno+0x28>
 108e770:	d0a6dd04 	addi	r2,gp,-25740
}
 108e774:	e037883a 	mov	sp,fp
 108e778:	dfc00117 	ldw	ra,4(sp)
 108e77c:	df000017 	ldw	fp,0(sp)
 108e780:	dec00204 	addi	sp,sp,8
 108e784:	f800283a 	ret

0108e788 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 108e788:	defffd04 	addi	sp,sp,-12
 108e78c:	df000215 	stw	fp,8(sp)
 108e790:	df000204 	addi	fp,sp,8
 108e794:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 108e798:	e0bfff17 	ldw	r2,-4(fp)
 108e79c:	10800217 	ldw	r2,8(r2)
 108e7a0:	10d00034 	orhi	r3,r2,16384
 108e7a4:	e0bfff17 	ldw	r2,-4(fp)
 108e7a8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 108e7ac:	e03ffe15 	stw	zero,-8(fp)
 108e7b0:	00001d06 	br	108e828 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 108e7b4:	00804274 	movhi	r2,265
 108e7b8:	10bf9e04 	addi	r2,r2,-392
 108e7bc:	e0fffe17 	ldw	r3,-8(fp)
 108e7c0:	18c00324 	muli	r3,r3,12
 108e7c4:	10c5883a 	add	r2,r2,r3
 108e7c8:	10c00017 	ldw	r3,0(r2)
 108e7cc:	e0bfff17 	ldw	r2,-4(fp)
 108e7d0:	10800017 	ldw	r2,0(r2)
 108e7d4:	1880111e 	bne	r3,r2,108e81c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 108e7d8:	00804274 	movhi	r2,265
 108e7dc:	10bf9e04 	addi	r2,r2,-392
 108e7e0:	e0fffe17 	ldw	r3,-8(fp)
 108e7e4:	18c00324 	muli	r3,r3,12
 108e7e8:	10c5883a 	add	r2,r2,r3
 108e7ec:	10800204 	addi	r2,r2,8
 108e7f0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 108e7f4:	1000090e 	bge	r2,zero,108e81c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 108e7f8:	e0bffe17 	ldw	r2,-8(fp)
 108e7fc:	10c00324 	muli	r3,r2,12
 108e800:	00804274 	movhi	r2,265
 108e804:	10bf9e04 	addi	r2,r2,-392
 108e808:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 108e80c:	e0bfff17 	ldw	r2,-4(fp)
 108e810:	18800226 	beq	r3,r2,108e81c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 108e814:	00bffcc4 	movi	r2,-13
 108e818:	00000806 	br	108e83c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 108e81c:	e0bffe17 	ldw	r2,-8(fp)
 108e820:	10800044 	addi	r2,r2,1
 108e824:	e0bffe15 	stw	r2,-8(fp)
 108e828:	d0a00a17 	ldw	r2,-32728(gp)
 108e82c:	1007883a 	mov	r3,r2
 108e830:	e0bffe17 	ldw	r2,-8(fp)
 108e834:	18bfdf2e 	bgeu	r3,r2,108e7b4 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 108e838:	0005883a 	mov	r2,zero
}
 108e83c:	e037883a 	mov	sp,fp
 108e840:	df000017 	ldw	fp,0(sp)
 108e844:	dec00104 	addi	sp,sp,4
 108e848:	f800283a 	ret

0108e84c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 108e84c:	defff604 	addi	sp,sp,-40
 108e850:	dfc00915 	stw	ra,36(sp)
 108e854:	df000815 	stw	fp,32(sp)
 108e858:	df000804 	addi	fp,sp,32
 108e85c:	e13ffd15 	stw	r4,-12(fp)
 108e860:	e17ffe15 	stw	r5,-8(fp)
 108e864:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 108e868:	00bfffc4 	movi	r2,-1
 108e86c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 108e870:	00bffb44 	movi	r2,-19
 108e874:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 108e878:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 108e87c:	d1600804 	addi	r5,gp,-32736
 108e880:	e13ffd17 	ldw	r4,-12(fp)
 108e884:	108eb680 	call	108eb68 <alt_find_dev>
 108e888:	e0bff815 	stw	r2,-32(fp)
 108e88c:	e0bff817 	ldw	r2,-32(fp)
 108e890:	1000051e 	bne	r2,zero,108e8a8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 108e894:	e13ffd17 	ldw	r4,-12(fp)
 108e898:	108ebf80 	call	108ebf8 <alt_find_file>
 108e89c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 108e8a0:	00800044 	movi	r2,1
 108e8a4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 108e8a8:	e0bff817 	ldw	r2,-32(fp)
 108e8ac:	10002926 	beq	r2,zero,108e954 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 108e8b0:	e13ff817 	ldw	r4,-32(fp)
 108e8b4:	108ed000 	call	108ed00 <alt_get_fd>
 108e8b8:	e0bff915 	stw	r2,-28(fp)
 108e8bc:	e0bff917 	ldw	r2,-28(fp)
 108e8c0:	1000030e 	bge	r2,zero,108e8d0 <open+0x84>
    {
      status = index;
 108e8c4:	e0bff917 	ldw	r2,-28(fp)
 108e8c8:	e0bffa15 	stw	r2,-24(fp)
 108e8cc:	00002306 	br	108e95c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 108e8d0:	e0bff917 	ldw	r2,-28(fp)
 108e8d4:	10c00324 	muli	r3,r2,12
 108e8d8:	00804274 	movhi	r2,265
 108e8dc:	10bf9e04 	addi	r2,r2,-392
 108e8e0:	1885883a 	add	r2,r3,r2
 108e8e4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 108e8e8:	e0fffe17 	ldw	r3,-8(fp)
 108e8ec:	00900034 	movhi	r2,16384
 108e8f0:	10bfffc4 	addi	r2,r2,-1
 108e8f4:	1886703a 	and	r3,r3,r2
 108e8f8:	e0bffc17 	ldw	r2,-16(fp)
 108e8fc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 108e900:	e0bffb17 	ldw	r2,-20(fp)
 108e904:	1000051e 	bne	r2,zero,108e91c <open+0xd0>
 108e908:	e13ffc17 	ldw	r4,-16(fp)
 108e90c:	108e7880 	call	108e788 <alt_file_locked>
 108e910:	e0bffa15 	stw	r2,-24(fp)
 108e914:	e0bffa17 	ldw	r2,-24(fp)
 108e918:	10001016 	blt	r2,zero,108e95c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 108e91c:	e0bff817 	ldw	r2,-32(fp)
 108e920:	10800317 	ldw	r2,12(r2)
 108e924:	10000826 	beq	r2,zero,108e948 <open+0xfc>
 108e928:	e0bff817 	ldw	r2,-32(fp)
 108e92c:	10800317 	ldw	r2,12(r2)
 108e930:	e1ffff17 	ldw	r7,-4(fp)
 108e934:	e1bffe17 	ldw	r6,-8(fp)
 108e938:	e17ffd17 	ldw	r5,-12(fp)
 108e93c:	e13ffc17 	ldw	r4,-16(fp)
 108e940:	103ee83a 	callr	r2
 108e944:	00000106 	br	108e94c <open+0x100>
 108e948:	0005883a 	mov	r2,zero
 108e94c:	e0bffa15 	stw	r2,-24(fp)
 108e950:	00000206 	br	108e95c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 108e954:	00bffb44 	movi	r2,-19
 108e958:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 108e95c:	e0bffa17 	ldw	r2,-24(fp)
 108e960:	1000090e 	bge	r2,zero,108e988 <open+0x13c>
  {
    alt_release_fd (index);  
 108e964:	e13ff917 	ldw	r4,-28(fp)
 108e968:	108d55c0 	call	108d55c <alt_release_fd>
    ALT_ERRNO = -status;
 108e96c:	108e74c0 	call	108e74c <alt_get_errno>
 108e970:	1007883a 	mov	r3,r2
 108e974:	e0bffa17 	ldw	r2,-24(fp)
 108e978:	0085c83a 	sub	r2,zero,r2
 108e97c:	18800015 	stw	r2,0(r3)
    return -1;
 108e980:	00bfffc4 	movi	r2,-1
 108e984:	00000106 	br	108e98c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 108e988:	e0bff917 	ldw	r2,-28(fp)
}
 108e98c:	e037883a 	mov	sp,fp
 108e990:	dfc00117 	ldw	ra,4(sp)
 108e994:	df000017 	ldw	fp,0(sp)
 108e998:	dec00204 	addi	sp,sp,8
 108e99c:	f800283a 	ret

0108e9a0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 108e9a0:	defffa04 	addi	sp,sp,-24
 108e9a4:	df000515 	stw	fp,20(sp)
 108e9a8:	df000504 	addi	fp,sp,20
 108e9ac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 108e9b0:	0005303a 	rdctl	r2,status
 108e9b4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 108e9b8:	e0fffc17 	ldw	r3,-16(fp)
 108e9bc:	00bfff84 	movi	r2,-2
 108e9c0:	1884703a 	and	r2,r3,r2
 108e9c4:	1001703a 	wrctl	status,r2
  
  return context;
 108e9c8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 108e9cc:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 108e9d0:	e0bfff17 	ldw	r2,-4(fp)
 108e9d4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 108e9d8:	e0bffd17 	ldw	r2,-12(fp)
 108e9dc:	10800017 	ldw	r2,0(r2)
 108e9e0:	e0fffd17 	ldw	r3,-12(fp)
 108e9e4:	18c00117 	ldw	r3,4(r3)
 108e9e8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 108e9ec:	e0bffd17 	ldw	r2,-12(fp)
 108e9f0:	10800117 	ldw	r2,4(r2)
 108e9f4:	e0fffd17 	ldw	r3,-12(fp)
 108e9f8:	18c00017 	ldw	r3,0(r3)
 108e9fc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 108ea00:	e0bffd17 	ldw	r2,-12(fp)
 108ea04:	e0fffd17 	ldw	r3,-12(fp)
 108ea08:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 108ea0c:	e0bffd17 	ldw	r2,-12(fp)
 108ea10:	e0fffd17 	ldw	r3,-12(fp)
 108ea14:	10c00015 	stw	r3,0(r2)
 108ea18:	e0bffb17 	ldw	r2,-20(fp)
 108ea1c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 108ea20:	e0bffe17 	ldw	r2,-8(fp)
 108ea24:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 108ea28:	0001883a 	nop
 108ea2c:	e037883a 	mov	sp,fp
 108ea30:	df000017 	ldw	fp,0(sp)
 108ea34:	dec00104 	addi	sp,sp,4
 108ea38:	f800283a 	ret

0108ea3c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 108ea3c:	defffb04 	addi	sp,sp,-20
 108ea40:	dfc00415 	stw	ra,16(sp)
 108ea44:	df000315 	stw	fp,12(sp)
 108ea48:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 108ea4c:	d0a00e17 	ldw	r2,-32712(gp)
 108ea50:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 108ea54:	d0a6e317 	ldw	r2,-25716(gp)
 108ea58:	10800044 	addi	r2,r2,1
 108ea5c:	d0a6e315 	stw	r2,-25716(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 108ea60:	00002e06 	br	108eb1c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 108ea64:	e0bffd17 	ldw	r2,-12(fp)
 108ea68:	10800017 	ldw	r2,0(r2)
 108ea6c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 108ea70:	e0bffd17 	ldw	r2,-12(fp)
 108ea74:	10800403 	ldbu	r2,16(r2)
 108ea78:	10803fcc 	andi	r2,r2,255
 108ea7c:	10000426 	beq	r2,zero,108ea90 <alt_tick+0x54>
 108ea80:	d0a6e317 	ldw	r2,-25716(gp)
 108ea84:	1000021e 	bne	r2,zero,108ea90 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 108ea88:	e0bffd17 	ldw	r2,-12(fp)
 108ea8c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 108ea90:	e0bffd17 	ldw	r2,-12(fp)
 108ea94:	10800217 	ldw	r2,8(r2)
 108ea98:	d0e6e317 	ldw	r3,-25716(gp)
 108ea9c:	18801d36 	bltu	r3,r2,108eb14 <alt_tick+0xd8>
 108eaa0:	e0bffd17 	ldw	r2,-12(fp)
 108eaa4:	10800403 	ldbu	r2,16(r2)
 108eaa8:	10803fcc 	andi	r2,r2,255
 108eaac:	1000191e 	bne	r2,zero,108eb14 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 108eab0:	e0bffd17 	ldw	r2,-12(fp)
 108eab4:	10800317 	ldw	r2,12(r2)
 108eab8:	e0fffd17 	ldw	r3,-12(fp)
 108eabc:	18c00517 	ldw	r3,20(r3)
 108eac0:	1809883a 	mov	r4,r3
 108eac4:	103ee83a 	callr	r2
 108eac8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 108eacc:	e0bfff17 	ldw	r2,-4(fp)
 108ead0:	1000031e 	bne	r2,zero,108eae0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 108ead4:	e13ffd17 	ldw	r4,-12(fp)
 108ead8:	108e9a00 	call	108e9a0 <alt_alarm_stop>
 108eadc:	00000d06 	br	108eb14 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 108eae0:	e0bffd17 	ldw	r2,-12(fp)
 108eae4:	10c00217 	ldw	r3,8(r2)
 108eae8:	e0bfff17 	ldw	r2,-4(fp)
 108eaec:	1887883a 	add	r3,r3,r2
 108eaf0:	e0bffd17 	ldw	r2,-12(fp)
 108eaf4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 108eaf8:	e0bffd17 	ldw	r2,-12(fp)
 108eafc:	10c00217 	ldw	r3,8(r2)
 108eb00:	d0a6e317 	ldw	r2,-25716(gp)
 108eb04:	1880032e 	bgeu	r3,r2,108eb14 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 108eb08:	e0bffd17 	ldw	r2,-12(fp)
 108eb0c:	00c00044 	movi	r3,1
 108eb10:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 108eb14:	e0bffe17 	ldw	r2,-8(fp)
 108eb18:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 108eb1c:	e0fffd17 	ldw	r3,-12(fp)
 108eb20:	d0a00e04 	addi	r2,gp,-32712
 108eb24:	18bfcf1e 	bne	r3,r2,108ea64 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 108eb28:	0001883a 	nop
}
 108eb2c:	0001883a 	nop
 108eb30:	e037883a 	mov	sp,fp
 108eb34:	dfc00117 	ldw	ra,4(sp)
 108eb38:	df000017 	ldw	fp,0(sp)
 108eb3c:	dec00204 	addi	sp,sp,8
 108eb40:	f800283a 	ret

0108eb44 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 108eb44:	deffff04 	addi	sp,sp,-4
 108eb48:	df000015 	stw	fp,0(sp)
 108eb4c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 108eb50:	000170fa 	wrctl	ienable,zero
}
 108eb54:	0001883a 	nop
 108eb58:	e037883a 	mov	sp,fp
 108eb5c:	df000017 	ldw	fp,0(sp)
 108eb60:	dec00104 	addi	sp,sp,4
 108eb64:	f800283a 	ret

0108eb68 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 108eb68:	defffa04 	addi	sp,sp,-24
 108eb6c:	dfc00515 	stw	ra,20(sp)
 108eb70:	df000415 	stw	fp,16(sp)
 108eb74:	df000404 	addi	fp,sp,16
 108eb78:	e13ffe15 	stw	r4,-8(fp)
 108eb7c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 108eb80:	e0bfff17 	ldw	r2,-4(fp)
 108eb84:	10800017 	ldw	r2,0(r2)
 108eb88:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 108eb8c:	e13ffe17 	ldw	r4,-8(fp)
 108eb90:	10805000 	call	1080500 <strlen>
 108eb94:	10800044 	addi	r2,r2,1
 108eb98:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 108eb9c:	00000d06 	br	108ebd4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 108eba0:	e0bffc17 	ldw	r2,-16(fp)
 108eba4:	10800217 	ldw	r2,8(r2)
 108eba8:	e0fffd17 	ldw	r3,-12(fp)
 108ebac:	180d883a 	mov	r6,r3
 108ebb0:	e17ffe17 	ldw	r5,-8(fp)
 108ebb4:	1009883a 	mov	r4,r2
 108ebb8:	108ef1c0 	call	108ef1c <memcmp>
 108ebbc:	1000021e 	bne	r2,zero,108ebc8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 108ebc0:	e0bffc17 	ldw	r2,-16(fp)
 108ebc4:	00000706 	br	108ebe4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 108ebc8:	e0bffc17 	ldw	r2,-16(fp)
 108ebcc:	10800017 	ldw	r2,0(r2)
 108ebd0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 108ebd4:	e0fffc17 	ldw	r3,-16(fp)
 108ebd8:	e0bfff17 	ldw	r2,-4(fp)
 108ebdc:	18bff01e 	bne	r3,r2,108eba0 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 108ebe0:	0005883a 	mov	r2,zero
}
 108ebe4:	e037883a 	mov	sp,fp
 108ebe8:	dfc00117 	ldw	ra,4(sp)
 108ebec:	df000017 	ldw	fp,0(sp)
 108ebf0:	dec00204 	addi	sp,sp,8
 108ebf4:	f800283a 	ret

0108ebf8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 108ebf8:	defffb04 	addi	sp,sp,-20
 108ebfc:	dfc00415 	stw	ra,16(sp)
 108ec00:	df000315 	stw	fp,12(sp)
 108ec04:	df000304 	addi	fp,sp,12
 108ec08:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 108ec0c:	d0a00617 	ldw	r2,-32744(gp)
 108ec10:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 108ec14:	00003106 	br	108ecdc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 108ec18:	e0bffd17 	ldw	r2,-12(fp)
 108ec1c:	10800217 	ldw	r2,8(r2)
 108ec20:	1009883a 	mov	r4,r2
 108ec24:	10805000 	call	1080500 <strlen>
 108ec28:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 108ec2c:	e0bffd17 	ldw	r2,-12(fp)
 108ec30:	10c00217 	ldw	r3,8(r2)
 108ec34:	e0bffe17 	ldw	r2,-8(fp)
 108ec38:	10bfffc4 	addi	r2,r2,-1
 108ec3c:	1885883a 	add	r2,r3,r2
 108ec40:	10800003 	ldbu	r2,0(r2)
 108ec44:	10803fcc 	andi	r2,r2,255
 108ec48:	1080201c 	xori	r2,r2,128
 108ec4c:	10bfe004 	addi	r2,r2,-128
 108ec50:	10800bd8 	cmpnei	r2,r2,47
 108ec54:	1000031e 	bne	r2,zero,108ec64 <alt_find_file+0x6c>
    {
      len -= 1;
 108ec58:	e0bffe17 	ldw	r2,-8(fp)
 108ec5c:	10bfffc4 	addi	r2,r2,-1
 108ec60:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 108ec64:	e0bffe17 	ldw	r2,-8(fp)
 108ec68:	e0ffff17 	ldw	r3,-4(fp)
 108ec6c:	1885883a 	add	r2,r3,r2
 108ec70:	10800003 	ldbu	r2,0(r2)
 108ec74:	10803fcc 	andi	r2,r2,255
 108ec78:	1080201c 	xori	r2,r2,128
 108ec7c:	10bfe004 	addi	r2,r2,-128
 108ec80:	10800be0 	cmpeqi	r2,r2,47
 108ec84:	1000081e 	bne	r2,zero,108eca8 <alt_find_file+0xb0>
 108ec88:	e0bffe17 	ldw	r2,-8(fp)
 108ec8c:	e0ffff17 	ldw	r3,-4(fp)
 108ec90:	1885883a 	add	r2,r3,r2
 108ec94:	10800003 	ldbu	r2,0(r2)
 108ec98:	10803fcc 	andi	r2,r2,255
 108ec9c:	1080201c 	xori	r2,r2,128
 108eca0:	10bfe004 	addi	r2,r2,-128
 108eca4:	10000a1e 	bne	r2,zero,108ecd0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 108eca8:	e0bffd17 	ldw	r2,-12(fp)
 108ecac:	10800217 	ldw	r2,8(r2)
 108ecb0:	e0fffe17 	ldw	r3,-8(fp)
 108ecb4:	180d883a 	mov	r6,r3
 108ecb8:	e17fff17 	ldw	r5,-4(fp)
 108ecbc:	1009883a 	mov	r4,r2
 108ecc0:	108ef1c0 	call	108ef1c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 108ecc4:	1000021e 	bne	r2,zero,108ecd0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 108ecc8:	e0bffd17 	ldw	r2,-12(fp)
 108eccc:	00000706 	br	108ecec <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 108ecd0:	e0bffd17 	ldw	r2,-12(fp)
 108ecd4:	10800017 	ldw	r2,0(r2)
 108ecd8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 108ecdc:	e0fffd17 	ldw	r3,-12(fp)
 108ece0:	d0a00604 	addi	r2,gp,-32744
 108ece4:	18bfcc1e 	bne	r3,r2,108ec18 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 108ece8:	0005883a 	mov	r2,zero
}
 108ecec:	e037883a 	mov	sp,fp
 108ecf0:	dfc00117 	ldw	ra,4(sp)
 108ecf4:	df000017 	ldw	fp,0(sp)
 108ecf8:	dec00204 	addi	sp,sp,8
 108ecfc:	f800283a 	ret

0108ed00 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 108ed00:	defffc04 	addi	sp,sp,-16
 108ed04:	df000315 	stw	fp,12(sp)
 108ed08:	df000304 	addi	fp,sp,12
 108ed0c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 108ed10:	00bffa04 	movi	r2,-24
 108ed14:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 108ed18:	e03ffd15 	stw	zero,-12(fp)
 108ed1c:	00001906 	br	108ed84 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 108ed20:	00804274 	movhi	r2,265
 108ed24:	10bf9e04 	addi	r2,r2,-392
 108ed28:	e0fffd17 	ldw	r3,-12(fp)
 108ed2c:	18c00324 	muli	r3,r3,12
 108ed30:	10c5883a 	add	r2,r2,r3
 108ed34:	10800017 	ldw	r2,0(r2)
 108ed38:	10000f1e 	bne	r2,zero,108ed78 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 108ed3c:	00804274 	movhi	r2,265
 108ed40:	10bf9e04 	addi	r2,r2,-392
 108ed44:	e0fffd17 	ldw	r3,-12(fp)
 108ed48:	18c00324 	muli	r3,r3,12
 108ed4c:	10c5883a 	add	r2,r2,r3
 108ed50:	e0ffff17 	ldw	r3,-4(fp)
 108ed54:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 108ed58:	d0e00a17 	ldw	r3,-32728(gp)
 108ed5c:	e0bffd17 	ldw	r2,-12(fp)
 108ed60:	1880020e 	bge	r3,r2,108ed6c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 108ed64:	e0bffd17 	ldw	r2,-12(fp)
 108ed68:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 108ed6c:	e0bffd17 	ldw	r2,-12(fp)
 108ed70:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 108ed74:	00000606 	br	108ed90 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 108ed78:	e0bffd17 	ldw	r2,-12(fp)
 108ed7c:	10800044 	addi	r2,r2,1
 108ed80:	e0bffd15 	stw	r2,-12(fp)
 108ed84:	e0bffd17 	ldw	r2,-12(fp)
 108ed88:	10800810 	cmplti	r2,r2,32
 108ed8c:	103fe41e 	bne	r2,zero,108ed20 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 108ed90:	e0bffe17 	ldw	r2,-8(fp)
}
 108ed94:	e037883a 	mov	sp,fp
 108ed98:	df000017 	ldw	fp,0(sp)
 108ed9c:	dec00104 	addi	sp,sp,4
 108eda0:	f800283a 	ret

0108eda4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 108eda4:	defffb04 	addi	sp,sp,-20
 108eda8:	df000415 	stw	fp,16(sp)
 108edac:	df000404 	addi	fp,sp,16
 108edb0:	e13ffe15 	stw	r4,-8(fp)
 108edb4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 108edb8:	e0bfff17 	ldw	r2,-4(fp)
 108edbc:	10840070 	cmpltui	r2,r2,4097
 108edc0:	1000021e 	bne	r2,zero,108edcc <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 108edc4:	00840004 	movi	r2,4096
 108edc8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 108edcc:	e0fffe17 	ldw	r3,-8(fp)
 108edd0:	e0bfff17 	ldw	r2,-4(fp)
 108edd4:	1885883a 	add	r2,r3,r2
 108edd8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 108eddc:	e0bffe17 	ldw	r2,-8(fp)
 108ede0:	e0bffc15 	stw	r2,-16(fp)
 108ede4:	00000506 	br	108edfc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 108ede8:	e0bffc17 	ldw	r2,-16(fp)
 108edec:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 108edf0:	e0bffc17 	ldw	r2,-16(fp)
 108edf4:	10800804 	addi	r2,r2,32
 108edf8:	e0bffc15 	stw	r2,-16(fp)
 108edfc:	e0fffc17 	ldw	r3,-16(fp)
 108ee00:	e0bffd17 	ldw	r2,-12(fp)
 108ee04:	18bff836 	bltu	r3,r2,108ede8 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 108ee08:	e0bffe17 	ldw	r2,-8(fp)
 108ee0c:	108007cc 	andi	r2,r2,31
 108ee10:	10000226 	beq	r2,zero,108ee1c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 108ee14:	e0bffc17 	ldw	r2,-16(fp)
 108ee18:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 108ee1c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 108ee20:	0001883a 	nop
 108ee24:	e037883a 	mov	sp,fp
 108ee28:	df000017 	ldw	fp,0(sp)
 108ee2c:	dec00104 	addi	sp,sp,4
 108ee30:	f800283a 	ret

0108ee34 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 108ee34:	defffe04 	addi	sp,sp,-8
 108ee38:	df000115 	stw	fp,4(sp)
 108ee3c:	df000104 	addi	fp,sp,4
 108ee40:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 108ee44:	e0bfff17 	ldw	r2,-4(fp)
 108ee48:	10bffe84 	addi	r2,r2,-6
 108ee4c:	10c00428 	cmpgeui	r3,r2,16
 108ee50:	18001a1e 	bne	r3,zero,108eebc <alt_exception_cause_generated_bad_addr+0x88>
 108ee54:	100690ba 	slli	r3,r2,2
 108ee58:	00804274 	movhi	r2,265
 108ee5c:	10bb9b04 	addi	r2,r2,-4500
 108ee60:	1885883a 	add	r2,r3,r2
 108ee64:	10800017 	ldw	r2,0(r2)
 108ee68:	1000683a 	jmp	r2
 108ee6c:	0108eeac 	andhi	r4,zero,9146
 108ee70:	0108eeac 	andhi	r4,zero,9146
 108ee74:	0108eebc 	xorhi	r4,zero,9146
 108ee78:	0108eebc 	xorhi	r4,zero,9146
 108ee7c:	0108eebc 	xorhi	r4,zero,9146
 108ee80:	0108eeac 	andhi	r4,zero,9146
 108ee84:	0108eeb4 	movhi	r4,9146
 108ee88:	0108eebc 	xorhi	r4,zero,9146
 108ee8c:	0108eeac 	andhi	r4,zero,9146
 108ee90:	0108eeac 	andhi	r4,zero,9146
 108ee94:	0108eebc 	xorhi	r4,zero,9146
 108ee98:	0108eeac 	andhi	r4,zero,9146
 108ee9c:	0108eeb4 	movhi	r4,9146
 108eea0:	0108eebc 	xorhi	r4,zero,9146
 108eea4:	0108eebc 	xorhi	r4,zero,9146
 108eea8:	0108eeac 	andhi	r4,zero,9146
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 108eeac:	00800044 	movi	r2,1
 108eeb0:	00000306 	br	108eec0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 108eeb4:	0005883a 	mov	r2,zero
 108eeb8:	00000106 	br	108eec0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 108eebc:	0005883a 	mov	r2,zero
  }
}
 108eec0:	e037883a 	mov	sp,fp
 108eec4:	df000017 	ldw	fp,0(sp)
 108eec8:	dec00104 	addi	sp,sp,4
 108eecc:	f800283a 	ret

0108eed0 <atexit>:
 108eed0:	200b883a 	mov	r5,r4
 108eed4:	000f883a 	mov	r7,zero
 108eed8:	000d883a 	mov	r6,zero
 108eedc:	0009883a 	mov	r4,zero
 108eee0:	108ef981 	jmpi	108ef98 <__register_exitproc>

0108eee4 <exit>:
 108eee4:	defffe04 	addi	sp,sp,-8
 108eee8:	000b883a 	mov	r5,zero
 108eeec:	dc000015 	stw	r16,0(sp)
 108eef0:	dfc00115 	stw	ra,4(sp)
 108eef4:	2021883a 	mov	r16,r4
 108eef8:	108f0b00 	call	108f0b0 <__call_exitprocs>
 108eefc:	00804274 	movhi	r2,265
 108ef00:	10842204 	addi	r2,r2,4232
 108ef04:	11000017 	ldw	r4,0(r2)
 108ef08:	20800f17 	ldw	r2,60(r4)
 108ef0c:	10000126 	beq	r2,zero,108ef14 <exit+0x30>
 108ef10:	103ee83a 	callr	r2
 108ef14:	8009883a 	mov	r4,r16
 108ef18:	108f2300 	call	108f230 <_exit>

0108ef1c <memcmp>:
 108ef1c:	01c000c4 	movi	r7,3
 108ef20:	3980192e 	bgeu	r7,r6,108ef88 <memcmp+0x6c>
 108ef24:	2144b03a 	or	r2,r4,r5
 108ef28:	11c4703a 	and	r2,r2,r7
 108ef2c:	10000f26 	beq	r2,zero,108ef6c <memcmp+0x50>
 108ef30:	20800003 	ldbu	r2,0(r4)
 108ef34:	28c00003 	ldbu	r3,0(r5)
 108ef38:	10c0151e 	bne	r2,r3,108ef90 <memcmp+0x74>
 108ef3c:	31bfff84 	addi	r6,r6,-2
 108ef40:	01ffffc4 	movi	r7,-1
 108ef44:	00000406 	br	108ef58 <memcmp+0x3c>
 108ef48:	20800003 	ldbu	r2,0(r4)
 108ef4c:	28c00003 	ldbu	r3,0(r5)
 108ef50:	31bfffc4 	addi	r6,r6,-1
 108ef54:	10c00e1e 	bne	r2,r3,108ef90 <memcmp+0x74>
 108ef58:	21000044 	addi	r4,r4,1
 108ef5c:	29400044 	addi	r5,r5,1
 108ef60:	31fff91e 	bne	r6,r7,108ef48 <memcmp+0x2c>
 108ef64:	0005883a 	mov	r2,zero
 108ef68:	f800283a 	ret
 108ef6c:	20c00017 	ldw	r3,0(r4)
 108ef70:	28800017 	ldw	r2,0(r5)
 108ef74:	18bfee1e 	bne	r3,r2,108ef30 <memcmp+0x14>
 108ef78:	31bfff04 	addi	r6,r6,-4
 108ef7c:	21000104 	addi	r4,r4,4
 108ef80:	29400104 	addi	r5,r5,4
 108ef84:	39bff936 	bltu	r7,r6,108ef6c <memcmp+0x50>
 108ef88:	303fe91e 	bne	r6,zero,108ef30 <memcmp+0x14>
 108ef8c:	003ff506 	br	108ef64 <memcmp+0x48>
 108ef90:	10c5c83a 	sub	r2,r2,r3
 108ef94:	f800283a 	ret

0108ef98 <__register_exitproc>:
 108ef98:	defffa04 	addi	sp,sp,-24
 108ef9c:	dc000315 	stw	r16,12(sp)
 108efa0:	04004274 	movhi	r16,265
 108efa4:	84042204 	addi	r16,r16,4232
 108efa8:	80c00017 	ldw	r3,0(r16)
 108efac:	dc400415 	stw	r17,16(sp)
 108efb0:	dfc00515 	stw	ra,20(sp)
 108efb4:	18805217 	ldw	r2,328(r3)
 108efb8:	2023883a 	mov	r17,r4
 108efbc:	10003726 	beq	r2,zero,108f09c <__register_exitproc+0x104>
 108efc0:	10c00117 	ldw	r3,4(r2)
 108efc4:	010007c4 	movi	r4,31
 108efc8:	20c00e16 	blt	r4,r3,108f004 <__register_exitproc+0x6c>
 108efcc:	1a000044 	addi	r8,r3,1
 108efd0:	8800221e 	bne	r17,zero,108f05c <__register_exitproc+0xc4>
 108efd4:	18c00084 	addi	r3,r3,2
 108efd8:	18c7883a 	add	r3,r3,r3
 108efdc:	18c7883a 	add	r3,r3,r3
 108efe0:	12000115 	stw	r8,4(r2)
 108efe4:	10c7883a 	add	r3,r2,r3
 108efe8:	19400015 	stw	r5,0(r3)
 108efec:	0005883a 	mov	r2,zero
 108eff0:	dfc00517 	ldw	ra,20(sp)
 108eff4:	dc400417 	ldw	r17,16(sp)
 108eff8:	dc000317 	ldw	r16,12(sp)
 108effc:	dec00604 	addi	sp,sp,24
 108f000:	f800283a 	ret
 108f004:	00800034 	movhi	r2,0
 108f008:	10800004 	addi	r2,r2,0
 108f00c:	10002626 	beq	r2,zero,108f0a8 <__register_exitproc+0x110>
 108f010:	01006404 	movi	r4,400
 108f014:	d9400015 	stw	r5,0(sp)
 108f018:	d9800115 	stw	r6,4(sp)
 108f01c:	d9c00215 	stw	r7,8(sp)
 108f020:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x800000>
 108f024:	d9400017 	ldw	r5,0(sp)
 108f028:	d9800117 	ldw	r6,4(sp)
 108f02c:	d9c00217 	ldw	r7,8(sp)
 108f030:	10001d26 	beq	r2,zero,108f0a8 <__register_exitproc+0x110>
 108f034:	81000017 	ldw	r4,0(r16)
 108f038:	10000115 	stw	zero,4(r2)
 108f03c:	02000044 	movi	r8,1
 108f040:	22405217 	ldw	r9,328(r4)
 108f044:	0007883a 	mov	r3,zero
 108f048:	12400015 	stw	r9,0(r2)
 108f04c:	20805215 	stw	r2,328(r4)
 108f050:	10006215 	stw	zero,392(r2)
 108f054:	10006315 	stw	zero,396(r2)
 108f058:	883fde26 	beq	r17,zero,108efd4 <__register_exitproc+0x3c>
 108f05c:	18c9883a 	add	r4,r3,r3
 108f060:	2109883a 	add	r4,r4,r4
 108f064:	1109883a 	add	r4,r2,r4
 108f068:	21802215 	stw	r6,136(r4)
 108f06c:	01800044 	movi	r6,1
 108f070:	12406217 	ldw	r9,392(r2)
 108f074:	30cc983a 	sll	r6,r6,r3
 108f078:	4992b03a 	or	r9,r9,r6
 108f07c:	12406215 	stw	r9,392(r2)
 108f080:	21c04215 	stw	r7,264(r4)
 108f084:	01000084 	movi	r4,2
 108f088:	893fd21e 	bne	r17,r4,108efd4 <__register_exitproc+0x3c>
 108f08c:	11006317 	ldw	r4,396(r2)
 108f090:	218cb03a 	or	r6,r4,r6
 108f094:	11806315 	stw	r6,396(r2)
 108f098:	003fce06 	br	108efd4 <__register_exitproc+0x3c>
 108f09c:	18805304 	addi	r2,r3,332
 108f0a0:	18805215 	stw	r2,328(r3)
 108f0a4:	003fc606 	br	108efc0 <__register_exitproc+0x28>
 108f0a8:	00bfffc4 	movi	r2,-1
 108f0ac:	003fd006 	br	108eff0 <__register_exitproc+0x58>

0108f0b0 <__call_exitprocs>:
 108f0b0:	defff504 	addi	sp,sp,-44
 108f0b4:	df000915 	stw	fp,36(sp)
 108f0b8:	dd400615 	stw	r21,24(sp)
 108f0bc:	dc800315 	stw	r18,12(sp)
 108f0c0:	dfc00a15 	stw	ra,40(sp)
 108f0c4:	ddc00815 	stw	r23,32(sp)
 108f0c8:	dd800715 	stw	r22,28(sp)
 108f0cc:	dd000515 	stw	r20,20(sp)
 108f0d0:	dcc00415 	stw	r19,16(sp)
 108f0d4:	dc400215 	stw	r17,8(sp)
 108f0d8:	dc000115 	stw	r16,4(sp)
 108f0dc:	d9000015 	stw	r4,0(sp)
 108f0e0:	2839883a 	mov	fp,r5
 108f0e4:	04800044 	movi	r18,1
 108f0e8:	057fffc4 	movi	r21,-1
 108f0ec:	00804274 	movhi	r2,265
 108f0f0:	10842204 	addi	r2,r2,4232
 108f0f4:	12000017 	ldw	r8,0(r2)
 108f0f8:	45005217 	ldw	r20,328(r8)
 108f0fc:	44c05204 	addi	r19,r8,328
 108f100:	a0001c26 	beq	r20,zero,108f174 <__call_exitprocs+0xc4>
 108f104:	a0800117 	ldw	r2,4(r20)
 108f108:	15ffffc4 	addi	r23,r2,-1
 108f10c:	b8000d16 	blt	r23,zero,108f144 <__call_exitprocs+0x94>
 108f110:	14000044 	addi	r16,r2,1
 108f114:	8421883a 	add	r16,r16,r16
 108f118:	8421883a 	add	r16,r16,r16
 108f11c:	84402004 	addi	r17,r16,128
 108f120:	a463883a 	add	r17,r20,r17
 108f124:	a421883a 	add	r16,r20,r16
 108f128:	e0001e26 	beq	fp,zero,108f1a4 <__call_exitprocs+0xf4>
 108f12c:	80804017 	ldw	r2,256(r16)
 108f130:	e0801c26 	beq	fp,r2,108f1a4 <__call_exitprocs+0xf4>
 108f134:	bdffffc4 	addi	r23,r23,-1
 108f138:	843fff04 	addi	r16,r16,-4
 108f13c:	8c7fff04 	addi	r17,r17,-4
 108f140:	bd7ff91e 	bne	r23,r21,108f128 <__call_exitprocs+0x78>
 108f144:	00800034 	movhi	r2,0
 108f148:	10800004 	addi	r2,r2,0
 108f14c:	10000926 	beq	r2,zero,108f174 <__call_exitprocs+0xc4>
 108f150:	a0800117 	ldw	r2,4(r20)
 108f154:	1000301e 	bne	r2,zero,108f218 <__call_exitprocs+0x168>
 108f158:	a0800017 	ldw	r2,0(r20)
 108f15c:	10003226 	beq	r2,zero,108f228 <__call_exitprocs+0x178>
 108f160:	a009883a 	mov	r4,r20
 108f164:	98800015 	stw	r2,0(r19)
 108f168:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x800000>
 108f16c:	9d000017 	ldw	r20,0(r19)
 108f170:	a03fe41e 	bne	r20,zero,108f104 <__call_exitprocs+0x54>
 108f174:	dfc00a17 	ldw	ra,40(sp)
 108f178:	df000917 	ldw	fp,36(sp)
 108f17c:	ddc00817 	ldw	r23,32(sp)
 108f180:	dd800717 	ldw	r22,28(sp)
 108f184:	dd400617 	ldw	r21,24(sp)
 108f188:	dd000517 	ldw	r20,20(sp)
 108f18c:	dcc00417 	ldw	r19,16(sp)
 108f190:	dc800317 	ldw	r18,12(sp)
 108f194:	dc400217 	ldw	r17,8(sp)
 108f198:	dc000117 	ldw	r16,4(sp)
 108f19c:	dec00b04 	addi	sp,sp,44
 108f1a0:	f800283a 	ret
 108f1a4:	a0800117 	ldw	r2,4(r20)
 108f1a8:	80c00017 	ldw	r3,0(r16)
 108f1ac:	10bfffc4 	addi	r2,r2,-1
 108f1b0:	15c01426 	beq	r2,r23,108f204 <__call_exitprocs+0x154>
 108f1b4:	80000015 	stw	zero,0(r16)
 108f1b8:	183fde26 	beq	r3,zero,108f134 <__call_exitprocs+0x84>
 108f1bc:	95c8983a 	sll	r4,r18,r23
 108f1c0:	a0806217 	ldw	r2,392(r20)
 108f1c4:	a5800117 	ldw	r22,4(r20)
 108f1c8:	2084703a 	and	r2,r4,r2
 108f1cc:	10000b26 	beq	r2,zero,108f1fc <__call_exitprocs+0x14c>
 108f1d0:	a0806317 	ldw	r2,396(r20)
 108f1d4:	2088703a 	and	r4,r4,r2
 108f1d8:	20000c1e 	bne	r4,zero,108f20c <__call_exitprocs+0x15c>
 108f1dc:	89400017 	ldw	r5,0(r17)
 108f1e0:	d9000017 	ldw	r4,0(sp)
 108f1e4:	183ee83a 	callr	r3
 108f1e8:	a0800117 	ldw	r2,4(r20)
 108f1ec:	15bfbf1e 	bne	r2,r22,108f0ec <__call_exitprocs+0x3c>
 108f1f0:	98800017 	ldw	r2,0(r19)
 108f1f4:	153fcf26 	beq	r2,r20,108f134 <__call_exitprocs+0x84>
 108f1f8:	003fbc06 	br	108f0ec <__call_exitprocs+0x3c>
 108f1fc:	183ee83a 	callr	r3
 108f200:	003ff906 	br	108f1e8 <__call_exitprocs+0x138>
 108f204:	a5c00115 	stw	r23,4(r20)
 108f208:	003feb06 	br	108f1b8 <__call_exitprocs+0x108>
 108f20c:	89000017 	ldw	r4,0(r17)
 108f210:	183ee83a 	callr	r3
 108f214:	003ff406 	br	108f1e8 <__call_exitprocs+0x138>
 108f218:	a0800017 	ldw	r2,0(r20)
 108f21c:	a027883a 	mov	r19,r20
 108f220:	1029883a 	mov	r20,r2
 108f224:	003fb606 	br	108f100 <__call_exitprocs+0x50>
 108f228:	0005883a 	mov	r2,zero
 108f22c:	003ffb06 	br	108f21c <__call_exitprocs+0x16c>

0108f230 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 108f230:	defffd04 	addi	sp,sp,-12
 108f234:	df000215 	stw	fp,8(sp)
 108f238:	df000204 	addi	fp,sp,8
 108f23c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 108f240:	0001883a 	nop
 108f244:	e0bfff17 	ldw	r2,-4(fp)
 108f248:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 108f24c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 108f250:	10000226 	beq	r2,zero,108f25c <_exit+0x2c>
    ALT_SIM_FAIL();
 108f254:	002af070 	cmpltui	zero,zero,43969
 108f258:	00000106 	br	108f260 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 108f25c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 108f260:	003fff06 	br	108f260 <_exit+0x30>
