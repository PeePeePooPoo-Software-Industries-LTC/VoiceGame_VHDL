
gameconsole.elf:     file format elf32-littlenios2
gameconsole.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00880248

Program Header:
    LOAD off    0x00001000 vaddr 0x00880000 paddr 0x00880000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00880020 paddr 0x00880020 align 2**12
         filesz 0x00012958 memsz 0x00012958 flags r-x
    LOAD off    0x00013978 vaddr 0x00892978 paddr 0x008944bc align 2**12
         filesz 0x00001b44 memsz 0x00001b44 flags rw-
    LOAD off    0x00016000 vaddr 0x00896000 paddr 0x00896000 align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00880000  00880000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00880020  00880020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011f88  00880248  00880248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000007a8  008921d0  008921d0  000131d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b44  00892978  008944bc  00013978  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  00896000  00896000  00016000  2**2
                  ALLOC, SMALL_DATA
  6 .new_sdram_controller_0 00000000  00000000  00000000  000154bc  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  0089617c  0089617c  000154bc  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000154bc  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000013d8  00000000  00000000  000154e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00030588  00000000  00000000  000168b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000cdeb  00000000  00000000  00046e40  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000fd57  00000000  00000000  00053c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002f5c  00000000  00000000  00063984  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000716a  00000000  00000000  000668e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001bbb8  00000000  00000000  0006da4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  00089604  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00002058  00000000  00000000  00089638  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0009068a  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0009068d  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00090699  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0009069a  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  0009069b  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  000906a6  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  000906b1  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000b  00000000  00000000  000906bc  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000034  00000000  00000000  000906c7  2**0
                  CONTENTS, READONLY
 27 .jdi          000056af  00000000  00000000  000906fb  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0004fb93  00000000  00000000  00095daa  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00880000 l    d  .entry	00000000 .entry
00880020 l    d  .exceptions	00000000 .exceptions
00880248 l    d  .text	00000000 .text
008921d0 l    d  .rodata	00000000 .rodata
00892978 l    d  .rwdata	00000000 .rwdata
00896000 l    d  .bss	00000000 .bss
00000000 l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
0089617c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../gameconsole_bsp//obj/HAL/src/crt0.o
00880290 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.cpp
00892254 l     O .rodata	00000034 _ZZN7VipCore9reg_writeEjjE19__PRETTY_FUNCTION__
00000000 l    df *ABS*	00000000 eh_personality.cc
008805c0 l     F .text	000000a4 _ZL21size_of_encoded_valueh
00880664 l     F .text	0000020c _ZL28read_encoded_value_with_basehjPKhPj
00880870 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
008808c4 l     F .text	0000008c _ZL21base_of_encoded_valuehP15_Unwind_Context
00880950 l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
00880a84 l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3
00880b0c l     F .text	000001c0 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
00880ccc l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_throw.cc
008815a4 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 eh_alloc.cc
008819d4 l     F .text	000000b8 _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
00896044 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
00881a8c l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
00881c3c l     F .text	0000005c _GLOBAL__sub_I___cxa_allocate_exception
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
00896000 l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 unwind-sjlj.c
0088236c l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
00896008 l     O .bss	00000004 fc_static
00882484 l     F .text	000000c0 _Unwind_RaiseException_Phase2
00882544 l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 impure.c
00892978 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 vfprintf.c
0089251e l     O .rodata	00000010 zeroes.4404
008859a4 l     F .text	000000bc __sbprintf
0089252e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00885bb4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008876e4 l     F .text	00000008 __fp_unlock
008876f8 l     F .text	0000019c __sinit.part.1
00887894 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
008931c4 l     O .rwdata	00000020 lc_ctype_charset
008931a4 l     O .rwdata	00000020 lc_message_charset
008931e4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0089255c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00889748 l     F .text	000000fc __sprint_r.part.0
00892690 l     O .rodata	00000010 blanks.4348
00892680 l     O .rodata	00000010 zeroes.4349
0088acd4 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0088f50c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0088f618 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0088f678 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0088f784 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0088f864 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0088f9d0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0088fabc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0088fc90 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008944ac l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0088fedc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00890010 l     F .text	00000034 alt_dev_reg
008933c4 l     O .rwdata	00001060 jtag_uart_0
00894424 l     O .rwdata	00000030 audio_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
008902e8 l     F .text	00000210 altera_avalon_jtag_uart_irq
008904f8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 Frame_Buffer.cpp
00892860 l     O .rodata	00000033 _ZZN7VipCore8do_writeEjjE19__PRETTY_FUNCTION__
00892894 l     O .rodata	00000031 _ZZN12Frame_Buffer15set_frame_delayEjE19__PRETTY_FUNCTION__
00000000 l    df *ABS*	00000000 VipCore.cpp
00892910 l     O .rodata	00000034 _ZZN7VipCore9reg_writeEjjE19__PRETTY_FUNCTION__
00892944 l     O .rodata	00000033 _ZZNK7VipCore8reg_readEjE19__PRETTY_FUNCTION__
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00891210 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
008913e4 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
008916a4 l     F .text	0000003c alt_get_errno
008916e0 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00896040 g     O .bss	00000004 alt_instruction_exception_handler
00881b94 g     F .text	00000028 __cxa_free_exception
00882314 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
00889388 g     F .text	00000074 _mprec_log10
00881974 g     F .text	00000018 _ZSt10unexpectedv
00889474 g     F .text	0000008c __any_on
0088b72c g     F .text	00000054 _isatty_r
00892568 g     O .rodata	00000028 __mprec_tinytens
0088fbcc g     F .text	0000007c alt_main
0089607c g     O .bss	00000100 alt_irq
00881d30 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0088b780 g     F .text	00000060 _lseek_r
00890b30 g     F .text	00000140 _ZN12Frame_BufferC1Embi
00882600 g     F .text	00000020 .hidden _Unwind_GetIPInfo
008944bc g       *ABS*	00000000 __flash_rwdata_start
0088e038 g     F .text	00000088 .hidden __eqdf2
00881678 g     F .text	00000084 __cxa_rethrow
0088258c g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
008819b0 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
008804d0  w    F .text	00000030 _ZNK7VipCore5is_onEv
008825f0 g     F .text	00000010 .hidden _Unwind_GetIP
0089617c g       *ABS*	00000000 __alt_heap_start
0088363c g     F .text	0000005c _kill_r
00883308 g     F .text	0000003c printf
0088c058 g     F .text	0000009c _wcrtomb_r
00890fe8  w    F .text	00000040 _ZN7VipCore24write_interrupt_registerEj
00883404 g     F .text	00000084 _signal_r
0088964c g     F .text	0000005c __sseek
00887a34 g     F .text	00000010 __sinit
00890eb8 g     F .text	00000054 _ZN7VipCoreD2Ev
0088bf00 g     F .text	00000140 __swbuf_r
00881c10 g     F .text	0000002c __cxa_free_dependent_exception
0088204c g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
00888040 g     F .text	0000007c _setlocale_r
00892408  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
0088789c g     F .text	00000068 __sfmoreglue
0088fc6c g     F .text	00000024 __malloc_unlock
00881d30 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
00891028  w    F .text	00000074 _ZNK7VipCore8reg_readEj
0088186c g     F .text	00000020 _ZSt18uncaught_exceptionv
00881d64 g     F .text	00000020 __cxa_deleted_virtual
0088b7e0 g     F .text	0000015c memmove
00881d08 g     F .text	00000004 _ZNSt9exceptionD2Ev
00887a1c g     F .text	00000018 _cleanup
00888504 g     F .text	000000a8 _Balloc
00890fb4  w    F .text	00000034 _ZNK7VipCore23read_interrupt_registerEv
0088e0c0 g     F .text	000000dc .hidden __gtdf2
00892334  w    O .rodata	00000014 _ZTVSt13bad_exception
00891a9c g     F .text	00000024 altera_nios2_gen2_irq_init
00880000 g     F .entry	0000001c __reset
0088263c g     F .text	00000008 .hidden _Unwind_GetRegionStart
00890eb8 g     F .text	00000054 _ZN7VipCoreD1Ev
00880020 g       *ABS*	00000000 __flash_exceptions_start
0088b214 g     F .text	0000005c _fstat_r
00896018 g     O .bss	00000004 errno
008895c8 g     F .text	00000008 __seofread
00882818 g     F .text	00000074 .hidden _Unwind_Backtrace
0089602c g     O .bss	00000004 alt_argv
0089c454 g       *ABS*	00000000 _gp
0088f764 g     F .text	00000020 getpid
00881374 g     F .text	00000230 __cxa_call_unexpected
008816fc g     F .text	00000008 __cxa_get_exception_ptr
00893244 g     O .rwdata	00000180 alt_fd_list
0088272c g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
008825bc g     F .text	00000018 .hidden _Unwind_GetCFA
0088198c g     F .text	00000014 _ZSt13set_terminatePFvvE
00891ac0 g     F .text	00000090 alt_find_dev
008883bc g     F .text	00000148 memcpy
00881bbc g     F .text	00000054 __cxa_allocate_dependent_exception
00890f4c g     F .text	00000068 _ZN7VipCore3isrEv
008876ec g     F .text	0000000c _cleanup_r
00881dfc g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
0088f324 g     F .text	000000dc .hidden __floatsidf
008914a8 g     F .text	0000007c alt_io_redirect
0088e19c g     F .text	000000f4 .hidden __ltdf2
008921d0 g       *ABS*	00000000 __DTOR_END__
00881e14 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
00891d8c g     F .text	0000009c alt_exception_cause_generated_bad_addr
00889500 g     F .text	00000074 __fpclassifyd
008892e4 g     F .text	000000a4 __ratio
0088acb8 g     F .text	0000001c __vfiprintf_internal
008906f0 g     F .text	0000021c altera_avalon_jtag_uart_read
0088297c g     F .text	00000014 malloc
008832d8 g     F .text	00000030 _printf_r
00880000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0088cde8 g     F .text	00000064 .hidden __udivsi3
0088f7c0 g     F .text	000000a4 isatty
00883488 g     F .text	000000bc _raise_r
008828a4 g     F .text	00000068 __assert_func
008925b8 g     O .rodata	000000c8 __mprec_tens
008880bc g     F .text	0000000c __locale_charset
00891cfc g     F .text	00000090 alt_icache_flush
00896014 g     O .bss	00000004 __malloc_top_pad
00883698 g     F .text	00000004 _getpid_r
00890b30 g     F .text	00000140 _ZN12Frame_BufferC2Embi
0089448c g     O .rwdata	00000004 __mb_cur_max
008880ec g     F .text	0000000c _localeconv_r
0088b270 g     F .text	000004bc __sfvwrite_r
00888910 g     F .text	0000003c __i2b
00881f94 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
00883544 g     F .text	000000a8 __sigtramp_r
00883344 g     F .text	00000054 _sbrk_r
00892478  w    O .rodata	00000020 _ZTVSt9type_info
00880500  w    F .text	00000088 _ZN7VipCore9reg_writeEjj
0088b93c g     F .text	00000060 _read_r
00881d10 g     F .text	0000000c _ZNKSt9exception4whatEv
008944a4 g     O .rwdata	00000004 alt_max_fd
0088af08 g     F .text	000000f0 _fclose_r
008876b4 g     F .text	00000030 fflush
00896010 g     O .bss	00000004 __malloc_max_sbrked_mem
00891524 g     F .text	00000180 alt_irq_register
0088cea4 g     F .text	000008ac .hidden __adddf3
0089243c  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
0088908c g     F .text	0000010c __b2d
0088c7b8 g     F .text	00000538 .hidden __umoddi3
0088faf8 g     F .text	000000d4 lseek
00881e58 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
00881d40 g     F .text	00000004 _ZdlPv
0089447c g     O .rwdata	00000004 _global_impure_ptr
0088b99c g     F .text	00000564 _realloc_r
0089617c g       *ABS*	00000000 __bss_end
00891994 g     F .text	00000108 alt_tick
00882574 g     F .text	00000018 .hidden _Unwind_SjLj_Register
0088c240 g     F .text	00000578 .hidden __udivdi3
0088b170 g     F .text	00000024 _fputwc_r
00892590 g     O .rodata	00000028 __mprec_bigtens
008886f4 g     F .text	00000104 __s2b
0088288c g     F .text	00000018 abort
0088f400 g     F .text	000000a8 .hidden __floatunsidf
00888dcc g     F .text	00000060 __mcmp
008817b8 g     F .text	000000b4 __cxa_end_catch
00887a54 g     F .text	00000018 __fp_lock_all
00881d0c g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
008918f8 g     F .text	0000009c alt_alarm_stop
00896034 g     O .bss	00000004 alt_irq_active
0088194c g     F .text	00000018 _ZSt9terminatev
008800fc g     F .exceptions	000000d8 alt_irq_handler
0089321c g     O .rwdata	00000028 alt_dev_null
00881d38 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
008923ac  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
008911c8 g     F .text	00000048 alt_dcache_flush_all
008887f8 g     F .text	00000068 __hi0bits
00894458  w    O .rwdata	00000008 _ZTISt9exception
0088f2a4 g     F .text	00000080 .hidden __fixdfsi
008944bc g       *ABS*	00000000 __ram_rwdata_end
00882310 g     F .text	00000004 _ZNSt9type_infoD1Ev
0089449c g     O .rwdata	00000008 alt_dev_list
00881d38 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
0088ff18 g     F .text	000000f8 write
00882324 g     F .text	00000004 _ZNSt9type_infoD0Ev
00892978 g       *ABS*	00000000 __ram_rodata_end
0088f6b4 g     F .text	000000b0 fstat
0088f8a0 g     F .text	00000130 kill
0088e19c g     F .text	000000f4 .hidden __ledf2
00888b44 g     F .text	00000140 __pow5mult
00896024 g     O .bss	00000004 __nlocale_changed
0088985c g     F .text	0000145c ___vfiprintf_internal_r
0088ce4c g     F .text	00000058 .hidden __umodsi3
00890d88  w    F .text	00000088 _ZN7VipCore8do_writeEjj
0088231c g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
008819a0 g     F .text	00000010 _ZSt13get_terminatev
0089617c g       *ABS*	00000000 end
00882800 g     F .text	00000018 .hidden _Unwind_DeleteException
00890234 g     F .text	000000b4 altera_avalon_jtag_uart_init
008801d4 g     F .exceptions	00000074 alt_instruction_exception_entry
00881ec4 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
008921cb g       *ABS*	00000000 __CTOR_LIST__
008e1a80 g       *ABS*	00000000 __alt_stack_pointer
0088f4a8 g     F .text	00000064 .hidden __clzsi2
00881d84 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
0089090c g     F .text	00000224 altera_avalon_jtag_uart_write
00887a44 g     F .text	00000004 __sfp_lock_acquire
008922bc  w    O .rodata	00000012 _ZTSSt13bad_exception
008882d8 g     F .text	000000e4 memchr
00883790 g     F .text	000021f8 ___vfprintf_internal_r
00887ba8 g     F .text	00000310 _free_r
008880c8 g     F .text	00000010 __locale_mb_cur_max
00892008 g     F .text	00000180 __call_exitprocs
00896020 g     O .bss	00000004 __mlocale_changed
00894484 g     O .rwdata	00000004 __malloc_sbrk_base
00880248 g     F .text	0000004c _start
00896038 g     O .bss	00000004 _alt_tick_rate
00892468  w    O .rodata	0000000d _ZTSSt9type_info
00880478  w    F .text	00000058 _ZN7VipCore5startEv
00881d44 g     F .text	00000020 __cxa_pure_virtual
00888c84 g     F .text	00000148 __lshift
0089603c g     O .bss	00000004 _alt_nticks
00883600 g     F .text	00000018 signal
0088fccc g     F .text	000000fc read
0089007c g     F .text	00000054 alt_sys_init
00891ef0 g     F .text	00000118 __register_exitproc
00882090 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
0088894c g     F .text	000001f8 __multiply
00890598 g     F .text	00000068 altera_avalon_jtag_uart_close
00892978 g       *ABS*	00000000 __ram_rwdata_start
0088265c g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
008921d0 g       *ABS*	00000000 __ram_rodata_start
00896054 g     O .bss	00000028 __malloc_current_mallinfo
00882770 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
00889198 g     F .text	0000014c __d2b
0089235c  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
00882310 g     F .text	00000004 _ZNSt9type_infoD2Ev
00881d3c g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
0088228c g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
008900d0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00891c58 g     F .text	000000a4 alt_get_fd
00890cf4 g     F .text	00000094 _ZN12Frame_Buffer15set_frame_delayEj
00894468  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0088adf0 g     F .text	00000054 _close_r
00891e74 g     F .text	0000007c memcmp
00890190 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0089617c g       *ABS*	00000000 __alt_stack_base
008901e0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0088204c g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
00890f0c g     F .text	00000040 _ZN7VipCore17genericISR_legacyEPvm
00885a60 g     F .text	00000154 __swsetup_r
008827b4 g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
0088d750 g     F .text	000008e8 .hidden __divdf3
00887904 g     F .text	00000118 __sfp
008893fc g     F .text	00000078 __copybits
00882314 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
00892d9c g     O .rwdata	00000408 __malloc_av_
00887a50 g     F .text	00000004 __sinit_lock_release
0088e290 g     F .text	00000718 .hidden __muldf3
00889574 g     F .text	00000054 __sread
00892320  w    O .rodata	00000014 _ZTVSt9exception
00881d34 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
00891b50 g     F .text	00000108 alt_find_file
0089124c g     F .text	000000a4 alt_dev_llist_insert
0088fc48 g     F .text	00000024 __malloc_lock
0088fe2c g     F .text	000000b0 sbrk
00890c70 g     F .text	00000084 _ZN12Frame_Buffer24set_user_packet_affinityENS_18UserPacketAffinityE
008923dc  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
008815e8 g     F .text	00000090 __cxa_throw
00887658 g     F .text	0000005c _fflush_r
00882620 g     F .text	00000010 .hidden _Unwind_SetIP
0088ae44 g     F .text	000000c4 _calloc_r
00896000 g       *ABS*	00000000 __bss_start
008831b0 g     F .text	00000128 memset
00880294 g     F .text	000001e4 main
00896030 g     O .bss	00000004 alt_envp
0089600c g     O .bss	00000004 __malloc_max_total_mem
00890130 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0088c040 g     F .text	00000018 __swbuf
00881cf0 g     F .text	0000000c __cxa_get_globals_fast
008896a8 g     F .text	00000008 __sclose
008e1a80 g       *ABS*	00000000 __alt_heap_limit
0088aff8 g     F .text	00000014 fclose
00885db4 g     F .text	00001688 _dtoa_r
008829a4 g     F .text	0000080c _malloc_r
0088c1b4 g     F .text	00000030 __ascii_wctomb
00881d1c g     F .text	0000000c _ZNKSt13bad_exception4whatEv
008944a8 g     O .rwdata	00000004 alt_errno
00882920 g     F .text	00000020 _fiprintf_r
00883618 g     F .text	00000010 _init_signal
008923d0  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
00887eb8 g     F .text	000000c4 _fwalk
00881d0c g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
0088ccf0 g     F .text	00000084 .hidden __divsi3
00890e10 g     F .text	000000a8 _ZN7VipCoreC2Emi
00887a84 g     F .text	00000124 _malloc_trim_r
008921d0 g       *ABS*	00000000 __CTOR_END__
0088369c g     F .text	000000dc strcmp
008921d0 g       *ABS*	00000000 __flash_rodata_start
00892348  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
008921d0 g       *ABS*	00000000 __DTOR_LIST__
0088e038 g     F .text	00000088 .hidden __nedf2
00890044 g     F .text	00000038 alt_irq_init
0088fdc8 g     F .text	00000064 alt_release_fd
0088205c g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
008926a0 g     O .rodata	00000100 .hidden __clz_tab
0089601c g     O .bss	00000004 _PathLocale
00891e28 g     F .text	00000014 atexit
0088ad90 g     F .text	00000060 _write_r
008880f8 g     F .text	00000018 setlocale
00882654 g     F .text	00000008 .hidden _Unwind_GetTextRelBase
00881c98 g     F .text	00000058 __cxa_call_terminate
00894480 g     O .rwdata	00000004 _impure_ptr
00894460  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
00896028 g     O .bss	00000004 alt_argc
0088743c g     F .text	0000021c __sflush_r
00891350 g     F .text	00000060 _do_dtors
008880e4 g     F .text	00000008 __locale_cjk_lang
008819c4 g     F .text	00000010 _ZSt14get_unexpectedv
00880020 g       .exceptions	00000000 alt_irq_entry
00889028 g     F .text	00000064 __ulp
00882644 g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
00887a6c g     F .text	00000018 __fp_unlock_all
00890e10 g     F .text	000000a8 _ZN7VipCoreC1Emi
00894494 g     O .rwdata	00000008 alt_fs_list
008922fc  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
00882630 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
00881704 g     F .text	000000b4 __cxa_begin_catch
00881e14 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
00881964 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
00880020 g       *ABS*	00000000 __ram_exceptions_start
00888110 g     F .text	0000000c localeconv
00000000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
00881d2c g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
00894470 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
00881b34 g     F .text	00000060 __cxa_allocate_exception
00892430  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
008944bc g       *ABS*	00000000 _edata
0089617c g       *ABS*	00000000 _end
00880d74 g     F .text	00000600 __gxx_personality_sj0
0088b00c g     F .text	00000164 __fputwc
00880248 g       *ABS*	00000000 __ram_exceptions_end
00890600 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00881d08 g     F .text	00000004 _ZNSt9exceptionD1Ev
008895d0 g     F .text	0000007c __swrite
00894488 g     O .rwdata	00000004 __malloc_trim_threshold
008880d8 g     F .text	0000000c __locale_msgcharset
00891e3c g     F .text	00000038 exit
00882940 g     F .text	0000003c fiprintf
008825d4 g     F .text	0000001c .hidden _Unwind_SetGR
00883778 g     F .text	00000018 _vfiprintf_r
00887f7c g     F .text	000000c4 _fwalk_reent
008821f0 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
00888e2c g     F .text	000001fc __mdiff
0088188c g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
0088cd74 g     F .text	00000074 .hidden __modsi3
00880588  w    F .text	00000038 _ZN12Frame_BufferD2Ev
008e1a80 g       *ABS*	00000000 __alt_data_end
00880020 g     F .exceptions	00000000 alt_exception
00887a48 g     F .text	00000004 __sfp_lock_release
008922d0  w    O .rodata	0000000c _ZTISt13bad_exception
00880588  w    F .text	00000038 _ZN12Frame_BufferD1Ev
0088f644 g     F .text	00000034 _exit
0089109c g     F .text	0000012c alt_alarm_start
008825a0 g     F .text	0000001c .hidden _Unwind_GetGR
00881cfc g     F .text	0000000c __cxa_get_globals
0088811c g     F .text	000001bc __smakebuf_r
00894454 g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
008896b0 g     F .text	00000098 strlen
00883398 g     F .text	0000006c _init_signal_r
00894474  w    O .rwdata	00000008 _ZTISt9type_info
008917a4 g     F .text	00000154 open
0088e0c0 g     F .text	000000dc .hidden __gedf2
008922ac  w    O .rodata	0000000d _ZTSSt9exception
0088290c g     F .text	00000014 __assert
00894490 g     O .rwdata	00000004 __wctomb
00881d28 g     F .text	00000004 _ZNSt9exceptionD0Ev
00889844 g     F .text	00000018 __sprint_r
008913b0 g     F .text	00000034 alt_icache_flush_all
0088264c g     F .text	00000008 .hidden _Unwind_GetDataRelBase
008944b0 g     O .rwdata	00000004 alt_priority_mask
00885988 g     F .text	0000001c __vfprintf_internal
0088c1e4 g     F .text	0000005c _wctomb_r
0088e9a8 g     F .text	000008fc .hidden __subdf3
00888860 g     F .text	000000b0 __lo0bits
008944b4 g     O .rwdata	00000008 alt_alarm_list
008912f0 g     F .text	00000060 _do_ctors
00883628 g     F .text	00000014 __sigtramp
0088c0f4 g     F .text	000000c0 wcrtomb
0088f548 g     F .text	000000d0 close
008922dc  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
0088fa38 g     F .text	00000084 alt_load
00882328 g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
0088b194 g     F .text	00000080 fputwc
008835ec g     F .text	00000014 raise
00882990 g     F .text	00000014 free
00887a4c g     F .text	00000004 __sinit_lock_acquire
008885d4 g     F .text	00000120 __multadd
00881e24 g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
008885ac g     F .text	00000028 _Bfree



Disassembly of section .entry:

00880000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  880000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  880004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  880008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  88000c:	00bffd16 	blt	zero,r2,880004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  880010:	00402234 	movhi	at,136
    ori r1, r1, %lo(_start)
  880014:	08409214 	ori	at,at,584
    jmp r1
  880018:	0800683a 	jmp	at
  88001c:	00000000 	call	0 <__alt_mem_new_sdram_controller_0>

Disassembly of section .exceptions:

00880020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  880020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  880024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  880028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  88002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  880030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  880034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  880038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  88003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  880040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  880044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  880048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  88004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  880050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  880054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  880058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  88005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  880060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  880064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  880068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  88006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  880070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  880074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  880078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  88007c:	10000326 	beq	r2,zero,88008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  880080:	20000226 	beq	r4,zero,88008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  880084:	08800fc0 	call	8800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  880088:	00000706 	br	8800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  88008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  880090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  880094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  880098:	08801d40 	call	8801d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  88009c:	1000021e 	bne	r2,zero,8800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8800f8:	ef80083a 	eret

008800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8800fc:	defff904 	addi	sp,sp,-28
  880100:	dfc00615 	stw	ra,24(sp)
  880104:	df000515 	stw	fp,20(sp)
  880108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  88010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  880110:	0005313a 	rdctl	r2,ipending
  880114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  880118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  88011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  880120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  880124:	00800044 	movi	r2,1
  880128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  88012c:	e0fffb17 	ldw	r3,-20(fp)
  880130:	e0bffc17 	ldw	r2,-16(fp)
  880134:	1884703a 	and	r2,r3,r2
  880138:	10001526 	beq	r2,zero,880190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
  88013c:	00802274 	movhi	r2,137
  880140:	10981f04 	addi	r2,r2,24700
  880144:	e0fffd17 	ldw	r3,-12(fp)
  880148:	180690fa 	slli	r3,r3,3
  88014c:	10c5883a 	add	r2,r2,r3
  880150:	10c00017 	ldw	r3,0(r2)
  880154:	00802274 	movhi	r2,137
  880158:	10981f04 	addi	r2,r2,24700
  88015c:	e13ffd17 	ldw	r4,-12(fp)
  880160:	200890fa 	slli	r4,r4,3
  880164:	1105883a 	add	r2,r2,r4
  880168:	10800104 	addi	r2,r2,4
  88016c:	10800017 	ldw	r2,0(r2)
  880170:	e17ffd17 	ldw	r5,-12(fp)
  880174:	1009883a 	mov	r4,r2
  880178:	183ee83a 	callr	r3
#endif
        break;
  88017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  880180:	0005313a 	rdctl	r2,ipending
  880184:	e0bfff15 	stw	r2,-4(fp)

  return active;
  880188:	e0bfff17 	ldw	r2,-4(fp)
  88018c:	00000706 	br	8801ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
  880190:	e0bffc17 	ldw	r2,-16(fp)
  880194:	1085883a 	add	r2,r2,r2
  880198:	e0bffc15 	stw	r2,-16(fp)
      i++;
  88019c:	e0bffd17 	ldw	r2,-12(fp)
  8801a0:	10800044 	addi	r2,r2,1
  8801a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8801a8:	003fe006 	br	88012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
  8801ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8801b0:	e0bffb17 	ldw	r2,-20(fp)
  8801b4:	103fda1e 	bne	r2,zero,880120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8801b8:	0001883a 	nop
}
  8801bc:	0001883a 	nop
  8801c0:	e037883a 	mov	sp,fp
  8801c4:	dfc00117 	ldw	ra,4(sp)
  8801c8:	df000017 	ldw	fp,0(sp)
  8801cc:	dec00204 	addi	sp,sp,8
  8801d0:	f800283a 	ret

008801d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8801d4:	defffb04 	addi	sp,sp,-20
  8801d8:	dfc00415 	stw	ra,16(sp)
  8801dc:	df000315 	stw	fp,12(sp)
  8801e0:	df000304 	addi	fp,sp,12
  8801e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8801e8:	000531fa 	rdctl	r2,exception
  8801ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8801f0:	e0bffd17 	ldw	r2,-12(fp)
  8801f4:	10801f0c 	andi	r2,r2,124
  8801f8:	1004d0ba 	srli	r2,r2,2
  8801fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  880200:	0005333a 	rdctl	r2,badaddr
  880204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  880208:	d0a6fb17 	ldw	r2,-25620(gp)
  88020c:	10000726 	beq	r2,zero,88022c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  880210:	d0a6fb17 	ldw	r2,-25620(gp)
  880214:	e0fffd17 	ldw	r3,-12(fp)
  880218:	e1bffe17 	ldw	r6,-8(fp)
  88021c:	e17fff17 	ldw	r5,-4(fp)
  880220:	1809883a 	mov	r4,r3
  880224:	103ee83a 	callr	r2
  880228:	00000206 	br	880234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  88022c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  880230:	0005883a 	mov	r2,zero
}
  880234:	e037883a 	mov	sp,fp
  880238:	dfc00117 	ldw	ra,4(sp)
  88023c:	df000017 	ldw	fp,0(sp)
  880240:	dec00204 	addi	sp,sp,8
  880244:	f800283a 	ret

Disassembly of section .text:

00880248 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  880248:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  88024c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  880250:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  880254:	00bffd16 	blt	zero,r2,88024c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  880258:	06c023b4 	movhi	sp,142
    ori sp, sp, %lo(__alt_stack_pointer)
  88025c:	dec6a014 	ori	sp,sp,6784
    movhi gp, %hi(_gp)
  880260:	06802274 	movhi	gp,137
    ori gp, gp, %lo(_gp)
  880264:	d6b11514 	ori	gp,gp,50260
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  880268:	00802274 	movhi	r2,137
    ori r2, r2, %lo(__bss_start)
  88026c:	10980014 	ori	r2,r2,24576

    movhi r3, %hi(__bss_end)
  880270:	00c02274 	movhi	r3,137
    ori r3, r3, %lo(__bss_end)
  880274:	18d85f14 	ori	r3,r3,24956

    beq r2, r3, 1f
  880278:	10c00326 	beq	r2,r3,880288 <_start+0x40>

0:
    stw zero, (r2)
  88027c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  880280:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  880284:	10fffd36 	bltu	r2,r3,88027c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  880288:	088fa380 	call	88fa38 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  88028c:	088fbcc0 	call	88fbcc <alt_main>

00880290 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  880290:	003fff06 	br	880290 <alt_after_alt_main>

00880294 <main>:
#include <stdio.h>

#include "Frame_Buffer.hpp"

int main()
{
  880294:	deffdc04 	addi	sp,sp,-144
  880298:	dfc02315 	stw	ra,140(sp)
  88029c:	df002215 	stw	fp,136(sp)
  8802a0:	ddc02115 	stw	r23,132(sp)
  8802a4:	dd802015 	stw	r22,128(sp)
  8802a8:	dd401f15 	stw	r21,124(sp)
  8802ac:	dd001e15 	stw	r20,120(sp)
  8802b0:	dcc01d15 	stw	r19,116(sp)
  8802b4:	dc801c15 	stw	r18,112(sp)
  8802b8:	dc401b15 	stw	r17,108(sp)
  8802bc:	dc001a15 	stw	r16,104(sp)
  8802c0:	df002204 	addi	fp,sp,136
  8802c4:	00802234 	movhi	r2,136
  8802c8:	10835d04 	addi	r2,r2,3444
  8802cc:	e0bfee15 	stw	r2,-72(fp)
  8802d0:	00802274 	movhi	r2,137
  8802d4:	10886204 	addi	r2,r2,8584
  8802d8:	e0bfef15 	stw	r2,-68(fp)
  8802dc:	e0bff004 	addi	r2,fp,-64
  8802e0:	e0ffde04 	addi	r3,fp,-136
  8802e4:	10c00015 	stw	r3,0(r2)
  8802e8:	00c02234 	movhi	r3,136
  8802ec:	18c10104 	addi	r3,r3,1028
  8802f0:	10c00115 	stw	r3,4(r2)
  8802f4:	16c00215 	stw	sp,8(r2)
  8802f8:	e0bfe804 	addi	r2,fp,-96
  8802fc:	1009883a 	mov	r4,r2
  880300:	08825740 	call	882574 <_Unwind_SjLj_Register>
  int x = 0;
  880304:	e03fe115 	stw	zero,-124(fp)

  printf("Printing out address of variable X: %p\n", &x);
  880308:	e0bfe104 	addi	r2,fp,-124
  88030c:	100b883a 	mov	r5,r2
  880310:	01002274 	movhi	r4,137
  880314:	00bfffc4 	movi	r2,-1
  880318:	e0bfe915 	stw	r2,-92(fp)
  88031c:	21088804 	addi	r4,r4,8736
  880320:	08833080 	call	883308 <printf>

  unsigned long framebuffer_addr = 0x00100000;
  880324:	00800434 	movhi	r2,16
  880328:	e0bfdf15 	stw	r2,-132(fp)

  Frame_Buffer vip(framebuffer_addr, 2);
  88032c:	e0bfe204 	addi	r2,fp,-120
  880330:	01ffffc4 	movi	r7,-1
  880334:	01800044 	movi	r6,1
  880338:	e17fdf17 	ldw	r5,-132(fp)
  88033c:	1009883a 	mov	r4,r2
  880340:	0890b300 	call	890b30 <_ZN12Frame_BufferC1Embi>

  printf("Is on: %d\n", vip.is_on());
  880344:	e0bfe204 	addi	r2,fp,-120
  880348:	1009883a 	mov	r4,r2
  88034c:	08804d00 	call	8804d0 <_ZNK7VipCore5is_onEv>
  880350:	10803fcc 	andi	r2,r2,255
  880354:	100b883a 	mov	r5,r2
  880358:	01002274 	movhi	r4,137
  88035c:	00800044 	movi	r2,1
  880360:	e0bfe915 	stw	r2,-92(fp)
  880364:	21089204 	addi	r4,r4,8776
  880368:	08833080 	call	883308 <printf>
  vip.start();
  88036c:	e0bfe204 	addi	r2,fp,-120
  880370:	1009883a 	mov	r4,r2
  880374:	08804780 	call	880478 <_ZN7VipCore5startEv>
  printf("Is on: %d\n", vip.is_on());
  880378:	e0bfe204 	addi	r2,fp,-120
  88037c:	1009883a 	mov	r4,r2
  880380:	08804d00 	call	8804d0 <_ZNK7VipCore5is_onEv>
  880384:	10803fcc 	andi	r2,r2,255
  880388:	100b883a 	mov	r5,r2
  88038c:	01002274 	movhi	r4,137
  880390:	21089204 	addi	r4,r4,8776
  880394:	08833080 	call	883308 <printf>


  unsigned long test = framebuffer_addr + 0x10000;
  880398:	e0ffdf17 	ldw	r3,-132(fp)
  88039c:	00800074 	movhi	r2,1
  8803a0:	1885883a 	add	r2,r3,r2
  8803a4:	e0bfe015 	stw	r2,-128(fp)

  for (int i = 0; i < 0x20000; i++) {
  8803a8:	e03fde15 	stw	zero,-136(fp)
  8803ac:	e0ffde17 	ldw	r3,-136(fp)
  8803b0:	008000b4 	movhi	r2,2
  8803b4:	18800a0e 	bge	r3,r2,8803e0 <main+0x14c>
	  *((char*)(test + i)) = 0xff;
  8803b8:	e0ffde17 	ldw	r3,-136(fp)
  8803bc:	e0bfe017 	ldw	r2,-128(fp)
  8803c0:	1885883a 	add	r2,r3,r2
  8803c4:	1007883a 	mov	r3,r2
  8803c8:	00bfffc4 	movi	r2,-1
  8803cc:	18800005 	stb	r2,0(r3)
  printf("Is on: %d\n", vip.is_on());


  unsigned long test = framebuffer_addr + 0x10000;

  for (int i = 0; i < 0x20000; i++) {
  8803d0:	e0bfde17 	ldw	r2,-136(fp)
  8803d4:	10800044 	addi	r2,r2,1
  8803d8:	e0bfde15 	stw	r2,-136(fp)
  8803dc:	003ff306 	br	8803ac <main+0x118>
	  *((char*)(test + i)) = 0xff;
  }

  return 0;
  8803e0:	e03ff515 	stw	zero,-44(fp)

  printf("Printing out address of variable X: %p\n", &x);

  unsigned long framebuffer_addr = 0x00100000;

  Frame_Buffer vip(framebuffer_addr, 2);
  8803e4:	e0ffe204 	addi	r3,fp,-120
  8803e8:	00bfffc4 	movi	r2,-1
  8803ec:	e0bfe915 	stw	r2,-92(fp)
  8803f0:	1809883a 	mov	r4,r3
  8803f4:	08805880 	call	880588 <_ZN12Frame_BufferD1Ev>
  8803f8:	e0bff517 	ldw	r2,-44(fp)
  8803fc:	e0bff615 	stw	r2,-40(fp)
  880400:	00000c06 	br	880434 <main+0x1a0>
  880404:	e7002204 	addi	fp,fp,136
  880408:	e0bfea17 	ldw	r2,-88(fp)
  88040c:	e0bff715 	stw	r2,-36(fp)
  880410:	e0bfe204 	addi	r2,fp,-120
  880414:	e03fe915 	stw	zero,-92(fp)
  880418:	1009883a 	mov	r4,r2
  88041c:	08805880 	call	880588 <_ZN12Frame_BufferD1Ev>
  880420:	e0fff717 	ldw	r3,-36(fp)
  880424:	00bfffc4 	movi	r2,-1
  880428:	e0bfe915 	stw	r2,-92(fp)
  88042c:	1809883a 	mov	r4,r3
  880430:	08827700 	call	882770 <_Unwind_SjLj_Resume>
  880434:	e0bfe804 	addi	r2,fp,-96
  880438:	1009883a 	mov	r4,r2
  88043c:	088258c0 	call	88258c <_Unwind_SjLj_Unregister>
  for (int i = 0; i < 0x20000; i++) {
	  *((char*)(test + i)) = 0xff;
  }

  return 0;
}
  880440:	e0bff617 	ldw	r2,-40(fp)
  880444:	e6fff804 	addi	sp,fp,-32
  880448:	dfc00917 	ldw	ra,36(sp)
  88044c:	df000817 	ldw	fp,32(sp)
  880450:	ddc00717 	ldw	r23,28(sp)
  880454:	dd800617 	ldw	r22,24(sp)
  880458:	dd400517 	ldw	r21,20(sp)
  88045c:	dd000417 	ldw	r20,16(sp)
  880460:	dcc00317 	ldw	r19,12(sp)
  880464:	dc800217 	ldw	r18,8(sp)
  880468:	dc400117 	ldw	r17,4(sp)
  88046c:	dc000017 	ldw	r16,0(sp)
  880470:	dec00a04 	addi	sp,sp,40
  880474:	f800283a 	ret

00880478 <_ZN7VipCore5startEv>:

    /**
     * @brief   Start the core
     * @return  Set the go bit (bit 0 of control register 0) to 1
     */
    inline void start()
  880478:	defffd04 	addi	sp,sp,-12
  88047c:	dfc00215 	stw	ra,8(sp)
  880480:	df000115 	stw	fp,4(sp)
  880484:	df000104 	addi	fp,sp,4
  880488:	e13fff15 	stw	r4,-4(fp)
    {
        control_reg = control_reg | 1;
  88048c:	e0bfff17 	ldw	r2,-4(fp)
  880490:	10800217 	ldw	r2,8(r2)
  880494:	10c00054 	ori	r3,r2,1
  880498:	e0bfff17 	ldw	r2,-4(fp)
  88049c:	10c00215 	stw	r3,8(r2)
        reg_write(REGISTER_CONTROL, control_reg);
  8804a0:	e0bfff17 	ldw	r2,-4(fp)
  8804a4:	10800217 	ldw	r2,8(r2)
  8804a8:	100d883a 	mov	r6,r2
  8804ac:	000b883a 	mov	r5,zero
  8804b0:	e13fff17 	ldw	r4,-4(fp)
  8804b4:	08805000 	call	880500 <_ZN7VipCore9reg_writeEjj>
    }
  8804b8:	0001883a 	nop
  8804bc:	e037883a 	mov	sp,fp
  8804c0:	dfc00117 	ldw	ra,4(sp)
  8804c4:	df000017 	ldw	fp,0(sp)
  8804c8:	dec00204 	addi	sp,sp,8
  8804cc:	f800283a 	ret

008804d0 <_ZNK7VipCore5is_onEv>:
    /**
     * @brief   Check whether the core was started
     * @post    Check the value of the go bit on the cached control register.
     *          Note that the control register is in general not readable so the actual HW value cannot be determined.
     */
    inline bool is_on() const
  8804d0:	defffe04 	addi	sp,sp,-8
  8804d4:	df000115 	stw	fp,4(sp)
  8804d8:	df000104 	addi	fp,sp,4
  8804dc:	e13fff15 	stw	r4,-4(fp)
    {
        return control_reg & 0x1;
  8804e0:	e0bfff17 	ldw	r2,-4(fp)
  8804e4:	10800217 	ldw	r2,8(r2)
  8804e8:	1080004c 	andi	r2,r2,1
  8804ec:	1004c03a 	cmpne	r2,r2,zero
    }
  8804f0:	e037883a 	mov	sp,fp
  8804f4:	df000017 	ldw	fp,0(sp)
  8804f8:	dec00104 	addi	sp,sp,4
  8804fc:	f800283a 	ret

00880500 <_ZN7VipCore9reg_writeEjj>:
protected:

    /**
     * @brief  An internal non-public version of do_write that may also be used for the control and interrupt register
     */
    inline void reg_write(unsigned int offset, unsigned int value)
  880500:	defffb04 	addi	sp,sp,-20
  880504:	dfc00415 	stw	ra,16(sp)
  880508:	df000315 	stw	fp,12(sp)
  88050c:	df000304 	addi	fp,sp,12
  880510:	e13ffd15 	stw	r4,-12(fp)
  880514:	e17ffe15 	stw	r5,-8(fp)
  880518:	e1bfff15 	stw	r6,-4(fp)
    {
        assert(offset != 1);
  88051c:	e0bffe17 	ldw	r2,-8(fp)
  880520:	10800058 	cmpnei	r2,r2,1
  880524:	1000081e 	bne	r2,zero,880548 <_ZN7VipCore9reg_writeEjj+0x48>
  880528:	01c02274 	movhi	r7,137
  88052c:	39c87404 	addi	r7,r7,8656
  880530:	01802274 	movhi	r6,137
  880534:	31889504 	addi	r6,r6,8788
  880538:	01405344 	movi	r5,333
  88053c:	01002274 	movhi	r4,137
  880540:	21087704 	addi	r4,r4,8668
  880544:	08828a40 	call	8828a4 <__assert_func>
        IOWR(base_address, offset, value);
  880548:	e0bffe17 	ldw	r2,-8(fp)
  88054c:	1085883a 	add	r2,r2,r2
  880550:	1085883a 	add	r2,r2,r2
  880554:	1007883a 	mov	r3,r2
  880558:	e0bffd17 	ldw	r2,-12(fp)
  88055c:	10800017 	ldw	r2,0(r2)
  880560:	1885883a 	add	r2,r3,r2
  880564:	1007883a 	mov	r3,r2
  880568:	e0bfff17 	ldw	r2,-4(fp)
  88056c:	18800035 	stwio	r2,0(r3)
    }
  880570:	0001883a 	nop
  880574:	e037883a 	mov	sp,fp
  880578:	dfc00117 	ldw	ra,4(sp)
  88057c:	df000017 	ldw	fp,0(sp)
  880580:	dec00204 	addi	sp,sp,8
  880584:	f800283a 	ret

00880588 <_ZN12Frame_BufferD1Ev>:
#define __FRAME_BUFFER_H__

#include "VipCore.hpp"


class Frame_Buffer : public VipCore {
  880588:	defffd04 	addi	sp,sp,-12
  88058c:	dfc00215 	stw	ra,8(sp)
  880590:	df000115 	stw	fp,4(sp)
  880594:	df000104 	addi	fp,sp,4
  880598:	e13fff15 	stw	r4,-4(fp)
  88059c:	e0bfff17 	ldw	r2,-4(fp)
  8805a0:	1009883a 	mov	r4,r2
  8805a4:	0890eb80 	call	890eb8 <_ZN7VipCoreD1Ev>
  8805a8:	0001883a 	nop
  8805ac:	e037883a 	mov	sp,fp
  8805b0:	dfc00117 	ldw	ra,4(sp)
  8805b4:	df000017 	ldw	fp,0(sp)
  8805b8:	dec00204 	addi	sp,sp,8
  8805bc:	f800283a 	ret

008805c0 <_ZL21size_of_encoded_valueh>:
  8805c0:	deffff04 	addi	sp,sp,-4
  8805c4:	dfc00015 	stw	ra,0(sp)
  8805c8:	20c03fcc 	andi	r3,r4,255
  8805cc:	00803fc4 	movi	r2,255
  8805d0:	18802026 	beq	r3,r2,880654 <_ZL21size_of_encoded_valueh+0x94>
  8805d4:	210001cc 	andi	r4,r4,7
  8805d8:	00800144 	movi	r2,5
  8805dc:	11001c36 	bltu	r2,r4,880650 <_ZL21size_of_encoded_valueh+0x90>
  8805e0:	200890ba 	slli	r4,r4,2
  8805e4:	00802234 	movhi	r2,136
  8805e8:	10817e04 	addi	r2,r2,1528
  8805ec:	2089883a 	add	r4,r4,r2
  8805f0:	20800017 	ldw	r2,0(r4)
  8805f4:	1000683a 	jmp	r2
  8805f8:	00880610 	cmplti	r2,zero,8216
  8805fc:	00880650 	cmplti	r2,zero,8217
  880600:	00880620 	cmpeqi	r2,zero,8216
  880604:	00880610 	cmplti	r2,zero,8216
  880608:	00880640 	call	88064 <__alt_mem_new_sdram_controller_0+0x88064>
  88060c:	00880630 	cmpltui	r2,zero,8216
  880610:	00800104 	movi	r2,4
  880614:	dfc00017 	ldw	ra,0(sp)
  880618:	dec00104 	addi	sp,sp,4
  88061c:	f800283a 	ret
  880620:	00800084 	movi	r2,2
  880624:	dfc00017 	ldw	ra,0(sp)
  880628:	dec00104 	addi	sp,sp,4
  88062c:	f800283a 	ret
  880630:	00800044 	movi	r2,1
  880634:	dfc00017 	ldw	ra,0(sp)
  880638:	dec00104 	addi	sp,sp,4
  88063c:	f800283a 	ret
  880640:	00800204 	movi	r2,8
  880644:	dfc00017 	ldw	ra,0(sp)
  880648:	dec00104 	addi	sp,sp,4
  88064c:	f800283a 	ret
  880650:	088288c0 	call	88288c <abort>
  880654:	0005883a 	mov	r2,zero
  880658:	dfc00017 	ldw	ra,0(sp)
  88065c:	dec00104 	addi	sp,sp,4
  880660:	f800283a 	ret

00880664 <_ZL28read_encoded_value_with_basehjPKhPj>:
  880664:	deffff04 	addi	sp,sp,-4
  880668:	dfc00015 	stw	ra,0(sp)
  88066c:	20c03fcc 	andi	r3,r4,255
  880670:	00801404 	movi	r2,80
  880674:	18807326 	beq	r3,r2,880844 <_ZL28read_encoded_value_with_basehjPKhPj+0x1e0>
  880678:	20c003cc 	andi	r3,r4,15
  88067c:	00800304 	movi	r2,12
  880680:	10c06f36 	bltu	r2,r3,880840 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
  880684:	180690ba 	slli	r3,r3,2
  880688:	02002234 	movhi	r8,136
  88068c:	4201a704 	addi	r8,r8,1692
  880690:	1a07883a 	add	r3,r3,r8
  880694:	18800017 	ldw	r2,0(r3)
  880698:	1000683a 	jmp	r2
  88069c:	008806d0 	cmplti	r2,zero,8219
  8806a0:	008807ec 	andhi	r2,zero,8223
  8806a4:	00880828 	cmpgeui	r2,zero,8224
  8806a8:	008806d0 	cmplti	r2,zero,8219
  8806ac:	00880734 	movhi	r2,8220
  8806b0:	00880788 	cmpgei	r2,zero,8222
  8806b4:	00880840 	call	88084 <__alt_mem_new_sdram_controller_0+0x88084>
  8806b8:	00880840 	call	88084 <__alt_mem_new_sdram_controller_0+0x88084>
  8806bc:	00880840 	call	88084 <__alt_mem_new_sdram_controller_0+0x88084>
  8806c0:	00880794 	movui	r2,8222
  8806c4:	00880764 	muli	r2,zero,8221
  8806c8:	008806d0 	cmplti	r2,zero,8219
  8806cc:	00880734 	movhi	r2,8220
  8806d0:	30800043 	ldbu	r2,1(r6)
  8806d4:	30c00083 	ldbu	r3,2(r6)
  8806d8:	324000c3 	ldbu	r9,3(r6)
  8806dc:	32000003 	ldbu	r8,0(r6)
  8806e0:	1004923a 	slli	r2,r2,8
  8806e4:	1806943a 	slli	r3,r3,16
  8806e8:	4812963a 	slli	r9,r9,24
  8806ec:	1204b03a 	or	r2,r2,r8
  8806f0:	1884b03a 	or	r2,r3,r2
  8806f4:	4886b03a 	or	r3,r9,r2
  8806f8:	30800104 	addi	r2,r6,4
  8806fc:	18000926 	beq	r3,zero,880724 <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
  880700:	22001c0c 	andi	r8,r4,112
  880704:	02400404 	movi	r9,16
  880708:	42405726 	beq	r8,r9,880868 <_ZL28read_encoded_value_with_basehjPKhPj+0x204>
  88070c:	21003fcc 	andi	r4,r4,255
  880710:	2100201c 	xori	r4,r4,128
  880714:	213fe004 	addi	r4,r4,-128
  880718:	1947883a 	add	r3,r3,r5
  88071c:	2000010e 	bge	r4,zero,880724 <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
  880720:	18c00017 	ldw	r3,0(r3)
  880724:	38c00015 	stw	r3,0(r7)
  880728:	dfc00017 	ldw	ra,0(sp)
  88072c:	dec00104 	addi	sp,sp,4
  880730:	f800283a 	ret
  880734:	30800043 	ldbu	r2,1(r6)
  880738:	30c00083 	ldbu	r3,2(r6)
  88073c:	324000c3 	ldbu	r9,3(r6)
  880740:	32000003 	ldbu	r8,0(r6)
  880744:	1004923a 	slli	r2,r2,8
  880748:	1806943a 	slli	r3,r3,16
  88074c:	4812963a 	slli	r9,r9,24
  880750:	1204b03a 	or	r2,r2,r8
  880754:	1884b03a 	or	r2,r3,r2
  880758:	4886b03a 	or	r3,r9,r2
  88075c:	30800204 	addi	r2,r6,8
  880760:	003fe606 	br	8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  880764:	30c00043 	ldbu	r3,1(r6)
  880768:	32000003 	ldbu	r8,0(r6)
  88076c:	30800084 	addi	r2,r6,2
  880770:	1806923a 	slli	r3,r3,8
  880774:	1a06b03a 	or	r3,r3,r8
  880778:	18ffffcc 	andi	r3,r3,65535
  88077c:	18e0001c 	xori	r3,r3,32768
  880780:	18e00004 	addi	r3,r3,-32768
  880784:	003fdd06 	br	8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  880788:	30c00003 	ldbu	r3,0(r6)
  88078c:	30800044 	addi	r2,r6,1
  880790:	003fda06 	br	8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  880794:	3017883a 	mov	r11,r6
  880798:	0007883a 	mov	r3,zero
  88079c:	0013883a 	mov	r9,zero
  8807a0:	5a800003 	ldbu	r10,0(r11)
  8807a4:	58800044 	addi	r2,r11,1
  8807a8:	1017883a 	mov	r11,r2
  8807ac:	52001fcc 	andi	r8,r10,127
  8807b0:	4250983a 	sll	r8,r8,r9
  8807b4:	53003fcc 	andi	r12,r10,255
  8807b8:	6300201c 	xori	r12,r12,128
  8807bc:	633fe004 	addi	r12,r12,-128
  8807c0:	1a06b03a 	or	r3,r3,r8
  8807c4:	4a4001c4 	addi	r9,r9,7
  8807c8:	603ff516 	blt	r12,zero,8807a0 <_ZL28read_encoded_value_with_basehjPKhPj+0x13c>
  8807cc:	020007c4 	movi	r8,31
  8807d0:	427fca36 	bltu	r8,r9,8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  8807d4:	5280100c 	andi	r10,r10,64
  8807d8:	503fc826 	beq	r10,zero,8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  8807dc:	023fffc4 	movi	r8,-1
  8807e0:	4252983a 	sll	r9,r8,r9
  8807e4:	1a46b03a 	or	r3,r3,r9
  8807e8:	003fc506 	br	880700 <_ZL28read_encoded_value_with_basehjPKhPj+0x9c>
  8807ec:	3017883a 	mov	r11,r6
  8807f0:	0007883a 	mov	r3,zero
  8807f4:	0015883a 	mov	r10,zero
  8807f8:	5a000003 	ldbu	r8,0(r11)
  8807fc:	58800044 	addi	r2,r11,1
  880800:	1017883a 	mov	r11,r2
  880804:	42401fcc 	andi	r9,r8,127
  880808:	4a92983a 	sll	r9,r9,r10
  88080c:	42003fcc 	andi	r8,r8,255
  880810:	4200201c 	xori	r8,r8,128
  880814:	423fe004 	addi	r8,r8,-128
  880818:	1a46b03a 	or	r3,r3,r9
  88081c:	528001c4 	addi	r10,r10,7
  880820:	403ff516 	blt	r8,zero,8807f8 <_ZL28read_encoded_value_with_basehjPKhPj+0x194>
  880824:	003fb506 	br	8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  880828:	30c00043 	ldbu	r3,1(r6)
  88082c:	32000003 	ldbu	r8,0(r6)
  880830:	30800084 	addi	r2,r6,2
  880834:	1806923a 	slli	r3,r3,8
  880838:	1a06b03a 	or	r3,r3,r8
  88083c:	003faf06 	br	8806fc <_ZL28read_encoded_value_with_basehjPKhPj+0x98>
  880840:	088288c0 	call	88288c <abort>
  880844:	308000c4 	addi	r2,r6,3
  880848:	00ffff04 	movi	r3,-4
  88084c:	10c4703a 	and	r2,r2,r3
  880850:	10c00017 	ldw	r3,0(r2)
  880854:	10800104 	addi	r2,r2,4
  880858:	38c00015 	stw	r3,0(r7)
  88085c:	dfc00017 	ldw	ra,0(sp)
  880860:	dec00104 	addi	sp,sp,4
  880864:	f800283a 	ret
  880868:	300b883a 	mov	r5,r6
  88086c:	003fa706 	br	88070c <_ZL28read_encoded_value_with_basehjPKhPj+0xa8>

00880870 <_ZL15get_ttype_entryP16lsda_header_infom>:
  880870:	defffc04 	addi	sp,sp,-16
  880874:	dfc00315 	stw	ra,12(sp)
  880878:	dc400215 	stw	r17,8(sp)
  88087c:	dc000115 	stw	r16,4(sp)
  880880:	2021883a 	mov	r16,r4
  880884:	21000503 	ldbu	r4,20(r4)
  880888:	2823883a 	mov	r17,r5
  88088c:	08805c00 	call	8805c0 <_ZL21size_of_encoded_valueh>
  880890:	1445383a 	mul	r2,r2,r17
  880894:	81800317 	ldw	r6,12(r16)
  880898:	81400217 	ldw	r5,8(r16)
  88089c:	81000503 	ldbu	r4,20(r16)
  8808a0:	d80f883a 	mov	r7,sp
  8808a4:	308dc83a 	sub	r6,r6,r2
  8808a8:	08806640 	call	880664 <_ZL28read_encoded_value_with_basehjPKhPj>
  8808ac:	d8800017 	ldw	r2,0(sp)
  8808b0:	dfc00317 	ldw	ra,12(sp)
  8808b4:	dc400217 	ldw	r17,8(sp)
  8808b8:	dc000117 	ldw	r16,4(sp)
  8808bc:	dec00404 	addi	sp,sp,16
  8808c0:	f800283a 	ret

008808c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
  8808c4:	deffff04 	addi	sp,sp,-4
  8808c8:	dfc00015 	stw	ra,0(sp)
  8808cc:	20c03fcc 	andi	r3,r4,255
  8808d0:	00803fc4 	movi	r2,255
  8808d4:	18800e26 	beq	r3,r2,880910 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
  8808d8:	20801c0c 	andi	r2,r4,112
  8808dc:	00c00804 	movi	r3,32
  8808e0:	10c01726 	beq	r2,r3,880940 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x7c>
  8808e4:	18800e2e 	bgeu	r3,r2,880920 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
  8808e8:	00c01004 	movi	r3,64
  8808ec:	10c01026 	beq	r2,r3,880930 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
  8808f0:	00c01404 	movi	r3,80
  8808f4:	10c00626 	beq	r2,r3,880910 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
  8808f8:	00c00c04 	movi	r3,48
  8808fc:	10c00b1e 	bne	r2,r3,88092c <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
  880900:	2809883a 	mov	r4,r5
  880904:	dfc00017 	ldw	ra,0(sp)
  880908:	dec00104 	addi	sp,sp,4
  88090c:	088264c1 	jmpi	88264c <_Unwind_GetDataRelBase>
  880910:	0005883a 	mov	r2,zero
  880914:	dfc00017 	ldw	ra,0(sp)
  880918:	dec00104 	addi	sp,sp,4
  88091c:	f800283a 	ret
  880920:	103ffb26 	beq	r2,zero,880910 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
  880924:	00c00404 	movi	r3,16
  880928:	10fff926 	beq	r2,r3,880910 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
  88092c:	088288c0 	call	88288c <abort>
  880930:	2809883a 	mov	r4,r5
  880934:	dfc00017 	ldw	ra,0(sp)
  880938:	dec00104 	addi	sp,sp,4
  88093c:	088263c1 	jmpi	88263c <_Unwind_GetRegionStart>
  880940:	2809883a 	mov	r4,r5
  880944:	dfc00017 	ldw	ra,0(sp)
  880948:	dec00104 	addi	sp,sp,4
  88094c:	08826541 	jmpi	882654 <_Unwind_GetTextRelBase>

00880950 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
  880950:	defffb04 	addi	sp,sp,-20
  880954:	dcc00315 	stw	r19,12(sp)
  880958:	dc400115 	stw	r17,4(sp)
  88095c:	dc000015 	stw	r16,0(sp)
  880960:	dfc00415 	stw	ra,16(sp)
  880964:	dc800215 	stw	r18,8(sp)
  880968:	2027883a 	mov	r19,r4
  88096c:	2821883a 	mov	r16,r5
  880970:	3023883a 	mov	r17,r6
  880974:	20003f26 	beq	r4,zero,880a74 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
  880978:	088263c0 	call	88263c <_Unwind_GetRegionStart>
  88097c:	88800015 	stw	r2,0(r17)
  880980:	84800003 	ldbu	r18,0(r16)
  880984:	00c03fc4 	movi	r3,255
  880988:	84000044 	addi	r16,r16,1
  88098c:	90c03726 	beq	r18,r3,880a6c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
  880990:	980b883a 	mov	r5,r19
  880994:	9009883a 	mov	r4,r18
  880998:	08808c40 	call	8808c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
  88099c:	800d883a 	mov	r6,r16
  8809a0:	89c00104 	addi	r7,r17,4
  8809a4:	100b883a 	mov	r5,r2
  8809a8:	9009883a 	mov	r4,r18
  8809ac:	08806640 	call	880664 <_ZL28read_encoded_value_with_basehjPKhPj>
  8809b0:	1021883a 	mov	r16,r2
  8809b4:	80c00003 	ldbu	r3,0(r16)
  8809b8:	01003fc4 	movi	r4,255
  8809bc:	80800044 	addi	r2,r16,1
  8809c0:	88c00505 	stb	r3,20(r17)
  8809c4:	18c03fcc 	andi	r3,r3,255
  8809c8:	19002c26 	beq	r3,r4,880a7c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
  8809cc:	100f883a 	mov	r7,r2
  8809d0:	000d883a 	mov	r6,zero
  8809d4:	000b883a 	mov	r5,zero
  8809d8:	38c00003 	ldbu	r3,0(r7)
  8809dc:	10800044 	addi	r2,r2,1
  8809e0:	100f883a 	mov	r7,r2
  8809e4:	19001fcc 	andi	r4,r3,127
  8809e8:	2148983a 	sll	r4,r4,r5
  8809ec:	18c03fcc 	andi	r3,r3,255
  8809f0:	18c0201c 	xori	r3,r3,128
  8809f4:	18ffe004 	addi	r3,r3,-128
  8809f8:	310cb03a 	or	r6,r6,r4
  8809fc:	294001c4 	addi	r5,r5,7
  880a00:	183ff516 	blt	r3,zero,8809d8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x88>
  880a04:	118d883a 	add	r6,r2,r6
  880a08:	89800315 	stw	r6,12(r17)
  880a0c:	10c00003 	ldbu	r3,0(r2)
  880a10:	000d883a 	mov	r6,zero
  880a14:	10800044 	addi	r2,r2,1
  880a18:	88c00545 	stb	r3,21(r17)
  880a1c:	000b883a 	mov	r5,zero
  880a20:	10c00003 	ldbu	r3,0(r2)
  880a24:	10800044 	addi	r2,r2,1
  880a28:	19001fcc 	andi	r4,r3,127
  880a2c:	2148983a 	sll	r4,r4,r5
  880a30:	18c03fcc 	andi	r3,r3,255
  880a34:	18c0201c 	xori	r3,r3,128
  880a38:	18ffe004 	addi	r3,r3,-128
  880a3c:	310cb03a 	or	r6,r6,r4
  880a40:	294001c4 	addi	r5,r5,7
  880a44:	183ff616 	blt	r3,zero,880a20 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xd0>
  880a48:	118d883a 	add	r6,r2,r6
  880a4c:	89800415 	stw	r6,16(r17)
  880a50:	dfc00417 	ldw	ra,16(sp)
  880a54:	dcc00317 	ldw	r19,12(sp)
  880a58:	dc800217 	ldw	r18,8(sp)
  880a5c:	dc400117 	ldw	r17,4(sp)
  880a60:	dc000017 	ldw	r16,0(sp)
  880a64:	dec00504 	addi	sp,sp,20
  880a68:	f800283a 	ret
  880a6c:	88800115 	stw	r2,4(r17)
  880a70:	003fd006 	br	8809b4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x64>
  880a74:	0005883a 	mov	r2,zero
  880a78:	003fc006 	br	88097c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x2c>
  880a7c:	88000315 	stw	zero,12(r17)
  880a80:	003fe206 	br	880a0c <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xbc>

00880a84 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>:
  880a84:	28800017 	ldw	r2,0(r5)
  880a88:	30c00017 	ldw	r3,0(r6)
  880a8c:	defffb04 	addi	sp,sp,-20
  880a90:	10800217 	ldw	r2,8(r2)
  880a94:	dc400315 	stw	r17,12(sp)
  880a98:	dc000215 	stw	r16,8(sp)
  880a9c:	d9400115 	stw	r5,4(sp)
  880aa0:	dfc00415 	stw	ra,16(sp)
  880aa4:	2021883a 	mov	r16,r4
  880aa8:	d8c00015 	stw	r3,0(sp)
  880aac:	2809883a 	mov	r4,r5
  880ab0:	3023883a 	mov	r17,r6
  880ab4:	103ee83a 	callr	r2
  880ab8:	10803fcc 	andi	r2,r2,255
  880abc:	d9400117 	ldw	r5,4(sp)
  880ac0:	10000326 	beq	r2,zero,880ad0 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x4c>
  880ac4:	d8800017 	ldw	r2,0(sp)
  880ac8:	10800017 	ldw	r2,0(r2)
  880acc:	d8800015 	stw	r2,0(sp)
  880ad0:	80800017 	ldw	r2,0(r16)
  880ad4:	01c00044 	movi	r7,1
  880ad8:	d80d883a 	mov	r6,sp
  880adc:	10800417 	ldw	r2,16(r2)
  880ae0:	8009883a 	mov	r4,r16
  880ae4:	103ee83a 	callr	r2
  880ae8:	10c03fcc 	andi	r3,r2,255
  880aec:	18000226 	beq	r3,zero,880af8 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x74>
  880af0:	d8c00017 	ldw	r3,0(sp)
  880af4:	88c00015 	stw	r3,0(r17)
  880af8:	dfc00417 	ldw	ra,16(sp)
  880afc:	dc400317 	ldw	r17,12(sp)
  880b00:	dc000217 	ldw	r16,8(sp)
  880b04:	dec00504 	addi	sp,sp,20
  880b08:	f800283a 	ret

00880b0c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
  880b0c:	defff604 	addi	sp,sp,-40
  880b10:	dc000415 	stw	r16,16(sp)
  880b14:	3821d23a 	srai	r16,r7,8
  880b18:	dc800615 	stw	r18,24(sp)
  880b1c:	dc400515 	stw	r17,20(sp)
  880b20:	dfc00915 	stw	ra,36(sp)
  880b24:	dd000815 	stw	r20,32(sp)
  880b28:	dcc00715 	stw	r19,28(sp)
  880b2c:	d9400215 	stw	r5,8(sp)
  880b30:	3825883a 	mov	r18,r7
  880b34:	2023883a 	mov	r17,r4
  880b38:	8000010e 	bge	r16,zero,880b40 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x34>
  880b3c:	0421c83a 	sub	r16,zero,r16
  880b40:	000b883a 	mov	r5,zero
  880b44:	01000144 	movi	r4,5
  880b48:	d9800315 	stw	r6,12(sp)
  880b4c:	08808c40 	call	8808c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
  880b50:	d9800317 	ldw	r6,12(sp)
  880b54:	d9c00104 	addi	r7,sp,4
  880b58:	100b883a 	mov	r5,r2
  880b5c:	01000144 	movi	r4,5
  880b60:	08806640 	call	880664 <_ZL28read_encoded_value_with_basehjPKhPj>
  880b64:	11fffe64 	muli	r7,r2,-7
  880b68:	0007883a 	mov	r3,zero
  880b6c:	11400003 	ldbu	r5,0(r2)
  880b70:	110001e4 	muli	r4,r2,7
  880b74:	10800044 	addi	r2,r2,1
  880b78:	29801fcc 	andi	r6,r5,127
  880b7c:	21c9883a 	add	r4,r4,r7
  880b80:	3108983a 	sll	r4,r6,r4
  880b84:	29403fcc 	andi	r5,r5,255
  880b88:	2940201c 	xori	r5,r5,128
  880b8c:	297fe004 	addi	r5,r5,-128
  880b90:	1906b03a 	or	r3,r3,r4
  880b94:	283ff516 	blt	r5,zero,880b6c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x60>
  880b98:	10c5883a 	add	r2,r2,r3
  880b9c:	11fffe64 	muli	r7,r2,-7
  880ba0:	0009883a 	mov	r4,zero
  880ba4:	11400003 	ldbu	r5,0(r2)
  880ba8:	10c001e4 	muli	r3,r2,7
  880bac:	10800044 	addi	r2,r2,1
  880bb0:	29801fcc 	andi	r6,r5,127
  880bb4:	19c7883a 	add	r3,r3,r7
  880bb8:	30c6983a 	sll	r3,r6,r3
  880bbc:	29403fcc 	andi	r5,r5,255
  880bc0:	2940201c 	xori	r5,r5,128
  880bc4:	297fe004 	addi	r5,r5,-128
  880bc8:	20c8b03a 	or	r4,r4,r3
  880bcc:	283ff516 	blt	r5,zero,880ba4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x98>
  880bd0:	80c03fcc 	andi	r3,r16,255
  880bd4:	18ffffc4 	addi	r3,r3,-1
  880bd8:	10c7883a 	add	r3,r2,r3
  880bdc:	210000c4 	addi	r4,r4,3
  880be0:	197ffe64 	muli	r5,r3,-7
  880be4:	2085883a 	add	r2,r4,r2
  880be8:	04ffff04 	movi	r19,-4
  880bec:	14e6703a 	and	r19,r2,r19
  880bf0:	0021883a 	mov	r16,zero
  880bf4:	18800003 	ldbu	r2,0(r3)
  880bf8:	190001e4 	muli	r4,r3,7
  880bfc:	1d000044 	addi	r20,r3,1
  880c00:	10c01fcc 	andi	r3,r2,127
  880c04:	2149883a 	add	r4,r4,r5
  880c08:	1908983a 	sll	r4,r3,r4
  880c0c:	10803fcc 	andi	r2,r2,255
  880c10:	1080201c 	xori	r2,r2,128
  880c14:	10bfe004 	addi	r2,r2,-128
  880c18:	a007883a 	mov	r3,r20
  880c1c:	8120b03a 	or	r16,r16,r4
  880c20:	103ff416 	blt	r2,zero,880bf4 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0xe8>
  880c24:	94803fcc 	andi	r18,r18,255
  880c28:	80001f26 	beq	r16,zero,880ca8 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x19c>
  880c2c:	9009883a 	mov	r4,r18
  880c30:	08805c00 	call	8805c0 <_ZL21size_of_encoded_valueh>
  880c34:	81bfffc4 	addi	r6,r16,-1
  880c38:	308d383a 	mul	r6,r6,r2
  880c3c:	d9400a17 	ldw	r5,40(sp)
  880c40:	d80f883a 	mov	r7,sp
  880c44:	9009883a 	mov	r4,r18
  880c48:	34cd883a 	add	r6,r6,r19
  880c4c:	08806640 	call	880664 <_ZL28read_encoded_value_with_basehjPKhPj>
  880c50:	d9000017 	ldw	r4,0(sp)
  880c54:	d9800204 	addi	r6,sp,8
  880c58:	880b883a 	mov	r5,r17
  880c5c:	0880a840 	call	880a84 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
  880c60:	10c03fcc 	andi	r3,r2,255
  880c64:	1800111e 	bne	r3,zero,880cac <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x1a0>
  880c68:	a17ffe64 	muli	r5,r20,-7
  880c6c:	a007883a 	mov	r3,r20
  880c70:	0021883a 	mov	r16,zero
  880c74:	19000003 	ldbu	r4,0(r3)
  880c78:	18c001e4 	muli	r3,r3,7
  880c7c:	a5000044 	addi	r20,r20,1
  880c80:	20801fcc 	andi	r2,r4,127
  880c84:	1947883a 	add	r3,r3,r5
  880c88:	10c4983a 	sll	r2,r2,r3
  880c8c:	21003fcc 	andi	r4,r4,255
  880c90:	2100201c 	xori	r4,r4,128
  880c94:	213fe004 	addi	r4,r4,-128
  880c98:	a007883a 	mov	r3,r20
  880c9c:	80a0b03a 	or	r16,r16,r2
  880ca0:	203ff416 	blt	r4,zero,880c74 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x168>
  880ca4:	003fe006 	br	880c28 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x11c>
  880ca8:	0005883a 	mov	r2,zero
  880cac:	dfc00917 	ldw	ra,36(sp)
  880cb0:	dd000817 	ldw	r20,32(sp)
  880cb4:	dcc00717 	ldw	r19,28(sp)
  880cb8:	dc800617 	ldw	r18,24(sp)
  880cbc:	dc400517 	ldw	r17,20(sp)
  880cc0:	dc000417 	ldw	r16,16(sp)
  880cc4:	dec00a04 	addi	sp,sp,40
  880cc8:	f800283a 	ret

00880ccc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
  880ccc:	defffb04 	addi	sp,sp,-20
  880cd0:	dc000115 	stw	r16,4(sp)
  880cd4:	24000317 	ldw	r16,12(r4)
  880cd8:	01ce303a 	nor	r7,zero,r7
  880cdc:	dc800315 	stw	r18,12(sp)
  880ce0:	dc400215 	stw	r17,8(sp)
  880ce4:	dfc00415 	stw	ra,16(sp)
  880ce8:	2023883a 	mov	r17,r4
  880cec:	2825883a 	mov	r18,r5
  880cf0:	d9800015 	stw	r6,0(sp)
  880cf4:	81e1883a 	add	r16,r16,r7
  880cf8:	800d883a 	mov	r6,r16
  880cfc:	000b883a 	mov	r5,zero
  880d00:	0009883a 	mov	r4,zero
  880d04:	30800003 	ldbu	r2,0(r6)
  880d08:	84000044 	addi	r16,r16,1
  880d0c:	800d883a 	mov	r6,r16
  880d10:	10c01fcc 	andi	r3,r2,127
  880d14:	1906983a 	sll	r3,r3,r4
  880d18:	10803fcc 	andi	r2,r2,255
  880d1c:	1080201c 	xori	r2,r2,128
  880d20:	10bfe004 	addi	r2,r2,-128
  880d24:	28cab03a 	or	r5,r5,r3
  880d28:	210001c4 	addi	r4,r4,7
  880d2c:	103ff516 	blt	r2,zero,880d04 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x38>
  880d30:	28000e26 	beq	r5,zero,880d6c <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
  880d34:	8809883a 	mov	r4,r17
  880d38:	08808700 	call	880870 <_ZL15get_ttype_entryP16lsda_header_infom>
  880d3c:	d80d883a 	mov	r6,sp
  880d40:	900b883a 	mov	r5,r18
  880d44:	1009883a 	mov	r4,r2
  880d48:	0880a840 	call	880a84 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
  880d4c:	10c03fcc 	andi	r3,r2,255
  880d50:	183fe926 	beq	r3,zero,880cf8 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x2c>
  880d54:	dfc00417 	ldw	ra,16(sp)
  880d58:	dc800317 	ldw	r18,12(sp)
  880d5c:	dc400217 	ldw	r17,8(sp)
  880d60:	dc000117 	ldw	r16,4(sp)
  880d64:	dec00504 	addi	sp,sp,20
  880d68:	f800283a 	ret
  880d6c:	0005883a 	mov	r2,zero
  880d70:	003ff806 	br	880d54 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0x88>

00880d74 <__gxx_personality_sj0>:
  880d74:	00802234 	movhi	r2,136
  880d78:	deffdd04 	addi	sp,sp,-140
  880d7c:	10835d04 	addi	r2,r2,3444
  880d80:	d8800e15 	stw	r2,56(sp)
  880d84:	00802274 	movhi	r2,137
  880d88:	10886404 	addi	r2,r2,8592
  880d8c:	d8800f15 	stw	r2,60(sp)
  880d90:	00802234 	movhi	r2,136
  880d94:	1084d304 	addi	r2,r2,4940
  880d98:	d9001515 	stw	r4,84(sp)
  880d9c:	d9000804 	addi	r4,sp,32
  880da0:	d8801115 	stw	r2,68(sp)
  880da4:	dfc02215 	stw	ra,136(sp)
  880da8:	df002115 	stw	fp,132(sp)
  880dac:	dec01015 	stw	sp,64(sp)
  880db0:	dec01215 	stw	sp,72(sp)
  880db4:	d9401915 	stw	r5,100(sp)
  880db8:	d9801615 	stw	r6,88(sp)
  880dbc:	d9c01715 	stw	r7,92(sp)
  880dc0:	08825740 	call	882574 <_Unwind_SjLj_Register>
  880dc4:	d8c01517 	ldw	r3,84(sp)
  880dc8:	d8000715 	stw	zero,28(sp)
  880dcc:	d8000615 	stw	zero,24(sp)
  880dd0:	00800044 	movi	r2,1
  880dd4:	18800926 	beq	r3,r2,880dfc <__gxx_personality_sj0+0x88>
  880dd8:	01c000c4 	movi	r7,3
  880ddc:	d9c01515 	stw	r7,84(sp)
  880de0:	d9000804 	addi	r4,sp,32
  880de4:	088258c0 	call	88258c <_Unwind_SjLj_Unregister>
  880de8:	d8801517 	ldw	r2,84(sp)
  880dec:	dfc02217 	ldw	ra,136(sp)
  880df0:	df002117 	ldw	fp,132(sp)
  880df4:	dec02304 	addi	sp,sp,140
  880df8:	f800283a 	ret
  880dfc:	d9001617 	ldw	r4,88(sp)
  880e00:	00af3574 	movhi	r2,48341
  880e04:	d9c01717 	ldw	r7,92(sp)
  880e08:	10b54004 	addi	r2,r2,-11008
  880e0c:	00ee2cb4 	movhi	r3,47282
  880e10:	2085883a 	add	r2,r4,r2
  880e14:	18eaaf04 	addi	r3,r3,-21828
  880e18:	d8801b15 	stw	r2,108(sp)
  880e1c:	38c7883a 	add	r3,r7,r3
  880e20:	1105803a 	cmpltu	r2,r2,r4
  880e24:	10c7883a 	add	r3,r2,r3
  880e28:	d8c01c15 	stw	r3,112(sp)
  880e2c:	d8c01917 	ldw	r3,100(sp)
  880e30:	00800184 	movi	r2,6
  880e34:	18805426 	beq	r3,r2,880f88 <__gxx_personality_sj0+0x214>
  880e38:	d9002417 	ldw	r4,144(sp)
  880e3c:	00bfffc4 	movi	r2,-1
  880e40:	d8800915 	stw	r2,36(sp)
  880e44:	08826300 	call	882630 <_Unwind_GetLanguageSpecificData>
  880e48:	d8801a15 	stw	r2,104(sp)
  880e4c:	1000c926 	beq	r2,zero,881174 <__gxx_personality_sj0+0x400>
  880e50:	d9002417 	ldw	r4,144(sp)
  880e54:	d80d883a 	mov	r6,sp
  880e58:	100b883a 	mov	r5,r2
  880e5c:	08809500 	call	880950 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
  880e60:	d9402417 	ldw	r5,144(sp)
  880e64:	d9000503 	ldbu	r4,20(sp)
  880e68:	d8801515 	stw	r2,84(sp)
  880e6c:	08808c40 	call	8808c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
  880e70:	d9002417 	ldw	r4,144(sp)
  880e74:	d9400604 	addi	r5,sp,24
  880e78:	d8800215 	stw	r2,8(sp)
  880e7c:	08826000 	call	882600 <_Unwind_GetIPInfo>
  880e80:	d8c00617 	ldw	r3,24(sp)
  880e84:	18006126 	beq	r3,zero,88100c <__gxx_personality_sj0+0x298>
  880e88:	1000ba16 	blt	r2,zero,881174 <__gxx_personality_sj0+0x400>
  880e8c:	10002f1e 	bne	r2,zero,880f4c <__gxx_personality_sj0+0x1d8>
  880e90:	d8001515 	stw	zero,84(sp)
  880e94:	d8001f15 	stw	zero,124(sp)
  880e98:	d8001815 	stw	zero,96(sp)
  880e9c:	00c00044 	movi	r3,1
  880ea0:	d9001917 	ldw	r4,100(sp)
  880ea4:	2080004c 	andi	r2,r4,1
  880ea8:	1000b51e 	bne	r2,zero,881180 <__gxx_personality_sj0+0x40c>
  880eac:	d9001917 	ldw	r4,100(sp)
  880eb0:	2080020c 	andi	r2,r4,8
  880eb4:	1000b71e 	bne	r2,zero,881194 <__gxx_personality_sj0+0x420>
  880eb8:	d9c01c17 	ldw	r7,112(sp)
  880ebc:	3800b826 	beq	r7,zero,8811a0 <__gxx_personality_sj0+0x42c>
  880ec0:	00800044 	movi	r2,1
  880ec4:	1880b526 	beq	r3,r2,88119c <__gxx_personality_sj0+0x428>
  880ec8:	d9c01517 	ldw	r7,84(sp)
  880ecc:	3800f516 	blt	r7,zero,8812a4 <__gxx_personality_sj0+0x530>
  880ed0:	d9002417 	ldw	r4,144(sp)
  880ed4:	d9802317 	ldw	r6,140(sp)
  880ed8:	00bfffc4 	movi	r2,-1
  880edc:	000b883a 	mov	r5,zero
  880ee0:	d8800915 	stw	r2,36(sp)
  880ee4:	08825d40 	call	8825d4 <_Unwind_SetGR>
  880ee8:	d9801517 	ldw	r6,84(sp)
  880eec:	d9002417 	ldw	r4,144(sp)
  880ef0:	01400044 	movi	r5,1
  880ef4:	08825d40 	call	8825d4 <_Unwind_SetGR>
  880ef8:	d9002417 	ldw	r4,144(sp)
  880efc:	d9401f17 	ldw	r5,124(sp)
  880f00:	08826200 	call	882620 <_Unwind_SetIP>
  880f04:	010001c4 	movi	r4,7
  880f08:	d9001515 	stw	r4,84(sp)
  880f0c:	003fb406 	br	880de0 <__gxx_personality_sj0+0x6c>
  880f10:	000f883a 	mov	r7,zero
  880f14:	000d883a 	mov	r6,zero
  880f18:	19000003 	ldbu	r4,0(r3)
  880f1c:	18c00044 	addi	r3,r3,1
  880f20:	d8c01515 	stw	r3,84(sp)
  880f24:	21401fcc 	andi	r5,r4,127
  880f28:	298a983a 	sll	r5,r5,r6
  880f2c:	21003fcc 	andi	r4,r4,255
  880f30:	2100201c 	xori	r4,r4,128
  880f34:	213fe004 	addi	r4,r4,-128
  880f38:	394eb03a 	or	r7,r7,r5
  880f3c:	318001c4 	addi	r6,r6,7
  880f40:	203ff516 	blt	r4,zero,880f18 <__gxx_personality_sj0+0x1a4>
  880f44:	10bfffc4 	addi	r2,r2,-1
  880f48:	10003226 	beq	r2,zero,881014 <__gxx_personality_sj0+0x2a0>
  880f4c:	d9c01517 	ldw	r7,84(sp)
  880f50:	0011883a 	mov	r8,zero
  880f54:	000d883a 	mov	r6,zero
  880f58:	39000003 	ldbu	r4,0(r7)
  880f5c:	38c00044 	addi	r3,r7,1
  880f60:	180f883a 	mov	r7,r3
  880f64:	21401fcc 	andi	r5,r4,127
  880f68:	298a983a 	sll	r5,r5,r6
  880f6c:	21003fcc 	andi	r4,r4,255
  880f70:	2100201c 	xori	r4,r4,128
  880f74:	213fe004 	addi	r4,r4,-128
  880f78:	4150b03a 	or	r8,r8,r5
  880f7c:	318001c4 	addi	r6,r6,7
  880f80:	203ff516 	blt	r4,zero,880f58 <__gxx_personality_sj0+0x1e4>
  880f84:	003fe206 	br	880f10 <__gxx_personality_sj0+0x19c>
  880f88:	d9001c17 	ldw	r4,112(sp)
  880f8c:	203faa1e 	bne	r4,zero,880e38 <__gxx_personality_sj0+0xc4>
  880f90:	d9c01517 	ldw	r7,84(sp)
  880f94:	d8801b17 	ldw	r2,108(sp)
  880f98:	38bfa736 	bltu	r7,r2,880e38 <__gxx_personality_sj0+0xc4>
  880f9c:	d8c02317 	ldw	r3,140(sp)
  880fa0:	18fffe17 	ldw	r3,-8(r3)
  880fa4:	d8c01f15 	stw	r3,124(sp)
  880fa8:	18008226 	beq	r3,zero,8811b4 <__gxx_personality_sj0+0x440>
  880fac:	d9002317 	ldw	r4,140(sp)
  880fb0:	d9c02317 	ldw	r7,140(sp)
  880fb4:	213ffb17 	ldw	r4,-20(r4)
  880fb8:	39fffd17 	ldw	r7,-12(r7)
  880fbc:	d9001515 	stw	r4,84(sp)
  880fc0:	d9c01a15 	stw	r7,104(sp)
  880fc4:	d8801517 	ldw	r2,84(sp)
  880fc8:	103fc10e 	bge	r2,zero,880ed0 <__gxx_personality_sj0+0x15c>
  880fcc:	d9002417 	ldw	r4,144(sp)
  880fd0:	d9401a17 	ldw	r5,104(sp)
  880fd4:	d80d883a 	mov	r6,sp
  880fd8:	00bfffc4 	movi	r2,-1
  880fdc:	d8800915 	stw	r2,36(sp)
  880fe0:	08809500 	call	880950 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
  880fe4:	d9402417 	ldw	r5,144(sp)
  880fe8:	d9000503 	ldbu	r4,20(sp)
  880fec:	08808c40 	call	8808c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
  880ff0:	d9000503 	ldbu	r4,20(sp)
  880ff4:	d9402417 	ldw	r5,144(sp)
  880ff8:	d8800215 	stw	r2,8(sp)
  880ffc:	08808c40 	call	8808c4 <_ZL21base_of_encoded_valuehP15_Unwind_Context>
  881000:	d8c02317 	ldw	r3,140(sp)
  881004:	18bffe15 	stw	r2,-8(r3)
  881008:	003fb106 	br	880ed0 <__gxx_personality_sj0+0x15c>
  88100c:	10bfffc4 	addi	r2,r2,-1
  881010:	003f9d06 	br	880e88 <__gxx_personality_sj0+0x114>
  881014:	42000044 	addi	r8,r8,1
  881018:	da001f15 	stw	r8,124(sp)
  88101c:	38005326 	beq	r7,zero,88116c <__gxx_personality_sj0+0x3f8>
  881020:	d8800417 	ldw	r2,16(sp)
  881024:	39ffffc4 	addi	r7,r7,-1
  881028:	11c5883a 	add	r2,r2,r7
  88102c:	d8801815 	stw	r2,96(sp)
  881030:	40005026 	beq	r8,zero,881174 <__gxx_personality_sj0+0x400>
  881034:	10007426 	beq	r2,zero,881208 <__gxx_personality_sj0+0x494>
  881038:	d8801917 	ldw	r2,100(sp)
  88103c:	1080020c 	andi	r2,r2,8
  881040:	d8802015 	stw	r2,128(sp)
  881044:	1000a21e 	bne	r2,zero,8812d0 <__gxx_personality_sj0+0x55c>
  881048:	d8c01c17 	ldw	r3,112(sp)
  88104c:	1800b026 	beq	r3,zero,881310 <__gxx_personality_sj0+0x59c>
  881050:	01c02274 	movhi	r7,137
  881054:	39d11a04 	addi	r7,r7,17512
  881058:	d9c01e15 	stw	r7,120(sp)
  88105c:	d8001d05 	stb	zero,116(sp)
  881060:	d8c01817 	ldw	r3,96(sp)
  881064:	d8001515 	stw	zero,84(sp)
  881068:	0009883a 	mov	r4,zero
  88106c:	19400003 	ldbu	r5,0(r3)
  881070:	18800044 	addi	r2,r3,1
  881074:	d9c01517 	ldw	r7,84(sp)
  881078:	28c01fcc 	andi	r3,r5,127
  88107c:	1906983a 	sll	r3,r3,r4
  881080:	29803fcc 	andi	r6,r5,255
  881084:	3180201c 	xori	r6,r6,128
  881088:	38ceb03a 	or	r7,r7,r3
  88108c:	d8801715 	stw	r2,92(sp)
  881090:	31bfe004 	addi	r6,r6,-128
  881094:	d9c01515 	stw	r7,84(sp)
  881098:	210001c4 	addi	r4,r4,7
  88109c:	1007883a 	mov	r3,r2
  8810a0:	303ff216 	blt	r6,zero,88106c <__gxx_personality_sj0+0x2f8>
  8810a4:	00c007c4 	movi	r3,31
  8810a8:	19000836 	bltu	r3,r4,8810cc <__gxx_personality_sj0+0x358>
  8810ac:	2940100c 	andi	r5,r5,64
  8810b0:	28000626 	beq	r5,zero,8810cc <__gxx_personality_sj0+0x358>
  8810b4:	01c00044 	movi	r7,1
  8810b8:	3908983a 	sll	r4,r7,r4
  8810bc:	d8c01517 	ldw	r3,84(sp)
  8810c0:	0109c83a 	sub	r4,zero,r4
  8810c4:	1906b03a 	or	r3,r3,r4
  8810c8:	d8c01515 	stw	r3,84(sp)
  8810cc:	d8001615 	stw	zero,88(sp)
  8810d0:	0009883a 	mov	r4,zero
  8810d4:	11400003 	ldbu	r5,0(r2)
  8810d8:	d9c01617 	ldw	r7,88(sp)
  8810dc:	10800044 	addi	r2,r2,1
  8810e0:	28c01fcc 	andi	r3,r5,127
  8810e4:	1906983a 	sll	r3,r3,r4
  8810e8:	29803fcc 	andi	r6,r5,255
  8810ec:	3180201c 	xori	r6,r6,128
  8810f0:	38ceb03a 	or	r7,r7,r3
  8810f4:	31bfe004 	addi	r6,r6,-128
  8810f8:	d9c01615 	stw	r7,88(sp)
  8810fc:	210001c4 	addi	r4,r4,7
  881100:	303ff416 	blt	r6,zero,8810d4 <__gxx_personality_sj0+0x360>
  881104:	008007c4 	movi	r2,31
  881108:	11000736 	bltu	r2,r4,881128 <__gxx_personality_sj0+0x3b4>
  88110c:	2940100c 	andi	r5,r5,64
  881110:	28000526 	beq	r5,zero,881128 <__gxx_personality_sj0+0x3b4>
  881114:	00c00044 	movi	r3,1
  881118:	1908983a 	sll	r4,r3,r4
  88111c:	0109c83a 	sub	r4,zero,r4
  881120:	390eb03a 	or	r7,r7,r4
  881124:	d9c01615 	stw	r7,88(sp)
  881128:	d9001517 	ldw	r4,84(sp)
  88112c:	20003c26 	beq	r4,zero,881220 <__gxx_personality_sj0+0x4ac>
  881130:	01003e0e 	bge	zero,r4,88122c <__gxx_personality_sj0+0x4b8>
  881134:	01ffffc4 	movi	r7,-1
  881138:	200b883a 	mov	r5,r4
  88113c:	d809883a 	mov	r4,sp
  881140:	d9c00915 	stw	r7,36(sp)
  881144:	08808700 	call	880870 <_ZL15get_ttype_entryP16lsda_header_infom>
  881148:	10005f26 	beq	r2,zero,8812c8 <__gxx_personality_sj0+0x554>
  88114c:	d8c01e17 	ldw	r3,120(sp)
  881150:	1800571e 	bne	r3,zero,8812b0 <__gxx_personality_sj0+0x53c>
  881154:	d9001617 	ldw	r4,88(sp)
  881158:	20002926 	beq	r4,zero,881200 <__gxx_personality_sj0+0x48c>
  88115c:	d9c01717 	ldw	r7,92(sp)
  881160:	390f883a 	add	r7,r7,r4
  881164:	d9c01815 	stw	r7,96(sp)
  881168:	003fbd06 	br	881060 <__gxx_personality_sj0+0x2ec>
  88116c:	d8c01f17 	ldw	r3,124(sp)
  881170:	1800251e 	bne	r3,zero,881208 <__gxx_personality_sj0+0x494>
  881174:	01000204 	movi	r4,8
  881178:	d9001515 	stw	r4,84(sp)
  88117c:	003f1806 	br	880de0 <__gxx_personality_sj0+0x6c>
  881180:	d8801c17 	ldw	r2,112(sp)
  881184:	10000d26 	beq	r2,zero,8811bc <__gxx_personality_sj0+0x448>
  881188:	00800184 	movi	r2,6
  88118c:	d8801515 	stw	r2,84(sp)
  881190:	003f1306 	br	880de0 <__gxx_personality_sj0+0x6c>
  881194:	00800044 	movi	r2,1
  881198:	18bf4d1e 	bne	r3,r2,880ed0 <__gxx_personality_sj0+0x15c>
  88119c:	088194c0 	call	88194c <_ZSt9terminatev>
  8811a0:	d9001b17 	ldw	r4,108(sp)
  8811a4:	00800044 	movi	r2,1
  8811a8:	113f4536 	bltu	r2,r4,880ec0 <__gxx_personality_sj0+0x14c>
  8811ac:	00800044 	movi	r2,1
  8811b0:	18bf841e 	bne	r3,r2,880fc4 <__gxx_personality_sj0+0x250>
  8811b4:	d9002317 	ldw	r4,140(sp)
  8811b8:	0881c980 	call	881c98 <__cxa_call_terminate>
  8811bc:	d8c01b17 	ldw	r3,108(sp)
  8811c0:	00800044 	movi	r2,1
  8811c4:	10fff036 	bltu	r2,r3,881188 <__gxx_personality_sj0+0x414>
  8811c8:	d9002317 	ldw	r4,140(sp)
  8811cc:	d8801817 	ldw	r2,96(sp)
  8811d0:	d9c01517 	ldw	r7,84(sp)
  8811d4:	d8c01a17 	ldw	r3,104(sp)
  8811d8:	20bffc15 	stw	r2,-16(r4)
  8811dc:	d8800717 	ldw	r2,28(sp)
  8811e0:	21fffb15 	stw	r7,-20(r4)
  8811e4:	d9c01f17 	ldw	r7,124(sp)
  8811e8:	20bfff15 	stw	r2,-4(r4)
  8811ec:	00800184 	movi	r2,6
  8811f0:	20fffd15 	stw	r3,-12(r4)
  8811f4:	21fffe15 	stw	r7,-8(r4)
  8811f8:	d8801515 	stw	r2,84(sp)
  8811fc:	003ef806 	br	880de0 <__gxx_personality_sj0+0x6c>
  881200:	d8801d03 	ldbu	r2,116(sp)
  881204:	103fdb26 	beq	r2,zero,881174 <__gxx_personality_sj0+0x400>
  881208:	d8c01917 	ldw	r3,100(sp)
  88120c:	1880004c 	andi	r2,r3,1
  881210:	103fd81e 	bne	r2,zero,881174 <__gxx_personality_sj0+0x400>
  881214:	d8001515 	stw	zero,84(sp)
  881218:	00c00084 	movi	r3,2
  88121c:	003f2306 	br	880eac <__gxx_personality_sj0+0x138>
  881220:	00c00044 	movi	r3,1
  881224:	d8c01d05 	stb	r3,116(sp)
  881228:	003fca06 	br	881154 <__gxx_personality_sj0+0x3e0>
  88122c:	d9001e17 	ldw	r4,120(sp)
  881230:	20000426 	beq	r4,zero,881244 <__gxx_personality_sj0+0x4d0>
  881234:	d9c02017 	ldw	r7,128(sp)
  881238:	3800021e 	bne	r7,zero,881244 <__gxx_personality_sj0+0x4d0>
  88123c:	d8801c17 	ldw	r2,112(sp)
  881240:	10002726 	beq	r2,zero,8812e0 <__gxx_personality_sj0+0x56c>
  881244:	d8801517 	ldw	r2,84(sp)
  881248:	000d883a 	mov	r6,zero
  88124c:	000b883a 	mov	r5,zero
  881250:	0088303a 	nor	r4,zero,r2
  881254:	d8800317 	ldw	r2,12(sp)
  881258:	1109883a 	add	r4,r2,r4
  88125c:	20800003 	ldbu	r2,0(r4)
  881260:	21000044 	addi	r4,r4,1
  881264:	10c01fcc 	andi	r3,r2,127
  881268:	1946983a 	sll	r3,r3,r5
  88126c:	10803fcc 	andi	r2,r2,255
  881270:	1080201c 	xori	r2,r2,128
  881274:	10bfe004 	addi	r2,r2,-128
  881278:	30ccb03a 	or	r6,r6,r3
  88127c:	294001c4 	addi	r5,r5,7
  881280:	103ff616 	blt	r2,zero,88125c <__gxx_personality_sj0+0x4e8>
  881284:	3005003a 	cmpeq	r2,r6,zero
  881288:	10803fcc 	andi	r2,r2,255
  88128c:	103fb126 	beq	r2,zero,881154 <__gxx_personality_sj0+0x3e0>
  881290:	d9c01917 	ldw	r7,100(sp)
  881294:	3880004c 	andi	r2,r7,1
  881298:	103fb91e 	bne	r2,zero,881180 <__gxx_personality_sj0+0x40c>
  88129c:	d8802017 	ldw	r2,128(sp)
  8812a0:	10002d26 	beq	r2,zero,881358 <__gxx_personality_sj0+0x5e4>
  8812a4:	00800044 	movi	r2,1
  8812a8:	d8800915 	stw	r2,36(sp)
  8812ac:	08819740 	call	881974 <_ZSt10unexpectedv>
  8812b0:	d9800704 	addi	r6,sp,28
  8812b4:	180b883a 	mov	r5,r3
  8812b8:	1009883a 	mov	r4,r2
  8812bc:	0880a840 	call	880a84 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
  8812c0:	10803fcc 	andi	r2,r2,255
  8812c4:	103fa326 	beq	r2,zero,881154 <__gxx_personality_sj0+0x3e0>
  8812c8:	00c000c4 	movi	r3,3
  8812cc:	003ef406 	br	880ea0 <__gxx_personality_sj0+0x12c>
  8812d0:	01002274 	movhi	r4,137
  8812d4:	21111804 	addi	r4,r4,17504
  8812d8:	d9001e15 	stw	r4,120(sp)
  8812dc:	003f5f06 	br	88105c <__gxx_personality_sj0+0x2e8>
  8812e0:	d9001b17 	ldw	r4,108(sp)
  8812e4:	00c00044 	movi	r3,1
  8812e8:	193fd636 	bltu	r3,r4,881244 <__gxx_personality_sj0+0x4d0>
  8812ec:	01ffffc4 	movi	r7,-1
  8812f0:	d9c00915 	stw	r7,36(sp)
  8812f4:	d9800717 	ldw	r6,28(sp)
  8812f8:	d9c01517 	ldw	r7,84(sp)
  8812fc:	d9401e17 	ldw	r5,120(sp)
  881300:	d809883a 	mov	r4,sp
  881304:	0880ccc0 	call	880ccc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
  881308:	1080005c 	xori	r2,r2,1
  88130c:	003fde06 	br	881288 <__gxx_personality_sj0+0x514>
  881310:	d9001b17 	ldw	r4,108(sp)
  881314:	00800044 	movi	r2,1
  881318:	113f4d36 	bltu	r2,r4,881050 <__gxx_personality_sj0+0x2dc>
  88131c:	d9c02317 	ldw	r7,140(sp)
  881320:	38800017 	ldw	r2,0(r7)
  881324:	1080004c 	andi	r2,r2,1
  881328:	1000061e 	bne	r2,zero,881344 <__gxx_personality_sj0+0x5d0>
  88132c:	d8c02317 	ldw	r3,140(sp)
  881330:	18800504 	addi	r2,r3,20
  881334:	d8800715 	stw	r2,28(sp)
  881338:	10bff017 	ldw	r2,-64(r2)
  88133c:	d8801e15 	stw	r2,120(sp)
  881340:	003f4606 	br	88105c <__gxx_personality_sj0+0x2e8>
  881344:	38bff517 	ldw	r2,-44(r7)
  881348:	003ffa06 	br	881334 <__gxx_personality_sj0+0x5c0>
  88134c:	d9000a17 	ldw	r4,40(sp)
  881350:	08817040 	call	881704 <__cxa_begin_catch>
  881354:	003f9106 	br	88119c <__gxx_personality_sj0+0x428>
  881358:	d9c01c17 	ldw	r7,112(sp)
  88135c:	383eda1e 	bne	r7,zero,880ec8 <__gxx_personality_sj0+0x154>
  881360:	d8c01b17 	ldw	r3,108(sp)
  881364:	00800044 	movi	r2,1
  881368:	10fed736 	bltu	r2,r3,880ec8 <__gxx_personality_sj0+0x154>
  88136c:	00c000c4 	movi	r3,3
  881370:	003f8e06 	br	8811ac <__gxx_personality_sj0+0x438>

00881374 <__cxa_call_unexpected>:
  881374:	00802234 	movhi	r2,136
  881378:	deffe604 	addi	sp,sp,-104
  88137c:	10835d04 	addi	r2,r2,3444
  881380:	d8800d15 	stw	r2,52(sp)
  881384:	00802274 	movhi	r2,137
  881388:	10886804 	addi	r2,r2,8608
  88138c:	d8800e15 	stw	r2,56(sp)
  881390:	d8800104 	addi	r2,sp,4
  881394:	d8800f15 	stw	r2,60(sp)
  881398:	00802234 	movhi	r2,136
  88139c:	10850004 	addi	r2,r2,5120
  8813a0:	d9001415 	stw	r4,80(sp)
  8813a4:	d9000704 	addi	r4,sp,28
  8813a8:	dfc01915 	stw	ra,100(sp)
  8813ac:	d8801015 	stw	r2,64(sp)
  8813b0:	df001815 	stw	fp,96(sp)
  8813b4:	dec01115 	stw	sp,68(sp)
  8813b8:	08825740 	call	882574 <_Unwind_SjLj_Register>
  8813bc:	d9001417 	ldw	r4,80(sp)
  8813c0:	08817040 	call	881704 <__cxa_begin_catch>
  8813c4:	d8c01417 	ldw	r3,80(sp)
  8813c8:	18bffe17 	ldw	r2,-8(r3)
  8813cc:	193ff717 	ldw	r4,-36(r3)
  8813d0:	18fffd17 	ldw	r3,-12(r3)
  8813d4:	d8800315 	stw	r2,12(sp)
  8813d8:	d8c01615 	stw	r3,88(sp)
  8813dc:	d8c01417 	ldw	r3,80(sp)
  8813e0:	18fffb17 	ldw	r3,-20(r3)
  8813e4:	d8c01515 	stw	r3,84(sp)
  8813e8:	d8c01417 	ldw	r3,80(sp)
  8813ec:	18fff817 	ldw	r3,-32(r3)
  8813f0:	d8c01415 	stw	r3,80(sp)
  8813f4:	00c00044 	movi	r3,1
  8813f8:	d8c00815 	stw	r3,32(sp)
  8813fc:	08819640 	call	881964 <_ZN10__cxxabiv112__unexpectedEPFvvE>
  881400:	d8c00917 	ldw	r3,36(sp)
  881404:	d8800817 	ldw	r2,32(sp)
  881408:	d8c01715 	stw	r3,92(sp)
  88140c:	10000a26 	beq	r2,zero,881438 <__cxa_call_unexpected+0xc4>
  881410:	10bfffc4 	addi	r2,r2,-1
  881414:	10000126 	beq	r2,zero,88141c <__cxa_call_unexpected+0xa8>
  881418:	003b68fa 	trap	3
  88141c:	d8000815 	stw	zero,32(sp)
  881420:	08817b80 	call	8817b8 <__cxa_end_catch>
  881424:	08817b80 	call	8817b8 <__cxa_end_catch>
  881428:	d9001717 	ldw	r4,92(sp)
  88142c:	00bfffc4 	movi	r2,-1
  881430:	d8800815 	stw	r2,32(sp)
  881434:	08827700 	call	882770 <_Unwind_SjLj_Resume>
  881438:	d9001717 	ldw	r4,92(sp)
  88143c:	08817040 	call	881704 <__cxa_begin_catch>
  881440:	0881cf00 	call	881cf0 <__cxa_get_globals_fast>
  881444:	10800017 	ldw	r2,0(r2)
  881448:	10c00b17 	ldw	r3,44(r2)
  88144c:	18c0004c 	andi	r3,r3,1
  881450:	18001e26 	beq	r3,zero,8814cc <__cxa_call_unexpected+0x158>
  881454:	10800017 	ldw	r2,0(r2)
  881458:	d8801715 	stw	r2,92(sp)
  88145c:	d8801517 	ldw	r2,84(sp)
  881460:	00802b0e 	bge	zero,r2,881510 <__cxa_call_unexpected+0x19c>
  881464:	d8c01717 	ldw	r3,92(sp)
  881468:	d8800317 	ldw	r2,12(sp)
  88146c:	d9c01517 	ldw	r7,84(sp)
  881470:	193ff017 	ldw	r4,-64(r3)
  881474:	d9801617 	ldw	r6,88(sp)
  881478:	d8800015 	stw	r2,0(sp)
  88147c:	180b883a 	mov	r5,r3
  881480:	00800084 	movi	r2,2
  881484:	d8800815 	stw	r2,32(sp)
  881488:	0880b0c0 	call	880b0c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
  88148c:	10803fcc 	andi	r2,r2,255
  881490:	10001e1e 	bne	r2,zero,88150c <__cxa_call_unexpected+0x198>
  881494:	d8800317 	ldw	r2,12(sp)
  881498:	d9c01517 	ldw	r7,84(sp)
  88149c:	d9801617 	ldw	r6,88(sp)
  8814a0:	01002274 	movhi	r4,137
  8814a4:	d8800015 	stw	r2,0(sp)
  8814a8:	2108b404 	addi	r4,r4,8912
  8814ac:	00800084 	movi	r2,2
  8814b0:	000b883a 	mov	r5,zero
  8814b4:	d8800815 	stw	r2,32(sp)
  8814b8:	0880b0c0 	call	880b0c <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
  8814bc:	10803fcc 	andi	r2,r2,255
  8814c0:	1000051e 	bne	r2,zero,8814d8 <__cxa_call_unexpected+0x164>
  8814c4:	d9001417 	ldw	r4,80(sp)
  8814c8:	088188c0 	call	88188c <_ZN10__cxxabiv111__terminateEPFvvE>
  8814cc:	10801004 	addi	r2,r2,64
  8814d0:	d8801715 	stw	r2,92(sp)
  8814d4:	003fe106 	br	88145c <__cxa_call_unexpected+0xe8>
  8814d8:	01000104 	movi	r4,4
  8814dc:	0881b340 	call	881b34 <__cxa_allocate_exception>
  8814e0:	00c02274 	movhi	r3,137
  8814e4:	18c8cf04 	addi	r3,r3,9020
  8814e8:	01802234 	movhi	r6,136
  8814ec:	01402274 	movhi	r5,137
  8814f0:	10c00015 	stw	r3,0(r2)
  8814f4:	31874304 	addi	r6,r6,7436
  8814f8:	00c00084 	movi	r3,2
  8814fc:	2948b404 	addi	r5,r5,8912
  881500:	1009883a 	mov	r4,r2
  881504:	d8c00815 	stw	r3,32(sp)
  881508:	08815e80 	call	8815e8 <__cxa_throw>
  88150c:	08816780 	call	881678 <__cxa_rethrow>
  881510:	d9401617 	ldw	r5,88(sp)
  881514:	00800084 	movi	r2,2
  881518:	d9800104 	addi	r6,sp,4
  88151c:	0009883a 	mov	r4,zero
  881520:	d8800815 	stw	r2,32(sp)
  881524:	08809500 	call	880950 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
  881528:	d9801717 	ldw	r6,92(sp)
  88152c:	d9c01517 	ldw	r7,84(sp)
  881530:	d9000104 	addi	r4,sp,4
  881534:	317ff017 	ldw	r5,-64(r6)
  881538:	0880ccc0 	call	880ccc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
  88153c:	10803fcc 	andi	r2,r2,255
  881540:	1000171e 	bne	r2,zero,8815a0 <__cxa_call_unexpected+0x22c>
  881544:	d9c01517 	ldw	r7,84(sp)
  881548:	01402274 	movhi	r5,137
  88154c:	00800084 	movi	r2,2
  881550:	2948b404 	addi	r5,r5,8912
  881554:	000d883a 	mov	r6,zero
  881558:	d9000104 	addi	r4,sp,4
  88155c:	d8800815 	stw	r2,32(sp)
  881560:	0880ccc0 	call	880ccc <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
  881564:	10803fcc 	andi	r2,r2,255
  881568:	103fd626 	beq	r2,zero,8814c4 <__cxa_call_unexpected+0x150>
  88156c:	01000104 	movi	r4,4
  881570:	0881b340 	call	881b34 <__cxa_allocate_exception>
  881574:	00c02274 	movhi	r3,137
  881578:	18c8cf04 	addi	r3,r3,9020
  88157c:	01802234 	movhi	r6,136
  881580:	01402274 	movhi	r5,137
  881584:	10c00015 	stw	r3,0(r2)
  881588:	31874304 	addi	r6,r6,7436
  88158c:	00c00084 	movi	r3,2
  881590:	2948b404 	addi	r5,r5,8912
  881594:	1009883a 	mov	r4,r2
  881598:	d8c00815 	stw	r3,32(sp)
  88159c:	08815e80 	call	8815e8 <__cxa_throw>
  8815a0:	08816780 	call	881678 <__cxa_rethrow>

008815a4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
  8815a4:	defffe04 	addi	sp,sp,-8
  8815a8:	dfc00115 	stw	ra,4(sp)
  8815ac:	dc000015 	stw	r16,0(sp)
  8815b0:	00800044 	movi	r2,1
  8815b4:	11000a36 	bltu	r2,r4,8815e0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
  8815b8:	28bff617 	ldw	r2,-40(r5)
  8815bc:	2c000504 	addi	r16,r5,20
  8815c0:	10000226 	beq	r2,zero,8815cc <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
  8815c4:	8009883a 	mov	r4,r16
  8815c8:	103ee83a 	callr	r2
  8815cc:	8009883a 	mov	r4,r16
  8815d0:	dfc00117 	ldw	ra,4(sp)
  8815d4:	dc000017 	ldw	r16,0(sp)
  8815d8:	dec00204 	addi	sp,sp,8
  8815dc:	0881b941 	jmpi	881b94 <__cxa_free_exception>
  8815e0:	293ff817 	ldw	r4,-32(r5)
  8815e4:	088188c0 	call	88188c <_ZN10__cxxabiv111__terminateEPFvvE>

008815e8 <__cxa_throw>:
  8815e8:	defffb04 	addi	sp,sp,-20
  8815ec:	dfc00415 	stw	ra,16(sp)
  8815f0:	dcc00315 	stw	r19,12(sp)
  8815f4:	dc800215 	stw	r18,8(sp)
  8815f8:	2827883a 	mov	r19,r5
  8815fc:	3025883a 	mov	r18,r6
  881600:	dc400115 	stw	r17,4(sp)
  881604:	dc000015 	stw	r16,0(sp)
  881608:	2021883a 	mov	r16,r4
  88160c:	0881cfc0 	call	881cfc <__cxa_get_globals>
  881610:	10c00117 	ldw	r3,4(r2)
  881614:	847ffb04 	addi	r17,r16,-20
  881618:	18c00044 	addi	r3,r3,1
  88161c:	10c00115 	stw	r3,4(r2)
  881620:	00800044 	movi	r2,1
  881624:	80bfef15 	stw	r2,-68(r16)
  881628:	84fff015 	stw	r19,-64(r16)
  88162c:	84bff115 	stw	r18,-60(r16)
  881630:	08819c40 	call	8819c4 <_ZSt14get_unexpectedv>
  881634:	80bff215 	stw	r2,-56(r16)
  881638:	08819a00 	call	8819a0 <_ZSt13get_terminatev>
  88163c:	80bff315 	stw	r2,-52(r16)
  881640:	0090caf4 	movhi	r2,17195
  881644:	108ac004 	addi	r2,r2,11008
  881648:	80bffb15 	stw	r2,-20(r16)
  88164c:	0091d3b4 	movhi	r2,18254
  881650:	109550c4 	addi	r2,r2,21827
  881654:	80bffc15 	stw	r2,-16(r16)
  881658:	00802234 	movhi	r2,136
  88165c:	10856904 	addi	r2,r2,5540
  881660:	8809883a 	mov	r4,r17
  881664:	80bffd15 	stw	r2,-12(r16)
  881668:	088265c0 	call	88265c <_Unwind_SjLj_RaiseException>
  88166c:	8809883a 	mov	r4,r17
  881670:	08817040 	call	881704 <__cxa_begin_catch>
  881674:	088194c0 	call	88194c <_ZSt9terminatev>

00881678 <__cxa_rethrow>:
  881678:	defffe04 	addi	sp,sp,-8
  88167c:	dfc00115 	stw	ra,4(sp)
  881680:	dc000015 	stw	r16,0(sp)
  881684:	0881cfc0 	call	881cfc <__cxa_get_globals>
  881688:	10c00117 	ldw	r3,4(r2)
  88168c:	11000017 	ldw	r4,0(r2)
  881690:	18c00044 	addi	r3,r3,1
  881694:	10c00115 	stw	r3,4(r2)
  881698:	20001126 	beq	r4,zero,8816e0 <__cxa_rethrow+0x68>
  88169c:	21400b17 	ldw	r5,44(r4)
  8816a0:	01ef3574 	movhi	r7,48341
  8816a4:	39f54004 	addi	r7,r7,-11008
  8816a8:	29cf883a 	add	r7,r5,r7
  8816ac:	20c00c17 	ldw	r3,48(r4)
  8816b0:	394d803a 	cmpltu	r6,r7,r5
  8816b4:	016e2cb4 	movhi	r5,47282
  8816b8:	296aaf04 	addi	r5,r5,-21828
  8816bc:	1947883a 	add	r3,r3,r5
  8816c0:	30c7883a 	add	r3,r6,r3
  8816c4:	18000726 	beq	r3,zero,8816e4 <__cxa_rethrow+0x6c>
  8816c8:	10000015 	stw	zero,0(r2)
  8816cc:	24000b04 	addi	r16,r4,44
  8816d0:	8009883a 	mov	r4,r16
  8816d4:	08827b40 	call	8827b4 <_Unwind_SjLj_Resume_or_Rethrow>
  8816d8:	8009883a 	mov	r4,r16
  8816dc:	08817040 	call	881704 <__cxa_begin_catch>
  8816e0:	088194c0 	call	88194c <_ZSt9terminatev>
  8816e4:	00c00044 	movi	r3,1
  8816e8:	19fff736 	bltu	r3,r7,8816c8 <__cxa_rethrow+0x50>
  8816ec:	20800517 	ldw	r2,20(r4)
  8816f0:	0085c83a 	sub	r2,zero,r2
  8816f4:	20800515 	stw	r2,20(r4)
  8816f8:	003ff406 	br	8816cc <__cxa_rethrow+0x54>

008816fc <__cxa_get_exception_ptr>:
  8816fc:	20bfff17 	ldw	r2,-4(r4)
  881700:	f800283a 	ret

00881704 <__cxa_begin_catch>:
  881704:	defffe04 	addi	sp,sp,-8
  881708:	dc000015 	stw	r16,0(sp)
  88170c:	dfc00115 	stw	ra,4(sp)
  881710:	2021883a 	mov	r16,r4
  881714:	0881cfc0 	call	881cfc <__cxa_get_globals>
  881718:	81000017 	ldw	r4,0(r16)
  88171c:	80c00117 	ldw	r3,4(r16)
  881720:	01af3574 	movhi	r6,48341
  881724:	31b54004 	addi	r6,r6,-11008
  881728:	016e2cb4 	movhi	r5,47282
  88172c:	296aaf04 	addi	r5,r5,-21828
  881730:	218d883a 	add	r6,r4,r6
  881734:	3109803a 	cmpltu	r4,r6,r4
  881738:	1947883a 	add	r3,r3,r5
  88173c:	20c7883a 	add	r3,r4,r3
  881740:	817ff504 	addi	r5,r16,-44
  881744:	11000017 	ldw	r4,0(r2)
  881748:	18000726 	beq	r3,zero,881768 <__cxa_begin_catch+0x64>
  88174c:	2000191e 	bne	r4,zero,8817b4 <__cxa_begin_catch+0xb0>
  881750:	11400015 	stw	r5,0(r2)
  881754:	0005883a 	mov	r2,zero
  881758:	dfc00117 	ldw	ra,4(sp)
  88175c:	dc000017 	ldw	r16,0(sp)
  881760:	dec00204 	addi	sp,sp,8
  881764:	f800283a 	ret
  881768:	01c00044 	movi	r7,1
  88176c:	39bff736 	bltu	r7,r6,88174c <__cxa_begin_catch+0x48>
  881770:	80fffa17 	ldw	r3,-24(r16)
  881774:	18000d16 	blt	r3,zero,8817ac <__cxa_begin_catch+0xa8>
  881778:	18c00044 	addi	r3,r3,1
  88177c:	11800117 	ldw	r6,4(r2)
  881780:	80fffa15 	stw	r3,-24(r16)
  881784:	30ffffc4 	addi	r3,r6,-1
  881788:	10c00115 	stw	r3,4(r2)
  88178c:	21400226 	beq	r4,r5,881798 <__cxa_begin_catch+0x94>
  881790:	813ff915 	stw	r4,-28(r16)
  881794:	11400015 	stw	r5,0(r2)
  881798:	80bfff17 	ldw	r2,-4(r16)
  88179c:	dfc00117 	ldw	ra,4(sp)
  8817a0:	dc000017 	ldw	r16,0(sp)
  8817a4:	dec00204 	addi	sp,sp,8
  8817a8:	f800283a 	ret
  8817ac:	38c7c83a 	sub	r3,r7,r3
  8817b0:	003ff206 	br	88177c <__cxa_begin_catch+0x78>
  8817b4:	088194c0 	call	88194c <_ZSt9terminatev>

008817b8 <__cxa_end_catch>:
  8817b8:	deffff04 	addi	sp,sp,-4
  8817bc:	dfc00015 	stw	ra,0(sp)
  8817c0:	0881cf00 	call	881cf0 <__cxa_get_globals_fast>
  8817c4:	11000017 	ldw	r4,0(r2)
  8817c8:	20001426 	beq	r4,zero,88181c <__cxa_end_catch+0x64>
  8817cc:	21400b17 	ldw	r5,44(r4)
  8817d0:	01ef3574 	movhi	r7,48341
  8817d4:	39f54004 	addi	r7,r7,-11008
  8817d8:	29cf883a 	add	r7,r5,r7
  8817dc:	20c00c17 	ldw	r3,48(r4)
  8817e0:	394d803a 	cmpltu	r6,r7,r5
  8817e4:	016e2cb4 	movhi	r5,47282
  8817e8:	296aaf04 	addi	r5,r5,-21828
  8817ec:	1947883a 	add	r3,r3,r5
  8817f0:	30c7883a 	add	r3,r6,r3
  8817f4:	18000c1e 	bne	r3,zero,881828 <__cxa_end_catch+0x70>
  8817f8:	00c00044 	movi	r3,1
  8817fc:	19c00a36 	bltu	r3,r7,881828 <__cxa_end_catch+0x70>
  881800:	20c00517 	ldw	r3,20(r4)
  881804:	18000d16 	blt	r3,zero,88183c <__cxa_end_catch+0x84>
  881808:	18ffffc4 	addi	r3,r3,-1
  88180c:	18001026 	beq	r3,zero,881850 <__cxa_end_catch+0x98>
  881810:	00bfffc4 	movi	r2,-1
  881814:	18801426 	beq	r3,r2,881868 <__cxa_end_catch+0xb0>
  881818:	20c00515 	stw	r3,20(r4)
  88181c:	dfc00017 	ldw	ra,0(sp)
  881820:	dec00104 	addi	sp,sp,4
  881824:	f800283a 	ret
  881828:	21000b04 	addi	r4,r4,44
  88182c:	10000015 	stw	zero,0(r2)
  881830:	dfc00017 	ldw	ra,0(sp)
  881834:	dec00104 	addi	sp,sp,4
  881838:	08828001 	jmpi	882800 <_Unwind_DeleteException>
  88183c:	18c00044 	addi	r3,r3,1
  881840:	183ff51e 	bne	r3,zero,881818 <__cxa_end_catch+0x60>
  881844:	21400417 	ldw	r5,16(r4)
  881848:	11400015 	stw	r5,0(r2)
  88184c:	003ff206 	br	881818 <__cxa_end_catch+0x60>
  881850:	20c00417 	ldw	r3,16(r4)
  881854:	21000b04 	addi	r4,r4,44
  881858:	10c00015 	stw	r3,0(r2)
  88185c:	dfc00017 	ldw	ra,0(sp)
  881860:	dec00104 	addi	sp,sp,4
  881864:	08828001 	jmpi	882800 <_Unwind_DeleteException>
  881868:	088194c0 	call	88194c <_ZSt9terminatev>

0088186c <_ZSt18uncaught_exceptionv>:
  88186c:	deffff04 	addi	sp,sp,-4
  881870:	dfc00015 	stw	ra,0(sp)
  881874:	0881cfc0 	call	881cfc <__cxa_get_globals>
  881878:	10800117 	ldw	r2,4(r2)
  88187c:	1004c03a 	cmpne	r2,r2,zero
  881880:	dfc00017 	ldw	ra,0(sp)
  881884:	dec00104 	addi	sp,sp,4
  881888:	f800283a 	ret

0088188c <_ZN10__cxxabiv111__terminateEPFvvE>:
  88188c:	00802234 	movhi	r2,136
  881890:	deffef04 	addi	sp,sp,-68
  881894:	10835d04 	addi	r2,r2,3444
  881898:	d8800615 	stw	r2,24(sp)
  88189c:	00802274 	movhi	r2,137
  8818a0:	10886c04 	addi	r2,r2,8624
  8818a4:	d8800715 	stw	r2,28(sp)
  8818a8:	00802234 	movhi	r2,136
  8818ac:	10863904 	addi	r2,r2,6372
  8818b0:	d9000d15 	stw	r4,52(sp)
  8818b4:	d809883a 	mov	r4,sp
  8818b8:	d8800915 	stw	r2,36(sp)
  8818bc:	dfc01015 	stw	ra,64(sp)
  8818c0:	df000f15 	stw	fp,60(sp)
  8818c4:	dec00815 	stw	sp,32(sp)
  8818c8:	dec00a15 	stw	sp,40(sp)
  8818cc:	08825740 	call	882574 <_Unwind_SjLj_Register>
  8818d0:	00800044 	movi	r2,1
  8818d4:	d8800115 	stw	r2,4(sp)
  8818d8:	d8800d17 	ldw	r2,52(sp)
  8818dc:	103ee83a 	callr	r2
  8818e0:	088288c0 	call	88288c <abort>
  8818e4:	d8c00217 	ldw	r3,8(sp)
  8818e8:	d8800117 	ldw	r2,4(sp)
  8818ec:	d8c00d15 	stw	r3,52(sp)
  8818f0:	d8c00317 	ldw	r3,12(sp)
  8818f4:	d8c00e15 	stw	r3,56(sp)
  8818f8:	10000b26 	beq	r2,zero,881928 <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
  8818fc:	10bfffc4 	addi	r2,r2,-1
  881900:	10000126 	beq	r2,zero,881908 <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
  881904:	003b68fa 	trap	3
  881908:	d8000115 	stw	zero,4(sp)
  88190c:	08817b80 	call	8817b8 <__cxa_end_catch>
  881910:	d8c00e17 	ldw	r3,56(sp)
  881914:	00bfffc4 	movi	r2,-1
  881918:	18800826 	beq	r3,r2,88193c <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
  88191c:	d9000d17 	ldw	r4,52(sp)
  881920:	d8800115 	stw	r2,4(sp)
  881924:	08827700 	call	882770 <_Unwind_SjLj_Resume>
  881928:	d9000d17 	ldw	r4,52(sp)
  88192c:	08817040 	call	881704 <__cxa_begin_catch>
  881930:	00800084 	movi	r2,2
  881934:	d8800115 	stw	r2,4(sp)
  881938:	088288c0 	call	88288c <abort>
  88193c:	d8800e17 	ldw	r2,56(sp)
  881940:	d9000d17 	ldw	r4,52(sp)
  881944:	d8800115 	stw	r2,4(sp)
  881948:	08813740 	call	881374 <__cxa_call_unexpected>

0088194c <_ZSt9terminatev>:
  88194c:	00802274 	movhi	r2,137
  881950:	10911c04 	addi	r2,r2,17520
  881954:	11000017 	ldw	r4,0(r2)
  881958:	deffff04 	addi	sp,sp,-4
  88195c:	dfc00015 	stw	ra,0(sp)
  881960:	088188c0 	call	88188c <_ZN10__cxxabiv111__terminateEPFvvE>

00881964 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
  881964:	deffff04 	addi	sp,sp,-4
  881968:	dfc00015 	stw	ra,0(sp)
  88196c:	203ee83a 	callr	r4
  881970:	088194c0 	call	88194c <_ZSt9terminatev>

00881974 <_ZSt10unexpectedv>:
  881974:	00802274 	movhi	r2,137
  881978:	10911504 	addi	r2,r2,17492
  88197c:	11000017 	ldw	r4,0(r2)
  881980:	deffff04 	addi	sp,sp,-4
  881984:	dfc00015 	stw	ra,0(sp)
  881988:	08819640 	call	881964 <_ZN10__cxxabiv112__unexpectedEPFvvE>

0088198c <_ZSt13set_terminatePFvvE>:
  88198c:	00c02274 	movhi	r3,137
  881990:	18d11c04 	addi	r3,r3,17520
  881994:	18800017 	ldw	r2,0(r3)
  881998:	19000015 	stw	r4,0(r3)
  88199c:	f800283a 	ret

008819a0 <_ZSt13get_terminatev>:
  8819a0:	00802274 	movhi	r2,137
  8819a4:	10911c04 	addi	r2,r2,17520
  8819a8:	10800017 	ldw	r2,0(r2)
  8819ac:	f800283a 	ret

008819b0 <_ZSt14set_unexpectedPFvvE>:
  8819b0:	00c02274 	movhi	r3,137
  8819b4:	18d11504 	addi	r3,r3,17492
  8819b8:	18800017 	ldw	r2,0(r3)
  8819bc:	19000015 	stw	r4,0(r3)
  8819c0:	f800283a 	ret

008819c4 <_ZSt14get_unexpectedv>:
  8819c4:	00802274 	movhi	r2,137
  8819c8:	10911504 	addi	r2,r2,17492
  8819cc:	10800017 	ldw	r2,0(r2)
  8819d0:	f800283a 	ret

008819d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
  8819d4:	01802274 	movhi	r6,137
  8819d8:	31981104 	addi	r6,r6,24644
  8819dc:	31400117 	ldw	r5,4(r6)
  8819e0:	223fff04 	addi	r8,r4,-4
  8819e4:	227fff17 	ldw	r9,-4(r4)
  8819e8:	28001326 	beq	r5,zero,881a38 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x64>
  8819ec:	424f883a 	add	r7,r8,r9
  8819f0:	29c01426 	beq	r5,r7,881a44 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x70>
  8819f4:	28c00117 	ldw	r3,4(r5)
  8819f8:	18001c26 	beq	r3,zero,881a6c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x98>
  8819fc:	38c00336 	bltu	r7,r3,881a0c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
  881a00:	00001e06 	br	881a7c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa8>
  881a04:	3880052e 	bgeu	r7,r2,881a1c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x48>
  881a08:	1007883a 	mov	r3,r2
  881a0c:	18800117 	ldw	r2,4(r3)
  881a10:	29800104 	addi	r6,r5,4
  881a14:	180b883a 	mov	r5,r3
  881a18:	103ffa1e 	bne	r2,zero,881a04 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x30>
  881a1c:	19400017 	ldw	r5,0(r3)
  881a20:	194f883a 	add	r7,r3,r5
  881a24:	41c00e26 	beq	r8,r7,881a60 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x8c>
  881a28:	20800015 	stw	r2,0(r4)
  881a2c:	30800017 	ldw	r2,0(r6)
  881a30:	12000115 	stw	r8,4(r2)
  881a34:	f800283a 	ret
  881a38:	20000015 	stw	zero,0(r4)
  881a3c:	32000115 	stw	r8,4(r6)
  881a40:	f800283a 	ret
  881a44:	28c00017 	ldw	r3,0(r5)
  881a48:	28800117 	ldw	r2,4(r5)
  881a4c:	1a53883a 	add	r9,r3,r9
  881a50:	227fff15 	stw	r9,-4(r4)
  881a54:	20800015 	stw	r2,0(r4)
  881a58:	32000115 	stw	r8,4(r6)
  881a5c:	f800283a 	ret
  881a60:	494b883a 	add	r5,r9,r5
  881a64:	19400015 	stw	r5,0(r3)
  881a68:	f800283a 	ret
  881a6c:	0005883a 	mov	r2,zero
  881a70:	2807883a 	mov	r3,r5
  881a74:	31800104 	addi	r6,r6,4
  881a78:	003fe806 	br	881a1c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x48>
  881a7c:	1805883a 	mov	r2,r3
  881a80:	31800104 	addi	r6,r6,4
  881a84:	2807883a 	mov	r3,r5
  881a88:	003fe406 	br	881a1c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x48>

00881a8c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
  881a8c:	20800104 	addi	r2,r4,4
  881a90:	00c001c4 	movi	r3,7
  881a94:	1880112e 	bgeu	r3,r2,881adc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>
  881a98:	20c9883a 	add	r4,r4,r3
  881a9c:	00bfff04 	movi	r2,-4
  881aa0:	208a703a 	and	r5,r4,r2
  881aa4:	01802274 	movhi	r6,137
  881aa8:	31981104 	addi	r6,r6,24644
  881aac:	30c00117 	ldw	r3,4(r6)
  881ab0:	18000826 	beq	r3,zero,881ad4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
  881ab4:	19000017 	ldw	r4,0(r3)
  881ab8:	21400436 	bltu	r4,r5,881acc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
  881abc:	00001a06 	br	881b28 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x9c>
  881ac0:	11000017 	ldw	r4,0(r2)
  881ac4:	2140072e 	bgeu	r4,r5,881ae4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
  881ac8:	1007883a 	mov	r3,r2
  881acc:	18800117 	ldw	r2,4(r3)
  881ad0:	103ffb1e 	bne	r2,zero,881ac0 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
  881ad4:	0005883a 	mov	r2,zero
  881ad8:	f800283a 	ret
  881adc:	01400204 	movi	r5,8
  881ae0:	003ff006 	br	881aa4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x18>
  881ae4:	18c00104 	addi	r3,r3,4
  881ae8:	2149c83a 	sub	r4,r4,r5
  881aec:	018001c4 	movi	r6,7
  881af0:	3100092e 	bgeu	r6,r4,881b18 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x8c>
  881af4:	11c00117 	ldw	r7,4(r2)
  881af8:	114d883a 	add	r6,r2,r5
  881afc:	31000015 	stw	r4,0(r6)
  881b00:	31c00115 	stw	r7,4(r6)
  881b04:	18800017 	ldw	r2,0(r3)
  881b08:	11400015 	stw	r5,0(r2)
  881b0c:	19800015 	stw	r6,0(r3)
  881b10:	10800104 	addi	r2,r2,4
  881b14:	f800283a 	ret
  881b18:	11000117 	ldw	r4,4(r2)
  881b1c:	10800104 	addi	r2,r2,4
  881b20:	19000015 	stw	r4,0(r3)
  881b24:	f800283a 	ret
  881b28:	1805883a 	mov	r2,r3
  881b2c:	30c00104 	addi	r3,r6,4
  881b30:	003fed06 	br	881ae8 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x5c>

00881b34 <__cxa_allocate_exception>:
  881b34:	defffd04 	addi	sp,sp,-12
  881b38:	dc400115 	stw	r17,4(sp)
  881b3c:	24401104 	addi	r17,r4,68
  881b40:	8809883a 	mov	r4,r17
  881b44:	dc000015 	stw	r16,0(sp)
  881b48:	dfc00215 	stw	ra,8(sp)
  881b4c:	088297c0 	call	88297c <malloc>
  881b50:	1021883a 	mov	r16,r2
  881b54:	10000a26 	beq	r2,zero,881b80 <__cxa_allocate_exception+0x4c>
  881b58:	01801104 	movi	r6,68
  881b5c:	000b883a 	mov	r5,zero
  881b60:	8009883a 	mov	r4,r16
  881b64:	08831b00 	call	8831b0 <memset>
  881b68:	80801104 	addi	r2,r16,68
  881b6c:	dfc00217 	ldw	ra,8(sp)
  881b70:	dc400117 	ldw	r17,4(sp)
  881b74:	dc000017 	ldw	r16,0(sp)
  881b78:	dec00304 	addi	sp,sp,12
  881b7c:	f800283a 	ret
  881b80:	8809883a 	mov	r4,r17
  881b84:	0881a8c0 	call	881a8c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
  881b88:	1021883a 	mov	r16,r2
  881b8c:	103ff21e 	bne	r2,zero,881b58 <__cxa_allocate_exception+0x24>
  881b90:	088194c0 	call	88194c <_ZSt9terminatev>

00881b94 <__cxa_free_exception>:
  881b94:	00c02274 	movhi	r3,137
  881b98:	18d81104 	addi	r3,r3,24644
  881b9c:	18800217 	ldw	r2,8(r3)
  881ba0:	213fef04 	addi	r4,r4,-68
  881ba4:	1100042e 	bgeu	r2,r4,881bb8 <__cxa_free_exception+0x24>
  881ba8:	18c00317 	ldw	r3,12(r3)
  881bac:	10c5883a 	add	r2,r2,r3
  881bb0:	2080012e 	bgeu	r4,r2,881bb8 <__cxa_free_exception+0x24>
  881bb4:	08819d41 	jmpi	8819d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
  881bb8:	08829901 	jmpi	882990 <free>

00881bbc <__cxa_allocate_dependent_exception>:
  881bbc:	defffe04 	addi	sp,sp,-8
  881bc0:	01001004 	movi	r4,64
  881bc4:	dc000015 	stw	r16,0(sp)
  881bc8:	dfc00115 	stw	ra,4(sp)
  881bcc:	088297c0 	call	88297c <malloc>
  881bd0:	1021883a 	mov	r16,r2
  881bd4:	10000926 	beq	r2,zero,881bfc <__cxa_allocate_dependent_exception+0x40>
  881bd8:	01801004 	movi	r6,64
  881bdc:	000b883a 	mov	r5,zero
  881be0:	8009883a 	mov	r4,r16
  881be4:	08831b00 	call	8831b0 <memset>
  881be8:	8005883a 	mov	r2,r16
  881bec:	dfc00117 	ldw	ra,4(sp)
  881bf0:	dc000017 	ldw	r16,0(sp)
  881bf4:	dec00204 	addi	sp,sp,8
  881bf8:	f800283a 	ret
  881bfc:	01001004 	movi	r4,64
  881c00:	0881a8c0 	call	881a8c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
  881c04:	1021883a 	mov	r16,r2
  881c08:	103ff31e 	bne	r2,zero,881bd8 <__cxa_allocate_dependent_exception+0x1c>
  881c0c:	088194c0 	call	88194c <_ZSt9terminatev>

00881c10 <__cxa_free_dependent_exception>:
  881c10:	01402274 	movhi	r5,137
  881c14:	29581104 	addi	r5,r5,24644
  881c18:	28c00217 	ldw	r3,8(r5)
  881c1c:	2005883a 	mov	r2,r4
  881c20:	1900042e 	bgeu	r3,r4,881c34 <__cxa_free_dependent_exception+0x24>
  881c24:	29400317 	ldw	r5,12(r5)
  881c28:	1947883a 	add	r3,r3,r5
  881c2c:	20c0012e 	bgeu	r4,r3,881c34 <__cxa_free_dependent_exception+0x24>
  881c30:	08819d41 	jmpi	8819d4 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
  881c34:	1009883a 	mov	r4,r2
  881c38:	08829901 	jmpi	882990 <free>

00881c3c <_GLOBAL__sub_I___cxa_allocate_exception>:
  881c3c:	defffd04 	addi	sp,sp,-12
  881c40:	dc400115 	stw	r17,4(sp)
  881c44:	dc000015 	stw	r16,0(sp)
  881c48:	04424004 	movi	r17,2304
  881c4c:	04002274 	movhi	r16,137
  881c50:	84181104 	addi	r16,r16,24644
  881c54:	8809883a 	mov	r4,r17
  881c58:	dfc00215 	stw	ra,8(sp)
  881c5c:	84400315 	stw	r17,12(r16)
  881c60:	088297c0 	call	88297c <malloc>
  881c64:	80800215 	stw	r2,8(r16)
  881c68:	10000826 	beq	r2,zero,881c8c <_GLOBAL__sub_I___cxa_allocate_exception+0x50>
  881c6c:	80800115 	stw	r2,4(r16)
  881c70:	14400015 	stw	r17,0(r2)
  881c74:	10000115 	stw	zero,4(r2)
  881c78:	dfc00217 	ldw	ra,8(sp)
  881c7c:	dc400117 	ldw	r17,4(sp)
  881c80:	dc000017 	ldw	r16,0(sp)
  881c84:	dec00304 	addi	sp,sp,12
  881c88:	f800283a 	ret
  881c8c:	80000315 	stw	zero,12(r16)
  881c90:	80000115 	stw	zero,4(r16)
  881c94:	003ff806 	br	881c78 <_GLOBAL__sub_I___cxa_allocate_exception+0x3c>

00881c98 <__cxa_call_terminate>:
  881c98:	defffe04 	addi	sp,sp,-8
  881c9c:	dfc00115 	stw	ra,4(sp)
  881ca0:	dc000015 	stw	r16,0(sp)
  881ca4:	20000d26 	beq	r4,zero,881cdc <__cxa_call_terminate+0x44>
  881ca8:	2021883a 	mov	r16,r4
  881cac:	08817040 	call	881704 <__cxa_begin_catch>
  881cb0:	80c00017 	ldw	r3,0(r16)
  881cb4:	016f3574 	movhi	r5,48341
  881cb8:	29754004 	addi	r5,r5,-11008
  881cbc:	194b883a 	add	r5,r3,r5
  881cc0:	80800117 	ldw	r2,4(r16)
  881cc4:	28c9803a 	cmpltu	r4,r5,r3
  881cc8:	00ee2cb4 	movhi	r3,47282
  881ccc:	18eaaf04 	addi	r3,r3,-21828
  881cd0:	10c5883a 	add	r2,r2,r3
  881cd4:	2085883a 	add	r2,r4,r2
  881cd8:	10000126 	beq	r2,zero,881ce0 <__cxa_call_terminate+0x48>
  881cdc:	088194c0 	call	88194c <_ZSt9terminatev>
  881ce0:	00800044 	movi	r2,1
  881ce4:	117ffd36 	bltu	r2,r5,881cdc <__cxa_call_terminate+0x44>
  881ce8:	813ff817 	ldw	r4,-32(r16)
  881cec:	088188c0 	call	88188c <_ZN10__cxxabiv111__terminateEPFvvE>

00881cf0 <__cxa_get_globals_fast>:
  881cf0:	00802274 	movhi	r2,137
  881cf4:	10980004 	addi	r2,r2,24576
  881cf8:	f800283a 	ret

00881cfc <__cxa_get_globals>:
  881cfc:	00802274 	movhi	r2,137
  881d00:	10980004 	addi	r2,r2,24576
  881d04:	f800283a 	ret

00881d08 <_ZNSt9exceptionD1Ev>:
  881d08:	f800283a 	ret

00881d0c <_ZNSt13bad_exceptionD1Ev>:
  881d0c:	f800283a 	ret

00881d10 <_ZNKSt9exception4whatEv>:
  881d10:	00802274 	movhi	r2,137
  881d14:	1088a204 	addi	r2,r2,8840
  881d18:	f800283a 	ret

00881d1c <_ZNKSt13bad_exception4whatEv>:
  881d1c:	00802274 	movhi	r2,137
  881d20:	1088a604 	addi	r2,r2,8856
  881d24:	f800283a 	ret

00881d28 <_ZNSt9exceptionD0Ev>:
  881d28:	0881d401 	jmpi	881d40 <_ZdlPv>

00881d2c <_ZNSt13bad_exceptionD0Ev>:
  881d2c:	0881d401 	jmpi	881d40 <_ZdlPv>

00881d30 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
  881d30:	f800283a 	ret

00881d34 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
  881d34:	0881d401 	jmpi	881d40 <_ZdlPv>

00881d38 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
  881d38:	f800283a 	ret

00881d3c <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
  881d3c:	0881d401 	jmpi	881d40 <_ZdlPv>

00881d40 <_ZdlPv>:
  881d40:	08829901 	jmpi	882990 <free>

00881d44 <__cxa_pure_virtual>:
  881d44:	01402274 	movhi	r5,137
  881d48:	deffff04 	addi	sp,sp,-4
  881d4c:	2948dc04 	addi	r5,r5,9072
  881d50:	018006c4 	movi	r6,27
  881d54:	01000084 	movi	r4,2
  881d58:	dfc00015 	stw	ra,0(sp)
  881d5c:	088ff180 	call	88ff18 <write>
  881d60:	088194c0 	call	88194c <_ZSt9terminatev>

00881d64 <__cxa_deleted_virtual>:
  881d64:	01402274 	movhi	r5,137
  881d68:	deffff04 	addi	sp,sp,-4
  881d6c:	2948e304 	addi	r5,r5,9100
  881d70:	01800784 	movi	r6,30
  881d74:	01000084 	movi	r4,2
  881d78:	dfc00015 	stw	ra,0(sp)
  881d7c:	088ff180 	call	88ff18 <write>
  881d80:	088194c0 	call	88194c <_ZSt9terminatev>

00881d84 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
  881d84:	20800017 	ldw	r2,0(r4)
  881d88:	defffa04 	addi	sp,sp,-24
  881d8c:	dc000415 	stw	r16,16(sp)
  881d90:	10800617 	ldw	r2,24(r2)
  881d94:	3021883a 	mov	r16,r6
  881d98:	31800017 	ldw	r6,0(r6)
  881d9c:	00c00404 	movi	r3,16
  881da0:	d8c00215 	stw	r3,8(sp)
  881da4:	dfc00515 	stw	ra,20(sp)
  881da8:	d8000015 	stw	zero,0(sp)
  881dac:	d8000115 	stw	zero,4(sp)
  881db0:	d8000315 	stw	zero,12(sp)
  881db4:	d80f883a 	mov	r7,sp
  881db8:	103ee83a 	callr	r2
  881dbc:	d8800117 	ldw	r2,4(sp)
  881dc0:	00c00184 	movi	r3,6
  881dc4:	1080018c 	andi	r2,r2,6
  881dc8:	10c00526 	beq	r2,r3,881de0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
  881dcc:	0005883a 	mov	r2,zero
  881dd0:	dfc00517 	ldw	ra,20(sp)
  881dd4:	dc000417 	ldw	r16,16(sp)
  881dd8:	dec00604 	addi	sp,sp,24
  881ddc:	f800283a 	ret
  881de0:	d8c00017 	ldw	r3,0(sp)
  881de4:	00800044 	movi	r2,1
  881de8:	80c00015 	stw	r3,0(r16)
  881dec:	dfc00517 	ldw	ra,20(sp)
  881df0:	dc000417 	ldw	r16,16(sp)
  881df4:	dec00604 	addi	sp,sp,24
  881df8:	f800283a 	ret

00881dfc <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
  881dfc:	d8800017 	ldw	r2,0(sp)
  881e00:	11800226 	beq	r2,r6,881e0c <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
  881e04:	00800044 	movi	r2,1
  881e08:	f800283a 	ret
  881e0c:	00800184 	movi	r2,6
  881e10:	f800283a 	ret

00881e14 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
  881e14:	00802274 	movhi	r2,137
  881e18:	1088f904 	addi	r2,r2,9188
  881e1c:	20800015 	stw	r2,0(r4)
  881e20:	08823101 	jmpi	882310 <_ZNSt9type_infoD1Ev>

00881e24 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
  881e24:	defffe04 	addi	sp,sp,-8
  881e28:	00802274 	movhi	r2,137
  881e2c:	dc000015 	stw	r16,0(sp)
  881e30:	dfc00115 	stw	ra,4(sp)
  881e34:	1088f904 	addi	r2,r2,9188
  881e38:	20800015 	stw	r2,0(r4)
  881e3c:	2021883a 	mov	r16,r4
  881e40:	08823100 	call	882310 <_ZNSt9type_infoD1Ev>
  881e44:	8009883a 	mov	r4,r16
  881e48:	dfc00117 	ldw	ra,4(sp)
  881e4c:	dc000017 	ldw	r16,0(sp)
  881e50:	dec00204 	addi	sp,sp,8
  881e54:	0881d401 	jmpi	881d40 <_ZdlPv>

00881e58 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
  881e58:	21000117 	ldw	r4,4(r4)
  881e5c:	29400117 	ldw	r5,4(r5)
  881e60:	defffd04 	addi	sp,sp,-12
  881e64:	dc400115 	stw	r17,4(sp)
  881e68:	dc000015 	stw	r16,0(sp)
  881e6c:	dfc00215 	stw	ra,8(sp)
  881e70:	3023883a 	mov	r17,r6
  881e74:	3821883a 	mov	r16,r7
  881e78:	21400526 	beq	r4,r5,881e90 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
  881e7c:	20c00007 	ldb	r3,0(r4)
  881e80:	00800a84 	movi	r2,42
  881e84:	18800d26 	beq	r3,r2,881ebc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
  881e88:	088369c0 	call	88369c <strcmp>
  881e8c:	10000b1e 	bne	r2,zero,881ebc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
  881e90:	00800204 	movi	r2,8
  881e94:	80800315 	stw	r2,12(r16)
  881e98:	00800184 	movi	r2,6
  881e9c:	80800115 	stw	r2,4(r16)
  881ea0:	84400015 	stw	r17,0(r16)
  881ea4:	00800044 	movi	r2,1
  881ea8:	dfc00217 	ldw	ra,8(sp)
  881eac:	dc400117 	ldw	r17,4(sp)
  881eb0:	dc000017 	ldw	r16,0(sp)
  881eb4:	dec00304 	addi	sp,sp,12
  881eb8:	f800283a 	ret
  881ebc:	0005883a 	mov	r2,zero
  881ec0:	003ff906 	br	881ea8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x50>

00881ec4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
  881ec4:	defffa04 	addi	sp,sp,-24
  881ec8:	dc800415 	stw	r18,16(sp)
  881ecc:	d8800817 	ldw	r2,32(sp)
  881ed0:	dc800617 	ldw	r18,24(sp)
  881ed4:	dc400315 	stw	r17,12(sp)
  881ed8:	dc000215 	stw	r16,8(sp)
  881edc:	dfc00515 	stw	ra,20(sp)
  881ee0:	dc400917 	ldw	r17,36(sp)
  881ee4:	24000117 	ldw	r16,4(r4)
  881ee8:	90801526 	beq	r18,r2,881f40 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x7c>
  881eec:	39400117 	ldw	r5,4(r7)
  881ef0:	2c000826 	beq	r5,r16,881f14 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
  881ef4:	80c00007 	ldb	r3,0(r16)
  881ef8:	00800a84 	movi	r2,42
  881efc:	18800926 	beq	r3,r2,881f24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
  881f00:	8009883a 	mov	r4,r16
  881f04:	d9800115 	stw	r6,4(sp)
  881f08:	088369c0 	call	88369c <strcmp>
  881f0c:	d9800117 	ldw	r6,4(sp)
  881f10:	1000041e 	bne	r2,zero,881f24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
  881f14:	00800044 	movi	r2,1
  881f18:	8c800015 	stw	r18,0(r17)
  881f1c:	89800115 	stw	r6,4(r17)
  881f20:	88800315 	stw	r2,12(r17)
  881f24:	0005883a 	mov	r2,zero
  881f28:	dfc00517 	ldw	ra,20(sp)
  881f2c:	dc800417 	ldw	r18,16(sp)
  881f30:	dc400317 	ldw	r17,12(sp)
  881f34:	dc000217 	ldw	r16,8(sp)
  881f38:	dec00604 	addi	sp,sp,24
  881f3c:	f800283a 	ret
  881f40:	d8800717 	ldw	r2,28(sp)
  881f44:	11400117 	ldw	r5,4(r2)
  881f48:	81400a26 	beq	r16,r5,881f74 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
  881f4c:	80c00007 	ldb	r3,0(r16)
  881f50:	00800a84 	movi	r2,42
  881f54:	18800c26 	beq	r3,r2,881f88 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
  881f58:	8009883a 	mov	r4,r16
  881f5c:	d9800115 	stw	r6,4(sp)
  881f60:	d9c00015 	stw	r7,0(sp)
  881f64:	088369c0 	call	88369c <strcmp>
  881f68:	d9800117 	ldw	r6,4(sp)
  881f6c:	d9c00017 	ldw	r7,0(sp)
  881f70:	1000021e 	bne	r2,zero,881f7c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
  881f74:	89800215 	stw	r6,8(r17)
  881f78:	003fea06 	br	881f24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
  881f7c:	39400117 	ldw	r5,4(r7)
  881f80:	817fdf1e 	bne	r16,r5,881f00 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x3c>
  881f84:	003fe306 	br	881f14 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
  881f88:	38800117 	ldw	r2,4(r7)
  881f8c:	80bfe51e 	bne	r16,r2,881f24 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
  881f90:	003fe006 	br	881f14 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>

00881f94 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
  881f94:	20800117 	ldw	r2,4(r4)
  881f98:	28c00117 	ldw	r3,4(r5)
  881f9c:	10c02926 	beq	r2,r3,882044 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
  881fa0:	defffb04 	addi	sp,sp,-20
  881fa4:	dcc00315 	stw	r19,12(sp)
  881fa8:	dc800215 	stw	r18,8(sp)
  881fac:	dc400115 	stw	r17,4(sp)
  881fb0:	dc000015 	stw	r16,0(sp)
  881fb4:	dfc00415 	stw	ra,16(sp)
  881fb8:	2821883a 	mov	r16,r5
  881fbc:	11400007 	ldb	r5,0(r2)
  881fc0:	2025883a 	mov	r18,r4
  881fc4:	01000a84 	movi	r4,42
  881fc8:	3823883a 	mov	r17,r7
  881fcc:	3027883a 	mov	r19,r6
  881fd0:	29000626 	beq	r5,r4,881fec <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
  881fd4:	180b883a 	mov	r5,r3
  881fd8:	1009883a 	mov	r4,r2
  881fdc:	088369c0 	call	88369c <strcmp>
  881fe0:	1000021e 	bne	r2,zero,881fec <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
  881fe4:	00800044 	movi	r2,1
  881fe8:	00000306 	br	881ff8 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
  881fec:	008000c4 	movi	r2,3
  881ff0:	1440082e 	bgeu	r2,r17,882014 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
  881ff4:	0005883a 	mov	r2,zero
  881ff8:	dfc00417 	ldw	ra,16(sp)
  881ffc:	dcc00317 	ldw	r19,12(sp)
  882000:	dc800217 	ldw	r18,8(sp)
  882004:	dc400117 	ldw	r17,4(sp)
  882008:	dc000017 	ldw	r16,0(sp)
  88200c:	dec00504 	addi	sp,sp,20
  882010:	f800283a 	ret
  882014:	80800017 	ldw	r2,0(r16)
  882018:	980d883a 	mov	r6,r19
  88201c:	900b883a 	mov	r5,r18
  882020:	10800517 	ldw	r2,20(r2)
  882024:	8009883a 	mov	r4,r16
  882028:	dfc00417 	ldw	ra,16(sp)
  88202c:	dcc00317 	ldw	r19,12(sp)
  882030:	dc800217 	ldw	r18,8(sp)
  882034:	dc400117 	ldw	r17,4(sp)
  882038:	dc000017 	ldw	r16,0(sp)
  88203c:	dec00504 	addi	sp,sp,20
  882040:	1000683a 	jmp	r2
  882044:	00800044 	movi	r2,1
  882048:	f800283a 	ret

0088204c <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
  88204c:	00802274 	movhi	r2,137
  882050:	10891104 	addi	r2,r2,9284
  882054:	20800015 	stw	r2,0(r4)
  882058:	0881e141 	jmpi	881e14 <_ZN10__cxxabiv117__class_type_infoD1Ev>

0088205c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
  88205c:	defffe04 	addi	sp,sp,-8
  882060:	00802274 	movhi	r2,137
  882064:	dc000015 	stw	r16,0(sp)
  882068:	dfc00115 	stw	ra,4(sp)
  88206c:	10891104 	addi	r2,r2,9284
  882070:	20800015 	stw	r2,0(r4)
  882074:	2021883a 	mov	r16,r4
  882078:	0881e140 	call	881e14 <_ZN10__cxxabiv117__class_type_infoD1Ev>
  88207c:	8009883a 	mov	r4,r16
  882080:	dfc00117 	ldw	ra,4(sp)
  882084:	dc000017 	ldw	r16,0(sp)
  882088:	dec00204 	addi	sp,sp,8
  88208c:	0881d401 	jmpi	881d40 <_ZdlPv>

00882090 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
  882090:	defff504 	addi	sp,sp,-44
  882094:	dc000115 	stw	r16,4(sp)
  882098:	38800117 	ldw	r2,4(r7)
  88209c:	24000117 	ldw	r16,4(r4)
  8820a0:	df000915 	stw	fp,36(sp)
  8820a4:	ddc00815 	stw	r23,32(sp)
  8820a8:	dd800715 	stw	r22,28(sp)
  8820ac:	dcc00415 	stw	r19,16(sp)
  8820b0:	dc800315 	stw	r18,12(sp)
  8820b4:	dc400215 	stw	r17,8(sp)
  8820b8:	dfc00a15 	stw	ra,40(sp)
  8820bc:	dd400615 	stw	r21,24(sp)
  8820c0:	dd000515 	stw	r20,20(sp)
  8820c4:	2823883a 	mov	r17,r5
  8820c8:	3039883a 	mov	fp,r6
  8820cc:	dcc00b17 	ldw	r19,44(sp)
  8820d0:	ddc00c17 	ldw	r23,48(sp)
  8820d4:	dd800d17 	ldw	r22,52(sp)
  8820d8:	dc800e17 	ldw	r18,56(sp)
  8820dc:	80800b26 	beq	r16,r2,88210c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
  8820e0:	80c00007 	ldb	r3,0(r16)
  8820e4:	2029883a 	mov	r20,r4
  8820e8:	01000a84 	movi	r4,42
  8820ec:	382b883a 	mov	r21,r7
  8820f0:	19001a26 	beq	r3,r4,88215c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
  8820f4:	100b883a 	mov	r5,r2
  8820f8:	8009883a 	mov	r4,r16
  8820fc:	d8c00015 	stw	r3,0(sp)
  882100:	088369c0 	call	88369c <strcmp>
  882104:	d8c00017 	ldw	r3,0(sp)
  882108:	1000141e 	bne	r2,zero,88215c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
  88210c:	94c00015 	stw	r19,0(r18)
  882110:	97000115 	stw	fp,4(r18)
  882114:	88002816 	blt	r17,zero,8821b8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x128>
  882118:	9c63883a 	add	r17,r19,r17
  88211c:	b4403226 	beq	r22,r17,8821e8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
  882120:	00800044 	movi	r2,1
  882124:	90800315 	stw	r2,12(r18)
  882128:	0005883a 	mov	r2,zero
  88212c:	dfc00a17 	ldw	ra,40(sp)
  882130:	df000917 	ldw	fp,36(sp)
  882134:	ddc00817 	ldw	r23,32(sp)
  882138:	dd800717 	ldw	r22,28(sp)
  88213c:	dd400617 	ldw	r21,24(sp)
  882140:	dd000517 	ldw	r20,20(sp)
  882144:	dcc00417 	ldw	r19,16(sp)
  882148:	dc800317 	ldw	r18,12(sp)
  88214c:	dc400217 	ldw	r17,8(sp)
  882150:	dc000117 	ldw	r16,4(sp)
  882154:	dec00b04 	addi	sp,sp,44
  882158:	f800283a 	ret
  88215c:	9d801926 	beq	r19,r22,8821c4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
  882160:	a1000217 	ldw	r4,8(r20)
  882164:	a80f883a 	mov	r7,r21
  882168:	e00d883a 	mov	r6,fp
  88216c:	20800017 	ldw	r2,0(r4)
  882170:	dc800e15 	stw	r18,56(sp)
  882174:	dd800d15 	stw	r22,52(sp)
  882178:	ddc00c15 	stw	r23,48(sp)
  88217c:	dcc00b15 	stw	r19,44(sp)
  882180:	10800717 	ldw	r2,28(r2)
  882184:	880b883a 	mov	r5,r17
  882188:	dfc00a17 	ldw	ra,40(sp)
  88218c:	df000917 	ldw	fp,36(sp)
  882190:	ddc00817 	ldw	r23,32(sp)
  882194:	dd800717 	ldw	r22,28(sp)
  882198:	dd400617 	ldw	r21,24(sp)
  88219c:	dd000517 	ldw	r20,20(sp)
  8821a0:	dcc00417 	ldw	r19,16(sp)
  8821a4:	dc800317 	ldw	r18,12(sp)
  8821a8:	dc400217 	ldw	r17,8(sp)
  8821ac:	dc000117 	ldw	r16,4(sp)
  8821b0:	dec00b04 	addi	sp,sp,44
  8821b4:	1000683a 	jmp	r2
  8821b8:	00bfff84 	movi	r2,-2
  8821bc:	88bfda1e 	bne	r17,r2,882128 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x98>
  8821c0:	003fd706 	br	882120 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x90>
  8821c4:	b9400117 	ldw	r5,4(r23)
  8821c8:	81400526 	beq	r16,r5,8821e0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
  8821cc:	00800a84 	movi	r2,42
  8821d0:	18bfe326 	beq	r3,r2,882160 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
  8821d4:	8009883a 	mov	r4,r16
  8821d8:	088369c0 	call	88369c <strcmp>
  8821dc:	103fe01e 	bne	r2,zero,882160 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xd0>
  8821e0:	97000215 	stw	fp,8(r18)
  8821e4:	003fd006 	br	882128 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x98>
  8821e8:	00800184 	movi	r2,6
  8821ec:	003fcd06 	br	882124 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x94>

008821f0 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
  8821f0:	defffa04 	addi	sp,sp,-24
  8821f4:	dc000215 	stw	r16,8(sp)
  8821f8:	dc000617 	ldw	r16,24(sp)
  8821fc:	dc800415 	stw	r18,16(sp)
  882200:	dc400315 	stw	r17,12(sp)
  882204:	dfc00515 	stw	ra,20(sp)
  882208:	2023883a 	mov	r17,r4
  88220c:	2825883a 	mov	r18,r5
  882210:	81800b26 	beq	r16,r6,882240 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
  882214:	89000217 	ldw	r4,8(r17)
  882218:	900b883a 	mov	r5,r18
  88221c:	20800017 	ldw	r2,0(r4)
  882220:	dc000615 	stw	r16,24(sp)
  882224:	10800817 	ldw	r2,32(r2)
  882228:	dfc00517 	ldw	ra,20(sp)
  88222c:	dc800417 	ldw	r18,16(sp)
  882230:	dc400317 	ldw	r17,12(sp)
  882234:	dc000217 	ldw	r16,8(sp)
  882238:	dec00604 	addi	sp,sp,24
  88223c:	1000683a 	jmp	r2
  882240:	21000117 	ldw	r4,4(r4)
  882244:	39400117 	ldw	r5,4(r7)
  882248:	21400926 	beq	r4,r5,882270 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
  88224c:	20c00007 	ldb	r3,0(r4)
  882250:	00800a84 	movi	r2,42
  882254:	18bfef26 	beq	r3,r2,882214 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
  882258:	d9800015 	stw	r6,0(sp)
  88225c:	d9c00115 	stw	r7,4(sp)
  882260:	088369c0 	call	88369c <strcmp>
  882264:	d9800017 	ldw	r6,0(sp)
  882268:	d9c00117 	ldw	r7,4(sp)
  88226c:	103fe91e 	bne	r2,zero,882214 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
  882270:	00800184 	movi	r2,6
  882274:	dfc00517 	ldw	ra,20(sp)
  882278:	dc800417 	ldw	r18,16(sp)
  88227c:	dc400317 	ldw	r17,12(sp)
  882280:	dc000217 	ldw	r16,8(sp)
  882284:	dec00604 	addi	sp,sp,24
  882288:	f800283a 	ret

0088228c <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
  88228c:	defffb04 	addi	sp,sp,-20
  882290:	dcc00315 	stw	r19,12(sp)
  882294:	dc800215 	stw	r18,8(sp)
  882298:	dc400115 	stw	r17,4(sp)
  88229c:	dc000015 	stw	r16,0(sp)
  8822a0:	dfc00415 	stw	ra,16(sp)
  8822a4:	2027883a 	mov	r19,r4
  8822a8:	2821883a 	mov	r16,r5
  8822ac:	3023883a 	mov	r17,r6
  8822b0:	3825883a 	mov	r18,r7
  8822b4:	0881e580 	call	881e58 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
  8822b8:	10c03fcc 	andi	r3,r2,255
  8822bc:	18000726 	beq	r3,zero,8822dc <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
  8822c0:	dfc00417 	ldw	ra,16(sp)
  8822c4:	dcc00317 	ldw	r19,12(sp)
  8822c8:	dc800217 	ldw	r18,8(sp)
  8822cc:	dc400117 	ldw	r17,4(sp)
  8822d0:	dc000017 	ldw	r16,0(sp)
  8822d4:	dec00504 	addi	sp,sp,20
  8822d8:	f800283a 	ret
  8822dc:	99000217 	ldw	r4,8(r19)
  8822e0:	900f883a 	mov	r7,r18
  8822e4:	880d883a 	mov	r6,r17
  8822e8:	20800017 	ldw	r2,0(r4)
  8822ec:	800b883a 	mov	r5,r16
  8822f0:	10800617 	ldw	r2,24(r2)
  8822f4:	dfc00417 	ldw	ra,16(sp)
  8822f8:	dcc00317 	ldw	r19,12(sp)
  8822fc:	dc800217 	ldw	r18,8(sp)
  882300:	dc400117 	ldw	r17,4(sp)
  882304:	dc000017 	ldw	r16,0(sp)
  882308:	dec00504 	addi	sp,sp,20
  88230c:	1000683a 	jmp	r2

00882310 <_ZNSt9type_infoD1Ev>:
  882310:	f800283a 	ret

00882314 <_ZNKSt9type_info14__is_pointer_pEv>:
  882314:	0005883a 	mov	r2,zero
  882318:	f800283a 	ret

0088231c <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
  88231c:	0005883a 	mov	r2,zero
  882320:	f800283a 	ret

00882324 <_ZNSt9type_infoD0Ev>:
  882324:	0881d401 	jmpi	881d40 <_ZdlPv>

00882328 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
  882328:	21000117 	ldw	r4,4(r4)
  88232c:	29400117 	ldw	r5,4(r5)
  882330:	21400c26 	beq	r4,r5,882364 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
  882334:	20c00007 	ldb	r3,0(r4)
  882338:	00800a84 	movi	r2,42
  88233c:	18800726 	beq	r3,r2,88235c <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
  882340:	deffff04 	addi	sp,sp,-4
  882344:	dfc00015 	stw	ra,0(sp)
  882348:	088369c0 	call	88369c <strcmp>
  88234c:	1005003a 	cmpeq	r2,r2,zero
  882350:	dfc00017 	ldw	ra,0(sp)
  882354:	dec00104 	addi	sp,sp,4
  882358:	f800283a 	ret
  88235c:	0005883a 	mov	r2,zero
  882360:	f800283a 	ret
  882364:	00800044 	movi	r2,1
  882368:	f800283a 	ret

0088236c <_Unwind_ForcedUnwind_Phase2>:
  88236c:	defff404 	addi	sp,sp,-48
  882370:	dd800915 	stw	r22,36(sp)
  882374:	05802274 	movhi	r22,137
  882378:	ddc00a15 	stw	r23,40(sp)
  88237c:	dd400815 	stw	r21,32(sp)
  882380:	dd000715 	stw	r20,28(sp)
  882384:	dcc00615 	stw	r19,24(sp)
  882388:	dc400415 	stw	r17,16(sp)
  88238c:	dc000315 	stw	r16,12(sp)
  882390:	dfc00b15 	stw	ra,44(sp)
  882394:	dc800515 	stw	r18,20(sp)
  882398:	2021883a 	mov	r16,r4
  88239c:	2823883a 	mov	r17,r5
  8823a0:	24c00317 	ldw	r19,12(r4)
  8823a4:	25000417 	ldw	r20,16(r4)
  8823a8:	28c00017 	ldw	r3,0(r5)
  8823ac:	b5980204 	addi	r22,r22,24584
  8823b0:	054001c4 	movi	r21,7
  8823b4:	05c00204 	movi	r23,8
  8823b8:	00001606 	br	882414 <_Unwind_ForcedUnwind_Phase2+0xa8>
  8823bc:	81800017 	ldw	r6,0(r16)
  8823c0:	81c00117 	ldw	r7,4(r16)
  8823c4:	1c800617 	ldw	r18,24(r3)
  8823c8:	dd000215 	stw	r20,8(sp)
  8823cc:	dc400115 	stw	r17,4(sp)
  8823d0:	dc000015 	stw	r16,0(sp)
  8823d4:	983ee83a 	callr	r19
  8823d8:	01400284 	movi	r5,10
  8823dc:	01000044 	movi	r4,1
  8823e0:	1000241e 	bne	r2,zero,882474 <_Unwind_ForcedUnwind_Phase2+0x108>
  8823e4:	90000726 	beq	r18,zero,882404 <_Unwind_ForcedUnwind_Phase2+0x98>
  8823e8:	81800017 	ldw	r6,0(r16)
  8823ec:	81c00117 	ldw	r7,4(r16)
  8823f0:	dc400115 	stw	r17,4(sp)
  8823f4:	dc000015 	stw	r16,0(sp)
  8823f8:	903ee83a 	callr	r18
  8823fc:	15401f26 	beq	r2,r21,88247c <_Unwind_ForcedUnwind_Phase2+0x110>
  882400:	15c01c1e 	bne	r2,r23,882474 <_Unwind_ForcedUnwind_Phase2+0x108>
  882404:	88800017 	ldw	r2,0(r17)
  882408:	10c00017 	ldw	r3,0(r2)
  88240c:	b0c00015 	stw	r3,0(r22)
  882410:	88c00015 	stw	r3,0(r17)
  882414:	01400284 	movi	r5,10
  882418:	01000044 	movi	r4,1
  88241c:	183fe71e 	bne	r3,zero,8823bc <_Unwind_ForcedUnwind_Phase2+0x50>
  882420:	81800017 	ldw	r6,0(r16)
  882424:	81c00117 	ldw	r7,4(r16)
  882428:	01400684 	movi	r5,26
  88242c:	dd000215 	stw	r20,8(sp)
  882430:	dc400115 	stw	r17,4(sp)
  882434:	dc000015 	stw	r16,0(sp)
  882438:	01000044 	movi	r4,1
  88243c:	983ee83a 	callr	r19
  882440:	10000c1e 	bne	r2,zero,882474 <_Unwind_ForcedUnwind_Phase2+0x108>
  882444:	00800144 	movi	r2,5
  882448:	dfc00b17 	ldw	ra,44(sp)
  88244c:	ddc00a17 	ldw	r23,40(sp)
  882450:	dd800917 	ldw	r22,36(sp)
  882454:	dd400817 	ldw	r21,32(sp)
  882458:	dd000717 	ldw	r20,28(sp)
  88245c:	dcc00617 	ldw	r19,24(sp)
  882460:	dc800517 	ldw	r18,20(sp)
  882464:	dc400417 	ldw	r17,16(sp)
  882468:	dc000317 	ldw	r16,12(sp)
  88246c:	dec00c04 	addi	sp,sp,48
  882470:	f800283a 	ret
  882474:	00800084 	movi	r2,2
  882478:	003ff306 	br	882448 <_Unwind_ForcedUnwind_Phase2+0xdc>
  88247c:	a805883a 	mov	r2,r21
  882480:	003ff106 	br	882448 <_Unwind_ForcedUnwind_Phase2+0xdc>

00882484 <_Unwind_RaiseException_Phase2>:
  882484:	28c00017 	ldw	r3,0(r5)
  882488:	defff804 	addi	sp,sp,-32
  88248c:	dcc00515 	stw	r19,20(sp)
  882490:	dc800415 	stw	r18,16(sp)
  882494:	dc400315 	stw	r17,12(sp)
  882498:	dc000215 	stw	r16,8(sp)
  88249c:	dfc00715 	stw	ra,28(sp)
  8824a0:	dd000615 	stw	r20,24(sp)
  8824a4:	2823883a 	mov	r17,r5
  8824a8:	2021883a 	mov	r16,r4
  8824ac:	048001c4 	movi	r18,7
  8824b0:	04c00204 	movi	r19,8
  8824b4:	18001326 	beq	r3,zero,882504 <_Unwind_RaiseException_Phase2+0x80>
  8824b8:	81000417 	ldw	r4,16(r16)
  8824bc:	1a000617 	ldw	r8,24(r3)
  8824c0:	19001926 	beq	r3,r4,882528 <_Unwind_RaiseException_Phase2+0xa4>
  8824c4:	40000c26 	beq	r8,zero,8824f8 <_Unwind_RaiseException_Phase2+0x74>
  8824c8:	01400084 	movi	r5,2
  8824cc:	0029883a 	mov	r20,zero
  8824d0:	81800017 	ldw	r6,0(r16)
  8824d4:	81c00117 	ldw	r7,4(r16)
  8824d8:	01000044 	movi	r4,1
  8824dc:	dc400115 	stw	r17,4(sp)
  8824e0:	dc000015 	stw	r16,0(sp)
  8824e4:	403ee83a 	callr	r8
  8824e8:	14801326 	beq	r2,r18,882538 <_Unwind_RaiseException_Phase2+0xb4>
  8824ec:	14c0051e 	bne	r2,r19,882504 <_Unwind_RaiseException_Phase2+0x80>
  8824f0:	a000131e 	bne	r20,zero,882540 <_Unwind_RaiseException_Phase2+0xbc>
  8824f4:	88c00017 	ldw	r3,0(r17)
  8824f8:	18c00017 	ldw	r3,0(r3)
  8824fc:	88c00015 	stw	r3,0(r17)
  882500:	183fed1e 	bne	r3,zero,8824b8 <_Unwind_RaiseException_Phase2+0x34>
  882504:	00800084 	movi	r2,2
  882508:	dfc00717 	ldw	ra,28(sp)
  88250c:	dd000617 	ldw	r20,24(sp)
  882510:	dcc00517 	ldw	r19,20(sp)
  882514:	dc800417 	ldw	r18,16(sp)
  882518:	dc400317 	ldw	r17,12(sp)
  88251c:	dc000217 	ldw	r16,8(sp)
  882520:	dec00804 	addi	sp,sp,32
  882524:	f800283a 	ret
  882528:	40000526 	beq	r8,zero,882540 <_Unwind_RaiseException_Phase2+0xbc>
  88252c:	01400184 	movi	r5,6
  882530:	05000104 	movi	r20,4
  882534:	003fe606 	br	8824d0 <_Unwind_RaiseException_Phase2+0x4c>
  882538:	9005883a 	mov	r2,r18
  88253c:	003ff206 	br	882508 <_Unwind_RaiseException_Phase2+0x84>
  882540:	088288c0 	call	88288c <abort>

00882544 <uw_install_context.isra.1>:
  882544:	20c00017 	ldw	r3,0(r4)
  882548:	deffff04 	addi	sp,sp,-4
  88254c:	01402274 	movhi	r5,137
  882550:	19000917 	ldw	r4,36(r3)
  882554:	df000015 	stw	fp,0(sp)
  882558:	18800804 	addi	r2,r3,32
  88255c:	d839883a 	mov	fp,sp
  882560:	29580204 	addi	r5,r5,24584
  882564:	28c00015 	stw	r3,0(r5)
  882568:	17000017 	ldw	fp,0(r2)
  88256c:	1ec00a17 	ldw	sp,40(r3)
  882570:	2000683a 	jmp	r4

00882574 <_Unwind_SjLj_Register>:
  882574:	00802274 	movhi	r2,137
  882578:	10980204 	addi	r2,r2,24584
  88257c:	10c00017 	ldw	r3,0(r2)
  882580:	11000015 	stw	r4,0(r2)
  882584:	20c00015 	stw	r3,0(r4)
  882588:	f800283a 	ret

0088258c <_Unwind_SjLj_Unregister>:
  88258c:	20c00017 	ldw	r3,0(r4)
  882590:	00802274 	movhi	r2,137
  882594:	10980204 	addi	r2,r2,24584
  882598:	10c00015 	stw	r3,0(r2)
  88259c:	f800283a 	ret

008825a0 <_Unwind_GetGR>:
  8825a0:	20800017 	ldw	r2,0(r4)
  8825a4:	29400084 	addi	r5,r5,2
  8825a8:	294b883a 	add	r5,r5,r5
  8825ac:	294b883a 	add	r5,r5,r5
  8825b0:	114b883a 	add	r5,r2,r5
  8825b4:	28800017 	ldw	r2,0(r5)
  8825b8:	f800283a 	ret

008825bc <_Unwind_GetCFA>:
  8825bc:	20800017 	ldw	r2,0(r4)
  8825c0:	10000226 	beq	r2,zero,8825cc <_Unwind_GetCFA+0x10>
  8825c4:	10800a17 	ldw	r2,40(r2)
  8825c8:	f800283a 	ret
  8825cc:	0005883a 	mov	r2,zero
  8825d0:	f800283a 	ret

008825d4 <_Unwind_SetGR>:
  8825d4:	20800017 	ldw	r2,0(r4)
  8825d8:	29400084 	addi	r5,r5,2
  8825dc:	294b883a 	add	r5,r5,r5
  8825e0:	294b883a 	add	r5,r5,r5
  8825e4:	114b883a 	add	r5,r2,r5
  8825e8:	29800015 	stw	r6,0(r5)
  8825ec:	f800283a 	ret

008825f0 <_Unwind_GetIP>:
  8825f0:	20800017 	ldw	r2,0(r4)
  8825f4:	10800117 	ldw	r2,4(r2)
  8825f8:	10800044 	addi	r2,r2,1
  8825fc:	f800283a 	ret

00882600 <_Unwind_GetIPInfo>:
  882600:	20800017 	ldw	r2,0(r4)
  882604:	28000015 	stw	zero,0(r5)
  882608:	10000326 	beq	r2,zero,882618 <_Unwind_GetIPInfo+0x18>
  88260c:	10800117 	ldw	r2,4(r2)
  882610:	10800044 	addi	r2,r2,1
  882614:	f800283a 	ret
  882618:	0005883a 	mov	r2,zero
  88261c:	f800283a 	ret

00882620 <_Unwind_SetIP>:
  882620:	20800017 	ldw	r2,0(r4)
  882624:	297fffc4 	addi	r5,r5,-1
  882628:	11400115 	stw	r5,4(r2)
  88262c:	f800283a 	ret

00882630 <_Unwind_GetLanguageSpecificData>:
  882630:	20800017 	ldw	r2,0(r4)
  882634:	10800717 	ldw	r2,28(r2)
  882638:	f800283a 	ret

0088263c <_Unwind_GetRegionStart>:
  88263c:	0005883a 	mov	r2,zero
  882640:	f800283a 	ret

00882644 <_Unwind_FindEnclosingFunction>:
  882644:	0005883a 	mov	r2,zero
  882648:	f800283a 	ret

0088264c <_Unwind_GetDataRelBase>:
  88264c:	0005883a 	mov	r2,zero
  882650:	f800283a 	ret

00882654 <_Unwind_GetTextRelBase>:
  882654:	0005883a 	mov	r2,zero
  882658:	f800283a 	ret

0088265c <_Unwind_SjLj_RaiseException>:
  88265c:	00802274 	movhi	r2,137
  882660:	defff804 	addi	sp,sp,-32
  882664:	10980204 	addi	r2,r2,24584
  882668:	dc800515 	stw	r18,20(sp)
  88266c:	14800017 	ldw	r18,0(r2)
  882670:	dfc00715 	stw	ra,28(sp)
  882674:	dcc00615 	stw	r19,24(sp)
  882678:	dc400415 	stw	r17,16(sp)
  88267c:	dc000315 	stw	r16,12(sp)
  882680:	dc800215 	stw	r18,8(sp)
  882684:	90001426 	beq	r18,zero,8826d8 <_Unwind_SjLj_RaiseException+0x7c>
  882688:	2021883a 	mov	r16,r4
  88268c:	9005883a 	mov	r2,r18
  882690:	04400184 	movi	r17,6
  882694:	04c00204 	movi	r19,8
  882698:	10800617 	ldw	r2,24(r2)
  88269c:	10000a26 	beq	r2,zero,8826c8 <_Unwind_SjLj_RaiseException+0x6c>
  8826a0:	81800017 	ldw	r6,0(r16)
  8826a4:	81c00117 	ldw	r7,4(r16)
  8826a8:	01400044 	movi	r5,1
  8826ac:	d8c00204 	addi	r3,sp,8
  8826b0:	d8c00115 	stw	r3,4(sp)
  8826b4:	dc000015 	stw	r16,0(sp)
  8826b8:	2809883a 	mov	r4,r5
  8826bc:	103ee83a 	callr	r2
  8826c0:	14400d26 	beq	r2,r17,8826f8 <_Unwind_SjLj_RaiseException+0x9c>
  8826c4:	14c0171e 	bne	r2,r19,882724 <_Unwind_SjLj_RaiseException+0xc8>
  8826c8:	d8800217 	ldw	r2,8(sp)
  8826cc:	10800017 	ldw	r2,0(r2)
  8826d0:	d8800215 	stw	r2,8(sp)
  8826d4:	103ff01e 	bne	r2,zero,882698 <_Unwind_SjLj_RaiseException+0x3c>
  8826d8:	00800144 	movi	r2,5
  8826dc:	dfc00717 	ldw	ra,28(sp)
  8826e0:	dcc00617 	ldw	r19,24(sp)
  8826e4:	dc800517 	ldw	r18,20(sp)
  8826e8:	dc400417 	ldw	r17,16(sp)
  8826ec:	dc000317 	ldw	r16,12(sp)
  8826f0:	dec00804 	addi	sp,sp,32
  8826f4:	f800283a 	ret
  8826f8:	d8800217 	ldw	r2,8(sp)
  8826fc:	80000315 	stw	zero,12(r16)
  882700:	d9400204 	addi	r5,sp,8
  882704:	80800415 	stw	r2,16(r16)
  882708:	8009883a 	mov	r4,r16
  88270c:	dc800215 	stw	r18,8(sp)
  882710:	08824840 	call	882484 <_Unwind_RaiseException_Phase2>
  882714:	00c001c4 	movi	r3,7
  882718:	10fff01e 	bne	r2,r3,8826dc <_Unwind_SjLj_RaiseException+0x80>
  88271c:	d9000204 	addi	r4,sp,8
  882720:	08825440 	call	882544 <uw_install_context.isra.1>
  882724:	008000c4 	movi	r2,3
  882728:	003fec06 	br	8826dc <_Unwind_SjLj_RaiseException+0x80>

0088272c <_Unwind_SjLj_ForcedUnwind>:
  88272c:	00c02274 	movhi	r3,137
  882730:	18d80204 	addi	r3,r3,24584
  882734:	defffe04 	addi	sp,sp,-8
  882738:	18c00017 	ldw	r3,0(r3)
  88273c:	dfc00115 	stw	ra,4(sp)
  882740:	21400315 	stw	r5,12(r4)
  882744:	21800415 	stw	r6,16(r4)
  882748:	d80b883a 	mov	r5,sp
  88274c:	d8c00015 	stw	r3,0(sp)
  882750:	088236c0 	call	88236c <_Unwind_ForcedUnwind_Phase2>
  882754:	00c001c4 	movi	r3,7
  882758:	10c00326 	beq	r2,r3,882768 <_Unwind_SjLj_ForcedUnwind+0x3c>
  88275c:	dfc00117 	ldw	ra,4(sp)
  882760:	dec00204 	addi	sp,sp,8
  882764:	f800283a 	ret
  882768:	d809883a 	mov	r4,sp
  88276c:	08825440 	call	882544 <uw_install_context.isra.1>

00882770 <_Unwind_SjLj_Resume>:
  882770:	00c02274 	movhi	r3,137
  882774:	18d80204 	addi	r3,r3,24584
  882778:	18c00017 	ldw	r3,0(r3)
  88277c:	20800317 	ldw	r2,12(r4)
  882780:	defffe04 	addi	sp,sp,-8
  882784:	dfc00115 	stw	ra,4(sp)
  882788:	d8c00015 	stw	r3,0(sp)
  88278c:	d80b883a 	mov	r5,sp
  882790:	1000041e 	bne	r2,zero,8827a4 <_Unwind_SjLj_Resume+0x34>
  882794:	08824840 	call	882484 <_Unwind_RaiseException_Phase2>
  882798:	00c001c4 	movi	r3,7
  88279c:	10c00326 	beq	r2,r3,8827ac <_Unwind_SjLj_Resume+0x3c>
  8827a0:	088288c0 	call	88288c <abort>
  8827a4:	088236c0 	call	88236c <_Unwind_ForcedUnwind_Phase2>
  8827a8:	003ffb06 	br	882798 <_Unwind_SjLj_Resume+0x28>
  8827ac:	d809883a 	mov	r4,sp
  8827b0:	08825440 	call	882544 <uw_install_context.isra.1>

008827b4 <_Unwind_SjLj_Resume_or_Rethrow>:
  8827b4:	20800317 	ldw	r2,12(r4)
  8827b8:	defffe04 	addi	sp,sp,-8
  8827bc:	dfc00115 	stw	ra,4(sp)
  8827c0:	1000041e 	bne	r2,zero,8827d4 <_Unwind_SjLj_Resume_or_Rethrow+0x20>
  8827c4:	088265c0 	call	88265c <_Unwind_SjLj_RaiseException>
  8827c8:	dfc00117 	ldw	ra,4(sp)
  8827cc:	dec00204 	addi	sp,sp,8
  8827d0:	f800283a 	ret
  8827d4:	00802274 	movhi	r2,137
  8827d8:	10980204 	addi	r2,r2,24584
  8827dc:	10800017 	ldw	r2,0(r2)
  8827e0:	d80b883a 	mov	r5,sp
  8827e4:	d8800015 	stw	r2,0(sp)
  8827e8:	088236c0 	call	88236c <_Unwind_ForcedUnwind_Phase2>
  8827ec:	00c001c4 	movi	r3,7
  8827f0:	10c00126 	beq	r2,r3,8827f8 <_Unwind_SjLj_Resume_or_Rethrow+0x44>
  8827f4:	088288c0 	call	88288c <abort>
  8827f8:	d809883a 	mov	r4,sp
  8827fc:	08825440 	call	882544 <uw_install_context.isra.1>

00882800 <_Unwind_DeleteException>:
  882800:	20800217 	ldw	r2,8(r4)
  882804:	10000326 	beq	r2,zero,882814 <_Unwind_DeleteException+0x14>
  882808:	200b883a 	mov	r5,r4
  88280c:	01000044 	movi	r4,1
  882810:	1000683a 	jmp	r2
  882814:	f800283a 	ret

00882818 <_Unwind_Backtrace>:
  882818:	00802274 	movhi	r2,137
  88281c:	10980204 	addi	r2,r2,24584
  882820:	10800017 	ldw	r2,0(r2)
  882824:	defffc04 	addi	sp,sp,-16
  882828:	dc400215 	stw	r17,8(sp)
  88282c:	dc000115 	stw	r16,4(sp)
  882830:	dfc00315 	stw	ra,12(sp)
  882834:	2023883a 	mov	r17,r4
  882838:	2821883a 	mov	r16,r5
  88283c:	d8800015 	stw	r2,0(sp)
  882840:	00000506 	br	882858 <_Unwind_Backtrace+0x40>
  882844:	883ee83a 	callr	r17
  882848:	10000e1e 	bne	r2,zero,882884 <_Unwind_Backtrace+0x6c>
  88284c:	d8800017 	ldw	r2,0(sp)
  882850:	10800017 	ldw	r2,0(r2)
  882854:	d8800015 	stw	r2,0(sp)
  882858:	800b883a 	mov	r5,r16
  88285c:	d809883a 	mov	r4,sp
  882860:	103ff81e 	bne	r2,zero,882844 <_Unwind_Backtrace+0x2c>
  882864:	883ee83a 	callr	r17
  882868:	1000061e 	bne	r2,zero,882884 <_Unwind_Backtrace+0x6c>
  88286c:	00800144 	movi	r2,5
  882870:	dfc00317 	ldw	ra,12(sp)
  882874:	dc400217 	ldw	r17,8(sp)
  882878:	dc000117 	ldw	r16,4(sp)
  88287c:	dec00404 	addi	sp,sp,16
  882880:	f800283a 	ret
  882884:	008000c4 	movi	r2,3
  882888:	003ff906 	br	882870 <_Unwind_Backtrace+0x58>

0088288c <abort>:
  88288c:	deffff04 	addi	sp,sp,-4
  882890:	01000184 	movi	r4,6
  882894:	dfc00015 	stw	ra,0(sp)
  882898:	08835ec0 	call	8835ec <raise>
  88289c:	01000044 	movi	r4,1
  8828a0:	088f6440 	call	88f644 <_exit>

008828a4 <__assert_func>:
  8828a4:	00802274 	movhi	r2,137
  8828a8:	10912004 	addi	r2,r2,17536
  8828ac:	10800017 	ldw	r2,0(r2)
  8828b0:	defffc04 	addi	sp,sp,-16
  8828b4:	dfc00315 	stw	ra,12(sp)
  8828b8:	2015883a 	mov	r10,r4
  8828bc:	2811883a 	mov	r8,r5
  8828c0:	3813883a 	mov	r9,r7
  8828c4:	11000317 	ldw	r4,12(r2)
  8828c8:	30000c26 	beq	r6,zero,8828fc <__assert_func+0x58>
  8828cc:	00c02274 	movhi	r3,137
  8828d0:	18c92604 	addi	r3,r3,9368
  8828d4:	3005883a 	mov	r2,r6
  8828d8:	01402274 	movhi	r5,137
  8828dc:	29492a04 	addi	r5,r5,9384
  8828e0:	500f883a 	mov	r7,r10
  8828e4:	480d883a 	mov	r6,r9
  8828e8:	d8c00115 	stw	r3,4(sp)
  8828ec:	da000015 	stw	r8,0(sp)
  8828f0:	d8800215 	stw	r2,8(sp)
  8828f4:	08829400 	call	882940 <fiprintf>
  8828f8:	088288c0 	call	88288c <abort>
  8828fc:	00c02274 	movhi	r3,137
  882900:	18c92904 	addi	r3,r3,9380
  882904:	1805883a 	mov	r2,r3
  882908:	003ff306 	br	8828d8 <__assert_func+0x34>

0088290c <__assert>:
  88290c:	deffff04 	addi	sp,sp,-4
  882910:	300f883a 	mov	r7,r6
  882914:	000d883a 	mov	r6,zero
  882918:	dfc00015 	stw	ra,0(sp)
  88291c:	08828a40 	call	8828a4 <__assert_func>

00882920 <_fiprintf_r>:
  882920:	defffe04 	addi	sp,sp,-8
  882924:	dfc00015 	stw	ra,0(sp)
  882928:	d9c00115 	stw	r7,4(sp)
  88292c:	d9c00104 	addi	r7,sp,4
  882930:	08837780 	call	883778 <_vfiprintf_r>
  882934:	dfc00017 	ldw	ra,0(sp)
  882938:	dec00204 	addi	sp,sp,8
  88293c:	f800283a 	ret

00882940 <fiprintf>:
  882940:	defffd04 	addi	sp,sp,-12
  882944:	2005883a 	mov	r2,r4
  882948:	dfc00015 	stw	ra,0(sp)
  88294c:	d9800115 	stw	r6,4(sp)
  882950:	d9c00215 	stw	r7,8(sp)
  882954:	00c02274 	movhi	r3,137
  882958:	18d12004 	addi	r3,r3,17536
  88295c:	19000017 	ldw	r4,0(r3)
  882960:	280d883a 	mov	r6,r5
  882964:	d9c00104 	addi	r7,sp,4
  882968:	100b883a 	mov	r5,r2
  88296c:	08837780 	call	883778 <_vfiprintf_r>
  882970:	dfc00017 	ldw	ra,0(sp)
  882974:	dec00304 	addi	sp,sp,12
  882978:	f800283a 	ret

0088297c <malloc>:
  88297c:	00802274 	movhi	r2,137
  882980:	10912004 	addi	r2,r2,17536
  882984:	200b883a 	mov	r5,r4
  882988:	11000017 	ldw	r4,0(r2)
  88298c:	08829a41 	jmpi	8829a4 <_malloc_r>

00882990 <free>:
  882990:	00802274 	movhi	r2,137
  882994:	10912004 	addi	r2,r2,17536
  882998:	200b883a 	mov	r5,r4
  88299c:	11000017 	ldw	r4,0(r2)
  8829a0:	0887ba81 	jmpi	887ba8 <_free_r>

008829a4 <_malloc_r>:
  8829a4:	defff504 	addi	sp,sp,-44
  8829a8:	dc800315 	stw	r18,12(sp)
  8829ac:	dfc00a15 	stw	ra,40(sp)
  8829b0:	df000915 	stw	fp,36(sp)
  8829b4:	ddc00815 	stw	r23,32(sp)
  8829b8:	dd800715 	stw	r22,28(sp)
  8829bc:	dd400615 	stw	r21,24(sp)
  8829c0:	dd000515 	stw	r20,20(sp)
  8829c4:	dcc00415 	stw	r19,16(sp)
  8829c8:	dc400215 	stw	r17,8(sp)
  8829cc:	dc000115 	stw	r16,4(sp)
  8829d0:	288002c4 	addi	r2,r5,11
  8829d4:	00c00584 	movi	r3,22
  8829d8:	2025883a 	mov	r18,r4
  8829dc:	18807f2e 	bgeu	r3,r2,882bdc <_malloc_r+0x238>
  8829e0:	047ffe04 	movi	r17,-8
  8829e4:	1462703a 	and	r17,r2,r17
  8829e8:	8800a316 	blt	r17,zero,882c78 <_malloc_r+0x2d4>
  8829ec:	8940a236 	bltu	r17,r5,882c78 <_malloc_r+0x2d4>
  8829f0:	088fc480 	call	88fc48 <__malloc_lock>
  8829f4:	00807dc4 	movi	r2,503
  8829f8:	1441e92e 	bgeu	r2,r17,8831a0 <_malloc_r+0x7fc>
  8829fc:	8804d27a 	srli	r2,r17,9
  882a00:	1000a126 	beq	r2,zero,882c88 <_malloc_r+0x2e4>
  882a04:	00c00104 	movi	r3,4
  882a08:	18811e36 	bltu	r3,r2,882e84 <_malloc_r+0x4e0>
  882a0c:	8804d1ba 	srli	r2,r17,6
  882a10:	12000e44 	addi	r8,r2,57
  882a14:	11c00e04 	addi	r7,r2,56
  882a18:	4209883a 	add	r4,r8,r8
  882a1c:	04c02274 	movhi	r19,137
  882a20:	2109883a 	add	r4,r4,r4
  882a24:	9ccb6704 	addi	r19,r19,11676
  882a28:	2109883a 	add	r4,r4,r4
  882a2c:	9909883a 	add	r4,r19,r4
  882a30:	24000117 	ldw	r16,4(r4)
  882a34:	213ffe04 	addi	r4,r4,-8
  882a38:	24009726 	beq	r4,r16,882c98 <_malloc_r+0x2f4>
  882a3c:	80800117 	ldw	r2,4(r16)
  882a40:	01bfff04 	movi	r6,-4
  882a44:	014003c4 	movi	r5,15
  882a48:	1184703a 	and	r2,r2,r6
  882a4c:	1447c83a 	sub	r3,r2,r17
  882a50:	28c00716 	blt	r5,r3,882a70 <_malloc_r+0xcc>
  882a54:	1800920e 	bge	r3,zero,882ca0 <_malloc_r+0x2fc>
  882a58:	84000317 	ldw	r16,12(r16)
  882a5c:	24008e26 	beq	r4,r16,882c98 <_malloc_r+0x2f4>
  882a60:	80800117 	ldw	r2,4(r16)
  882a64:	1184703a 	and	r2,r2,r6
  882a68:	1447c83a 	sub	r3,r2,r17
  882a6c:	28fff90e 	bge	r5,r3,882a54 <_malloc_r+0xb0>
  882a70:	3809883a 	mov	r4,r7
  882a74:	01802274 	movhi	r6,137
  882a78:	9c000417 	ldw	r16,16(r19)
  882a7c:	318b6704 	addi	r6,r6,11676
  882a80:	32000204 	addi	r8,r6,8
  882a84:	82013426 	beq	r16,r8,882f58 <_malloc_r+0x5b4>
  882a88:	80c00117 	ldw	r3,4(r16)
  882a8c:	00bfff04 	movi	r2,-4
  882a90:	188e703a 	and	r7,r3,r2
  882a94:	3c45c83a 	sub	r2,r7,r17
  882a98:	00c003c4 	movi	r3,15
  882a9c:	18811f16 	blt	r3,r2,882f1c <_malloc_r+0x578>
  882aa0:	32000515 	stw	r8,20(r6)
  882aa4:	32000415 	stw	r8,16(r6)
  882aa8:	10007f0e 	bge	r2,zero,882ca8 <_malloc_r+0x304>
  882aac:	00807fc4 	movi	r2,511
  882ab0:	11c0fd36 	bltu	r2,r7,882ea8 <_malloc_r+0x504>
  882ab4:	3806d0fa 	srli	r3,r7,3
  882ab8:	01c00044 	movi	r7,1
  882abc:	30800117 	ldw	r2,4(r6)
  882ac0:	19400044 	addi	r5,r3,1
  882ac4:	294b883a 	add	r5,r5,r5
  882ac8:	1807d0ba 	srai	r3,r3,2
  882acc:	294b883a 	add	r5,r5,r5
  882ad0:	294b883a 	add	r5,r5,r5
  882ad4:	298b883a 	add	r5,r5,r6
  882ad8:	38c6983a 	sll	r3,r7,r3
  882adc:	29c00017 	ldw	r7,0(r5)
  882ae0:	2a7ffe04 	addi	r9,r5,-8
  882ae4:	1886b03a 	or	r3,r3,r2
  882ae8:	82400315 	stw	r9,12(r16)
  882aec:	81c00215 	stw	r7,8(r16)
  882af0:	30c00115 	stw	r3,4(r6)
  882af4:	2c000015 	stw	r16,0(r5)
  882af8:	3c000315 	stw	r16,12(r7)
  882afc:	2005d0ba 	srai	r2,r4,2
  882b00:	01400044 	movi	r5,1
  882b04:	288a983a 	sll	r5,r5,r2
  882b08:	19406f36 	bltu	r3,r5,882cc8 <_malloc_r+0x324>
  882b0c:	28c4703a 	and	r2,r5,r3
  882b10:	10000a1e 	bne	r2,zero,882b3c <_malloc_r+0x198>
  882b14:	00bfff04 	movi	r2,-4
  882b18:	294b883a 	add	r5,r5,r5
  882b1c:	2088703a 	and	r4,r4,r2
  882b20:	28c4703a 	and	r2,r5,r3
  882b24:	21000104 	addi	r4,r4,4
  882b28:	1000041e 	bne	r2,zero,882b3c <_malloc_r+0x198>
  882b2c:	294b883a 	add	r5,r5,r5
  882b30:	28c4703a 	and	r2,r5,r3
  882b34:	21000104 	addi	r4,r4,4
  882b38:	103ffc26 	beq	r2,zero,882b2c <_malloc_r+0x188>
  882b3c:	02bfff04 	movi	r10,-4
  882b40:	024003c4 	movi	r9,15
  882b44:	21800044 	addi	r6,r4,1
  882b48:	318d883a 	add	r6,r6,r6
  882b4c:	318d883a 	add	r6,r6,r6
  882b50:	318d883a 	add	r6,r6,r6
  882b54:	998d883a 	add	r6,r19,r6
  882b58:	333ffe04 	addi	r12,r6,-8
  882b5c:	2017883a 	mov	r11,r4
  882b60:	31800104 	addi	r6,r6,4
  882b64:	34000017 	ldw	r16,0(r6)
  882b68:	31fffd04 	addi	r7,r6,-12
  882b6c:	81c0041e 	bne	r16,r7,882b80 <_malloc_r+0x1dc>
  882b70:	0000fb06 	br	882f60 <_malloc_r+0x5bc>
  882b74:	1801030e 	bge	r3,zero,882f84 <_malloc_r+0x5e0>
  882b78:	84000317 	ldw	r16,12(r16)
  882b7c:	81c0f826 	beq	r16,r7,882f60 <_malloc_r+0x5bc>
  882b80:	80800117 	ldw	r2,4(r16)
  882b84:	1284703a 	and	r2,r2,r10
  882b88:	1447c83a 	sub	r3,r2,r17
  882b8c:	48fff90e 	bge	r9,r3,882b74 <_malloc_r+0x1d0>
  882b90:	80800317 	ldw	r2,12(r16)
  882b94:	81000217 	ldw	r4,8(r16)
  882b98:	89400054 	ori	r5,r17,1
  882b9c:	81400115 	stw	r5,4(r16)
  882ba0:	20800315 	stw	r2,12(r4)
  882ba4:	11000215 	stw	r4,8(r2)
  882ba8:	8463883a 	add	r17,r16,r17
  882bac:	9c400515 	stw	r17,20(r19)
  882bb0:	9c400415 	stw	r17,16(r19)
  882bb4:	18800054 	ori	r2,r3,1
  882bb8:	88800115 	stw	r2,4(r17)
  882bbc:	8a000315 	stw	r8,12(r17)
  882bc0:	8a000215 	stw	r8,8(r17)
  882bc4:	88e3883a 	add	r17,r17,r3
  882bc8:	88c00015 	stw	r3,0(r17)
  882bcc:	9009883a 	mov	r4,r18
  882bd0:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882bd4:	80800204 	addi	r2,r16,8
  882bd8:	00001b06 	br	882c48 <_malloc_r+0x2a4>
  882bdc:	04400404 	movi	r17,16
  882be0:	89402536 	bltu	r17,r5,882c78 <_malloc_r+0x2d4>
  882be4:	088fc480 	call	88fc48 <__malloc_lock>
  882be8:	00800184 	movi	r2,6
  882bec:	01000084 	movi	r4,2
  882bf0:	04c02274 	movhi	r19,137
  882bf4:	1085883a 	add	r2,r2,r2
  882bf8:	9ccb6704 	addi	r19,r19,11676
  882bfc:	1085883a 	add	r2,r2,r2
  882c00:	9885883a 	add	r2,r19,r2
  882c04:	14000117 	ldw	r16,4(r2)
  882c08:	10fffe04 	addi	r3,r2,-8
  882c0c:	80c0d926 	beq	r16,r3,882f74 <_malloc_r+0x5d0>
  882c10:	80c00117 	ldw	r3,4(r16)
  882c14:	81000317 	ldw	r4,12(r16)
  882c18:	00bfff04 	movi	r2,-4
  882c1c:	1884703a 	and	r2,r3,r2
  882c20:	81400217 	ldw	r5,8(r16)
  882c24:	8085883a 	add	r2,r16,r2
  882c28:	10c00117 	ldw	r3,4(r2)
  882c2c:	29000315 	stw	r4,12(r5)
  882c30:	21400215 	stw	r5,8(r4)
  882c34:	18c00054 	ori	r3,r3,1
  882c38:	10c00115 	stw	r3,4(r2)
  882c3c:	9009883a 	mov	r4,r18
  882c40:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882c44:	80800204 	addi	r2,r16,8
  882c48:	dfc00a17 	ldw	ra,40(sp)
  882c4c:	df000917 	ldw	fp,36(sp)
  882c50:	ddc00817 	ldw	r23,32(sp)
  882c54:	dd800717 	ldw	r22,28(sp)
  882c58:	dd400617 	ldw	r21,24(sp)
  882c5c:	dd000517 	ldw	r20,20(sp)
  882c60:	dcc00417 	ldw	r19,16(sp)
  882c64:	dc800317 	ldw	r18,12(sp)
  882c68:	dc400217 	ldw	r17,8(sp)
  882c6c:	dc000117 	ldw	r16,4(sp)
  882c70:	dec00b04 	addi	sp,sp,44
  882c74:	f800283a 	ret
  882c78:	00800304 	movi	r2,12
  882c7c:	90800015 	stw	r2,0(r18)
  882c80:	0005883a 	mov	r2,zero
  882c84:	003ff006 	br	882c48 <_malloc_r+0x2a4>
  882c88:	01002004 	movi	r4,128
  882c8c:	02001004 	movi	r8,64
  882c90:	01c00fc4 	movi	r7,63
  882c94:	003f6106 	br	882a1c <_malloc_r+0x78>
  882c98:	4009883a 	mov	r4,r8
  882c9c:	003f7506 	br	882a74 <_malloc_r+0xd0>
  882ca0:	81000317 	ldw	r4,12(r16)
  882ca4:	003fde06 	br	882c20 <_malloc_r+0x27c>
  882ca8:	81c5883a 	add	r2,r16,r7
  882cac:	11400117 	ldw	r5,4(r2)
  882cb0:	9009883a 	mov	r4,r18
  882cb4:	29400054 	ori	r5,r5,1
  882cb8:	11400115 	stw	r5,4(r2)
  882cbc:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882cc0:	80800204 	addi	r2,r16,8
  882cc4:	003fe006 	br	882c48 <_malloc_r+0x2a4>
  882cc8:	9c000217 	ldw	r16,8(r19)
  882ccc:	00bfff04 	movi	r2,-4
  882cd0:	85800117 	ldw	r22,4(r16)
  882cd4:	b0ac703a 	and	r22,r22,r2
  882cd8:	b4400336 	bltu	r22,r17,882ce8 <_malloc_r+0x344>
  882cdc:	b445c83a 	sub	r2,r22,r17
  882ce0:	00c003c4 	movi	r3,15
  882ce4:	18805d16 	blt	r3,r2,882e5c <_malloc_r+0x4b8>
  882ce8:	05c02274 	movhi	r23,137
  882cec:	00802274 	movhi	r2,137
  882cf0:	10980504 	addi	r2,r2,24596
  882cf4:	bdd12104 	addi	r23,r23,17540
  882cf8:	15400017 	ldw	r21,0(r2)
  882cfc:	b8c00017 	ldw	r3,0(r23)
  882d00:	00bfffc4 	movi	r2,-1
  882d04:	858d883a 	add	r6,r16,r22
  882d08:	8d6b883a 	add	r21,r17,r21
  882d0c:	1880ea26 	beq	r3,r2,8830b8 <_malloc_r+0x714>
  882d10:	ad4403c4 	addi	r21,r21,4111
  882d14:	00bc0004 	movi	r2,-4096
  882d18:	a8aa703a 	and	r21,r21,r2
  882d1c:	a80b883a 	mov	r5,r21
  882d20:	9009883a 	mov	r4,r18
  882d24:	d9800015 	stw	r6,0(sp)
  882d28:	08833440 	call	883344 <_sbrk_r>
  882d2c:	1029883a 	mov	r20,r2
  882d30:	00bfffc4 	movi	r2,-1
  882d34:	d9800017 	ldw	r6,0(sp)
  882d38:	a080e826 	beq	r20,r2,8830dc <_malloc_r+0x738>
  882d3c:	a180a636 	bltu	r20,r6,882fd8 <_malloc_r+0x634>
  882d40:	07002274 	movhi	fp,137
  882d44:	e7181504 	addi	fp,fp,24660
  882d48:	e0800017 	ldw	r2,0(fp)
  882d4c:	a887883a 	add	r3,r21,r2
  882d50:	e0c00015 	stw	r3,0(fp)
  882d54:	3500e626 	beq	r6,r20,8830f0 <_malloc_r+0x74c>
  882d58:	b9000017 	ldw	r4,0(r23)
  882d5c:	00bfffc4 	movi	r2,-1
  882d60:	2080ee26 	beq	r4,r2,88311c <_malloc_r+0x778>
  882d64:	a185c83a 	sub	r2,r20,r6
  882d68:	10c5883a 	add	r2,r2,r3
  882d6c:	e0800015 	stw	r2,0(fp)
  882d70:	a0c001cc 	andi	r3,r20,7
  882d74:	1800bc26 	beq	r3,zero,883068 <_malloc_r+0x6c4>
  882d78:	a0e9c83a 	sub	r20,r20,r3
  882d7c:	00840204 	movi	r2,4104
  882d80:	a5000204 	addi	r20,r20,8
  882d84:	10c7c83a 	sub	r3,r2,r3
  882d88:	a545883a 	add	r2,r20,r21
  882d8c:	1083ffcc 	andi	r2,r2,4095
  882d90:	18abc83a 	sub	r21,r3,r2
  882d94:	a80b883a 	mov	r5,r21
  882d98:	9009883a 	mov	r4,r18
  882d9c:	08833440 	call	883344 <_sbrk_r>
  882da0:	00ffffc4 	movi	r3,-1
  882da4:	10c0e126 	beq	r2,r3,88312c <_malloc_r+0x788>
  882da8:	1505c83a 	sub	r2,r2,r20
  882dac:	1545883a 	add	r2,r2,r21
  882db0:	10800054 	ori	r2,r2,1
  882db4:	e0c00017 	ldw	r3,0(fp)
  882db8:	9d000215 	stw	r20,8(r19)
  882dbc:	a0800115 	stw	r2,4(r20)
  882dc0:	a8c7883a 	add	r3,r21,r3
  882dc4:	e0c00015 	stw	r3,0(fp)
  882dc8:	84c00e26 	beq	r16,r19,882e04 <_malloc_r+0x460>
  882dcc:	018003c4 	movi	r6,15
  882dd0:	3580a72e 	bgeu	r6,r22,883070 <_malloc_r+0x6cc>
  882dd4:	81400117 	ldw	r5,4(r16)
  882dd8:	013ffe04 	movi	r4,-8
  882ddc:	b0bffd04 	addi	r2,r22,-12
  882de0:	1104703a 	and	r2,r2,r4
  882de4:	2900004c 	andi	r4,r5,1
  882de8:	2088b03a 	or	r4,r4,r2
  882dec:	81000115 	stw	r4,4(r16)
  882df0:	01400144 	movi	r5,5
  882df4:	8089883a 	add	r4,r16,r2
  882df8:	21400115 	stw	r5,4(r4)
  882dfc:	21400215 	stw	r5,8(r4)
  882e00:	3080cd36 	bltu	r6,r2,883138 <_malloc_r+0x794>
  882e04:	00802274 	movhi	r2,137
  882e08:	10980404 	addi	r2,r2,24592
  882e0c:	11000017 	ldw	r4,0(r2)
  882e10:	20c0012e 	bgeu	r4,r3,882e18 <_malloc_r+0x474>
  882e14:	10c00015 	stw	r3,0(r2)
  882e18:	00802274 	movhi	r2,137
  882e1c:	10980304 	addi	r2,r2,24588
  882e20:	11000017 	ldw	r4,0(r2)
  882e24:	9c000217 	ldw	r16,8(r19)
  882e28:	20c0012e 	bgeu	r4,r3,882e30 <_malloc_r+0x48c>
  882e2c:	10c00015 	stw	r3,0(r2)
  882e30:	80c00117 	ldw	r3,4(r16)
  882e34:	00bfff04 	movi	r2,-4
  882e38:	1886703a 	and	r3,r3,r2
  882e3c:	1c45c83a 	sub	r2,r3,r17
  882e40:	1c400236 	bltu	r3,r17,882e4c <_malloc_r+0x4a8>
  882e44:	00c003c4 	movi	r3,15
  882e48:	18800416 	blt	r3,r2,882e5c <_malloc_r+0x4b8>
  882e4c:	9009883a 	mov	r4,r18
  882e50:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882e54:	0005883a 	mov	r2,zero
  882e58:	003f7b06 	br	882c48 <_malloc_r+0x2a4>
  882e5c:	88c00054 	ori	r3,r17,1
  882e60:	80c00115 	stw	r3,4(r16)
  882e64:	8463883a 	add	r17,r16,r17
  882e68:	10800054 	ori	r2,r2,1
  882e6c:	9c400215 	stw	r17,8(r19)
  882e70:	88800115 	stw	r2,4(r17)
  882e74:	9009883a 	mov	r4,r18
  882e78:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882e7c:	80800204 	addi	r2,r16,8
  882e80:	003f7106 	br	882c48 <_malloc_r+0x2a4>
  882e84:	00c00504 	movi	r3,20
  882e88:	18804a2e 	bgeu	r3,r2,882fb4 <_malloc_r+0x610>
  882e8c:	00c01504 	movi	r3,84
  882e90:	18806e36 	bltu	r3,r2,88304c <_malloc_r+0x6a8>
  882e94:	8804d33a 	srli	r2,r17,12
  882e98:	12001bc4 	addi	r8,r2,111
  882e9c:	11c01b84 	addi	r7,r2,110
  882ea0:	4209883a 	add	r4,r8,r8
  882ea4:	003edd06 	br	882a1c <_malloc_r+0x78>
  882ea8:	3804d27a 	srli	r2,r7,9
  882eac:	00c00104 	movi	r3,4
  882eb0:	1880442e 	bgeu	r3,r2,882fc4 <_malloc_r+0x620>
  882eb4:	00c00504 	movi	r3,20
  882eb8:	18808136 	bltu	r3,r2,8830c0 <_malloc_r+0x71c>
  882ebc:	11401704 	addi	r5,r2,92
  882ec0:	10c016c4 	addi	r3,r2,91
  882ec4:	294b883a 	add	r5,r5,r5
  882ec8:	294b883a 	add	r5,r5,r5
  882ecc:	294b883a 	add	r5,r5,r5
  882ed0:	994b883a 	add	r5,r19,r5
  882ed4:	28800017 	ldw	r2,0(r5)
  882ed8:	01802274 	movhi	r6,137
  882edc:	297ffe04 	addi	r5,r5,-8
  882ee0:	318b6704 	addi	r6,r6,11676
  882ee4:	28806526 	beq	r5,r2,88307c <_malloc_r+0x6d8>
  882ee8:	01bfff04 	movi	r6,-4
  882eec:	10c00117 	ldw	r3,4(r2)
  882ef0:	1986703a 	and	r3,r3,r6
  882ef4:	38c0022e 	bgeu	r7,r3,882f00 <_malloc_r+0x55c>
  882ef8:	10800217 	ldw	r2,8(r2)
  882efc:	28bffb1e 	bne	r5,r2,882eec <_malloc_r+0x548>
  882f00:	11400317 	ldw	r5,12(r2)
  882f04:	98c00117 	ldw	r3,4(r19)
  882f08:	81400315 	stw	r5,12(r16)
  882f0c:	80800215 	stw	r2,8(r16)
  882f10:	2c000215 	stw	r16,8(r5)
  882f14:	14000315 	stw	r16,12(r2)
  882f18:	003ef806 	br	882afc <_malloc_r+0x158>
  882f1c:	88c00054 	ori	r3,r17,1
  882f20:	80c00115 	stw	r3,4(r16)
  882f24:	8463883a 	add	r17,r16,r17
  882f28:	34400515 	stw	r17,20(r6)
  882f2c:	34400415 	stw	r17,16(r6)
  882f30:	10c00054 	ori	r3,r2,1
  882f34:	8a000315 	stw	r8,12(r17)
  882f38:	8a000215 	stw	r8,8(r17)
  882f3c:	88c00115 	stw	r3,4(r17)
  882f40:	88a3883a 	add	r17,r17,r2
  882f44:	88800015 	stw	r2,0(r17)
  882f48:	9009883a 	mov	r4,r18
  882f4c:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882f50:	80800204 	addi	r2,r16,8
  882f54:	003f3c06 	br	882c48 <_malloc_r+0x2a4>
  882f58:	30c00117 	ldw	r3,4(r6)
  882f5c:	003ee706 	br	882afc <_malloc_r+0x158>
  882f60:	5ac00044 	addi	r11,r11,1
  882f64:	588000cc 	andi	r2,r11,3
  882f68:	31800204 	addi	r6,r6,8
  882f6c:	103efd1e 	bne	r2,zero,882b64 <_malloc_r+0x1c0>
  882f70:	00002406 	br	883004 <_malloc_r+0x660>
  882f74:	14000317 	ldw	r16,12(r2)
  882f78:	143f251e 	bne	r2,r16,882c10 <_malloc_r+0x26c>
  882f7c:	21000084 	addi	r4,r4,2
  882f80:	003ebc06 	br	882a74 <_malloc_r+0xd0>
  882f84:	8085883a 	add	r2,r16,r2
  882f88:	10c00117 	ldw	r3,4(r2)
  882f8c:	81000317 	ldw	r4,12(r16)
  882f90:	81400217 	ldw	r5,8(r16)
  882f94:	18c00054 	ori	r3,r3,1
  882f98:	10c00115 	stw	r3,4(r2)
  882f9c:	29000315 	stw	r4,12(r5)
  882fa0:	21400215 	stw	r5,8(r4)
  882fa4:	9009883a 	mov	r4,r18
  882fa8:	088fc6c0 	call	88fc6c <__malloc_unlock>
  882fac:	80800204 	addi	r2,r16,8
  882fb0:	003f2506 	br	882c48 <_malloc_r+0x2a4>
  882fb4:	12001704 	addi	r8,r2,92
  882fb8:	11c016c4 	addi	r7,r2,91
  882fbc:	4209883a 	add	r4,r8,r8
  882fc0:	003e9606 	br	882a1c <_malloc_r+0x78>
  882fc4:	3804d1ba 	srli	r2,r7,6
  882fc8:	11400e44 	addi	r5,r2,57
  882fcc:	10c00e04 	addi	r3,r2,56
  882fd0:	294b883a 	add	r5,r5,r5
  882fd4:	003fbc06 	br	882ec8 <_malloc_r+0x524>
  882fd8:	84ff5926 	beq	r16,r19,882d40 <_malloc_r+0x39c>
  882fdc:	00802274 	movhi	r2,137
  882fe0:	108b6704 	addi	r2,r2,11676
  882fe4:	14000217 	ldw	r16,8(r2)
  882fe8:	00bfff04 	movi	r2,-4
  882fec:	80c00117 	ldw	r3,4(r16)
  882ff0:	1886703a 	and	r3,r3,r2
  882ff4:	003f9106 	br	882e3c <_malloc_r+0x498>
  882ff8:	60800217 	ldw	r2,8(r12)
  882ffc:	213fffc4 	addi	r4,r4,-1
  883000:	1300651e 	bne	r2,r12,883198 <_malloc_r+0x7f4>
  883004:	208000cc 	andi	r2,r4,3
  883008:	633ffe04 	addi	r12,r12,-8
  88300c:	103ffa1e 	bne	r2,zero,882ff8 <_malloc_r+0x654>
  883010:	98800117 	ldw	r2,4(r19)
  883014:	0146303a 	nor	r3,zero,r5
  883018:	1884703a 	and	r2,r3,r2
  88301c:	98800115 	stw	r2,4(r19)
  883020:	294b883a 	add	r5,r5,r5
  883024:	117f2836 	bltu	r2,r5,882cc8 <_malloc_r+0x324>
  883028:	283f2726 	beq	r5,zero,882cc8 <_malloc_r+0x324>
  88302c:	2886703a 	and	r3,r5,r2
  883030:	5809883a 	mov	r4,r11
  883034:	183ec31e 	bne	r3,zero,882b44 <_malloc_r+0x1a0>
  883038:	294b883a 	add	r5,r5,r5
  88303c:	2886703a 	and	r3,r5,r2
  883040:	21000104 	addi	r4,r4,4
  883044:	183ffc26 	beq	r3,zero,883038 <_malloc_r+0x694>
  883048:	003ebe06 	br	882b44 <_malloc_r+0x1a0>
  88304c:	00c05504 	movi	r3,340
  883050:	18801236 	bltu	r3,r2,88309c <_malloc_r+0x6f8>
  883054:	8804d3fa 	srli	r2,r17,15
  883058:	12001e04 	addi	r8,r2,120
  88305c:	11c01dc4 	addi	r7,r2,119
  883060:	4209883a 	add	r4,r8,r8
  883064:	003e6d06 	br	882a1c <_malloc_r+0x78>
  883068:	00c40004 	movi	r3,4096
  88306c:	003f4606 	br	882d88 <_malloc_r+0x3e4>
  883070:	00800044 	movi	r2,1
  883074:	a0800115 	stw	r2,4(r20)
  883078:	003f7406 	br	882e4c <_malloc_r+0x4a8>
  88307c:	1805d0ba 	srai	r2,r3,2
  883080:	01c00044 	movi	r7,1
  883084:	30c00117 	ldw	r3,4(r6)
  883088:	388e983a 	sll	r7,r7,r2
  88308c:	2805883a 	mov	r2,r5
  883090:	38c6b03a 	or	r3,r7,r3
  883094:	30c00115 	stw	r3,4(r6)
  883098:	003f9b06 	br	882f08 <_malloc_r+0x564>
  88309c:	00c15504 	movi	r3,1364
  8830a0:	18801a36 	bltu	r3,r2,88310c <_malloc_r+0x768>
  8830a4:	8804d4ba 	srli	r2,r17,18
  8830a8:	12001f44 	addi	r8,r2,125
  8830ac:	11c01f04 	addi	r7,r2,124
  8830b0:	4209883a 	add	r4,r8,r8
  8830b4:	003e5906 	br	882a1c <_malloc_r+0x78>
  8830b8:	ad400404 	addi	r21,r21,16
  8830bc:	003f1706 	br	882d1c <_malloc_r+0x378>
  8830c0:	00c01504 	movi	r3,84
  8830c4:	18802336 	bltu	r3,r2,883154 <_malloc_r+0x7b0>
  8830c8:	3804d33a 	srli	r2,r7,12
  8830cc:	11401bc4 	addi	r5,r2,111
  8830d0:	10c01b84 	addi	r3,r2,110
  8830d4:	294b883a 	add	r5,r5,r5
  8830d8:	003f7b06 	br	882ec8 <_malloc_r+0x524>
  8830dc:	9c000217 	ldw	r16,8(r19)
  8830e0:	00bfff04 	movi	r2,-4
  8830e4:	80c00117 	ldw	r3,4(r16)
  8830e8:	1886703a 	and	r3,r3,r2
  8830ec:	003f5306 	br	882e3c <_malloc_r+0x498>
  8830f0:	3083ffcc 	andi	r2,r6,4095
  8830f4:	103f181e 	bne	r2,zero,882d58 <_malloc_r+0x3b4>
  8830f8:	99000217 	ldw	r4,8(r19)
  8830fc:	b545883a 	add	r2,r22,r21
  883100:	10800054 	ori	r2,r2,1
  883104:	20800115 	stw	r2,4(r4)
  883108:	003f3e06 	br	882e04 <_malloc_r+0x460>
  88310c:	01003f84 	movi	r4,254
  883110:	02001fc4 	movi	r8,127
  883114:	01c01f84 	movi	r7,126
  883118:	003e4006 	br	882a1c <_malloc_r+0x78>
  88311c:	00802274 	movhi	r2,137
  883120:	10912104 	addi	r2,r2,17540
  883124:	15000015 	stw	r20,0(r2)
  883128:	003f1106 	br	882d70 <_malloc_r+0x3cc>
  88312c:	00800044 	movi	r2,1
  883130:	002b883a 	mov	r21,zero
  883134:	003f1f06 	br	882db4 <_malloc_r+0x410>
  883138:	81400204 	addi	r5,r16,8
  88313c:	9009883a 	mov	r4,r18
  883140:	0887ba80 	call	887ba8 <_free_r>
  883144:	00802274 	movhi	r2,137
  883148:	10981504 	addi	r2,r2,24660
  88314c:	10c00017 	ldw	r3,0(r2)
  883150:	003f2c06 	br	882e04 <_malloc_r+0x460>
  883154:	00c05504 	movi	r3,340
  883158:	18800536 	bltu	r3,r2,883170 <_malloc_r+0x7cc>
  88315c:	3804d3fa 	srli	r2,r7,15
  883160:	11401e04 	addi	r5,r2,120
  883164:	10c01dc4 	addi	r3,r2,119
  883168:	294b883a 	add	r5,r5,r5
  88316c:	003f5606 	br	882ec8 <_malloc_r+0x524>
  883170:	00c15504 	movi	r3,1364
  883174:	18800536 	bltu	r3,r2,88318c <_malloc_r+0x7e8>
  883178:	3804d4ba 	srli	r2,r7,18
  88317c:	11401f44 	addi	r5,r2,125
  883180:	10c01f04 	addi	r3,r2,124
  883184:	294b883a 	add	r5,r5,r5
  883188:	003f4f06 	br	882ec8 <_malloc_r+0x524>
  88318c:	01403f84 	movi	r5,254
  883190:	00c01f84 	movi	r3,126
  883194:	003f4c06 	br	882ec8 <_malloc_r+0x524>
  883198:	98800117 	ldw	r2,4(r19)
  88319c:	003fa006 	br	883020 <_malloc_r+0x67c>
  8831a0:	8808d0fa 	srli	r4,r17,3
  8831a4:	20800044 	addi	r2,r4,1
  8831a8:	1085883a 	add	r2,r2,r2
  8831ac:	003e9006 	br	882bf0 <_malloc_r+0x24c>

008831b0 <memset>:
  8831b0:	20c000cc 	andi	r3,r4,3
  8831b4:	2005883a 	mov	r2,r4
  8831b8:	18004426 	beq	r3,zero,8832cc <memset+0x11c>
  8831bc:	31ffffc4 	addi	r7,r6,-1
  8831c0:	30004026 	beq	r6,zero,8832c4 <memset+0x114>
  8831c4:	2813883a 	mov	r9,r5
  8831c8:	200d883a 	mov	r6,r4
  8831cc:	2007883a 	mov	r3,r4
  8831d0:	00000406 	br	8831e4 <memset+0x34>
  8831d4:	3a3fffc4 	addi	r8,r7,-1
  8831d8:	31800044 	addi	r6,r6,1
  8831dc:	38003926 	beq	r7,zero,8832c4 <memset+0x114>
  8831e0:	400f883a 	mov	r7,r8
  8831e4:	18c00044 	addi	r3,r3,1
  8831e8:	32400005 	stb	r9,0(r6)
  8831ec:	1a0000cc 	andi	r8,r3,3
  8831f0:	403ff81e 	bne	r8,zero,8831d4 <memset+0x24>
  8831f4:	010000c4 	movi	r4,3
  8831f8:	21c02d2e 	bgeu	r4,r7,8832b0 <memset+0x100>
  8831fc:	29003fcc 	andi	r4,r5,255
  883200:	200c923a 	slli	r6,r4,8
  883204:	3108b03a 	or	r4,r6,r4
  883208:	200c943a 	slli	r6,r4,16
  88320c:	218cb03a 	or	r6,r4,r6
  883210:	010003c4 	movi	r4,15
  883214:	21c0182e 	bgeu	r4,r7,883278 <memset+0xc8>
  883218:	3b3ffc04 	addi	r12,r7,-16
  88321c:	6018d13a 	srli	r12,r12,4
  883220:	1a000104 	addi	r8,r3,4
  883224:	1ac00204 	addi	r11,r3,8
  883228:	6008913a 	slli	r4,r12,4
  88322c:	1a800304 	addi	r10,r3,12
  883230:	1813883a 	mov	r9,r3
  883234:	21000504 	addi	r4,r4,20
  883238:	1909883a 	add	r4,r3,r4
  88323c:	49800015 	stw	r6,0(r9)
  883240:	41800015 	stw	r6,0(r8)
  883244:	59800015 	stw	r6,0(r11)
  883248:	51800015 	stw	r6,0(r10)
  88324c:	42000404 	addi	r8,r8,16
  883250:	4a400404 	addi	r9,r9,16
  883254:	5ac00404 	addi	r11,r11,16
  883258:	52800404 	addi	r10,r10,16
  88325c:	413ff71e 	bne	r8,r4,88323c <memset+0x8c>
  883260:	63000044 	addi	r12,r12,1
  883264:	6018913a 	slli	r12,r12,4
  883268:	39c003cc 	andi	r7,r7,15
  88326c:	010000c4 	movi	r4,3
  883270:	1b07883a 	add	r3,r3,r12
  883274:	21c00e2e 	bgeu	r4,r7,8832b0 <memset+0x100>
  883278:	1813883a 	mov	r9,r3
  88327c:	3811883a 	mov	r8,r7
  883280:	010000c4 	movi	r4,3
  883284:	49800015 	stw	r6,0(r9)
  883288:	423fff04 	addi	r8,r8,-4
  88328c:	4a400104 	addi	r9,r9,4
  883290:	223ffc36 	bltu	r4,r8,883284 <memset+0xd4>
  883294:	393fff04 	addi	r4,r7,-4
  883298:	2008d0ba 	srli	r4,r4,2
  88329c:	39c000cc 	andi	r7,r7,3
  8832a0:	21000044 	addi	r4,r4,1
  8832a4:	2109883a 	add	r4,r4,r4
  8832a8:	2109883a 	add	r4,r4,r4
  8832ac:	1907883a 	add	r3,r3,r4
  8832b0:	38000526 	beq	r7,zero,8832c8 <memset+0x118>
  8832b4:	19cf883a 	add	r7,r3,r7
  8832b8:	19400005 	stb	r5,0(r3)
  8832bc:	18c00044 	addi	r3,r3,1
  8832c0:	38fffd1e 	bne	r7,r3,8832b8 <memset+0x108>
  8832c4:	f800283a 	ret
  8832c8:	f800283a 	ret
  8832cc:	2007883a 	mov	r3,r4
  8832d0:	300f883a 	mov	r7,r6
  8832d4:	003fc706 	br	8831f4 <memset+0x44>

008832d8 <_printf_r>:
  8832d8:	defffd04 	addi	sp,sp,-12
  8832dc:	2805883a 	mov	r2,r5
  8832e0:	dfc00015 	stw	ra,0(sp)
  8832e4:	d9800115 	stw	r6,4(sp)
  8832e8:	d9c00215 	stw	r7,8(sp)
  8832ec:	21400217 	ldw	r5,8(r4)
  8832f0:	d9c00104 	addi	r7,sp,4
  8832f4:	100d883a 	mov	r6,r2
  8832f8:	08837900 	call	883790 <___vfprintf_internal_r>
  8832fc:	dfc00017 	ldw	ra,0(sp)
  883300:	dec00304 	addi	sp,sp,12
  883304:	f800283a 	ret

00883308 <printf>:
  883308:	defffc04 	addi	sp,sp,-16
  88330c:	dfc00015 	stw	ra,0(sp)
  883310:	d9400115 	stw	r5,4(sp)
  883314:	d9800215 	stw	r6,8(sp)
  883318:	d9c00315 	stw	r7,12(sp)
  88331c:	00802274 	movhi	r2,137
  883320:	10912004 	addi	r2,r2,17536
  883324:	10800017 	ldw	r2,0(r2)
  883328:	200b883a 	mov	r5,r4
  88332c:	d9800104 	addi	r6,sp,4
  883330:	11000217 	ldw	r4,8(r2)
  883334:	08859880 	call	885988 <__vfprintf_internal>
  883338:	dfc00017 	ldw	ra,0(sp)
  88333c:	dec00404 	addi	sp,sp,16
  883340:	f800283a 	ret

00883344 <_sbrk_r>:
  883344:	defffd04 	addi	sp,sp,-12
  883348:	dc000015 	stw	r16,0(sp)
  88334c:	04002274 	movhi	r16,137
  883350:	dc400115 	stw	r17,4(sp)
  883354:	84180604 	addi	r16,r16,24600
  883358:	2023883a 	mov	r17,r4
  88335c:	2809883a 	mov	r4,r5
  883360:	dfc00215 	stw	ra,8(sp)
  883364:	80000015 	stw	zero,0(r16)
  883368:	088fe2c0 	call	88fe2c <sbrk>
  88336c:	00ffffc4 	movi	r3,-1
  883370:	10c00526 	beq	r2,r3,883388 <_sbrk_r+0x44>
  883374:	dfc00217 	ldw	ra,8(sp)
  883378:	dc400117 	ldw	r17,4(sp)
  88337c:	dc000017 	ldw	r16,0(sp)
  883380:	dec00304 	addi	sp,sp,12
  883384:	f800283a 	ret
  883388:	80c00017 	ldw	r3,0(r16)
  88338c:	183ff926 	beq	r3,zero,883374 <_sbrk_r+0x30>
  883390:	88c00015 	stw	r3,0(r17)
  883394:	003ff706 	br	883374 <_sbrk_r+0x30>

00883398 <_init_signal_r>:
  883398:	2080b717 	ldw	r2,732(r4)
  88339c:	10000226 	beq	r2,zero,8833a8 <_init_signal_r+0x10>
  8833a0:	0005883a 	mov	r2,zero
  8833a4:	f800283a 	ret
  8833a8:	defffe04 	addi	sp,sp,-8
  8833ac:	01402004 	movi	r5,128
  8833b0:	dc000015 	stw	r16,0(sp)
  8833b4:	dfc00115 	stw	ra,4(sp)
  8833b8:	2021883a 	mov	r16,r4
  8833bc:	08829a40 	call	8829a4 <_malloc_r>
  8833c0:	8080b715 	stw	r2,732(r16)
  8833c4:	10000d26 	beq	r2,zero,8833fc <_init_signal_r+0x64>
  8833c8:	0007883a 	mov	r3,zero
  8833cc:	01002004 	movi	r4,128
  8833d0:	00000106 	br	8833d8 <_init_signal_r+0x40>
  8833d4:	8080b717 	ldw	r2,732(r16)
  8833d8:	10c5883a 	add	r2,r2,r3
  8833dc:	10000015 	stw	zero,0(r2)
  8833e0:	18c00104 	addi	r3,r3,4
  8833e4:	193ffb1e 	bne	r3,r4,8833d4 <_init_signal_r+0x3c>
  8833e8:	0005883a 	mov	r2,zero
  8833ec:	dfc00117 	ldw	ra,4(sp)
  8833f0:	dc000017 	ldw	r16,0(sp)
  8833f4:	dec00204 	addi	sp,sp,8
  8833f8:	f800283a 	ret
  8833fc:	00bfffc4 	movi	r2,-1
  883400:	003ffa06 	br	8833ec <_init_signal_r+0x54>

00883404 <_signal_r>:
  883404:	00c007c4 	movi	r3,31
  883408:	19401536 	bltu	r3,r5,883460 <_signal_r+0x5c>
  88340c:	2080b717 	ldw	r2,732(r4)
  883410:	defffc04 	addi	sp,sp,-16
  883414:	dc800215 	stw	r18,8(sp)
  883418:	dc400115 	stw	r17,4(sp)
  88341c:	dc000015 	stw	r16,0(sp)
  883420:	dfc00315 	stw	ra,12(sp)
  883424:	3023883a 	mov	r17,r6
  883428:	2021883a 	mov	r16,r4
  88342c:	2825883a 	mov	r18,r5
  883430:	10000f26 	beq	r2,zero,883470 <_signal_r+0x6c>
  883434:	948b883a 	add	r5,r18,r18
  883438:	294b883a 	add	r5,r5,r5
  88343c:	114b883a 	add	r5,r2,r5
  883440:	28800017 	ldw	r2,0(r5)
  883444:	2c400015 	stw	r17,0(r5)
  883448:	dfc00317 	ldw	ra,12(sp)
  88344c:	dc800217 	ldw	r18,8(sp)
  883450:	dc400117 	ldw	r17,4(sp)
  883454:	dc000017 	ldw	r16,0(sp)
  883458:	dec00404 	addi	sp,sp,16
  88345c:	f800283a 	ret
  883460:	00c00584 	movi	r3,22
  883464:	20c00015 	stw	r3,0(r4)
  883468:	00bfffc4 	movi	r2,-1
  88346c:	f800283a 	ret
  883470:	08833980 	call	883398 <_init_signal_r>
  883474:	1000021e 	bne	r2,zero,883480 <_signal_r+0x7c>
  883478:	8080b717 	ldw	r2,732(r16)
  88347c:	003fed06 	br	883434 <_signal_r+0x30>
  883480:	00bfffc4 	movi	r2,-1
  883484:	003ff006 	br	883448 <_signal_r+0x44>

00883488 <_raise_r>:
  883488:	008007c4 	movi	r2,31
  88348c:	11402936 	bltu	r2,r5,883534 <_raise_r+0xac>
  883490:	20c0b717 	ldw	r3,732(r4)
  883494:	defffd04 	addi	sp,sp,-12
  883498:	dc400115 	stw	r17,4(sp)
  88349c:	dc000015 	stw	r16,0(sp)
  8834a0:	dfc00215 	stw	ra,8(sp)
  8834a4:	2021883a 	mov	r16,r4
  8834a8:	2823883a 	mov	r17,r5
  8834ac:	18001726 	beq	r3,zero,88350c <_raise_r+0x84>
  8834b0:	2945883a 	add	r2,r5,r5
  8834b4:	1085883a 	add	r2,r2,r2
  8834b8:	1887883a 	add	r3,r3,r2
  8834bc:	19800017 	ldw	r6,0(r3)
  8834c0:	30001226 	beq	r6,zero,88350c <_raise_r+0x84>
  8834c4:	00800044 	movi	r2,1
  8834c8:	30800e26 	beq	r6,r2,883504 <_raise_r+0x7c>
  8834cc:	013fffc4 	movi	r4,-1
  8834d0:	31000926 	beq	r6,r4,8834f8 <_raise_r+0x70>
  8834d4:	18000015 	stw	zero,0(r3)
  8834d8:	2809883a 	mov	r4,r5
  8834dc:	303ee83a 	callr	r6
  8834e0:	0005883a 	mov	r2,zero
  8834e4:	dfc00217 	ldw	ra,8(sp)
  8834e8:	dc400117 	ldw	r17,4(sp)
  8834ec:	dc000017 	ldw	r16,0(sp)
  8834f0:	dec00304 	addi	sp,sp,12
  8834f4:	f800283a 	ret
  8834f8:	00c00584 	movi	r3,22
  8834fc:	80c00015 	stw	r3,0(r16)
  883500:	003ff806 	br	8834e4 <_raise_r+0x5c>
  883504:	0005883a 	mov	r2,zero
  883508:	003ff606 	br	8834e4 <_raise_r+0x5c>
  88350c:	8009883a 	mov	r4,r16
  883510:	08836980 	call	883698 <_getpid_r>
  883514:	880d883a 	mov	r6,r17
  883518:	100b883a 	mov	r5,r2
  88351c:	8009883a 	mov	r4,r16
  883520:	dfc00217 	ldw	ra,8(sp)
  883524:	dc400117 	ldw	r17,4(sp)
  883528:	dc000017 	ldw	r16,0(sp)
  88352c:	dec00304 	addi	sp,sp,12
  883530:	088363c1 	jmpi	88363c <_kill_r>
  883534:	00800584 	movi	r2,22
  883538:	20800015 	stw	r2,0(r4)
  88353c:	00bfffc4 	movi	r2,-1
  883540:	f800283a 	ret

00883544 <__sigtramp_r>:
  883544:	008007c4 	movi	r2,31
  883548:	11402436 	bltu	r2,r5,8835dc <__sigtramp_r+0x98>
  88354c:	20c0b717 	ldw	r3,732(r4)
  883550:	defffd04 	addi	sp,sp,-12
  883554:	dc400115 	stw	r17,4(sp)
  883558:	dc000015 	stw	r16,0(sp)
  88355c:	dfc00215 	stw	ra,8(sp)
  883560:	2021883a 	mov	r16,r4
  883564:	2823883a 	mov	r17,r5
  883568:	18001826 	beq	r3,zero,8835cc <__sigtramp_r+0x88>
  88356c:	8c45883a 	add	r2,r17,r17
  883570:	1085883a 	add	r2,r2,r2
  883574:	1885883a 	add	r2,r3,r2
  883578:	10c00017 	ldw	r3,0(r2)
  88357c:	18001126 	beq	r3,zero,8835c4 <__sigtramp_r+0x80>
  883580:	013fffc4 	movi	r4,-1
  883584:	19000d26 	beq	r3,r4,8835bc <__sigtramp_r+0x78>
  883588:	01000044 	movi	r4,1
  88358c:	19000926 	beq	r3,r4,8835b4 <__sigtramp_r+0x70>
  883590:	10000015 	stw	zero,0(r2)
  883594:	8809883a 	mov	r4,r17
  883598:	183ee83a 	callr	r3
  88359c:	0005883a 	mov	r2,zero
  8835a0:	dfc00217 	ldw	ra,8(sp)
  8835a4:	dc400117 	ldw	r17,4(sp)
  8835a8:	dc000017 	ldw	r16,0(sp)
  8835ac:	dec00304 	addi	sp,sp,12
  8835b0:	f800283a 	ret
  8835b4:	008000c4 	movi	r2,3
  8835b8:	003ff906 	br	8835a0 <__sigtramp_r+0x5c>
  8835bc:	00800084 	movi	r2,2
  8835c0:	003ff706 	br	8835a0 <__sigtramp_r+0x5c>
  8835c4:	00800044 	movi	r2,1
  8835c8:	003ff506 	br	8835a0 <__sigtramp_r+0x5c>
  8835cc:	08833980 	call	883398 <_init_signal_r>
  8835d0:	1000041e 	bne	r2,zero,8835e4 <__sigtramp_r+0xa0>
  8835d4:	80c0b717 	ldw	r3,732(r16)
  8835d8:	003fe406 	br	88356c <__sigtramp_r+0x28>
  8835dc:	00bfffc4 	movi	r2,-1
  8835e0:	f800283a 	ret
  8835e4:	00bfffc4 	movi	r2,-1
  8835e8:	003fed06 	br	8835a0 <__sigtramp_r+0x5c>

008835ec <raise>:
  8835ec:	00802274 	movhi	r2,137
  8835f0:	10912004 	addi	r2,r2,17536
  8835f4:	200b883a 	mov	r5,r4
  8835f8:	11000017 	ldw	r4,0(r2)
  8835fc:	08834881 	jmpi	883488 <_raise_r>

00883600 <signal>:
  883600:	00802274 	movhi	r2,137
  883604:	10912004 	addi	r2,r2,17536
  883608:	280d883a 	mov	r6,r5
  88360c:	200b883a 	mov	r5,r4
  883610:	11000017 	ldw	r4,0(r2)
  883614:	08834041 	jmpi	883404 <_signal_r>

00883618 <_init_signal>:
  883618:	00802274 	movhi	r2,137
  88361c:	10912004 	addi	r2,r2,17536
  883620:	11000017 	ldw	r4,0(r2)
  883624:	08833981 	jmpi	883398 <_init_signal_r>

00883628 <__sigtramp>:
  883628:	00802274 	movhi	r2,137
  88362c:	10912004 	addi	r2,r2,17536
  883630:	200b883a 	mov	r5,r4
  883634:	11000017 	ldw	r4,0(r2)
  883638:	08835441 	jmpi	883544 <__sigtramp_r>

0088363c <_kill_r>:
  88363c:	defffd04 	addi	sp,sp,-12
  883640:	2805883a 	mov	r2,r5
  883644:	dc000015 	stw	r16,0(sp)
  883648:	04002274 	movhi	r16,137
  88364c:	dc400115 	stw	r17,4(sp)
  883650:	84180604 	addi	r16,r16,24600
  883654:	2023883a 	mov	r17,r4
  883658:	300b883a 	mov	r5,r6
  88365c:	1009883a 	mov	r4,r2
  883660:	dfc00215 	stw	ra,8(sp)
  883664:	80000015 	stw	zero,0(r16)
  883668:	088f8a00 	call	88f8a0 <kill>
  88366c:	00ffffc4 	movi	r3,-1
  883670:	10c00526 	beq	r2,r3,883688 <_kill_r+0x4c>
  883674:	dfc00217 	ldw	ra,8(sp)
  883678:	dc400117 	ldw	r17,4(sp)
  88367c:	dc000017 	ldw	r16,0(sp)
  883680:	dec00304 	addi	sp,sp,12
  883684:	f800283a 	ret
  883688:	80c00017 	ldw	r3,0(r16)
  88368c:	183ff926 	beq	r3,zero,883674 <_kill_r+0x38>
  883690:	88c00015 	stw	r3,0(r17)
  883694:	003ff706 	br	883674 <_kill_r+0x38>

00883698 <_getpid_r>:
  883698:	088f7641 	jmpi	88f764 <getpid>

0088369c <strcmp>:
  88369c:	2144b03a 	or	r2,r4,r5
  8836a0:	108000cc 	andi	r2,r2,3
  8836a4:	1000171e 	bne	r2,zero,883704 <strcmp+0x68>
  8836a8:	20800017 	ldw	r2,0(r4)
  8836ac:	28c00017 	ldw	r3,0(r5)
  8836b0:	10c0141e 	bne	r2,r3,883704 <strcmp+0x68>
  8836b4:	027fbff4 	movhi	r9,65279
  8836b8:	4a7fbfc4 	addi	r9,r9,-257
  8836bc:	0086303a 	nor	r3,zero,r2
  8836c0:	02202074 	movhi	r8,32897
  8836c4:	1245883a 	add	r2,r2,r9
  8836c8:	42202004 	addi	r8,r8,-32640
  8836cc:	10c4703a 	and	r2,r2,r3
  8836d0:	1204703a 	and	r2,r2,r8
  8836d4:	10000226 	beq	r2,zero,8836e0 <strcmp+0x44>
  8836d8:	00002306 	br	883768 <strcmp+0xcc>
  8836dc:	1000221e 	bne	r2,zero,883768 <strcmp+0xcc>
  8836e0:	21000104 	addi	r4,r4,4
  8836e4:	20c00017 	ldw	r3,0(r4)
  8836e8:	29400104 	addi	r5,r5,4
  8836ec:	29800017 	ldw	r6,0(r5)
  8836f0:	1a4f883a 	add	r7,r3,r9
  8836f4:	00c4303a 	nor	r2,zero,r3
  8836f8:	3884703a 	and	r2,r7,r2
  8836fc:	1204703a 	and	r2,r2,r8
  883700:	19bff626 	beq	r3,r6,8836dc <strcmp+0x40>
  883704:	20800003 	ldbu	r2,0(r4)
  883708:	10c03fcc 	andi	r3,r2,255
  88370c:	18c0201c 	xori	r3,r3,128
  883710:	18ffe004 	addi	r3,r3,-128
  883714:	18000c26 	beq	r3,zero,883748 <strcmp+0xac>
  883718:	29800007 	ldb	r6,0(r5)
  88371c:	19800326 	beq	r3,r6,88372c <strcmp+0x90>
  883720:	00001306 	br	883770 <strcmp+0xd4>
  883724:	29800007 	ldb	r6,0(r5)
  883728:	11800b1e 	bne	r2,r6,883758 <strcmp+0xbc>
  88372c:	21000044 	addi	r4,r4,1
  883730:	20c00003 	ldbu	r3,0(r4)
  883734:	29400044 	addi	r5,r5,1
  883738:	18803fcc 	andi	r2,r3,255
  88373c:	1080201c 	xori	r2,r2,128
  883740:	10bfe004 	addi	r2,r2,-128
  883744:	103ff71e 	bne	r2,zero,883724 <strcmp+0x88>
  883748:	0007883a 	mov	r3,zero
  88374c:	28800003 	ldbu	r2,0(r5)
  883750:	1885c83a 	sub	r2,r3,r2
  883754:	f800283a 	ret
  883758:	28800003 	ldbu	r2,0(r5)
  88375c:	18c03fcc 	andi	r3,r3,255
  883760:	1885c83a 	sub	r2,r3,r2
  883764:	f800283a 	ret
  883768:	0005883a 	mov	r2,zero
  88376c:	f800283a 	ret
  883770:	10c03fcc 	andi	r3,r2,255
  883774:	003ff506 	br	88374c <strcmp+0xb0>

00883778 <_vfiprintf_r>:
  883778:	deffff04 	addi	sp,sp,-4
  88377c:	dfc00015 	stw	ra,0(sp)
  883780:	088985c0 	call	88985c <___vfiprintf_internal_r>
  883784:	dfc00017 	ldw	ra,0(sp)
  883788:	dec00104 	addi	sp,sp,4
  88378c:	f800283a 	ret

00883790 <___vfprintf_internal_r>:
  883790:	deffb804 	addi	sp,sp,-288
  883794:	dfc04715 	stw	ra,284(sp)
  883798:	ddc04515 	stw	r23,276(sp)
  88379c:	dd404315 	stw	r21,268(sp)
  8837a0:	d9002c15 	stw	r4,176(sp)
  8837a4:	282f883a 	mov	r23,r5
  8837a8:	302b883a 	mov	r21,r6
  8837ac:	d9c02d15 	stw	r7,180(sp)
  8837b0:	df004615 	stw	fp,280(sp)
  8837b4:	dd804415 	stw	r22,272(sp)
  8837b8:	dd004215 	stw	r20,264(sp)
  8837bc:	dcc04115 	stw	r19,260(sp)
  8837c0:	dc804015 	stw	r18,256(sp)
  8837c4:	dc403f15 	stw	r17,252(sp)
  8837c8:	dc003e15 	stw	r16,248(sp)
  8837cc:	08880ec0 	call	8880ec <_localeconv_r>
  8837d0:	10800017 	ldw	r2,0(r2)
  8837d4:	1009883a 	mov	r4,r2
  8837d8:	d8803415 	stw	r2,208(sp)
  8837dc:	08896b00 	call	8896b0 <strlen>
  8837e0:	d8803715 	stw	r2,220(sp)
  8837e4:	d8802c17 	ldw	r2,176(sp)
  8837e8:	10000226 	beq	r2,zero,8837f4 <___vfprintf_internal_r+0x64>
  8837ec:	10800e17 	ldw	r2,56(r2)
  8837f0:	1000f926 	beq	r2,zero,883bd8 <___vfprintf_internal_r+0x448>
  8837f4:	b880030b 	ldhu	r2,12(r23)
  8837f8:	10c8000c 	andi	r3,r2,8192
  8837fc:	1800061e 	bne	r3,zero,883818 <___vfprintf_internal_r+0x88>
  883800:	b9001917 	ldw	r4,100(r23)
  883804:	00f7ffc4 	movi	r3,-8193
  883808:	10880014 	ori	r2,r2,8192
  88380c:	20c6703a 	and	r3,r4,r3
  883810:	b880030d 	sth	r2,12(r23)
  883814:	b8c01915 	stw	r3,100(r23)
  883818:	10c0020c 	andi	r3,r2,8
  88381c:	1800c126 	beq	r3,zero,883b24 <___vfprintf_internal_r+0x394>
  883820:	b8c00417 	ldw	r3,16(r23)
  883824:	1800bf26 	beq	r3,zero,883b24 <___vfprintf_internal_r+0x394>
  883828:	1080068c 	andi	r2,r2,26
  88382c:	00c00284 	movi	r3,10
  883830:	10c0c426 	beq	r2,r3,883b44 <___vfprintf_internal_r+0x3b4>
  883834:	d8c00404 	addi	r3,sp,16
  883838:	05002274 	movhi	r20,137
  88383c:	d9001e04 	addi	r4,sp,120
  883840:	a5094784 	addi	r20,r20,9502
  883844:	d8c01e15 	stw	r3,120(sp)
  883848:	d8002015 	stw	zero,128(sp)
  88384c:	d8001f15 	stw	zero,124(sp)
  883850:	d8003315 	stw	zero,204(sp)
  883854:	d8003615 	stw	zero,216(sp)
  883858:	d8003815 	stw	zero,224(sp)
  88385c:	1811883a 	mov	r8,r3
  883860:	d8003915 	stw	zero,228(sp)
  883864:	d8003a15 	stw	zero,232(sp)
  883868:	d8002f15 	stw	zero,188(sp)
  88386c:	d9002815 	stw	r4,160(sp)
  883870:	a8800007 	ldb	r2,0(r21)
  883874:	10027b26 	beq	r2,zero,884264 <___vfprintf_internal_r+0xad4>
  883878:	00c00944 	movi	r3,37
  88387c:	a821883a 	mov	r16,r21
  883880:	10c0021e 	bne	r2,r3,88388c <___vfprintf_internal_r+0xfc>
  883884:	00001406 	br	8838d8 <___vfprintf_internal_r+0x148>
  883888:	10c00326 	beq	r2,r3,883898 <___vfprintf_internal_r+0x108>
  88388c:	84000044 	addi	r16,r16,1
  883890:	80800007 	ldb	r2,0(r16)
  883894:	103ffc1e 	bne	r2,zero,883888 <___vfprintf_internal_r+0xf8>
  883898:	8563c83a 	sub	r17,r16,r21
  88389c:	88000e26 	beq	r17,zero,8838d8 <___vfprintf_internal_r+0x148>
  8838a0:	d8c02017 	ldw	r3,128(sp)
  8838a4:	d8801f17 	ldw	r2,124(sp)
  8838a8:	45400015 	stw	r21,0(r8)
  8838ac:	1c47883a 	add	r3,r3,r17
  8838b0:	10800044 	addi	r2,r2,1
  8838b4:	d8c02015 	stw	r3,128(sp)
  8838b8:	44400115 	stw	r17,4(r8)
  8838bc:	d8801f15 	stw	r2,124(sp)
  8838c0:	00c001c4 	movi	r3,7
  8838c4:	1880a716 	blt	r3,r2,883b64 <___vfprintf_internal_r+0x3d4>
  8838c8:	42000204 	addi	r8,r8,8
  8838cc:	d9402f17 	ldw	r5,188(sp)
  8838d0:	2c4b883a 	add	r5,r5,r17
  8838d4:	d9402f15 	stw	r5,188(sp)
  8838d8:	80800007 	ldb	r2,0(r16)
  8838dc:	1000a826 	beq	r2,zero,883b80 <___vfprintf_internal_r+0x3f0>
  8838e0:	84400047 	ldb	r17,1(r16)
  8838e4:	00bfffc4 	movi	r2,-1
  8838e8:	85400044 	addi	r21,r16,1
  8838ec:	d8002785 	stb	zero,158(sp)
  8838f0:	0007883a 	mov	r3,zero
  8838f4:	000f883a 	mov	r7,zero
  8838f8:	d8802915 	stw	r2,164(sp)
  8838fc:	d8003115 	stw	zero,196(sp)
  883900:	0025883a 	mov	r18,zero
  883904:	01401604 	movi	r5,88
  883908:	01800244 	movi	r6,9
  88390c:	02800a84 	movi	r10,42
  883910:	02401b04 	movi	r9,108
  883914:	ad400044 	addi	r21,r21,1
  883918:	88bff804 	addi	r2,r17,-32
  88391c:	28830436 	bltu	r5,r2,884530 <___vfprintf_internal_r+0xda0>
  883920:	100490ba 	slli	r2,r2,2
  883924:	01002234 	movhi	r4,136
  883928:	210e4e04 	addi	r4,r4,14648
  88392c:	1105883a 	add	r2,r2,r4
  883930:	10800017 	ldw	r2,0(r2)
  883934:	1000683a 	jmp	r2
  883938:	00884450 	cmplti	r2,zero,8465
  88393c:	00884530 	cmpltui	r2,zero,8468
  883940:	00884530 	cmpltui	r2,zero,8468
  883944:	00884470 	cmpltui	r2,zero,8465
  883948:	00884530 	cmpltui	r2,zero,8468
  88394c:	00884530 	cmpltui	r2,zero,8468
  883950:	00884530 	cmpltui	r2,zero,8468
  883954:	00884530 	cmpltui	r2,zero,8468
  883958:	00884530 	cmpltui	r2,zero,8468
  88395c:	00884530 	cmpltui	r2,zero,8468
  883960:	00883be4 	muli	r2,zero,8431
  883964:	0088438c 	andi	r2,zero,8462
  883968:	00884530 	cmpltui	r2,zero,8468
  88396c:	00883aac 	andhi	r2,zero,8426
  883970:	00883c0c 	andi	r2,zero,8432
  883974:	00884530 	cmpltui	r2,zero,8468
  883978:	00883c4c 	andi	r2,zero,8433
  88397c:	00883c58 	cmpnei	r2,zero,8433
  883980:	00883c58 	cmpnei	r2,zero,8433
  883984:	00883c58 	cmpnei	r2,zero,8433
  883988:	00883c58 	cmpnei	r2,zero,8433
  88398c:	00883c58 	cmpnei	r2,zero,8433
  883990:	00883c58 	cmpnei	r2,zero,8433
  883994:	00883c58 	cmpnei	r2,zero,8433
  883998:	00883c58 	cmpnei	r2,zero,8433
  88399c:	00883c58 	cmpnei	r2,zero,8433
  8839a0:	00884530 	cmpltui	r2,zero,8468
  8839a4:	00884530 	cmpltui	r2,zero,8468
  8839a8:	00884530 	cmpltui	r2,zero,8468
  8839ac:	00884530 	cmpltui	r2,zero,8468
  8839b0:	00884530 	cmpltui	r2,zero,8468
  8839b4:	00884530 	cmpltui	r2,zero,8468
  8839b8:	00884530 	cmpltui	r2,zero,8468
  8839bc:	00884530 	cmpltui	r2,zero,8468
  8839c0:	00884530 	cmpltui	r2,zero,8468
  8839c4:	00884530 	cmpltui	r2,zero,8468
  8839c8:	00883c8c 	andi	r2,zero,8434
  8839cc:	00883d48 	cmpgei	r2,zero,8437
  8839d0:	00884530 	cmpltui	r2,zero,8468
  8839d4:	00883d48 	cmpgei	r2,zero,8437
  8839d8:	00884530 	cmpltui	r2,zero,8468
  8839dc:	00884530 	cmpltui	r2,zero,8468
  8839e0:	00884530 	cmpltui	r2,zero,8468
  8839e4:	00884530 	cmpltui	r2,zero,8468
  8839e8:	00883de8 	cmpgeui	r2,zero,8439
  8839ec:	00884530 	cmpltui	r2,zero,8468
  8839f0:	00884530 	cmpltui	r2,zero,8468
  8839f4:	00883df4 	movhi	r2,8439
  8839f8:	00884530 	cmpltui	r2,zero,8468
  8839fc:	00884530 	cmpltui	r2,zero,8468
  883a00:	00884530 	cmpltui	r2,zero,8468
  883a04:	00884530 	cmpltui	r2,zero,8468
  883a08:	00884530 	cmpltui	r2,zero,8468
  883a0c:	0088426c 	andhi	r2,zero,8457
  883a10:	00884530 	cmpltui	r2,zero,8468
  883a14:	00884530 	cmpltui	r2,zero,8468
  883a18:	008842cc 	andi	r2,zero,8459
  883a1c:	00884530 	cmpltui	r2,zero,8468
  883a20:	00884530 	cmpltui	r2,zero,8468
  883a24:	00884530 	cmpltui	r2,zero,8468
  883a28:	00884530 	cmpltui	r2,zero,8468
  883a2c:	00884530 	cmpltui	r2,zero,8468
  883a30:	00884530 	cmpltui	r2,zero,8468
  883a34:	00884530 	cmpltui	r2,zero,8468
  883a38:	00884530 	cmpltui	r2,zero,8468
  883a3c:	00884530 	cmpltui	r2,zero,8468
  883a40:	00884530 	cmpltui	r2,zero,8468
  883a44:	008844dc 	xori	r2,zero,8467
  883a48:	0088447c 	xorhi	r2,zero,8465
  883a4c:	00883d48 	cmpgei	r2,zero,8437
  883a50:	00883d48 	cmpgei	r2,zero,8437
  883a54:	00883d48 	cmpgei	r2,zero,8437
  883a58:	0088448c 	andi	r2,zero,8466
  883a5c:	0088447c 	xorhi	r2,zero,8465
  883a60:	00884530 	cmpltui	r2,zero,8468
  883a64:	00884530 	cmpltui	r2,zero,8468
  883a68:	00884498 	cmpnei	r2,zero,8466
  883a6c:	00884530 	cmpltui	r2,zero,8468
  883a70:	008844a8 	cmpgeui	r2,zero,8466
  883a74:	0088437c 	xorhi	r2,zero,8461
  883a78:	00883ab8 	rdprs	r2,zero,8426
  883a7c:	0088439c 	xori	r2,zero,8462
  883a80:	00884530 	cmpltui	r2,zero,8468
  883a84:	008843a8 	cmpgeui	r2,zero,8462
  883a88:	00884530 	cmpltui	r2,zero,8468
  883a8c:	00884404 	movi	r2,8464
  883a90:	00884530 	cmpltui	r2,zero,8468
  883a94:	00884530 	cmpltui	r2,zero,8468
  883a98:	00884414 	movui	r2,8464
  883a9c:	d9003117 	ldw	r4,196(sp)
  883aa0:	d8802d15 	stw	r2,180(sp)
  883aa4:	0109c83a 	sub	r4,zero,r4
  883aa8:	d9003115 	stw	r4,196(sp)
  883aac:	94800114 	ori	r18,r18,4
  883ab0:	ac400007 	ldb	r17,0(r21)
  883ab4:	003f9706 	br	883914 <___vfprintf_internal_r+0x184>
  883ab8:	00800c04 	movi	r2,48
  883abc:	d9002d17 	ldw	r4,180(sp)
  883ac0:	d9402917 	ldw	r5,164(sp)
  883ac4:	d8802705 	stb	r2,156(sp)
  883ac8:	00801e04 	movi	r2,120
  883acc:	d8802745 	stb	r2,157(sp)
  883ad0:	d8002785 	stb	zero,158(sp)
  883ad4:	20c00104 	addi	r3,r4,4
  883ad8:	24c00017 	ldw	r19,0(r4)
  883adc:	002d883a 	mov	r22,zero
  883ae0:	90800094 	ori	r2,r18,2
  883ae4:	28029a16 	blt	r5,zero,884550 <___vfprintf_internal_r+0xdc0>
  883ae8:	00bfdfc4 	movi	r2,-129
  883aec:	90a4703a 	and	r18,r18,r2
  883af0:	d8c02d15 	stw	r3,180(sp)
  883af4:	94800094 	ori	r18,r18,2
  883af8:	9802871e 	bne	r19,zero,884518 <___vfprintf_internal_r+0xd88>
  883afc:	00802274 	movhi	r2,137
  883b00:	10894004 	addi	r2,r2,9472
  883b04:	d8803915 	stw	r2,228(sp)
  883b08:	04401e04 	movi	r17,120
  883b0c:	d8802917 	ldw	r2,164(sp)
  883b10:	0039883a 	mov	fp,zero
  883b14:	1001e926 	beq	r2,zero,8842bc <___vfprintf_internal_r+0xb2c>
  883b18:	0027883a 	mov	r19,zero
  883b1c:	002d883a 	mov	r22,zero
  883b20:	00020506 	br	884338 <___vfprintf_internal_r+0xba8>
  883b24:	d9002c17 	ldw	r4,176(sp)
  883b28:	b80b883a 	mov	r5,r23
  883b2c:	0885a600 	call	885a60 <__swsetup_r>
  883b30:	1005ac1e 	bne	r2,zero,8851e4 <___vfprintf_internal_r+0x1a54>
  883b34:	b880030b 	ldhu	r2,12(r23)
  883b38:	00c00284 	movi	r3,10
  883b3c:	1080068c 	andi	r2,r2,26
  883b40:	10ff3c1e 	bne	r2,r3,883834 <___vfprintf_internal_r+0xa4>
  883b44:	b880038f 	ldh	r2,14(r23)
  883b48:	103f3a16 	blt	r2,zero,883834 <___vfprintf_internal_r+0xa4>
  883b4c:	d9c02d17 	ldw	r7,180(sp)
  883b50:	d9002c17 	ldw	r4,176(sp)
  883b54:	a80d883a 	mov	r6,r21
  883b58:	b80b883a 	mov	r5,r23
  883b5c:	08859a40 	call	8859a4 <__sbprintf>
  883b60:	00001106 	br	883ba8 <___vfprintf_internal_r+0x418>
  883b64:	d9002c17 	ldw	r4,176(sp)
  883b68:	d9801e04 	addi	r6,sp,120
  883b6c:	b80b883a 	mov	r5,r23
  883b70:	08898440 	call	889844 <__sprint_r>
  883b74:	1000081e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  883b78:	da000404 	addi	r8,sp,16
  883b7c:	003f5306 	br	8838cc <___vfprintf_internal_r+0x13c>
  883b80:	d8802017 	ldw	r2,128(sp)
  883b84:	10000426 	beq	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  883b88:	d9002c17 	ldw	r4,176(sp)
  883b8c:	d9801e04 	addi	r6,sp,120
  883b90:	b80b883a 	mov	r5,r23
  883b94:	08898440 	call	889844 <__sprint_r>
  883b98:	b880030b 	ldhu	r2,12(r23)
  883b9c:	1080100c 	andi	r2,r2,64
  883ba0:	1005901e 	bne	r2,zero,8851e4 <___vfprintf_internal_r+0x1a54>
  883ba4:	d8802f17 	ldw	r2,188(sp)
  883ba8:	dfc04717 	ldw	ra,284(sp)
  883bac:	df004617 	ldw	fp,280(sp)
  883bb0:	ddc04517 	ldw	r23,276(sp)
  883bb4:	dd804417 	ldw	r22,272(sp)
  883bb8:	dd404317 	ldw	r21,268(sp)
  883bbc:	dd004217 	ldw	r20,264(sp)
  883bc0:	dcc04117 	ldw	r19,260(sp)
  883bc4:	dc804017 	ldw	r18,256(sp)
  883bc8:	dc403f17 	ldw	r17,252(sp)
  883bcc:	dc003e17 	ldw	r16,248(sp)
  883bd0:	dec04804 	addi	sp,sp,288
  883bd4:	f800283a 	ret
  883bd8:	d9002c17 	ldw	r4,176(sp)
  883bdc:	0887a340 	call	887a34 <__sinit>
  883be0:	003f0406 	br	8837f4 <___vfprintf_internal_r+0x64>
  883be4:	d8802d17 	ldw	r2,180(sp)
  883be8:	d9002d17 	ldw	r4,180(sp)
  883bec:	10800017 	ldw	r2,0(r2)
  883bf0:	d8803115 	stw	r2,196(sp)
  883bf4:	20800104 	addi	r2,r4,4
  883bf8:	d9003117 	ldw	r4,196(sp)
  883bfc:	203fa716 	blt	r4,zero,883a9c <___vfprintf_internal_r+0x30c>
  883c00:	d8802d15 	stw	r2,180(sp)
  883c04:	ac400007 	ldb	r17,0(r21)
  883c08:	003f4206 	br	883914 <___vfprintf_internal_r+0x184>
  883c0c:	ac400007 	ldb	r17,0(r21)
  883c10:	aac00044 	addi	r11,r21,1
  883c14:	8a872826 	beq	r17,r10,8858b8 <___vfprintf_internal_r+0x2128>
  883c18:	88bff404 	addi	r2,r17,-48
  883c1c:	0009883a 	mov	r4,zero
  883c20:	30867d36 	bltu	r6,r2,885618 <___vfprintf_internal_r+0x1e88>
  883c24:	5c400007 	ldb	r17,0(r11)
  883c28:	210002a4 	muli	r4,r4,10
  883c2c:	5d400044 	addi	r21,r11,1
  883c30:	a817883a 	mov	r11,r21
  883c34:	2089883a 	add	r4,r4,r2
  883c38:	88bff404 	addi	r2,r17,-48
  883c3c:	30bff92e 	bgeu	r6,r2,883c24 <___vfprintf_internal_r+0x494>
  883c40:	2005c916 	blt	r4,zero,885368 <___vfprintf_internal_r+0x1bd8>
  883c44:	d9002915 	stw	r4,164(sp)
  883c48:	003f3306 	br	883918 <___vfprintf_internal_r+0x188>
  883c4c:	94802014 	ori	r18,r18,128
  883c50:	ac400007 	ldb	r17,0(r21)
  883c54:	003f2f06 	br	883914 <___vfprintf_internal_r+0x184>
  883c58:	a809883a 	mov	r4,r21
  883c5c:	d8003115 	stw	zero,196(sp)
  883c60:	88bff404 	addi	r2,r17,-48
  883c64:	0017883a 	mov	r11,zero
  883c68:	24400007 	ldb	r17,0(r4)
  883c6c:	5ac002a4 	muli	r11,r11,10
  883c70:	ad400044 	addi	r21,r21,1
  883c74:	a809883a 	mov	r4,r21
  883c78:	12d7883a 	add	r11,r2,r11
  883c7c:	88bff404 	addi	r2,r17,-48
  883c80:	30bff92e 	bgeu	r6,r2,883c68 <___vfprintf_internal_r+0x4d8>
  883c84:	dac03115 	stw	r11,196(sp)
  883c88:	003f2306 	br	883918 <___vfprintf_internal_r+0x188>
  883c8c:	18c03fcc 	andi	r3,r3,255
  883c90:	18072b1e 	bne	r3,zero,885940 <___vfprintf_internal_r+0x21b0>
  883c94:	94800414 	ori	r18,r18,16
  883c98:	9080080c 	andi	r2,r18,32
  883c9c:	10037b26 	beq	r2,zero,884a8c <___vfprintf_internal_r+0x12fc>
  883ca0:	d9402d17 	ldw	r5,180(sp)
  883ca4:	28800117 	ldw	r2,4(r5)
  883ca8:	2cc00017 	ldw	r19,0(r5)
  883cac:	29400204 	addi	r5,r5,8
  883cb0:	d9402d15 	stw	r5,180(sp)
  883cb4:	102d883a 	mov	r22,r2
  883cb8:	10044b16 	blt	r2,zero,884de8 <___vfprintf_internal_r+0x1658>
  883cbc:	d9402917 	ldw	r5,164(sp)
  883cc0:	df002783 	ldbu	fp,158(sp)
  883cc4:	2803bc16 	blt	r5,zero,884bb8 <___vfprintf_internal_r+0x1428>
  883cc8:	00ffdfc4 	movi	r3,-129
  883ccc:	9d84b03a 	or	r2,r19,r22
  883cd0:	90e4703a 	and	r18,r18,r3
  883cd4:	10017726 	beq	r2,zero,8842b4 <___vfprintf_internal_r+0xb24>
  883cd8:	b0038326 	beq	r22,zero,884ae8 <___vfprintf_internal_r+0x1358>
  883cdc:	dc402a15 	stw	r17,168(sp)
  883ce0:	dc001e04 	addi	r16,sp,120
  883ce4:	b023883a 	mov	r17,r22
  883ce8:	402d883a 	mov	r22,r8
  883cec:	9809883a 	mov	r4,r19
  883cf0:	880b883a 	mov	r5,r17
  883cf4:	01800284 	movi	r6,10
  883cf8:	000f883a 	mov	r7,zero
  883cfc:	088c7b80 	call	88c7b8 <__umoddi3>
  883d00:	10800c04 	addi	r2,r2,48
  883d04:	843fffc4 	addi	r16,r16,-1
  883d08:	9809883a 	mov	r4,r19
  883d0c:	880b883a 	mov	r5,r17
  883d10:	80800005 	stb	r2,0(r16)
  883d14:	01800284 	movi	r6,10
  883d18:	000f883a 	mov	r7,zero
  883d1c:	088c2400 	call	88c240 <__udivdi3>
  883d20:	1027883a 	mov	r19,r2
  883d24:	10c4b03a 	or	r2,r2,r3
  883d28:	1823883a 	mov	r17,r3
  883d2c:	103fef1e 	bne	r2,zero,883cec <___vfprintf_internal_r+0x55c>
  883d30:	d8c02817 	ldw	r3,160(sp)
  883d34:	dc402a17 	ldw	r17,168(sp)
  883d38:	b011883a 	mov	r8,r22
  883d3c:	1c07c83a 	sub	r3,r3,r16
  883d40:	d8c02e15 	stw	r3,184(sp)
  883d44:	00005906 	br	883eac <___vfprintf_internal_r+0x71c>
  883d48:	18c03fcc 	andi	r3,r3,255
  883d4c:	1806fa1e 	bne	r3,zero,885938 <___vfprintf_internal_r+0x21a8>
  883d50:	9080020c 	andi	r2,r18,8
  883d54:	10048a26 	beq	r2,zero,884f80 <___vfprintf_internal_r+0x17f0>
  883d58:	d8c02d17 	ldw	r3,180(sp)
  883d5c:	d9002d17 	ldw	r4,180(sp)
  883d60:	d9402d17 	ldw	r5,180(sp)
  883d64:	18c00017 	ldw	r3,0(r3)
  883d68:	21000117 	ldw	r4,4(r4)
  883d6c:	29400204 	addi	r5,r5,8
  883d70:	d8c03615 	stw	r3,216(sp)
  883d74:	d9003815 	stw	r4,224(sp)
  883d78:	d9402d15 	stw	r5,180(sp)
  883d7c:	d9003617 	ldw	r4,216(sp)
  883d80:	d9403817 	ldw	r5,224(sp)
  883d84:	da003d15 	stw	r8,244(sp)
  883d88:	04000044 	movi	r16,1
  883d8c:	08895000 	call	889500 <__fpclassifyd>
  883d90:	da003d17 	ldw	r8,244(sp)
  883d94:	14041f1e 	bne	r2,r16,884e14 <___vfprintf_internal_r+0x1684>
  883d98:	d9003617 	ldw	r4,216(sp)
  883d9c:	d9403817 	ldw	r5,224(sp)
  883da0:	000d883a 	mov	r6,zero
  883da4:	000f883a 	mov	r7,zero
  883da8:	088e19c0 	call	88e19c <__ledf2>
  883dac:	da003d17 	ldw	r8,244(sp)
  883db0:	1005be16 	blt	r2,zero,8854ac <___vfprintf_internal_r+0x1d1c>
  883db4:	df002783 	ldbu	fp,158(sp)
  883db8:	008011c4 	movi	r2,71
  883dbc:	1445330e 	bge	r2,r17,88528c <___vfprintf_internal_r+0x1afc>
  883dc0:	04002274 	movhi	r16,137
  883dc4:	84093804 	addi	r16,r16,9440
  883dc8:	00c000c4 	movi	r3,3
  883dcc:	00bfdfc4 	movi	r2,-129
  883dd0:	d8c02a15 	stw	r3,168(sp)
  883dd4:	90a4703a 	and	r18,r18,r2
  883dd8:	d8c02e15 	stw	r3,184(sp)
  883ddc:	d8002915 	stw	zero,164(sp)
  883de0:	d8003215 	stw	zero,200(sp)
  883de4:	00003706 	br	883ec4 <___vfprintf_internal_r+0x734>
  883de8:	94800214 	ori	r18,r18,8
  883dec:	ac400007 	ldb	r17,0(r21)
  883df0:	003ec806 	br	883914 <___vfprintf_internal_r+0x184>
  883df4:	18c03fcc 	andi	r3,r3,255
  883df8:	1806db1e 	bne	r3,zero,885968 <___vfprintf_internal_r+0x21d8>
  883dfc:	94800414 	ori	r18,r18,16
  883e00:	9080080c 	andi	r2,r18,32
  883e04:	1002d826 	beq	r2,zero,884968 <___vfprintf_internal_r+0x11d8>
  883e08:	d9402d17 	ldw	r5,180(sp)
  883e0c:	d8c02917 	ldw	r3,164(sp)
  883e10:	d8002785 	stb	zero,158(sp)
  883e14:	28800204 	addi	r2,r5,8
  883e18:	2cc00017 	ldw	r19,0(r5)
  883e1c:	2d800117 	ldw	r22,4(r5)
  883e20:	18048f16 	blt	r3,zero,885060 <___vfprintf_internal_r+0x18d0>
  883e24:	013fdfc4 	movi	r4,-129
  883e28:	9d86b03a 	or	r3,r19,r22
  883e2c:	d8802d15 	stw	r2,180(sp)
  883e30:	9124703a 	and	r18,r18,r4
  883e34:	1802d91e 	bne	r3,zero,88499c <___vfprintf_internal_r+0x120c>
  883e38:	d8c02917 	ldw	r3,164(sp)
  883e3c:	0039883a 	mov	fp,zero
  883e40:	1805c326 	beq	r3,zero,885550 <___vfprintf_internal_r+0x1dc0>
  883e44:	0027883a 	mov	r19,zero
  883e48:	002d883a 	mov	r22,zero
  883e4c:	dc001e04 	addi	r16,sp,120
  883e50:	9806d0fa 	srli	r3,r19,3
  883e54:	b008977a 	slli	r4,r22,29
  883e58:	b02cd0fa 	srli	r22,r22,3
  883e5c:	9cc001cc 	andi	r19,r19,7
  883e60:	98800c04 	addi	r2,r19,48
  883e64:	843fffc4 	addi	r16,r16,-1
  883e68:	20e6b03a 	or	r19,r4,r3
  883e6c:	80800005 	stb	r2,0(r16)
  883e70:	9d86b03a 	or	r3,r19,r22
  883e74:	183ff61e 	bne	r3,zero,883e50 <___vfprintf_internal_r+0x6c0>
  883e78:	90c0004c 	andi	r3,r18,1
  883e7c:	18013b26 	beq	r3,zero,88436c <___vfprintf_internal_r+0xbdc>
  883e80:	10803fcc 	andi	r2,r2,255
  883e84:	1080201c 	xori	r2,r2,128
  883e88:	10bfe004 	addi	r2,r2,-128
  883e8c:	00c00c04 	movi	r3,48
  883e90:	10c13626 	beq	r2,r3,88436c <___vfprintf_internal_r+0xbdc>
  883e94:	80ffffc5 	stb	r3,-1(r16)
  883e98:	d8c02817 	ldw	r3,160(sp)
  883e9c:	80bfffc4 	addi	r2,r16,-1
  883ea0:	1021883a 	mov	r16,r2
  883ea4:	1887c83a 	sub	r3,r3,r2
  883ea8:	d8c02e15 	stw	r3,184(sp)
  883eac:	d8802e17 	ldw	r2,184(sp)
  883eb0:	d9002917 	ldw	r4,164(sp)
  883eb4:	1100010e 	bge	r2,r4,883ebc <___vfprintf_internal_r+0x72c>
  883eb8:	2005883a 	mov	r2,r4
  883ebc:	d8802a15 	stw	r2,168(sp)
  883ec0:	d8003215 	stw	zero,200(sp)
  883ec4:	e7003fcc 	andi	fp,fp,255
  883ec8:	e700201c 	xori	fp,fp,128
  883ecc:	e73fe004 	addi	fp,fp,-128
  883ed0:	e0000326 	beq	fp,zero,883ee0 <___vfprintf_internal_r+0x750>
  883ed4:	d8c02a17 	ldw	r3,168(sp)
  883ed8:	18c00044 	addi	r3,r3,1
  883edc:	d8c02a15 	stw	r3,168(sp)
  883ee0:	90c0008c 	andi	r3,r18,2
  883ee4:	d8c02b15 	stw	r3,172(sp)
  883ee8:	18000326 	beq	r3,zero,883ef8 <___vfprintf_internal_r+0x768>
  883eec:	d8c02a17 	ldw	r3,168(sp)
  883ef0:	18c00084 	addi	r3,r3,2
  883ef4:	d8c02a15 	stw	r3,168(sp)
  883ef8:	90c0210c 	andi	r3,r18,132
  883efc:	d8c03015 	stw	r3,192(sp)
  883f00:	1801a31e 	bne	r3,zero,884590 <___vfprintf_internal_r+0xe00>
  883f04:	d9003117 	ldw	r4,196(sp)
  883f08:	d8c02a17 	ldw	r3,168(sp)
  883f0c:	20e7c83a 	sub	r19,r4,r3
  883f10:	04c19f0e 	bge	zero,r19,884590 <___vfprintf_internal_r+0xe00>
  883f14:	02400404 	movi	r9,16
  883f18:	d8c02017 	ldw	r3,128(sp)
  883f1c:	d8801f17 	ldw	r2,124(sp)
  883f20:	4cc50d0e 	bge	r9,r19,885358 <___vfprintf_internal_r+0x1bc8>
  883f24:	01402274 	movhi	r5,137
  883f28:	29494b84 	addi	r5,r5,9518
  883f2c:	dc403b15 	stw	r17,236(sp)
  883f30:	d9403515 	stw	r5,212(sp)
  883f34:	9823883a 	mov	r17,r19
  883f38:	482d883a 	mov	r22,r9
  883f3c:	9027883a 	mov	r19,r18
  883f40:	070001c4 	movi	fp,7
  883f44:	8025883a 	mov	r18,r16
  883f48:	dc002c17 	ldw	r16,176(sp)
  883f4c:	00000306 	br	883f5c <___vfprintf_internal_r+0x7cc>
  883f50:	8c7ffc04 	addi	r17,r17,-16
  883f54:	42000204 	addi	r8,r8,8
  883f58:	b440130e 	bge	r22,r17,883fa8 <___vfprintf_internal_r+0x818>
  883f5c:	01002274 	movhi	r4,137
  883f60:	18c00404 	addi	r3,r3,16
  883f64:	10800044 	addi	r2,r2,1
  883f68:	21094b84 	addi	r4,r4,9518
  883f6c:	41000015 	stw	r4,0(r8)
  883f70:	45800115 	stw	r22,4(r8)
  883f74:	d8c02015 	stw	r3,128(sp)
  883f78:	d8801f15 	stw	r2,124(sp)
  883f7c:	e0bff40e 	bge	fp,r2,883f50 <___vfprintf_internal_r+0x7c0>
  883f80:	d9801e04 	addi	r6,sp,120
  883f84:	b80b883a 	mov	r5,r23
  883f88:	8009883a 	mov	r4,r16
  883f8c:	08898440 	call	889844 <__sprint_r>
  883f90:	103f011e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  883f94:	8c7ffc04 	addi	r17,r17,-16
  883f98:	d8c02017 	ldw	r3,128(sp)
  883f9c:	d8801f17 	ldw	r2,124(sp)
  883fa0:	da000404 	addi	r8,sp,16
  883fa4:	b47fed16 	blt	r22,r17,883f5c <___vfprintf_internal_r+0x7cc>
  883fa8:	9021883a 	mov	r16,r18
  883fac:	9825883a 	mov	r18,r19
  883fb0:	8827883a 	mov	r19,r17
  883fb4:	dc403b17 	ldw	r17,236(sp)
  883fb8:	d9403517 	ldw	r5,212(sp)
  883fbc:	98c7883a 	add	r3,r19,r3
  883fc0:	10800044 	addi	r2,r2,1
  883fc4:	41400015 	stw	r5,0(r8)
  883fc8:	44c00115 	stw	r19,4(r8)
  883fcc:	d8c02015 	stw	r3,128(sp)
  883fd0:	d8801f15 	stw	r2,124(sp)
  883fd4:	010001c4 	movi	r4,7
  883fd8:	2082a316 	blt	r4,r2,884a68 <___vfprintf_internal_r+0x12d8>
  883fdc:	df002787 	ldb	fp,158(sp)
  883fe0:	42000204 	addi	r8,r8,8
  883fe4:	e0000c26 	beq	fp,zero,884018 <___vfprintf_internal_r+0x888>
  883fe8:	d8801f17 	ldw	r2,124(sp)
  883fec:	d9002784 	addi	r4,sp,158
  883ff0:	18c00044 	addi	r3,r3,1
  883ff4:	10800044 	addi	r2,r2,1
  883ff8:	41000015 	stw	r4,0(r8)
  883ffc:	01000044 	movi	r4,1
  884000:	41000115 	stw	r4,4(r8)
  884004:	d8c02015 	stw	r3,128(sp)
  884008:	d8801f15 	stw	r2,124(sp)
  88400c:	010001c4 	movi	r4,7
  884010:	20823c16 	blt	r4,r2,884904 <___vfprintf_internal_r+0x1174>
  884014:	42000204 	addi	r8,r8,8
  884018:	d8802b17 	ldw	r2,172(sp)
  88401c:	10000c26 	beq	r2,zero,884050 <___vfprintf_internal_r+0x8c0>
  884020:	d8801f17 	ldw	r2,124(sp)
  884024:	d9002704 	addi	r4,sp,156
  884028:	18c00084 	addi	r3,r3,2
  88402c:	10800044 	addi	r2,r2,1
  884030:	41000015 	stw	r4,0(r8)
  884034:	01000084 	movi	r4,2
  884038:	41000115 	stw	r4,4(r8)
  88403c:	d8c02015 	stw	r3,128(sp)
  884040:	d8801f15 	stw	r2,124(sp)
  884044:	010001c4 	movi	r4,7
  884048:	20823616 	blt	r4,r2,884924 <___vfprintf_internal_r+0x1194>
  88404c:	42000204 	addi	r8,r8,8
  884050:	d9003017 	ldw	r4,192(sp)
  884054:	00802004 	movi	r2,128
  884058:	20819926 	beq	r4,r2,8846c0 <___vfprintf_internal_r+0xf30>
  88405c:	d9402917 	ldw	r5,164(sp)
  884060:	d8802e17 	ldw	r2,184(sp)
  884064:	28adc83a 	sub	r22,r5,r2
  884068:	0580310e 	bge	zero,r22,884130 <___vfprintf_internal_r+0x9a0>
  88406c:	07000404 	movi	fp,16
  884070:	d8801f17 	ldw	r2,124(sp)
  884074:	e584140e 	bge	fp,r22,8850c8 <___vfprintf_internal_r+0x1938>
  884078:	01402274 	movhi	r5,137
  88407c:	29494784 	addi	r5,r5,9502
  884080:	dc402915 	stw	r17,164(sp)
  884084:	d9402b15 	stw	r5,172(sp)
  884088:	b023883a 	mov	r17,r22
  88408c:	04c001c4 	movi	r19,7
  884090:	a82d883a 	mov	r22,r21
  884094:	902b883a 	mov	r21,r18
  884098:	8025883a 	mov	r18,r16
  88409c:	dc002c17 	ldw	r16,176(sp)
  8840a0:	00000306 	br	8840b0 <___vfprintf_internal_r+0x920>
  8840a4:	8c7ffc04 	addi	r17,r17,-16
  8840a8:	42000204 	addi	r8,r8,8
  8840ac:	e440110e 	bge	fp,r17,8840f4 <___vfprintf_internal_r+0x964>
  8840b0:	18c00404 	addi	r3,r3,16
  8840b4:	10800044 	addi	r2,r2,1
  8840b8:	45000015 	stw	r20,0(r8)
  8840bc:	47000115 	stw	fp,4(r8)
  8840c0:	d8c02015 	stw	r3,128(sp)
  8840c4:	d8801f15 	stw	r2,124(sp)
  8840c8:	98bff60e 	bge	r19,r2,8840a4 <___vfprintf_internal_r+0x914>
  8840cc:	d9801e04 	addi	r6,sp,120
  8840d0:	b80b883a 	mov	r5,r23
  8840d4:	8009883a 	mov	r4,r16
  8840d8:	08898440 	call	889844 <__sprint_r>
  8840dc:	103eae1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8840e0:	8c7ffc04 	addi	r17,r17,-16
  8840e4:	d8c02017 	ldw	r3,128(sp)
  8840e8:	d8801f17 	ldw	r2,124(sp)
  8840ec:	da000404 	addi	r8,sp,16
  8840f0:	e47fef16 	blt	fp,r17,8840b0 <___vfprintf_internal_r+0x920>
  8840f4:	9021883a 	mov	r16,r18
  8840f8:	a825883a 	mov	r18,r21
  8840fc:	b02b883a 	mov	r21,r22
  884100:	882d883a 	mov	r22,r17
  884104:	dc402917 	ldw	r17,164(sp)
  884108:	d9002b17 	ldw	r4,172(sp)
  88410c:	1d87883a 	add	r3,r3,r22
  884110:	10800044 	addi	r2,r2,1
  884114:	41000015 	stw	r4,0(r8)
  884118:	45800115 	stw	r22,4(r8)
  88411c:	d8c02015 	stw	r3,128(sp)
  884120:	d8801f15 	stw	r2,124(sp)
  884124:	010001c4 	movi	r4,7
  884128:	2081ee16 	blt	r4,r2,8848e4 <___vfprintf_internal_r+0x1154>
  88412c:	42000204 	addi	r8,r8,8
  884130:	9080400c 	andi	r2,r18,256
  884134:	1001181e 	bne	r2,zero,884598 <___vfprintf_internal_r+0xe08>
  884138:	d9402e17 	ldw	r5,184(sp)
  88413c:	d8801f17 	ldw	r2,124(sp)
  884140:	44000015 	stw	r16,0(r8)
  884144:	1947883a 	add	r3,r3,r5
  884148:	10800044 	addi	r2,r2,1
  88414c:	41400115 	stw	r5,4(r8)
  884150:	d8c02015 	stw	r3,128(sp)
  884154:	d8801f15 	stw	r2,124(sp)
  884158:	010001c4 	movi	r4,7
  88415c:	2081d316 	blt	r4,r2,8848ac <___vfprintf_internal_r+0x111c>
  884160:	42000204 	addi	r8,r8,8
  884164:	9480010c 	andi	r18,r18,4
  884168:	90003226 	beq	r18,zero,884234 <___vfprintf_internal_r+0xaa4>
  88416c:	d9403117 	ldw	r5,196(sp)
  884170:	d8802a17 	ldw	r2,168(sp)
  884174:	28a1c83a 	sub	r16,r5,r2
  884178:	04002e0e 	bge	zero,r16,884234 <___vfprintf_internal_r+0xaa4>
  88417c:	04400404 	movi	r17,16
  884180:	d8801f17 	ldw	r2,124(sp)
  884184:	8c04a20e 	bge	r17,r16,885410 <___vfprintf_internal_r+0x1c80>
  884188:	01402274 	movhi	r5,137
  88418c:	29494b84 	addi	r5,r5,9518
  884190:	d9403515 	stw	r5,212(sp)
  884194:	048001c4 	movi	r18,7
  884198:	dcc02c17 	ldw	r19,176(sp)
  88419c:	00000306 	br	8841ac <___vfprintf_internal_r+0xa1c>
  8841a0:	843ffc04 	addi	r16,r16,-16
  8841a4:	42000204 	addi	r8,r8,8
  8841a8:	8c00130e 	bge	r17,r16,8841f8 <___vfprintf_internal_r+0xa68>
  8841ac:	01002274 	movhi	r4,137
  8841b0:	18c00404 	addi	r3,r3,16
  8841b4:	10800044 	addi	r2,r2,1
  8841b8:	21094b84 	addi	r4,r4,9518
  8841bc:	41000015 	stw	r4,0(r8)
  8841c0:	44400115 	stw	r17,4(r8)
  8841c4:	d8c02015 	stw	r3,128(sp)
  8841c8:	d8801f15 	stw	r2,124(sp)
  8841cc:	90bff40e 	bge	r18,r2,8841a0 <___vfprintf_internal_r+0xa10>
  8841d0:	d9801e04 	addi	r6,sp,120
  8841d4:	b80b883a 	mov	r5,r23
  8841d8:	9809883a 	mov	r4,r19
  8841dc:	08898440 	call	889844 <__sprint_r>
  8841e0:	103e6d1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8841e4:	843ffc04 	addi	r16,r16,-16
  8841e8:	d8c02017 	ldw	r3,128(sp)
  8841ec:	d8801f17 	ldw	r2,124(sp)
  8841f0:	da000404 	addi	r8,sp,16
  8841f4:	8c3fed16 	blt	r17,r16,8841ac <___vfprintf_internal_r+0xa1c>
  8841f8:	d9403517 	ldw	r5,212(sp)
  8841fc:	1c07883a 	add	r3,r3,r16
  884200:	10800044 	addi	r2,r2,1
  884204:	41400015 	stw	r5,0(r8)
  884208:	44000115 	stw	r16,4(r8)
  88420c:	d8c02015 	stw	r3,128(sp)
  884210:	d8801f15 	stw	r2,124(sp)
  884214:	010001c4 	movi	r4,7
  884218:	2080060e 	bge	r4,r2,884234 <___vfprintf_internal_r+0xaa4>
  88421c:	d9002c17 	ldw	r4,176(sp)
  884220:	d9801e04 	addi	r6,sp,120
  884224:	b80b883a 	mov	r5,r23
  884228:	08898440 	call	889844 <__sprint_r>
  88422c:	103e5a1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884230:	d8c02017 	ldw	r3,128(sp)
  884234:	d8803117 	ldw	r2,196(sp)
  884238:	d9002a17 	ldw	r4,168(sp)
  88423c:	1100010e 	bge	r2,r4,884244 <___vfprintf_internal_r+0xab4>
  884240:	2005883a 	mov	r2,r4
  884244:	d9402f17 	ldw	r5,188(sp)
  884248:	288b883a 	add	r5,r5,r2
  88424c:	d9402f15 	stw	r5,188(sp)
  884250:	18019e1e 	bne	r3,zero,8848cc <___vfprintf_internal_r+0x113c>
  884254:	a8800007 	ldb	r2,0(r21)
  884258:	d8001f15 	stw	zero,124(sp)
  88425c:	da000404 	addi	r8,sp,16
  884260:	103d851e 	bne	r2,zero,883878 <___vfprintf_internal_r+0xe8>
  884264:	a821883a 	mov	r16,r21
  884268:	003d9b06 	br	8838d8 <___vfprintf_internal_r+0x148>
  88426c:	18c03fcc 	andi	r3,r3,255
  884270:	1805c11e 	bne	r3,zero,885978 <___vfprintf_internal_r+0x21e8>
  884274:	94800414 	ori	r18,r18,16
  884278:	9080080c 	andi	r2,r18,32
  88427c:	10020c26 	beq	r2,zero,884ab0 <___vfprintf_internal_r+0x1320>
  884280:	d8802d17 	ldw	r2,180(sp)
  884284:	d9002917 	ldw	r4,164(sp)
  884288:	d8002785 	stb	zero,158(sp)
  88428c:	10c00204 	addi	r3,r2,8
  884290:	14c00017 	ldw	r19,0(r2)
  884294:	15800117 	ldw	r22,4(r2)
  884298:	20040f16 	blt	r4,zero,8852d8 <___vfprintf_internal_r+0x1b48>
  88429c:	013fdfc4 	movi	r4,-129
  8842a0:	9d84b03a 	or	r2,r19,r22
  8842a4:	d8c02d15 	stw	r3,180(sp)
  8842a8:	9124703a 	and	r18,r18,r4
  8842ac:	0039883a 	mov	fp,zero
  8842b0:	103e891e 	bne	r2,zero,883cd8 <___vfprintf_internal_r+0x548>
  8842b4:	d9002917 	ldw	r4,164(sp)
  8842b8:	2002c11e 	bne	r4,zero,884dc0 <___vfprintf_internal_r+0x1630>
  8842bc:	d8002915 	stw	zero,164(sp)
  8842c0:	d8002e15 	stw	zero,184(sp)
  8842c4:	dc001e04 	addi	r16,sp,120
  8842c8:	003ef806 	br	883eac <___vfprintf_internal_r+0x71c>
  8842cc:	18c03fcc 	andi	r3,r3,255
  8842d0:	18059d1e 	bne	r3,zero,885948 <___vfprintf_internal_r+0x21b8>
  8842d4:	01402274 	movhi	r5,137
  8842d8:	29493b04 	addi	r5,r5,9452
  8842dc:	d9403915 	stw	r5,228(sp)
  8842e0:	9080080c 	andi	r2,r18,32
  8842e4:	10005226 	beq	r2,zero,884430 <___vfprintf_internal_r+0xca0>
  8842e8:	d8802d17 	ldw	r2,180(sp)
  8842ec:	14c00017 	ldw	r19,0(r2)
  8842f0:	15800117 	ldw	r22,4(r2)
  8842f4:	10800204 	addi	r2,r2,8
  8842f8:	d8802d15 	stw	r2,180(sp)
  8842fc:	9080004c 	andi	r2,r18,1
  884300:	10019026 	beq	r2,zero,884944 <___vfprintf_internal_r+0x11b4>
  884304:	9d84b03a 	or	r2,r19,r22
  884308:	10036926 	beq	r2,zero,8850b0 <___vfprintf_internal_r+0x1920>
  88430c:	d8c02917 	ldw	r3,164(sp)
  884310:	00800c04 	movi	r2,48
  884314:	d8802705 	stb	r2,156(sp)
  884318:	dc402745 	stb	r17,157(sp)
  88431c:	d8002785 	stb	zero,158(sp)
  884320:	90800094 	ori	r2,r18,2
  884324:	18045d16 	blt	r3,zero,88549c <___vfprintf_internal_r+0x1d0c>
  884328:	00bfdfc4 	movi	r2,-129
  88432c:	90a4703a 	and	r18,r18,r2
  884330:	94800094 	ori	r18,r18,2
  884334:	0039883a 	mov	fp,zero
  884338:	d9003917 	ldw	r4,228(sp)
  88433c:	dc001e04 	addi	r16,sp,120
  884340:	988003cc 	andi	r2,r19,15
  884344:	b006973a 	slli	r3,r22,28
  884348:	2085883a 	add	r2,r4,r2
  88434c:	9826d13a 	srli	r19,r19,4
  884350:	10800003 	ldbu	r2,0(r2)
  884354:	b02cd13a 	srli	r22,r22,4
  884358:	843fffc4 	addi	r16,r16,-1
  88435c:	1ce6b03a 	or	r19,r3,r19
  884360:	80800005 	stb	r2,0(r16)
  884364:	9d84b03a 	or	r2,r19,r22
  884368:	103ff51e 	bne	r2,zero,884340 <___vfprintf_internal_r+0xbb0>
  88436c:	d8c02817 	ldw	r3,160(sp)
  884370:	1c07c83a 	sub	r3,r3,r16
  884374:	d8c02e15 	stw	r3,184(sp)
  884378:	003ecc06 	br	883eac <___vfprintf_internal_r+0x71c>
  88437c:	18c03fcc 	andi	r3,r3,255
  884380:	183e9f26 	beq	r3,zero,883e00 <___vfprintf_internal_r+0x670>
  884384:	d9c02785 	stb	r7,158(sp)
  884388:	003e9d06 	br	883e00 <___vfprintf_internal_r+0x670>
  88438c:	00c00044 	movi	r3,1
  884390:	01c00ac4 	movi	r7,43
  884394:	ac400007 	ldb	r17,0(r21)
  884398:	003d5e06 	br	883914 <___vfprintf_internal_r+0x184>
  88439c:	94800814 	ori	r18,r18,32
  8843a0:	ac400007 	ldb	r17,0(r21)
  8843a4:	003d5b06 	br	883914 <___vfprintf_internal_r+0x184>
  8843a8:	d8c02d17 	ldw	r3,180(sp)
  8843ac:	d8002785 	stb	zero,158(sp)
  8843b0:	1c000017 	ldw	r16,0(r3)
  8843b4:	1cc00104 	addi	r19,r3,4
  8843b8:	80041926 	beq	r16,zero,885420 <___vfprintf_internal_r+0x1c90>
  8843bc:	d9002917 	ldw	r4,164(sp)
  8843c0:	2003d016 	blt	r4,zero,885304 <___vfprintf_internal_r+0x1b74>
  8843c4:	200d883a 	mov	r6,r4
  8843c8:	000b883a 	mov	r5,zero
  8843cc:	8009883a 	mov	r4,r16
  8843d0:	da003d15 	stw	r8,244(sp)
  8843d4:	08882d80 	call	8882d8 <memchr>
  8843d8:	da003d17 	ldw	r8,244(sp)
  8843dc:	10045426 	beq	r2,zero,885530 <___vfprintf_internal_r+0x1da0>
  8843e0:	1405c83a 	sub	r2,r2,r16
  8843e4:	d8802e15 	stw	r2,184(sp)
  8843e8:	1003cc16 	blt	r2,zero,88531c <___vfprintf_internal_r+0x1b8c>
  8843ec:	df002783 	ldbu	fp,158(sp)
  8843f0:	d8802a15 	stw	r2,168(sp)
  8843f4:	dcc02d15 	stw	r19,180(sp)
  8843f8:	d8002915 	stw	zero,164(sp)
  8843fc:	d8003215 	stw	zero,200(sp)
  884400:	003eb006 	br	883ec4 <___vfprintf_internal_r+0x734>
  884404:	18c03fcc 	andi	r3,r3,255
  884408:	183f9b26 	beq	r3,zero,884278 <___vfprintf_internal_r+0xae8>
  88440c:	d9c02785 	stb	r7,158(sp)
  884410:	003f9906 	br	884278 <___vfprintf_internal_r+0xae8>
  884414:	18c03fcc 	andi	r3,r3,255
  884418:	1805551e 	bne	r3,zero,885970 <___vfprintf_internal_r+0x21e0>
  88441c:	01402274 	movhi	r5,137
  884420:	29494004 	addi	r5,r5,9472
  884424:	d9403915 	stw	r5,228(sp)
  884428:	9080080c 	andi	r2,r18,32
  88442c:	103fae1e 	bne	r2,zero,8842e8 <___vfprintf_internal_r+0xb58>
  884430:	9080040c 	andi	r2,r18,16
  884434:	1002de26 	beq	r2,zero,884fb0 <___vfprintf_internal_r+0x1820>
  884438:	d8c02d17 	ldw	r3,180(sp)
  88443c:	002d883a 	mov	r22,zero
  884440:	1cc00017 	ldw	r19,0(r3)
  884444:	18c00104 	addi	r3,r3,4
  884448:	d8c02d15 	stw	r3,180(sp)
  88444c:	003fab06 	br	8842fc <___vfprintf_internal_r+0xb6c>
  884450:	38803fcc 	andi	r2,r7,255
  884454:	1080201c 	xori	r2,r2,128
  884458:	10bfe004 	addi	r2,r2,-128
  88445c:	1002d21e 	bne	r2,zero,884fa8 <___vfprintf_internal_r+0x1818>
  884460:	00c00044 	movi	r3,1
  884464:	01c00804 	movi	r7,32
  884468:	ac400007 	ldb	r17,0(r21)
  88446c:	003d2906 	br	883914 <___vfprintf_internal_r+0x184>
  884470:	94800054 	ori	r18,r18,1
  884474:	ac400007 	ldb	r17,0(r21)
  884478:	003d2606 	br	883914 <___vfprintf_internal_r+0x184>
  88447c:	18c03fcc 	andi	r3,r3,255
  884480:	183e0526 	beq	r3,zero,883c98 <___vfprintf_internal_r+0x508>
  884484:	d9c02785 	stb	r7,158(sp)
  884488:	003e0306 	br	883c98 <___vfprintf_internal_r+0x508>
  88448c:	94801014 	ori	r18,r18,64
  884490:	ac400007 	ldb	r17,0(r21)
  884494:	003d1f06 	br	883914 <___vfprintf_internal_r+0x184>
  884498:	ac400007 	ldb	r17,0(r21)
  88449c:	8a438726 	beq	r17,r9,8852bc <___vfprintf_internal_r+0x1b2c>
  8844a0:	94800414 	ori	r18,r18,16
  8844a4:	003d1b06 	br	883914 <___vfprintf_internal_r+0x184>
  8844a8:	18c03fcc 	andi	r3,r3,255
  8844ac:	1805341e 	bne	r3,zero,885980 <___vfprintf_internal_r+0x21f0>
  8844b0:	9080080c 	andi	r2,r18,32
  8844b4:	1002cd26 	beq	r2,zero,884fec <___vfprintf_internal_r+0x185c>
  8844b8:	d9402d17 	ldw	r5,180(sp)
  8844bc:	d9002f17 	ldw	r4,188(sp)
  8844c0:	28800017 	ldw	r2,0(r5)
  8844c4:	2007d7fa 	srai	r3,r4,31
  8844c8:	29400104 	addi	r5,r5,4
  8844cc:	d9402d15 	stw	r5,180(sp)
  8844d0:	11000015 	stw	r4,0(r2)
  8844d4:	10c00115 	stw	r3,4(r2)
  8844d8:	003ce506 	br	883870 <___vfprintf_internal_r+0xe0>
  8844dc:	d8c02d17 	ldw	r3,180(sp)
  8844e0:	d9002d17 	ldw	r4,180(sp)
  8844e4:	d8002785 	stb	zero,158(sp)
  8844e8:	18800017 	ldw	r2,0(r3)
  8844ec:	21000104 	addi	r4,r4,4
  8844f0:	00c00044 	movi	r3,1
  8844f4:	d8c02a15 	stw	r3,168(sp)
  8844f8:	d8801405 	stb	r2,80(sp)
  8844fc:	d9002d15 	stw	r4,180(sp)
  884500:	d8c02e15 	stw	r3,184(sp)
  884504:	d8002915 	stw	zero,164(sp)
  884508:	d8003215 	stw	zero,200(sp)
  88450c:	dc001404 	addi	r16,sp,80
  884510:	0039883a 	mov	fp,zero
  884514:	003e7206 	br	883ee0 <___vfprintf_internal_r+0x750>
  884518:	01002274 	movhi	r4,137
  88451c:	21094004 	addi	r4,r4,9472
  884520:	0039883a 	mov	fp,zero
  884524:	d9003915 	stw	r4,228(sp)
  884528:	04401e04 	movi	r17,120
  88452c:	003f8206 	br	884338 <___vfprintf_internal_r+0xba8>
  884530:	18c03fcc 	andi	r3,r3,255
  884534:	1805061e 	bne	r3,zero,885950 <___vfprintf_internal_r+0x21c0>
  884538:	883d9126 	beq	r17,zero,883b80 <___vfprintf_internal_r+0x3f0>
  88453c:	00c00044 	movi	r3,1
  884540:	d8c02a15 	stw	r3,168(sp)
  884544:	dc401405 	stb	r17,80(sp)
  884548:	d8002785 	stb	zero,158(sp)
  88454c:	003fec06 	br	884500 <___vfprintf_internal_r+0xd70>
  884550:	01402274 	movhi	r5,137
  884554:	29494004 	addi	r5,r5,9472
  884558:	d9403915 	stw	r5,228(sp)
  88455c:	d8c02d15 	stw	r3,180(sp)
  884560:	1025883a 	mov	r18,r2
  884564:	04401e04 	movi	r17,120
  884568:	9d84b03a 	or	r2,r19,r22
  88456c:	1000fc1e 	bne	r2,zero,884960 <___vfprintf_internal_r+0x11d0>
  884570:	0039883a 	mov	fp,zero
  884574:	00800084 	movi	r2,2
  884578:	10803fcc 	andi	r2,r2,255
  88457c:	00c00044 	movi	r3,1
  884580:	10c20f26 	beq	r2,r3,884dc0 <___vfprintf_internal_r+0x1630>
  884584:	00c00084 	movi	r3,2
  884588:	10fd6326 	beq	r2,r3,883b18 <___vfprintf_internal_r+0x388>
  88458c:	003e2d06 	br	883e44 <___vfprintf_internal_r+0x6b4>
  884590:	d8c02017 	ldw	r3,128(sp)
  884594:	003e9306 	br	883fe4 <___vfprintf_internal_r+0x854>
  884598:	00801944 	movi	r2,101
  88459c:	14407e0e 	bge	r2,r17,884798 <___vfprintf_internal_r+0x1008>
  8845a0:	d9003617 	ldw	r4,216(sp)
  8845a4:	d9403817 	ldw	r5,224(sp)
  8845a8:	000d883a 	mov	r6,zero
  8845ac:	000f883a 	mov	r7,zero
  8845b0:	d8c03c15 	stw	r3,240(sp)
  8845b4:	da003d15 	stw	r8,244(sp)
  8845b8:	088e0380 	call	88e038 <__eqdf2>
  8845bc:	d8c03c17 	ldw	r3,240(sp)
  8845c0:	da003d17 	ldw	r8,244(sp)
  8845c4:	1000f71e 	bne	r2,zero,8849a4 <___vfprintf_internal_r+0x1214>
  8845c8:	d8801f17 	ldw	r2,124(sp)
  8845cc:	01002274 	movhi	r4,137
  8845d0:	21094704 	addi	r4,r4,9500
  8845d4:	18c00044 	addi	r3,r3,1
  8845d8:	10800044 	addi	r2,r2,1
  8845dc:	41000015 	stw	r4,0(r8)
  8845e0:	01000044 	movi	r4,1
  8845e4:	41000115 	stw	r4,4(r8)
  8845e8:	d8c02015 	stw	r3,128(sp)
  8845ec:	d8801f15 	stw	r2,124(sp)
  8845f0:	010001c4 	movi	r4,7
  8845f4:	2082b816 	blt	r4,r2,8850d8 <___vfprintf_internal_r+0x1948>
  8845f8:	42000204 	addi	r8,r8,8
  8845fc:	d8802617 	ldw	r2,152(sp)
  884600:	d9403317 	ldw	r5,204(sp)
  884604:	11400216 	blt	r2,r5,884610 <___vfprintf_internal_r+0xe80>
  884608:	9080004c 	andi	r2,r18,1
  88460c:	103ed526 	beq	r2,zero,884164 <___vfprintf_internal_r+0x9d4>
  884610:	d8803717 	ldw	r2,220(sp)
  884614:	d9003417 	ldw	r4,208(sp)
  884618:	d9403717 	ldw	r5,220(sp)
  88461c:	1887883a 	add	r3,r3,r2
  884620:	d8801f17 	ldw	r2,124(sp)
  884624:	41000015 	stw	r4,0(r8)
  884628:	41400115 	stw	r5,4(r8)
  88462c:	10800044 	addi	r2,r2,1
  884630:	d8c02015 	stw	r3,128(sp)
  884634:	d8801f15 	stw	r2,124(sp)
  884638:	010001c4 	movi	r4,7
  88463c:	20832916 	blt	r4,r2,8852e4 <___vfprintf_internal_r+0x1b54>
  884640:	42000204 	addi	r8,r8,8
  884644:	d8803317 	ldw	r2,204(sp)
  884648:	143fffc4 	addi	r16,r2,-1
  88464c:	043ec50e 	bge	zero,r16,884164 <___vfprintf_internal_r+0x9d4>
  884650:	04400404 	movi	r17,16
  884654:	d8801f17 	ldw	r2,124(sp)
  884658:	8c00880e 	bge	r17,r16,88487c <___vfprintf_internal_r+0x10ec>
  88465c:	01402274 	movhi	r5,137
  884660:	29494784 	addi	r5,r5,9502
  884664:	d9402b15 	stw	r5,172(sp)
  884668:	058001c4 	movi	r22,7
  88466c:	dcc02c17 	ldw	r19,176(sp)
  884670:	00000306 	br	884680 <___vfprintf_internal_r+0xef0>
  884674:	42000204 	addi	r8,r8,8
  884678:	843ffc04 	addi	r16,r16,-16
  88467c:	8c00820e 	bge	r17,r16,884888 <___vfprintf_internal_r+0x10f8>
  884680:	18c00404 	addi	r3,r3,16
  884684:	10800044 	addi	r2,r2,1
  884688:	45000015 	stw	r20,0(r8)
  88468c:	44400115 	stw	r17,4(r8)
  884690:	d8c02015 	stw	r3,128(sp)
  884694:	d8801f15 	stw	r2,124(sp)
  884698:	b0bff60e 	bge	r22,r2,884674 <___vfprintf_internal_r+0xee4>
  88469c:	d9801e04 	addi	r6,sp,120
  8846a0:	b80b883a 	mov	r5,r23
  8846a4:	9809883a 	mov	r4,r19
  8846a8:	08898440 	call	889844 <__sprint_r>
  8846ac:	103d3a1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8846b0:	d8c02017 	ldw	r3,128(sp)
  8846b4:	d8801f17 	ldw	r2,124(sp)
  8846b8:	da000404 	addi	r8,sp,16
  8846bc:	003fee06 	br	884678 <___vfprintf_internal_r+0xee8>
  8846c0:	d9403117 	ldw	r5,196(sp)
  8846c4:	d8802a17 	ldw	r2,168(sp)
  8846c8:	28adc83a 	sub	r22,r5,r2
  8846cc:	05be630e 	bge	zero,r22,88405c <___vfprintf_internal_r+0x8cc>
  8846d0:	07000404 	movi	fp,16
  8846d4:	d8801f17 	ldw	r2,124(sp)
  8846d8:	e5838f0e 	bge	fp,r22,885518 <___vfprintf_internal_r+0x1d88>
  8846dc:	01402274 	movhi	r5,137
  8846e0:	29494784 	addi	r5,r5,9502
  8846e4:	dc403015 	stw	r17,192(sp)
  8846e8:	d9402b15 	stw	r5,172(sp)
  8846ec:	b023883a 	mov	r17,r22
  8846f0:	04c001c4 	movi	r19,7
  8846f4:	a82d883a 	mov	r22,r21
  8846f8:	902b883a 	mov	r21,r18
  8846fc:	8025883a 	mov	r18,r16
  884700:	dc002c17 	ldw	r16,176(sp)
  884704:	00000306 	br	884714 <___vfprintf_internal_r+0xf84>
  884708:	8c7ffc04 	addi	r17,r17,-16
  88470c:	42000204 	addi	r8,r8,8
  884710:	e440110e 	bge	fp,r17,884758 <___vfprintf_internal_r+0xfc8>
  884714:	18c00404 	addi	r3,r3,16
  884718:	10800044 	addi	r2,r2,1
  88471c:	45000015 	stw	r20,0(r8)
  884720:	47000115 	stw	fp,4(r8)
  884724:	d8c02015 	stw	r3,128(sp)
  884728:	d8801f15 	stw	r2,124(sp)
  88472c:	98bff60e 	bge	r19,r2,884708 <___vfprintf_internal_r+0xf78>
  884730:	d9801e04 	addi	r6,sp,120
  884734:	b80b883a 	mov	r5,r23
  884738:	8009883a 	mov	r4,r16
  88473c:	08898440 	call	889844 <__sprint_r>
  884740:	103d151e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884744:	8c7ffc04 	addi	r17,r17,-16
  884748:	d8c02017 	ldw	r3,128(sp)
  88474c:	d8801f17 	ldw	r2,124(sp)
  884750:	da000404 	addi	r8,sp,16
  884754:	e47fef16 	blt	fp,r17,884714 <___vfprintf_internal_r+0xf84>
  884758:	9021883a 	mov	r16,r18
  88475c:	a825883a 	mov	r18,r21
  884760:	b02b883a 	mov	r21,r22
  884764:	882d883a 	mov	r22,r17
  884768:	dc403017 	ldw	r17,192(sp)
  88476c:	d9002b17 	ldw	r4,172(sp)
  884770:	1d87883a 	add	r3,r3,r22
  884774:	10800044 	addi	r2,r2,1
  884778:	41000015 	stw	r4,0(r8)
  88477c:	45800115 	stw	r22,4(r8)
  884780:	d8c02015 	stw	r3,128(sp)
  884784:	d8801f15 	stw	r2,124(sp)
  884788:	010001c4 	movi	r4,7
  88478c:	20818e16 	blt	r4,r2,884dc8 <___vfprintf_internal_r+0x1638>
  884790:	42000204 	addi	r8,r8,8
  884794:	003e3106 	br	88405c <___vfprintf_internal_r+0x8cc>
  884798:	d9403317 	ldw	r5,204(sp)
  88479c:	00800044 	movi	r2,1
  8847a0:	18c00044 	addi	r3,r3,1
  8847a4:	1141530e 	bge	r2,r5,884cf4 <___vfprintf_internal_r+0x1564>
  8847a8:	dc401f17 	ldw	r17,124(sp)
  8847ac:	00800044 	movi	r2,1
  8847b0:	40800115 	stw	r2,4(r8)
  8847b4:	8c400044 	addi	r17,r17,1
  8847b8:	44000015 	stw	r16,0(r8)
  8847bc:	d8c02015 	stw	r3,128(sp)
  8847c0:	dc401f15 	stw	r17,124(sp)
  8847c4:	008001c4 	movi	r2,7
  8847c8:	14416b16 	blt	r2,r17,884d78 <___vfprintf_internal_r+0x15e8>
  8847cc:	42000204 	addi	r8,r8,8
  8847d0:	d8803717 	ldw	r2,220(sp)
  8847d4:	d9003417 	ldw	r4,208(sp)
  8847d8:	8c400044 	addi	r17,r17,1
  8847dc:	10c7883a 	add	r3,r2,r3
  8847e0:	40800115 	stw	r2,4(r8)
  8847e4:	41000015 	stw	r4,0(r8)
  8847e8:	d8c02015 	stw	r3,128(sp)
  8847ec:	dc401f15 	stw	r17,124(sp)
  8847f0:	008001c4 	movi	r2,7
  8847f4:	14416916 	blt	r2,r17,884d9c <___vfprintf_internal_r+0x160c>
  8847f8:	45800204 	addi	r22,r8,8
  8847fc:	d9003617 	ldw	r4,216(sp)
  884800:	d9403817 	ldw	r5,224(sp)
  884804:	000d883a 	mov	r6,zero
  884808:	000f883a 	mov	r7,zero
  88480c:	d8c03c15 	stw	r3,240(sp)
  884810:	088e0380 	call	88e038 <__eqdf2>
  884814:	d8c03c17 	ldw	r3,240(sp)
  884818:	1000bc26 	beq	r2,zero,884b0c <___vfprintf_internal_r+0x137c>
  88481c:	d9403317 	ldw	r5,204(sp)
  884820:	84000044 	addi	r16,r16,1
  884824:	8c400044 	addi	r17,r17,1
  884828:	28bfffc4 	addi	r2,r5,-1
  88482c:	1887883a 	add	r3,r3,r2
  884830:	b0800115 	stw	r2,4(r22)
  884834:	b4000015 	stw	r16,0(r22)
  884838:	d8c02015 	stw	r3,128(sp)
  88483c:	dc401f15 	stw	r17,124(sp)
  884840:	008001c4 	movi	r2,7
  884844:	14414316 	blt	r2,r17,884d54 <___vfprintf_internal_r+0x15c4>
  884848:	b5800204 	addi	r22,r22,8
  88484c:	d9003a17 	ldw	r4,232(sp)
  884850:	df0022c4 	addi	fp,sp,139
  884854:	8c400044 	addi	r17,r17,1
  884858:	20c7883a 	add	r3,r4,r3
  88485c:	b7000015 	stw	fp,0(r22)
  884860:	b1000115 	stw	r4,4(r22)
  884864:	d8c02015 	stw	r3,128(sp)
  884868:	dc401f15 	stw	r17,124(sp)
  88486c:	008001c4 	movi	r2,7
  884870:	14400e16 	blt	r2,r17,8848ac <___vfprintf_internal_r+0x111c>
  884874:	b2000204 	addi	r8,r22,8
  884878:	003e3a06 	br	884164 <___vfprintf_internal_r+0x9d4>
  88487c:	01002274 	movhi	r4,137
  884880:	21094784 	addi	r4,r4,9502
  884884:	d9002b15 	stw	r4,172(sp)
  884888:	d9002b17 	ldw	r4,172(sp)
  88488c:	1c07883a 	add	r3,r3,r16
  884890:	44000115 	stw	r16,4(r8)
  884894:	41000015 	stw	r4,0(r8)
  884898:	10800044 	addi	r2,r2,1
  88489c:	d8c02015 	stw	r3,128(sp)
  8848a0:	d8801f15 	stw	r2,124(sp)
  8848a4:	010001c4 	movi	r4,7
  8848a8:	20be2d0e 	bge	r4,r2,884160 <___vfprintf_internal_r+0x9d0>
  8848ac:	d9002c17 	ldw	r4,176(sp)
  8848b0:	d9801e04 	addi	r6,sp,120
  8848b4:	b80b883a 	mov	r5,r23
  8848b8:	08898440 	call	889844 <__sprint_r>
  8848bc:	103cb61e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8848c0:	d8c02017 	ldw	r3,128(sp)
  8848c4:	da000404 	addi	r8,sp,16
  8848c8:	003e2606 	br	884164 <___vfprintf_internal_r+0x9d4>
  8848cc:	d9002c17 	ldw	r4,176(sp)
  8848d0:	d9801e04 	addi	r6,sp,120
  8848d4:	b80b883a 	mov	r5,r23
  8848d8:	08898440 	call	889844 <__sprint_r>
  8848dc:	103e5d26 	beq	r2,zero,884254 <___vfprintf_internal_r+0xac4>
  8848e0:	003cad06 	br	883b98 <___vfprintf_internal_r+0x408>
  8848e4:	d9002c17 	ldw	r4,176(sp)
  8848e8:	d9801e04 	addi	r6,sp,120
  8848ec:	b80b883a 	mov	r5,r23
  8848f0:	08898440 	call	889844 <__sprint_r>
  8848f4:	103ca81e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8848f8:	d8c02017 	ldw	r3,128(sp)
  8848fc:	da000404 	addi	r8,sp,16
  884900:	003e0b06 	br	884130 <___vfprintf_internal_r+0x9a0>
  884904:	d9002c17 	ldw	r4,176(sp)
  884908:	d9801e04 	addi	r6,sp,120
  88490c:	b80b883a 	mov	r5,r23
  884910:	08898440 	call	889844 <__sprint_r>
  884914:	103ca01e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884918:	d8c02017 	ldw	r3,128(sp)
  88491c:	da000404 	addi	r8,sp,16
  884920:	003dbd06 	br	884018 <___vfprintf_internal_r+0x888>
  884924:	d9002c17 	ldw	r4,176(sp)
  884928:	d9801e04 	addi	r6,sp,120
  88492c:	b80b883a 	mov	r5,r23
  884930:	08898440 	call	889844 <__sprint_r>
  884934:	103c981e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884938:	d8c02017 	ldw	r3,128(sp)
  88493c:	da000404 	addi	r8,sp,16
  884940:	003dc306 	br	884050 <___vfprintf_internal_r+0x8c0>
  884944:	d8802917 	ldw	r2,164(sp)
  884948:	d8002785 	stb	zero,158(sp)
  88494c:	103f0616 	blt	r2,zero,884568 <___vfprintf_internal_r+0xdd8>
  884950:	00ffdfc4 	movi	r3,-129
  884954:	9d84b03a 	or	r2,r19,r22
  884958:	90e4703a 	and	r18,r18,r3
  88495c:	103c6b26 	beq	r2,zero,883b0c <___vfprintf_internal_r+0x37c>
  884960:	0039883a 	mov	fp,zero
  884964:	003e7406 	br	884338 <___vfprintf_internal_r+0xba8>
  884968:	9080040c 	andi	r2,r18,16
  88496c:	1001b326 	beq	r2,zero,88503c <___vfprintf_internal_r+0x18ac>
  884970:	d9002d17 	ldw	r4,180(sp)
  884974:	d9402917 	ldw	r5,164(sp)
  884978:	d8002785 	stb	zero,158(sp)
  88497c:	20800104 	addi	r2,r4,4
  884980:	24c00017 	ldw	r19,0(r4)
  884984:	002d883a 	mov	r22,zero
  884988:	2801b516 	blt	r5,zero,885060 <___vfprintf_internal_r+0x18d0>
  88498c:	00ffdfc4 	movi	r3,-129
  884990:	d8802d15 	stw	r2,180(sp)
  884994:	90e4703a 	and	r18,r18,r3
  884998:	983d2726 	beq	r19,zero,883e38 <___vfprintf_internal_r+0x6a8>
  88499c:	0039883a 	mov	fp,zero
  8849a0:	003d2a06 	br	883e4c <___vfprintf_internal_r+0x6bc>
  8849a4:	dc402617 	ldw	r17,152(sp)
  8849a8:	0441d30e 	bge	zero,r17,8850f8 <___vfprintf_internal_r+0x1968>
  8849ac:	dc403217 	ldw	r17,200(sp)
  8849b0:	d8803317 	ldw	r2,204(sp)
  8849b4:	1440010e 	bge	r2,r17,8849bc <___vfprintf_internal_r+0x122c>
  8849b8:	1023883a 	mov	r17,r2
  8849bc:	04400a0e 	bge	zero,r17,8849e8 <___vfprintf_internal_r+0x1258>
  8849c0:	d8801f17 	ldw	r2,124(sp)
  8849c4:	1c47883a 	add	r3,r3,r17
  8849c8:	44000015 	stw	r16,0(r8)
  8849cc:	10800044 	addi	r2,r2,1
  8849d0:	44400115 	stw	r17,4(r8)
  8849d4:	d8c02015 	stw	r3,128(sp)
  8849d8:	d8801f15 	stw	r2,124(sp)
  8849dc:	010001c4 	movi	r4,7
  8849e0:	20826516 	blt	r4,r2,885378 <___vfprintf_internal_r+0x1be8>
  8849e4:	42000204 	addi	r8,r8,8
  8849e8:	88026116 	blt	r17,zero,885370 <___vfprintf_internal_r+0x1be0>
  8849ec:	d9003217 	ldw	r4,200(sp)
  8849f0:	2463c83a 	sub	r17,r4,r17
  8849f4:	04407b0e 	bge	zero,r17,884be4 <___vfprintf_internal_r+0x1454>
  8849f8:	05800404 	movi	r22,16
  8849fc:	d8801f17 	ldw	r2,124(sp)
  884a00:	b4419d0e 	bge	r22,r17,885078 <___vfprintf_internal_r+0x18e8>
  884a04:	01002274 	movhi	r4,137
  884a08:	21094784 	addi	r4,r4,9502
  884a0c:	d9002b15 	stw	r4,172(sp)
  884a10:	070001c4 	movi	fp,7
  884a14:	dcc02c17 	ldw	r19,176(sp)
  884a18:	00000306 	br	884a28 <___vfprintf_internal_r+0x1298>
  884a1c:	42000204 	addi	r8,r8,8
  884a20:	8c7ffc04 	addi	r17,r17,-16
  884a24:	b441970e 	bge	r22,r17,885084 <___vfprintf_internal_r+0x18f4>
  884a28:	18c00404 	addi	r3,r3,16
  884a2c:	10800044 	addi	r2,r2,1
  884a30:	45000015 	stw	r20,0(r8)
  884a34:	45800115 	stw	r22,4(r8)
  884a38:	d8c02015 	stw	r3,128(sp)
  884a3c:	d8801f15 	stw	r2,124(sp)
  884a40:	e0bff60e 	bge	fp,r2,884a1c <___vfprintf_internal_r+0x128c>
  884a44:	d9801e04 	addi	r6,sp,120
  884a48:	b80b883a 	mov	r5,r23
  884a4c:	9809883a 	mov	r4,r19
  884a50:	08898440 	call	889844 <__sprint_r>
  884a54:	103c501e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884a58:	d8c02017 	ldw	r3,128(sp)
  884a5c:	d8801f17 	ldw	r2,124(sp)
  884a60:	da000404 	addi	r8,sp,16
  884a64:	003fee06 	br	884a20 <___vfprintf_internal_r+0x1290>
  884a68:	d9002c17 	ldw	r4,176(sp)
  884a6c:	d9801e04 	addi	r6,sp,120
  884a70:	b80b883a 	mov	r5,r23
  884a74:	08898440 	call	889844 <__sprint_r>
  884a78:	103c471e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884a7c:	d8c02017 	ldw	r3,128(sp)
  884a80:	df002787 	ldb	fp,158(sp)
  884a84:	da000404 	addi	r8,sp,16
  884a88:	003d5606 	br	883fe4 <___vfprintf_internal_r+0x854>
  884a8c:	9080040c 	andi	r2,r18,16
  884a90:	10016126 	beq	r2,zero,885018 <___vfprintf_internal_r+0x1888>
  884a94:	d8802d17 	ldw	r2,180(sp)
  884a98:	14c00017 	ldw	r19,0(r2)
  884a9c:	10800104 	addi	r2,r2,4
  884aa0:	d8802d15 	stw	r2,180(sp)
  884aa4:	982dd7fa 	srai	r22,r19,31
  884aa8:	b005883a 	mov	r2,r22
  884aac:	003c8206 	br	883cb8 <___vfprintf_internal_r+0x528>
  884ab0:	9080040c 	andi	r2,r18,16
  884ab4:	10003526 	beq	r2,zero,884b8c <___vfprintf_internal_r+0x13fc>
  884ab8:	d9402d17 	ldw	r5,180(sp)
  884abc:	d8c02917 	ldw	r3,164(sp)
  884ac0:	d8002785 	stb	zero,158(sp)
  884ac4:	28800104 	addi	r2,r5,4
  884ac8:	2cc00017 	ldw	r19,0(r5)
  884acc:	002d883a 	mov	r22,zero
  884ad0:	18003716 	blt	r3,zero,884bb0 <___vfprintf_internal_r+0x1420>
  884ad4:	00ffdfc4 	movi	r3,-129
  884ad8:	d8802d15 	stw	r2,180(sp)
  884adc:	90e4703a 	and	r18,r18,r3
  884ae0:	0039883a 	mov	fp,zero
  884ae4:	983df326 	beq	r19,zero,8842b4 <___vfprintf_internal_r+0xb24>
  884ae8:	00800244 	movi	r2,9
  884aec:	14fc7b36 	bltu	r2,r19,883cdc <___vfprintf_internal_r+0x54c>
  884af0:	d8c02817 	ldw	r3,160(sp)
  884af4:	dc001dc4 	addi	r16,sp,119
  884af8:	9cc00c04 	addi	r19,r19,48
  884afc:	1c07c83a 	sub	r3,r3,r16
  884b00:	dcc01dc5 	stb	r19,119(sp)
  884b04:	d8c02e15 	stw	r3,184(sp)
  884b08:	003ce806 	br	883eac <___vfprintf_internal_r+0x71c>
  884b0c:	d8803317 	ldw	r2,204(sp)
  884b10:	143fffc4 	addi	r16,r2,-1
  884b14:	043f4d0e 	bge	zero,r16,88484c <___vfprintf_internal_r+0x10bc>
  884b18:	07000404 	movi	fp,16
  884b1c:	e400810e 	bge	fp,r16,884d24 <___vfprintf_internal_r+0x1594>
  884b20:	01402274 	movhi	r5,137
  884b24:	29494784 	addi	r5,r5,9502
  884b28:	d9402b15 	stw	r5,172(sp)
  884b2c:	01c001c4 	movi	r7,7
  884b30:	dcc02c17 	ldw	r19,176(sp)
  884b34:	00000306 	br	884b44 <___vfprintf_internal_r+0x13b4>
  884b38:	b5800204 	addi	r22,r22,8
  884b3c:	843ffc04 	addi	r16,r16,-16
  884b40:	e4007b0e 	bge	fp,r16,884d30 <___vfprintf_internal_r+0x15a0>
  884b44:	18c00404 	addi	r3,r3,16
  884b48:	8c400044 	addi	r17,r17,1
  884b4c:	b5000015 	stw	r20,0(r22)
  884b50:	b7000115 	stw	fp,4(r22)
  884b54:	d8c02015 	stw	r3,128(sp)
  884b58:	dc401f15 	stw	r17,124(sp)
  884b5c:	3c7ff60e 	bge	r7,r17,884b38 <___vfprintf_internal_r+0x13a8>
  884b60:	d9801e04 	addi	r6,sp,120
  884b64:	b80b883a 	mov	r5,r23
  884b68:	9809883a 	mov	r4,r19
  884b6c:	d9c03c15 	stw	r7,240(sp)
  884b70:	08898440 	call	889844 <__sprint_r>
  884b74:	d9c03c17 	ldw	r7,240(sp)
  884b78:	103c071e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884b7c:	d8c02017 	ldw	r3,128(sp)
  884b80:	dc401f17 	ldw	r17,124(sp)
  884b84:	dd800404 	addi	r22,sp,16
  884b88:	003fec06 	br	884b3c <___vfprintf_internal_r+0x13ac>
  884b8c:	9080100c 	andi	r2,r18,64
  884b90:	d8002785 	stb	zero,158(sp)
  884b94:	10010e26 	beq	r2,zero,884fd0 <___vfprintf_internal_r+0x1840>
  884b98:	d9002d17 	ldw	r4,180(sp)
  884b9c:	d9402917 	ldw	r5,164(sp)
  884ba0:	002d883a 	mov	r22,zero
  884ba4:	20800104 	addi	r2,r4,4
  884ba8:	24c0000b 	ldhu	r19,0(r4)
  884bac:	283fc90e 	bge	r5,zero,884ad4 <___vfprintf_internal_r+0x1344>
  884bb0:	d8802d15 	stw	r2,180(sp)
  884bb4:	0039883a 	mov	fp,zero
  884bb8:	9d84b03a 	or	r2,r19,r22
  884bbc:	103c461e 	bne	r2,zero,883cd8 <___vfprintf_internal_r+0x548>
  884bc0:	00800044 	movi	r2,1
  884bc4:	003e6c06 	br	884578 <___vfprintf_internal_r+0xde8>
  884bc8:	d9002c17 	ldw	r4,176(sp)
  884bcc:	d9801e04 	addi	r6,sp,120
  884bd0:	b80b883a 	mov	r5,r23
  884bd4:	08898440 	call	889844 <__sprint_r>
  884bd8:	103bef1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884bdc:	d8c02017 	ldw	r3,128(sp)
  884be0:	da000404 	addi	r8,sp,16
  884be4:	d9003217 	ldw	r4,200(sp)
  884be8:	d8802617 	ldw	r2,152(sp)
  884bec:	d9403317 	ldw	r5,204(sp)
  884bf0:	8123883a 	add	r17,r16,r4
  884bf4:	11400216 	blt	r2,r5,884c00 <___vfprintf_internal_r+0x1470>
  884bf8:	9100004c 	andi	r4,r18,1
  884bfc:	20000d26 	beq	r4,zero,884c34 <___vfprintf_internal_r+0x14a4>
  884c00:	d9003717 	ldw	r4,220(sp)
  884c04:	d9403417 	ldw	r5,208(sp)
  884c08:	1907883a 	add	r3,r3,r4
  884c0c:	d9001f17 	ldw	r4,124(sp)
  884c10:	41400015 	stw	r5,0(r8)
  884c14:	d9403717 	ldw	r5,220(sp)
  884c18:	21000044 	addi	r4,r4,1
  884c1c:	d8c02015 	stw	r3,128(sp)
  884c20:	41400115 	stw	r5,4(r8)
  884c24:	d9001f15 	stw	r4,124(sp)
  884c28:	014001c4 	movi	r5,7
  884c2c:	2901e816 	blt	r5,r4,8853d0 <___vfprintf_internal_r+0x1c40>
  884c30:	42000204 	addi	r8,r8,8
  884c34:	d9003317 	ldw	r4,204(sp)
  884c38:	8121883a 	add	r16,r16,r4
  884c3c:	2085c83a 	sub	r2,r4,r2
  884c40:	8461c83a 	sub	r16,r16,r17
  884c44:	1400010e 	bge	r2,r16,884c4c <___vfprintf_internal_r+0x14bc>
  884c48:	1021883a 	mov	r16,r2
  884c4c:	04000a0e 	bge	zero,r16,884c78 <___vfprintf_internal_r+0x14e8>
  884c50:	d9001f17 	ldw	r4,124(sp)
  884c54:	1c07883a 	add	r3,r3,r16
  884c58:	44400015 	stw	r17,0(r8)
  884c5c:	21000044 	addi	r4,r4,1
  884c60:	44000115 	stw	r16,4(r8)
  884c64:	d8c02015 	stw	r3,128(sp)
  884c68:	d9001f15 	stw	r4,124(sp)
  884c6c:	014001c4 	movi	r5,7
  884c70:	2901fb16 	blt	r5,r4,885460 <___vfprintf_internal_r+0x1cd0>
  884c74:	42000204 	addi	r8,r8,8
  884c78:	8001f716 	blt	r16,zero,885458 <___vfprintf_internal_r+0x1cc8>
  884c7c:	1421c83a 	sub	r16,r2,r16
  884c80:	043d380e 	bge	zero,r16,884164 <___vfprintf_internal_r+0x9d4>
  884c84:	04400404 	movi	r17,16
  884c88:	d8801f17 	ldw	r2,124(sp)
  884c8c:	8c3efb0e 	bge	r17,r16,88487c <___vfprintf_internal_r+0x10ec>
  884c90:	01402274 	movhi	r5,137
  884c94:	29494784 	addi	r5,r5,9502
  884c98:	d9402b15 	stw	r5,172(sp)
  884c9c:	058001c4 	movi	r22,7
  884ca0:	dcc02c17 	ldw	r19,176(sp)
  884ca4:	00000306 	br	884cb4 <___vfprintf_internal_r+0x1524>
  884ca8:	42000204 	addi	r8,r8,8
  884cac:	843ffc04 	addi	r16,r16,-16
  884cb0:	8c3ef50e 	bge	r17,r16,884888 <___vfprintf_internal_r+0x10f8>
  884cb4:	18c00404 	addi	r3,r3,16
  884cb8:	10800044 	addi	r2,r2,1
  884cbc:	45000015 	stw	r20,0(r8)
  884cc0:	44400115 	stw	r17,4(r8)
  884cc4:	d8c02015 	stw	r3,128(sp)
  884cc8:	d8801f15 	stw	r2,124(sp)
  884ccc:	b0bff60e 	bge	r22,r2,884ca8 <___vfprintf_internal_r+0x1518>
  884cd0:	d9801e04 	addi	r6,sp,120
  884cd4:	b80b883a 	mov	r5,r23
  884cd8:	9809883a 	mov	r4,r19
  884cdc:	08898440 	call	889844 <__sprint_r>
  884ce0:	103bad1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884ce4:	d8c02017 	ldw	r3,128(sp)
  884ce8:	d8801f17 	ldw	r2,124(sp)
  884cec:	da000404 	addi	r8,sp,16
  884cf0:	003fee06 	br	884cac <___vfprintf_internal_r+0x151c>
  884cf4:	9088703a 	and	r4,r18,r2
  884cf8:	203eab1e 	bne	r4,zero,8847a8 <___vfprintf_internal_r+0x1018>
  884cfc:	dc401f17 	ldw	r17,124(sp)
  884d00:	40800115 	stw	r2,4(r8)
  884d04:	44000015 	stw	r16,0(r8)
  884d08:	8c400044 	addi	r17,r17,1
  884d0c:	d8c02015 	stw	r3,128(sp)
  884d10:	dc401f15 	stw	r17,124(sp)
  884d14:	008001c4 	movi	r2,7
  884d18:	14400e16 	blt	r2,r17,884d54 <___vfprintf_internal_r+0x15c4>
  884d1c:	45800204 	addi	r22,r8,8
  884d20:	003eca06 	br	88484c <___vfprintf_internal_r+0x10bc>
  884d24:	01002274 	movhi	r4,137
  884d28:	21094784 	addi	r4,r4,9502
  884d2c:	d9002b15 	stw	r4,172(sp)
  884d30:	d8802b17 	ldw	r2,172(sp)
  884d34:	1c07883a 	add	r3,r3,r16
  884d38:	8c400044 	addi	r17,r17,1
  884d3c:	b0800015 	stw	r2,0(r22)
  884d40:	b4000115 	stw	r16,4(r22)
  884d44:	d8c02015 	stw	r3,128(sp)
  884d48:	dc401f15 	stw	r17,124(sp)
  884d4c:	008001c4 	movi	r2,7
  884d50:	147ebd0e 	bge	r2,r17,884848 <___vfprintf_internal_r+0x10b8>
  884d54:	d9002c17 	ldw	r4,176(sp)
  884d58:	d9801e04 	addi	r6,sp,120
  884d5c:	b80b883a 	mov	r5,r23
  884d60:	08898440 	call	889844 <__sprint_r>
  884d64:	103b8c1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884d68:	d8c02017 	ldw	r3,128(sp)
  884d6c:	dc401f17 	ldw	r17,124(sp)
  884d70:	dd800404 	addi	r22,sp,16
  884d74:	003eb506 	br	88484c <___vfprintf_internal_r+0x10bc>
  884d78:	d9002c17 	ldw	r4,176(sp)
  884d7c:	d9801e04 	addi	r6,sp,120
  884d80:	b80b883a 	mov	r5,r23
  884d84:	08898440 	call	889844 <__sprint_r>
  884d88:	103b831e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884d8c:	d8c02017 	ldw	r3,128(sp)
  884d90:	dc401f17 	ldw	r17,124(sp)
  884d94:	da000404 	addi	r8,sp,16
  884d98:	003e8d06 	br	8847d0 <___vfprintf_internal_r+0x1040>
  884d9c:	d9002c17 	ldw	r4,176(sp)
  884da0:	d9801e04 	addi	r6,sp,120
  884da4:	b80b883a 	mov	r5,r23
  884da8:	08898440 	call	889844 <__sprint_r>
  884dac:	103b7a1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884db0:	d8c02017 	ldw	r3,128(sp)
  884db4:	dc401f17 	ldw	r17,124(sp)
  884db8:	dd800404 	addi	r22,sp,16
  884dbc:	003e8f06 	br	8847fc <___vfprintf_internal_r+0x106c>
  884dc0:	0027883a 	mov	r19,zero
  884dc4:	003f4a06 	br	884af0 <___vfprintf_internal_r+0x1360>
  884dc8:	d9002c17 	ldw	r4,176(sp)
  884dcc:	d9801e04 	addi	r6,sp,120
  884dd0:	b80b883a 	mov	r5,r23
  884dd4:	08898440 	call	889844 <__sprint_r>
  884dd8:	103b6f1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  884ddc:	d8c02017 	ldw	r3,128(sp)
  884de0:	da000404 	addi	r8,sp,16
  884de4:	003c9d06 	br	88405c <___vfprintf_internal_r+0x8cc>
  884de8:	04e7c83a 	sub	r19,zero,r19
  884dec:	9804c03a 	cmpne	r2,r19,zero
  884df0:	05adc83a 	sub	r22,zero,r22
  884df4:	b0adc83a 	sub	r22,r22,r2
  884df8:	d8802917 	ldw	r2,164(sp)
  884dfc:	07000b44 	movi	fp,45
  884e00:	df002785 	stb	fp,158(sp)
  884e04:	10017b16 	blt	r2,zero,8853f4 <___vfprintf_internal_r+0x1c64>
  884e08:	00bfdfc4 	movi	r2,-129
  884e0c:	90a4703a 	and	r18,r18,r2
  884e10:	003bb106 	br	883cd8 <___vfprintf_internal_r+0x548>
  884e14:	d9003617 	ldw	r4,216(sp)
  884e18:	d9403817 	ldw	r5,224(sp)
  884e1c:	da003d15 	stw	r8,244(sp)
  884e20:	08895000 	call	889500 <__fpclassifyd>
  884e24:	da003d17 	ldw	r8,244(sp)
  884e28:	1000f026 	beq	r2,zero,8851ec <___vfprintf_internal_r+0x1a5c>
  884e2c:	d9002917 	ldw	r4,164(sp)
  884e30:	05bff7c4 	movi	r22,-33
  884e34:	00bfffc4 	movi	r2,-1
  884e38:	8dac703a 	and	r22,r17,r22
  884e3c:	20820026 	beq	r4,r2,885640 <___vfprintf_internal_r+0x1eb0>
  884e40:	008011c4 	movi	r2,71
  884e44:	b081f726 	beq	r22,r2,885624 <___vfprintf_internal_r+0x1e94>
  884e48:	d9003817 	ldw	r4,224(sp)
  884e4c:	90c04014 	ori	r3,r18,256
  884e50:	d8c02b15 	stw	r3,172(sp)
  884e54:	20021516 	blt	r4,zero,8856ac <___vfprintf_internal_r+0x1f1c>
  884e58:	dcc03817 	ldw	r19,224(sp)
  884e5c:	d8002a05 	stb	zero,168(sp)
  884e60:	00801984 	movi	r2,102
  884e64:	8881f926 	beq	r17,r2,88564c <___vfprintf_internal_r+0x1ebc>
  884e68:	00801184 	movi	r2,70
  884e6c:	88821c26 	beq	r17,r2,8856e0 <___vfprintf_internal_r+0x1f50>
  884e70:	00801144 	movi	r2,69
  884e74:	b081ef26 	beq	r22,r2,885634 <___vfprintf_internal_r+0x1ea4>
  884e78:	d8c02917 	ldw	r3,164(sp)
  884e7c:	d8802104 	addi	r2,sp,132
  884e80:	d8800315 	stw	r2,12(sp)
  884e84:	d9403617 	ldw	r5,216(sp)
  884e88:	d8802504 	addi	r2,sp,148
  884e8c:	d9002c17 	ldw	r4,176(sp)
  884e90:	d8800215 	stw	r2,8(sp)
  884e94:	d8802604 	addi	r2,sp,152
  884e98:	d8c00015 	stw	r3,0(sp)
  884e9c:	d8800115 	stw	r2,4(sp)
  884ea0:	01c00084 	movi	r7,2
  884ea4:	980d883a 	mov	r6,r19
  884ea8:	d8c03c15 	stw	r3,240(sp)
  884eac:	da003d15 	stw	r8,244(sp)
  884eb0:	0885db40 	call	885db4 <_dtoa_r>
  884eb4:	1021883a 	mov	r16,r2
  884eb8:	008019c4 	movi	r2,103
  884ebc:	d8c03c17 	ldw	r3,240(sp)
  884ec0:	da003d17 	ldw	r8,244(sp)
  884ec4:	88817126 	beq	r17,r2,88548c <___vfprintf_internal_r+0x1cfc>
  884ec8:	008011c4 	movi	r2,71
  884ecc:	88829226 	beq	r17,r2,885918 <___vfprintf_internal_r+0x2188>
  884ed0:	80f9883a 	add	fp,r16,r3
  884ed4:	d9003617 	ldw	r4,216(sp)
  884ed8:	000d883a 	mov	r6,zero
  884edc:	000f883a 	mov	r7,zero
  884ee0:	980b883a 	mov	r5,r19
  884ee4:	da003d15 	stw	r8,244(sp)
  884ee8:	088e0380 	call	88e038 <__eqdf2>
  884eec:	da003d17 	ldw	r8,244(sp)
  884ef0:	10018d26 	beq	r2,zero,885528 <___vfprintf_internal_r+0x1d98>
  884ef4:	d8802117 	ldw	r2,132(sp)
  884ef8:	1700062e 	bgeu	r2,fp,884f14 <___vfprintf_internal_r+0x1784>
  884efc:	01000c04 	movi	r4,48
  884f00:	10c00044 	addi	r3,r2,1
  884f04:	d8c02115 	stw	r3,132(sp)
  884f08:	11000005 	stb	r4,0(r2)
  884f0c:	d8802117 	ldw	r2,132(sp)
  884f10:	173ffb36 	bltu	r2,fp,884f00 <___vfprintf_internal_r+0x1770>
  884f14:	1405c83a 	sub	r2,r2,r16
  884f18:	d8803315 	stw	r2,204(sp)
  884f1c:	008011c4 	movi	r2,71
  884f20:	b0817626 	beq	r22,r2,8854fc <___vfprintf_internal_r+0x1d6c>
  884f24:	00801944 	movi	r2,101
  884f28:	1442810e 	bge	r2,r17,885930 <___vfprintf_internal_r+0x21a0>
  884f2c:	d8c02617 	ldw	r3,152(sp)
  884f30:	00801984 	movi	r2,102
  884f34:	d8c03215 	stw	r3,200(sp)
  884f38:	8881fe26 	beq	r17,r2,885734 <___vfprintf_internal_r+0x1fa4>
  884f3c:	d8c03217 	ldw	r3,200(sp)
  884f40:	d9003317 	ldw	r4,204(sp)
  884f44:	1901dd16 	blt	r3,r4,8856bc <___vfprintf_internal_r+0x1f2c>
  884f48:	9480004c 	andi	r18,r18,1
  884f4c:	90022b1e 	bne	r18,zero,8857fc <___vfprintf_internal_r+0x206c>
  884f50:	1805883a 	mov	r2,r3
  884f54:	18028016 	blt	r3,zero,885958 <___vfprintf_internal_r+0x21c8>
  884f58:	d8c03217 	ldw	r3,200(sp)
  884f5c:	044019c4 	movi	r17,103
  884f60:	d8c02e15 	stw	r3,184(sp)
  884f64:	df002a07 	ldb	fp,168(sp)
  884f68:	e001531e 	bne	fp,zero,8854b8 <___vfprintf_internal_r+0x1d28>
  884f6c:	df002783 	ldbu	fp,158(sp)
  884f70:	d8802a15 	stw	r2,168(sp)
  884f74:	dc802b17 	ldw	r18,172(sp)
  884f78:	d8002915 	stw	zero,164(sp)
  884f7c:	003bd106 	br	883ec4 <___vfprintf_internal_r+0x734>
  884f80:	d8802d17 	ldw	r2,180(sp)
  884f84:	d8c02d17 	ldw	r3,180(sp)
  884f88:	d9002d17 	ldw	r4,180(sp)
  884f8c:	10800017 	ldw	r2,0(r2)
  884f90:	18c00117 	ldw	r3,4(r3)
  884f94:	21000204 	addi	r4,r4,8
  884f98:	d8803615 	stw	r2,216(sp)
  884f9c:	d8c03815 	stw	r3,224(sp)
  884fa0:	d9002d15 	stw	r4,180(sp)
  884fa4:	003b7506 	br	883d7c <___vfprintf_internal_r+0x5ec>
  884fa8:	ac400007 	ldb	r17,0(r21)
  884fac:	003a5906 	br	883914 <___vfprintf_internal_r+0x184>
  884fb0:	9080100c 	andi	r2,r18,64
  884fb4:	1000a826 	beq	r2,zero,885258 <___vfprintf_internal_r+0x1ac8>
  884fb8:	d9002d17 	ldw	r4,180(sp)
  884fbc:	002d883a 	mov	r22,zero
  884fc0:	24c0000b 	ldhu	r19,0(r4)
  884fc4:	21000104 	addi	r4,r4,4
  884fc8:	d9002d15 	stw	r4,180(sp)
  884fcc:	003ccb06 	br	8842fc <___vfprintf_internal_r+0xb6c>
  884fd0:	d8c02d17 	ldw	r3,180(sp)
  884fd4:	d9002917 	ldw	r4,164(sp)
  884fd8:	002d883a 	mov	r22,zero
  884fdc:	18800104 	addi	r2,r3,4
  884fe0:	1cc00017 	ldw	r19,0(r3)
  884fe4:	203ebb0e 	bge	r4,zero,884ad4 <___vfprintf_internal_r+0x1344>
  884fe8:	003ef106 	br	884bb0 <___vfprintf_internal_r+0x1420>
  884fec:	9080040c 	andi	r2,r18,16
  884ff0:	1000921e 	bne	r2,zero,88523c <___vfprintf_internal_r+0x1aac>
  884ff4:	9480100c 	andi	r18,r18,64
  884ff8:	90013926 	beq	r18,zero,8854e0 <___vfprintf_internal_r+0x1d50>
  884ffc:	d9002d17 	ldw	r4,180(sp)
  885000:	d9402f17 	ldw	r5,188(sp)
  885004:	20800017 	ldw	r2,0(r4)
  885008:	21000104 	addi	r4,r4,4
  88500c:	d9002d15 	stw	r4,180(sp)
  885010:	1140000d 	sth	r5,0(r2)
  885014:	003a1606 	br	883870 <___vfprintf_internal_r+0xe0>
  885018:	9080100c 	andi	r2,r18,64
  88501c:	10008026 	beq	r2,zero,885220 <___vfprintf_internal_r+0x1a90>
  885020:	d8c02d17 	ldw	r3,180(sp)
  885024:	1cc0000f 	ldh	r19,0(r3)
  885028:	18c00104 	addi	r3,r3,4
  88502c:	d8c02d15 	stw	r3,180(sp)
  885030:	982dd7fa 	srai	r22,r19,31
  885034:	b005883a 	mov	r2,r22
  885038:	003b1f06 	br	883cb8 <___vfprintf_internal_r+0x528>
  88503c:	9080100c 	andi	r2,r18,64
  885040:	d8002785 	stb	zero,158(sp)
  885044:	10008a1e 	bne	r2,zero,885270 <___vfprintf_internal_r+0x1ae0>
  885048:	d9402d17 	ldw	r5,180(sp)
  88504c:	d8c02917 	ldw	r3,164(sp)
  885050:	002d883a 	mov	r22,zero
  885054:	28800104 	addi	r2,r5,4
  885058:	2cc00017 	ldw	r19,0(r5)
  88505c:	183e4b0e 	bge	r3,zero,88498c <___vfprintf_internal_r+0x11fc>
  885060:	9d86b03a 	or	r3,r19,r22
  885064:	d8802d15 	stw	r2,180(sp)
  885068:	183e4c1e 	bne	r3,zero,88499c <___vfprintf_internal_r+0x120c>
  88506c:	0039883a 	mov	fp,zero
  885070:	0005883a 	mov	r2,zero
  885074:	003d4006 	br	884578 <___vfprintf_internal_r+0xde8>
  885078:	01402274 	movhi	r5,137
  88507c:	29494784 	addi	r5,r5,9502
  885080:	d9402b15 	stw	r5,172(sp)
  885084:	d9402b17 	ldw	r5,172(sp)
  885088:	1c47883a 	add	r3,r3,r17
  88508c:	10800044 	addi	r2,r2,1
  885090:	41400015 	stw	r5,0(r8)
  885094:	44400115 	stw	r17,4(r8)
  885098:	d8c02015 	stw	r3,128(sp)
  88509c:	d8801f15 	stw	r2,124(sp)
  8850a0:	010001c4 	movi	r4,7
  8850a4:	20bec816 	blt	r4,r2,884bc8 <___vfprintf_internal_r+0x1438>
  8850a8:	42000204 	addi	r8,r8,8
  8850ac:	003ecd06 	br	884be4 <___vfprintf_internal_r+0x1454>
  8850b0:	d9002917 	ldw	r4,164(sp)
  8850b4:	d8002785 	stb	zero,158(sp)
  8850b8:	203d2d16 	blt	r4,zero,884570 <___vfprintf_internal_r+0xde0>
  8850bc:	00bfdfc4 	movi	r2,-129
  8850c0:	90a4703a 	and	r18,r18,r2
  8850c4:	003a9106 	br	883b0c <___vfprintf_internal_r+0x37c>
  8850c8:	01002274 	movhi	r4,137
  8850cc:	21094784 	addi	r4,r4,9502
  8850d0:	d9002b15 	stw	r4,172(sp)
  8850d4:	003c0c06 	br	884108 <___vfprintf_internal_r+0x978>
  8850d8:	d9002c17 	ldw	r4,176(sp)
  8850dc:	d9801e04 	addi	r6,sp,120
  8850e0:	b80b883a 	mov	r5,r23
  8850e4:	08898440 	call	889844 <__sprint_r>
  8850e8:	103aab1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8850ec:	d8c02017 	ldw	r3,128(sp)
  8850f0:	da000404 	addi	r8,sp,16
  8850f4:	003d4106 	br	8845fc <___vfprintf_internal_r+0xe6c>
  8850f8:	d8801f17 	ldw	r2,124(sp)
  8850fc:	01402274 	movhi	r5,137
  885100:	01000044 	movi	r4,1
  885104:	18c00044 	addi	r3,r3,1
  885108:	10800044 	addi	r2,r2,1
  88510c:	29494704 	addi	r5,r5,9500
  885110:	41000115 	stw	r4,4(r8)
  885114:	41400015 	stw	r5,0(r8)
  885118:	d8c02015 	stw	r3,128(sp)
  88511c:	d8801f15 	stw	r2,124(sp)
  885120:	010001c4 	movi	r4,7
  885124:	20805c16 	blt	r4,r2,885298 <___vfprintf_internal_r+0x1b08>
  885128:	42000204 	addi	r8,r8,8
  88512c:	8800041e 	bne	r17,zero,885140 <___vfprintf_internal_r+0x19b0>
  885130:	d8803317 	ldw	r2,204(sp)
  885134:	1000021e 	bne	r2,zero,885140 <___vfprintf_internal_r+0x19b0>
  885138:	9080004c 	andi	r2,r18,1
  88513c:	103c0926 	beq	r2,zero,884164 <___vfprintf_internal_r+0x9d4>
  885140:	d9003717 	ldw	r4,220(sp)
  885144:	d8801f17 	ldw	r2,124(sp)
  885148:	d9403417 	ldw	r5,208(sp)
  88514c:	20c7883a 	add	r3,r4,r3
  885150:	10800044 	addi	r2,r2,1
  885154:	41000115 	stw	r4,4(r8)
  885158:	41400015 	stw	r5,0(r8)
  88515c:	d8c02015 	stw	r3,128(sp)
  885160:	d8801f15 	stw	r2,124(sp)
  885164:	010001c4 	movi	r4,7
  885168:	20812116 	blt	r4,r2,8855f0 <___vfprintf_internal_r+0x1e60>
  88516c:	42000204 	addi	r8,r8,8
  885170:	0463c83a 	sub	r17,zero,r17
  885174:	0440730e 	bge	zero,r17,885344 <___vfprintf_internal_r+0x1bb4>
  885178:	05800404 	movi	r22,16
  88517c:	b440860e 	bge	r22,r17,885398 <___vfprintf_internal_r+0x1c08>
  885180:	01402274 	movhi	r5,137
  885184:	29494784 	addi	r5,r5,9502
  885188:	d9402b15 	stw	r5,172(sp)
  88518c:	070001c4 	movi	fp,7
  885190:	dcc02c17 	ldw	r19,176(sp)
  885194:	00000306 	br	8851a4 <___vfprintf_internal_r+0x1a14>
  885198:	42000204 	addi	r8,r8,8
  88519c:	8c7ffc04 	addi	r17,r17,-16
  8851a0:	b440800e 	bge	r22,r17,8853a4 <___vfprintf_internal_r+0x1c14>
  8851a4:	18c00404 	addi	r3,r3,16
  8851a8:	10800044 	addi	r2,r2,1
  8851ac:	45000015 	stw	r20,0(r8)
  8851b0:	45800115 	stw	r22,4(r8)
  8851b4:	d8c02015 	stw	r3,128(sp)
  8851b8:	d8801f15 	stw	r2,124(sp)
  8851bc:	e0bff60e 	bge	fp,r2,885198 <___vfprintf_internal_r+0x1a08>
  8851c0:	d9801e04 	addi	r6,sp,120
  8851c4:	b80b883a 	mov	r5,r23
  8851c8:	9809883a 	mov	r4,r19
  8851cc:	08898440 	call	889844 <__sprint_r>
  8851d0:	103a711e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8851d4:	d8c02017 	ldw	r3,128(sp)
  8851d8:	d8801f17 	ldw	r2,124(sp)
  8851dc:	da000404 	addi	r8,sp,16
  8851e0:	003fee06 	br	88519c <___vfprintf_internal_r+0x1a0c>
  8851e4:	00bfffc4 	movi	r2,-1
  8851e8:	003a6f06 	br	883ba8 <___vfprintf_internal_r+0x418>
  8851ec:	008011c4 	movi	r2,71
  8851f0:	1440b816 	blt	r2,r17,8854d4 <___vfprintf_internal_r+0x1d44>
  8851f4:	04002274 	movhi	r16,137
  8851f8:	84093904 	addi	r16,r16,9444
  8851fc:	00c000c4 	movi	r3,3
  885200:	00bfdfc4 	movi	r2,-129
  885204:	d8c02a15 	stw	r3,168(sp)
  885208:	90a4703a 	and	r18,r18,r2
  88520c:	df002783 	ldbu	fp,158(sp)
  885210:	d8c02e15 	stw	r3,184(sp)
  885214:	d8002915 	stw	zero,164(sp)
  885218:	d8003215 	stw	zero,200(sp)
  88521c:	003b2906 	br	883ec4 <___vfprintf_internal_r+0x734>
  885220:	d9002d17 	ldw	r4,180(sp)
  885224:	24c00017 	ldw	r19,0(r4)
  885228:	21000104 	addi	r4,r4,4
  88522c:	d9002d15 	stw	r4,180(sp)
  885230:	982dd7fa 	srai	r22,r19,31
  885234:	b005883a 	mov	r2,r22
  885238:	003a9f06 	br	883cb8 <___vfprintf_internal_r+0x528>
  88523c:	d9402d17 	ldw	r5,180(sp)
  885240:	d8c02f17 	ldw	r3,188(sp)
  885244:	28800017 	ldw	r2,0(r5)
  885248:	29400104 	addi	r5,r5,4
  88524c:	d9402d15 	stw	r5,180(sp)
  885250:	10c00015 	stw	r3,0(r2)
  885254:	00398606 	br	883870 <___vfprintf_internal_r+0xe0>
  885258:	d9402d17 	ldw	r5,180(sp)
  88525c:	002d883a 	mov	r22,zero
  885260:	2cc00017 	ldw	r19,0(r5)
  885264:	29400104 	addi	r5,r5,4
  885268:	d9402d15 	stw	r5,180(sp)
  88526c:	003c2306 	br	8842fc <___vfprintf_internal_r+0xb6c>
  885270:	d8c02d17 	ldw	r3,180(sp)
  885274:	d9002917 	ldw	r4,164(sp)
  885278:	002d883a 	mov	r22,zero
  88527c:	18800104 	addi	r2,r3,4
  885280:	1cc0000b 	ldhu	r19,0(r3)
  885284:	203dc10e 	bge	r4,zero,88498c <___vfprintf_internal_r+0x11fc>
  885288:	003f7506 	br	885060 <___vfprintf_internal_r+0x18d0>
  88528c:	04002274 	movhi	r16,137
  885290:	84093704 	addi	r16,r16,9436
  885294:	003acc06 	br	883dc8 <___vfprintf_internal_r+0x638>
  885298:	d9002c17 	ldw	r4,176(sp)
  88529c:	d9801e04 	addi	r6,sp,120
  8852a0:	b80b883a 	mov	r5,r23
  8852a4:	08898440 	call	889844 <__sprint_r>
  8852a8:	103a3b1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8852ac:	dc402617 	ldw	r17,152(sp)
  8852b0:	d8c02017 	ldw	r3,128(sp)
  8852b4:	da000404 	addi	r8,sp,16
  8852b8:	003f9c06 	br	88512c <___vfprintf_internal_r+0x199c>
  8852bc:	ac400043 	ldbu	r17,1(r21)
  8852c0:	94800814 	ori	r18,r18,32
  8852c4:	ad400044 	addi	r21,r21,1
  8852c8:	8c403fcc 	andi	r17,r17,255
  8852cc:	8c40201c 	xori	r17,r17,128
  8852d0:	8c7fe004 	addi	r17,r17,-128
  8852d4:	00398f06 	br	883914 <___vfprintf_internal_r+0x184>
  8852d8:	d8c02d15 	stw	r3,180(sp)
  8852dc:	0039883a 	mov	fp,zero
  8852e0:	003e3506 	br	884bb8 <___vfprintf_internal_r+0x1428>
  8852e4:	d9002c17 	ldw	r4,176(sp)
  8852e8:	d9801e04 	addi	r6,sp,120
  8852ec:	b80b883a 	mov	r5,r23
  8852f0:	08898440 	call	889844 <__sprint_r>
  8852f4:	103a281e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8852f8:	d8c02017 	ldw	r3,128(sp)
  8852fc:	da000404 	addi	r8,sp,16
  885300:	003cd006 	br	884644 <___vfprintf_internal_r+0xeb4>
  885304:	8009883a 	mov	r4,r16
  885308:	da003d15 	stw	r8,244(sp)
  88530c:	08896b00 	call	8896b0 <strlen>
  885310:	d8802e15 	stw	r2,184(sp)
  885314:	da003d17 	ldw	r8,244(sp)
  885318:	103c340e 	bge	r2,zero,8843ec <___vfprintf_internal_r+0xc5c>
  88531c:	0005883a 	mov	r2,zero
  885320:	003c3206 	br	8843ec <___vfprintf_internal_r+0xc5c>
  885324:	d9002c17 	ldw	r4,176(sp)
  885328:	d9801e04 	addi	r6,sp,120
  88532c:	b80b883a 	mov	r5,r23
  885330:	08898440 	call	889844 <__sprint_r>
  885334:	103a181e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  885338:	d8c02017 	ldw	r3,128(sp)
  88533c:	d8801f17 	ldw	r2,124(sp)
  885340:	da000404 	addi	r8,sp,16
  885344:	d9403317 	ldw	r5,204(sp)
  885348:	10800044 	addi	r2,r2,1
  88534c:	44000015 	stw	r16,0(r8)
  885350:	28c7883a 	add	r3,r5,r3
  885354:	003b7d06 	br	88414c <___vfprintf_internal_r+0x9bc>
  885358:	01002274 	movhi	r4,137
  88535c:	21094b84 	addi	r4,r4,9518
  885360:	d9003515 	stw	r4,212(sp)
  885364:	003b1406 	br	883fb8 <___vfprintf_internal_r+0x828>
  885368:	013fffc4 	movi	r4,-1
  88536c:	003a3506 	br	883c44 <___vfprintf_internal_r+0x4b4>
  885370:	0023883a 	mov	r17,zero
  885374:	003d9d06 	br	8849ec <___vfprintf_internal_r+0x125c>
  885378:	d9002c17 	ldw	r4,176(sp)
  88537c:	d9801e04 	addi	r6,sp,120
  885380:	b80b883a 	mov	r5,r23
  885384:	08898440 	call	889844 <__sprint_r>
  885388:	103a031e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  88538c:	d8c02017 	ldw	r3,128(sp)
  885390:	da000404 	addi	r8,sp,16
  885394:	003d9406 	br	8849e8 <___vfprintf_internal_r+0x1258>
  885398:	01002274 	movhi	r4,137
  88539c:	21094784 	addi	r4,r4,9502
  8853a0:	d9002b15 	stw	r4,172(sp)
  8853a4:	d9002b17 	ldw	r4,172(sp)
  8853a8:	1c47883a 	add	r3,r3,r17
  8853ac:	10800044 	addi	r2,r2,1
  8853b0:	41000015 	stw	r4,0(r8)
  8853b4:	44400115 	stw	r17,4(r8)
  8853b8:	d8c02015 	stw	r3,128(sp)
  8853bc:	d8801f15 	stw	r2,124(sp)
  8853c0:	010001c4 	movi	r4,7
  8853c4:	20bfd716 	blt	r4,r2,885324 <___vfprintf_internal_r+0x1b94>
  8853c8:	42000204 	addi	r8,r8,8
  8853cc:	003fdd06 	br	885344 <___vfprintf_internal_r+0x1bb4>
  8853d0:	d9002c17 	ldw	r4,176(sp)
  8853d4:	d9801e04 	addi	r6,sp,120
  8853d8:	b80b883a 	mov	r5,r23
  8853dc:	08898440 	call	889844 <__sprint_r>
  8853e0:	1039ed1e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  8853e4:	d8802617 	ldw	r2,152(sp)
  8853e8:	d8c02017 	ldw	r3,128(sp)
  8853ec:	da000404 	addi	r8,sp,16
  8853f0:	003e1006 	br	884c34 <___vfprintf_internal_r+0x14a4>
  8853f4:	00800044 	movi	r2,1
  8853f8:	10803fcc 	andi	r2,r2,255
  8853fc:	00c00044 	movi	r3,1
  885400:	10fa3526 	beq	r2,r3,883cd8 <___vfprintf_internal_r+0x548>
  885404:	00c00084 	movi	r3,2
  885408:	10fbcb26 	beq	r2,r3,884338 <___vfprintf_internal_r+0xba8>
  88540c:	003a8f06 	br	883e4c <___vfprintf_internal_r+0x6bc>
  885410:	01002274 	movhi	r4,137
  885414:	21094b84 	addi	r4,r4,9518
  885418:	d9003515 	stw	r4,212(sp)
  88541c:	003b7606 	br	8841f8 <___vfprintf_internal_r+0xa68>
  885420:	d8802917 	ldw	r2,164(sp)
  885424:	00c00184 	movi	r3,6
  885428:	1880012e 	bgeu	r3,r2,885430 <___vfprintf_internal_r+0x1ca0>
  88542c:	1805883a 	mov	r2,r3
  885430:	d8802e15 	stw	r2,184(sp)
  885434:	1000ef16 	blt	r2,zero,8857f4 <___vfprintf_internal_r+0x2064>
  885438:	04002274 	movhi	r16,137
  88543c:	d8802a15 	stw	r2,168(sp)
  885440:	dcc02d15 	stw	r19,180(sp)
  885444:	d8002915 	stw	zero,164(sp)
  885448:	d8003215 	stw	zero,200(sp)
  88544c:	84094504 	addi	r16,r16,9492
  885450:	0039883a 	mov	fp,zero
  885454:	003aa206 	br	883ee0 <___vfprintf_internal_r+0x750>
  885458:	0021883a 	mov	r16,zero
  88545c:	003e0706 	br	884c7c <___vfprintf_internal_r+0x14ec>
  885460:	d9002c17 	ldw	r4,176(sp)
  885464:	d9801e04 	addi	r6,sp,120
  885468:	b80b883a 	mov	r5,r23
  88546c:	08898440 	call	889844 <__sprint_r>
  885470:	1039c91e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  885474:	d8802617 	ldw	r2,152(sp)
  885478:	d9403317 	ldw	r5,204(sp)
  88547c:	d8c02017 	ldw	r3,128(sp)
  885480:	da000404 	addi	r8,sp,16
  885484:	2885c83a 	sub	r2,r5,r2
  885488:	003dfb06 	br	884c78 <___vfprintf_internal_r+0x14e8>
  88548c:	9080004c 	andi	r2,r18,1
  885490:	103e8f1e 	bne	r2,zero,884ed0 <___vfprintf_internal_r+0x1740>
  885494:	d8802117 	ldw	r2,132(sp)
  885498:	003e9e06 	br	884f14 <___vfprintf_internal_r+0x1784>
  88549c:	1025883a 	mov	r18,r2
  8854a0:	0039883a 	mov	fp,zero
  8854a4:	00800084 	movi	r2,2
  8854a8:	003fd306 	br	8853f8 <___vfprintf_internal_r+0x1c68>
  8854ac:	07000b44 	movi	fp,45
  8854b0:	df002785 	stb	fp,158(sp)
  8854b4:	003a4006 	br	883db8 <___vfprintf_internal_r+0x628>
  8854b8:	00c00b44 	movi	r3,45
  8854bc:	d8c02785 	stb	r3,158(sp)
  8854c0:	d8802a15 	stw	r2,168(sp)
  8854c4:	dc802b17 	ldw	r18,172(sp)
  8854c8:	d8002915 	stw	zero,164(sp)
  8854cc:	07000b44 	movi	fp,45
  8854d0:	003a8006 	br	883ed4 <___vfprintf_internal_r+0x744>
  8854d4:	04002274 	movhi	r16,137
  8854d8:	84093a04 	addi	r16,r16,9448
  8854dc:	003f4706 	br	8851fc <___vfprintf_internal_r+0x1a6c>
  8854e0:	d8c02d17 	ldw	r3,180(sp)
  8854e4:	d9002f17 	ldw	r4,188(sp)
  8854e8:	18800017 	ldw	r2,0(r3)
  8854ec:	18c00104 	addi	r3,r3,4
  8854f0:	d8c02d15 	stw	r3,180(sp)
  8854f4:	11000015 	stw	r4,0(r2)
  8854f8:	0038dd06 	br	883870 <___vfprintf_internal_r+0xe0>
  8854fc:	dd802617 	ldw	r22,152(sp)
  885500:	00bfff44 	movi	r2,-3
  885504:	b0801c16 	blt	r22,r2,885578 <___vfprintf_internal_r+0x1de8>
  885508:	d9402917 	ldw	r5,164(sp)
  88550c:	2d801a16 	blt	r5,r22,885578 <___vfprintf_internal_r+0x1de8>
  885510:	dd803215 	stw	r22,200(sp)
  885514:	003e8906 	br	884f3c <___vfprintf_internal_r+0x17ac>
  885518:	01002274 	movhi	r4,137
  88551c:	21094784 	addi	r4,r4,9502
  885520:	d9002b15 	stw	r4,172(sp)
  885524:	003c9106 	br	88476c <___vfprintf_internal_r+0xfdc>
  885528:	e005883a 	mov	r2,fp
  88552c:	003e7906 	br	884f14 <___vfprintf_internal_r+0x1784>
  885530:	d9402917 	ldw	r5,164(sp)
  885534:	df002783 	ldbu	fp,158(sp)
  885538:	dcc02d15 	stw	r19,180(sp)
  88553c:	d9402a15 	stw	r5,168(sp)
  885540:	d9402e15 	stw	r5,184(sp)
  885544:	d8002915 	stw	zero,164(sp)
  885548:	d8003215 	stw	zero,200(sp)
  88554c:	003a5d06 	br	883ec4 <___vfprintf_internal_r+0x734>
  885550:	9080004c 	andi	r2,r18,1
  885554:	0039883a 	mov	fp,zero
  885558:	10000426 	beq	r2,zero,88556c <___vfprintf_internal_r+0x1ddc>
  88555c:	00800c04 	movi	r2,48
  885560:	dc001dc4 	addi	r16,sp,119
  885564:	d8801dc5 	stb	r2,119(sp)
  885568:	003b8006 	br	88436c <___vfprintf_internal_r+0xbdc>
  88556c:	d8002e15 	stw	zero,184(sp)
  885570:	dc001e04 	addi	r16,sp,120
  885574:	003a4d06 	br	883eac <___vfprintf_internal_r+0x71c>
  885578:	8c7fff84 	addi	r17,r17,-2
  88557c:	b5bfffc4 	addi	r22,r22,-1
  885580:	dd802615 	stw	r22,152(sp)
  885584:	dc4022c5 	stb	r17,139(sp)
  885588:	b000bf16 	blt	r22,zero,885888 <___vfprintf_internal_r+0x20f8>
  88558c:	00800ac4 	movi	r2,43
  885590:	d8802305 	stb	r2,140(sp)
  885594:	00800244 	movi	r2,9
  885598:	15807016 	blt	r2,r22,88575c <___vfprintf_internal_r+0x1fcc>
  88559c:	00800c04 	movi	r2,48
  8855a0:	b5800c04 	addi	r22,r22,48
  8855a4:	d8802345 	stb	r2,141(sp)
  8855a8:	dd802385 	stb	r22,142(sp)
  8855ac:	d88023c4 	addi	r2,sp,143
  8855b0:	df0022c4 	addi	fp,sp,139
  8855b4:	d8c03317 	ldw	r3,204(sp)
  8855b8:	1739c83a 	sub	fp,r2,fp
  8855bc:	d9003317 	ldw	r4,204(sp)
  8855c0:	e0c7883a 	add	r3,fp,r3
  8855c4:	df003a15 	stw	fp,232(sp)
  8855c8:	d8c02e15 	stw	r3,184(sp)
  8855cc:	00800044 	movi	r2,1
  8855d0:	1100b30e 	bge	r2,r4,8858a0 <___vfprintf_internal_r+0x2110>
  8855d4:	d8c02e17 	ldw	r3,184(sp)
  8855d8:	18c00044 	addi	r3,r3,1
  8855dc:	d8c02e15 	stw	r3,184(sp)
  8855e0:	1805883a 	mov	r2,r3
  8855e4:	1800ac16 	blt	r3,zero,885898 <___vfprintf_internal_r+0x2108>
  8855e8:	d8003215 	stw	zero,200(sp)
  8855ec:	003e5d06 	br	884f64 <___vfprintf_internal_r+0x17d4>
  8855f0:	d9002c17 	ldw	r4,176(sp)
  8855f4:	d9801e04 	addi	r6,sp,120
  8855f8:	b80b883a 	mov	r5,r23
  8855fc:	08898440 	call	889844 <__sprint_r>
  885600:	1039651e 	bne	r2,zero,883b98 <___vfprintf_internal_r+0x408>
  885604:	dc402617 	ldw	r17,152(sp)
  885608:	d8c02017 	ldw	r3,128(sp)
  88560c:	d8801f17 	ldw	r2,124(sp)
  885610:	da000404 	addi	r8,sp,16
  885614:	003ed606 	br	885170 <___vfprintf_internal_r+0x19e0>
  885618:	582b883a 	mov	r21,r11
  88561c:	d8002915 	stw	zero,164(sp)
  885620:	0038bd06 	br	883918 <___vfprintf_internal_r+0x188>
  885624:	d8802917 	ldw	r2,164(sp)
  885628:	103e071e 	bne	r2,zero,884e48 <___vfprintf_internal_r+0x16b8>
  88562c:	dc002915 	stw	r16,164(sp)
  885630:	003e0506 	br	884e48 <___vfprintf_internal_r+0x16b8>
  885634:	d9002917 	ldw	r4,164(sp)
  885638:	20c00044 	addi	r3,r4,1
  88563c:	003e0f06 	br	884e7c <___vfprintf_internal_r+0x16ec>
  885640:	01400184 	movi	r5,6
  885644:	d9402915 	stw	r5,164(sp)
  885648:	003dff06 	br	884e48 <___vfprintf_internal_r+0x16b8>
  88564c:	d8802104 	addi	r2,sp,132
  885650:	d8800315 	stw	r2,12(sp)
  885654:	d8802504 	addi	r2,sp,148
  885658:	d8800215 	stw	r2,8(sp)
  88565c:	d8802604 	addi	r2,sp,152
  885660:	d8800115 	stw	r2,4(sp)
  885664:	d8802917 	ldw	r2,164(sp)
  885668:	d9403617 	ldw	r5,216(sp)
  88566c:	d9002c17 	ldw	r4,176(sp)
  885670:	d8800015 	stw	r2,0(sp)
  885674:	01c000c4 	movi	r7,3
  885678:	980d883a 	mov	r6,r19
  88567c:	da003d15 	stw	r8,244(sp)
  885680:	0885db40 	call	885db4 <_dtoa_r>
  885684:	d8c02917 	ldw	r3,164(sp)
  885688:	da003d17 	ldw	r8,244(sp)
  88568c:	1021883a 	mov	r16,r2
  885690:	10f9883a 	add	fp,r2,r3
  885694:	81000007 	ldb	r4,0(r16)
  885698:	00800c04 	movi	r2,48
  88569c:	20805e26 	beq	r4,r2,885818 <___vfprintf_internal_r+0x2088>
  8856a0:	d8c02617 	ldw	r3,152(sp)
  8856a4:	e0f9883a 	add	fp,fp,r3
  8856a8:	003e0a06 	br	884ed4 <___vfprintf_internal_r+0x1744>
  8856ac:	00c00b44 	movi	r3,45
  8856b0:	24e0003c 	xorhi	r19,r4,32768
  8856b4:	d8c02a05 	stb	r3,168(sp)
  8856b8:	003de906 	br	884e60 <___vfprintf_internal_r+0x16d0>
  8856bc:	d8c03217 	ldw	r3,200(sp)
  8856c0:	00c07a0e 	bge	zero,r3,8858ac <___vfprintf_internal_r+0x211c>
  8856c4:	00800044 	movi	r2,1
  8856c8:	d9003317 	ldw	r4,204(sp)
  8856cc:	1105883a 	add	r2,r2,r4
  8856d0:	d8802e15 	stw	r2,184(sp)
  8856d4:	10004e16 	blt	r2,zero,885810 <___vfprintf_internal_r+0x2080>
  8856d8:	044019c4 	movi	r17,103
  8856dc:	003e2106 	br	884f64 <___vfprintf_internal_r+0x17d4>
  8856e0:	d9002917 	ldw	r4,164(sp)
  8856e4:	d8802104 	addi	r2,sp,132
  8856e8:	d8800315 	stw	r2,12(sp)
  8856ec:	d9000015 	stw	r4,0(sp)
  8856f0:	d8802504 	addi	r2,sp,148
  8856f4:	d9403617 	ldw	r5,216(sp)
  8856f8:	d9002c17 	ldw	r4,176(sp)
  8856fc:	d8800215 	stw	r2,8(sp)
  885700:	d8802604 	addi	r2,sp,152
  885704:	d8800115 	stw	r2,4(sp)
  885708:	01c000c4 	movi	r7,3
  88570c:	980d883a 	mov	r6,r19
  885710:	da003d15 	stw	r8,244(sp)
  885714:	0885db40 	call	885db4 <_dtoa_r>
  885718:	d8c02917 	ldw	r3,164(sp)
  88571c:	da003d17 	ldw	r8,244(sp)
  885720:	1021883a 	mov	r16,r2
  885724:	00801184 	movi	r2,70
  885728:	80f9883a 	add	fp,r16,r3
  88572c:	88bfd926 	beq	r17,r2,885694 <___vfprintf_internal_r+0x1f04>
  885730:	003de806 	br	884ed4 <___vfprintf_internal_r+0x1744>
  885734:	d9002917 	ldw	r4,164(sp)
  885738:	00c04d0e 	bge	zero,r3,885870 <___vfprintf_internal_r+0x20e0>
  88573c:	2000441e 	bne	r4,zero,885850 <___vfprintf_internal_r+0x20c0>
  885740:	9480004c 	andi	r18,r18,1
  885744:	9000421e 	bne	r18,zero,885850 <___vfprintf_internal_r+0x20c0>
  885748:	1805883a 	mov	r2,r3
  88574c:	18007016 	blt	r3,zero,885910 <___vfprintf_internal_r+0x2180>
  885750:	d8c03217 	ldw	r3,200(sp)
  885754:	d8c02e15 	stw	r3,184(sp)
  885758:	003e0206 	br	884f64 <___vfprintf_internal_r+0x17d4>
  88575c:	df0022c4 	addi	fp,sp,139
  885760:	dc002915 	stw	r16,164(sp)
  885764:	4027883a 	mov	r19,r8
  885768:	e021883a 	mov	r16,fp
  88576c:	b009883a 	mov	r4,r22
  885770:	01400284 	movi	r5,10
  885774:	088cd740 	call	88cd74 <__modsi3>
  885778:	10800c04 	addi	r2,r2,48
  88577c:	843fffc4 	addi	r16,r16,-1
  885780:	b009883a 	mov	r4,r22
  885784:	01400284 	movi	r5,10
  885788:	80800005 	stb	r2,0(r16)
  88578c:	088ccf00 	call	88ccf0 <__divsi3>
  885790:	102d883a 	mov	r22,r2
  885794:	00800244 	movi	r2,9
  885798:	15bff416 	blt	r2,r22,88576c <___vfprintf_internal_r+0x1fdc>
  88579c:	9811883a 	mov	r8,r19
  8857a0:	b0800c04 	addi	r2,r22,48
  8857a4:	8027883a 	mov	r19,r16
  8857a8:	997fffc4 	addi	r5,r19,-1
  8857ac:	98bfffc5 	stb	r2,-1(r19)
  8857b0:	dc002917 	ldw	r16,164(sp)
  8857b4:	2f006a2e 	bgeu	r5,fp,885960 <___vfprintf_internal_r+0x21d0>
  8857b8:	d9c02384 	addi	r7,sp,142
  8857bc:	3ccfc83a 	sub	r7,r7,r19
  8857c0:	d9002344 	addi	r4,sp,141
  8857c4:	e1cf883a 	add	r7,fp,r7
  8857c8:	00000106 	br	8857d0 <___vfprintf_internal_r+0x2040>
  8857cc:	28800003 	ldbu	r2,0(r5)
  8857d0:	20800005 	stb	r2,0(r4)
  8857d4:	21000044 	addi	r4,r4,1
  8857d8:	29400044 	addi	r5,r5,1
  8857dc:	393ffb1e 	bne	r7,r4,8857cc <___vfprintf_internal_r+0x203c>
  8857e0:	d8802304 	addi	r2,sp,140
  8857e4:	14c5c83a 	sub	r2,r2,r19
  8857e8:	d8c02344 	addi	r3,sp,141
  8857ec:	1885883a 	add	r2,r3,r2
  8857f0:	003f7006 	br	8855b4 <___vfprintf_internal_r+0x1e24>
  8857f4:	0005883a 	mov	r2,zero
  8857f8:	003f0f06 	br	885438 <___vfprintf_internal_r+0x1ca8>
  8857fc:	d8c03217 	ldw	r3,200(sp)
  885800:	18c00044 	addi	r3,r3,1
  885804:	d8c02e15 	stw	r3,184(sp)
  885808:	1805883a 	mov	r2,r3
  88580c:	183fb20e 	bge	r3,zero,8856d8 <___vfprintf_internal_r+0x1f48>
  885810:	0005883a 	mov	r2,zero
  885814:	003fb006 	br	8856d8 <___vfprintf_internal_r+0x1f48>
  885818:	d9003617 	ldw	r4,216(sp)
  88581c:	000d883a 	mov	r6,zero
  885820:	000f883a 	mov	r7,zero
  885824:	980b883a 	mov	r5,r19
  885828:	d8c03c15 	stw	r3,240(sp)
  88582c:	da003d15 	stw	r8,244(sp)
  885830:	088e0380 	call	88e038 <__eqdf2>
  885834:	d8c03c17 	ldw	r3,240(sp)
  885838:	da003d17 	ldw	r8,244(sp)
  88583c:	103f9826 	beq	r2,zero,8856a0 <___vfprintf_internal_r+0x1f10>
  885840:	00800044 	movi	r2,1
  885844:	10c7c83a 	sub	r3,r2,r3
  885848:	d8c02615 	stw	r3,152(sp)
  88584c:	003f9506 	br	8856a4 <___vfprintf_internal_r+0x1f14>
  885850:	d9002917 	ldw	r4,164(sp)
  885854:	d8c03217 	ldw	r3,200(sp)
  885858:	20800044 	addi	r2,r4,1
  88585c:	1885883a 	add	r2,r3,r2
  885860:	d8802e15 	stw	r2,184(sp)
  885864:	103dbf0e 	bge	r2,zero,884f64 <___vfprintf_internal_r+0x17d4>
  885868:	0005883a 	mov	r2,zero
  88586c:	003dbd06 	br	884f64 <___vfprintf_internal_r+0x17d4>
  885870:	2000211e 	bne	r4,zero,8858f8 <___vfprintf_internal_r+0x2168>
  885874:	9480004c 	andi	r18,r18,1
  885878:	90001f1e 	bne	r18,zero,8858f8 <___vfprintf_internal_r+0x2168>
  88587c:	00800044 	movi	r2,1
  885880:	d8802e15 	stw	r2,184(sp)
  885884:	003db706 	br	884f64 <___vfprintf_internal_r+0x17d4>
  885888:	00800b44 	movi	r2,45
  88588c:	05adc83a 	sub	r22,zero,r22
  885890:	d8802305 	stb	r2,140(sp)
  885894:	003f3f06 	br	885594 <___vfprintf_internal_r+0x1e04>
  885898:	0005883a 	mov	r2,zero
  88589c:	003f5206 	br	8855e8 <___vfprintf_internal_r+0x1e58>
  8858a0:	90a4703a 	and	r18,r18,r2
  8858a4:	903f4e26 	beq	r18,zero,8855e0 <___vfprintf_internal_r+0x1e50>
  8858a8:	003f4a06 	br	8855d4 <___vfprintf_internal_r+0x1e44>
  8858ac:	00800084 	movi	r2,2
  8858b0:	10c5c83a 	sub	r2,r2,r3
  8858b4:	003f8406 	br	8856c8 <___vfprintf_internal_r+0x1f38>
  8858b8:	d8802d17 	ldw	r2,180(sp)
  8858bc:	d9002d17 	ldw	r4,180(sp)
  8858c0:	ac400043 	ldbu	r17,1(r21)
  8858c4:	10800017 	ldw	r2,0(r2)
  8858c8:	582b883a 	mov	r21,r11
  8858cc:	d8802915 	stw	r2,164(sp)
  8858d0:	20800104 	addi	r2,r4,4
  8858d4:	d9002917 	ldw	r4,164(sp)
  8858d8:	d8802d15 	stw	r2,180(sp)
  8858dc:	203e7a0e 	bge	r4,zero,8852c8 <___vfprintf_internal_r+0x1b38>
  8858e0:	8c403fcc 	andi	r17,r17,255
  8858e4:	00bfffc4 	movi	r2,-1
  8858e8:	8c40201c 	xori	r17,r17,128
  8858ec:	d8802915 	stw	r2,164(sp)
  8858f0:	8c7fe004 	addi	r17,r17,-128
  8858f4:	00380706 	br	883914 <___vfprintf_internal_r+0x184>
  8858f8:	d8c02917 	ldw	r3,164(sp)
  8858fc:	18c00084 	addi	r3,r3,2
  885900:	d8c02e15 	stw	r3,184(sp)
  885904:	1805883a 	mov	r2,r3
  885908:	183d960e 	bge	r3,zero,884f64 <___vfprintf_internal_r+0x17d4>
  88590c:	003fd606 	br	885868 <___vfprintf_internal_r+0x20d8>
  885910:	0005883a 	mov	r2,zero
  885914:	003f8e06 	br	885750 <___vfprintf_internal_r+0x1fc0>
  885918:	9080004c 	andi	r2,r18,1
  88591c:	103f811e 	bne	r2,zero,885724 <___vfprintf_internal_r+0x1f94>
  885920:	d8802117 	ldw	r2,132(sp)
  885924:	1405c83a 	sub	r2,r2,r16
  885928:	d8803315 	stw	r2,204(sp)
  88592c:	b47ef326 	beq	r22,r17,8854fc <___vfprintf_internal_r+0x1d6c>
  885930:	dd802617 	ldw	r22,152(sp)
  885934:	003f1106 	br	88557c <___vfprintf_internal_r+0x1dec>
  885938:	d9c02785 	stb	r7,158(sp)
  88593c:	00390406 	br	883d50 <___vfprintf_internal_r+0x5c0>
  885940:	d9c02785 	stb	r7,158(sp)
  885944:	0038d306 	br	883c94 <___vfprintf_internal_r+0x504>
  885948:	d9c02785 	stb	r7,158(sp)
  88594c:	003a6106 	br	8842d4 <___vfprintf_internal_r+0xb44>
  885950:	d9c02785 	stb	r7,158(sp)
  885954:	003af806 	br	884538 <___vfprintf_internal_r+0xda8>
  885958:	0005883a 	mov	r2,zero
  88595c:	003d7e06 	br	884f58 <___vfprintf_internal_r+0x17c8>
  885960:	d8802344 	addi	r2,sp,141
  885964:	003f1306 	br	8855b4 <___vfprintf_internal_r+0x1e24>
  885968:	d9c02785 	stb	r7,158(sp)
  88596c:	00392306 	br	883dfc <___vfprintf_internal_r+0x66c>
  885970:	d9c02785 	stb	r7,158(sp)
  885974:	003aa906 	br	88441c <___vfprintf_internal_r+0xc8c>
  885978:	d9c02785 	stb	r7,158(sp)
  88597c:	003a3d06 	br	884274 <___vfprintf_internal_r+0xae4>
  885980:	d9c02785 	stb	r7,158(sp)
  885984:	003aca06 	br	8844b0 <___vfprintf_internal_r+0xd20>

00885988 <__vfprintf_internal>:
  885988:	00802274 	movhi	r2,137
  88598c:	10912004 	addi	r2,r2,17536
  885990:	300f883a 	mov	r7,r6
  885994:	280d883a 	mov	r6,r5
  885998:	200b883a 	mov	r5,r4
  88599c:	11000017 	ldw	r4,0(r2)
  8859a0:	08837901 	jmpi	883790 <___vfprintf_internal_r>

008859a4 <__sbprintf>:
  8859a4:	2880030b 	ldhu	r2,12(r5)
  8859a8:	2ac01917 	ldw	r11,100(r5)
  8859ac:	2a80038b 	ldhu	r10,14(r5)
  8859b0:	2a400717 	ldw	r9,28(r5)
  8859b4:	2a000917 	ldw	r8,36(r5)
  8859b8:	defee204 	addi	sp,sp,-1144
  8859bc:	00c10004 	movi	r3,1024
  8859c0:	dc011a15 	stw	r16,1128(sp)
  8859c4:	10bfff4c 	andi	r2,r2,65533
  8859c8:	2821883a 	mov	r16,r5
  8859cc:	d8cb883a 	add	r5,sp,r3
  8859d0:	dc811c15 	stw	r18,1136(sp)
  8859d4:	dc411b15 	stw	r17,1132(sp)
  8859d8:	dfc11d15 	stw	ra,1140(sp)
  8859dc:	2025883a 	mov	r18,r4
  8859e0:	d881030d 	sth	r2,1036(sp)
  8859e4:	dac11915 	stw	r11,1124(sp)
  8859e8:	da81038d 	sth	r10,1038(sp)
  8859ec:	da410715 	stw	r9,1052(sp)
  8859f0:	da010915 	stw	r8,1060(sp)
  8859f4:	dec10015 	stw	sp,1024(sp)
  8859f8:	dec10415 	stw	sp,1040(sp)
  8859fc:	d8c10215 	stw	r3,1032(sp)
  885a00:	d8c10515 	stw	r3,1044(sp)
  885a04:	d8010615 	stw	zero,1048(sp)
  885a08:	08837900 	call	883790 <___vfprintf_internal_r>
  885a0c:	1023883a 	mov	r17,r2
  885a10:	10000416 	blt	r2,zero,885a24 <__sbprintf+0x80>
  885a14:	d9410004 	addi	r5,sp,1024
  885a18:	9009883a 	mov	r4,r18
  885a1c:	08876580 	call	887658 <_fflush_r>
  885a20:	10000d1e 	bne	r2,zero,885a58 <__sbprintf+0xb4>
  885a24:	d881030b 	ldhu	r2,1036(sp)
  885a28:	1080100c 	andi	r2,r2,64
  885a2c:	10000326 	beq	r2,zero,885a3c <__sbprintf+0x98>
  885a30:	8080030b 	ldhu	r2,12(r16)
  885a34:	10801014 	ori	r2,r2,64
  885a38:	8080030d 	sth	r2,12(r16)
  885a3c:	8805883a 	mov	r2,r17
  885a40:	dfc11d17 	ldw	ra,1140(sp)
  885a44:	dc811c17 	ldw	r18,1136(sp)
  885a48:	dc411b17 	ldw	r17,1132(sp)
  885a4c:	dc011a17 	ldw	r16,1128(sp)
  885a50:	dec11e04 	addi	sp,sp,1144
  885a54:	f800283a 	ret
  885a58:	047fffc4 	movi	r17,-1
  885a5c:	003ff106 	br	885a24 <__sbprintf+0x80>

00885a60 <__swsetup_r>:
  885a60:	00802274 	movhi	r2,137
  885a64:	defffd04 	addi	sp,sp,-12
  885a68:	10912004 	addi	r2,r2,17536
  885a6c:	dc400115 	stw	r17,4(sp)
  885a70:	2023883a 	mov	r17,r4
  885a74:	11000017 	ldw	r4,0(r2)
  885a78:	dc000015 	stw	r16,0(sp)
  885a7c:	dfc00215 	stw	ra,8(sp)
  885a80:	2821883a 	mov	r16,r5
  885a84:	20000226 	beq	r4,zero,885a90 <__swsetup_r+0x30>
  885a88:	20800e17 	ldw	r2,56(r4)
  885a8c:	10003126 	beq	r2,zero,885b54 <__swsetup_r+0xf4>
  885a90:	8080030b 	ldhu	r2,12(r16)
  885a94:	10c0020c 	andi	r3,r2,8
  885a98:	1009883a 	mov	r4,r2
  885a9c:	18000f26 	beq	r3,zero,885adc <__swsetup_r+0x7c>
  885aa0:	80c00417 	ldw	r3,16(r16)
  885aa4:	18001526 	beq	r3,zero,885afc <__swsetup_r+0x9c>
  885aa8:	1100004c 	andi	r4,r2,1
  885aac:	20001c1e 	bne	r4,zero,885b20 <__swsetup_r+0xc0>
  885ab0:	1080008c 	andi	r2,r2,2
  885ab4:	1000291e 	bne	r2,zero,885b5c <__swsetup_r+0xfc>
  885ab8:	80800517 	ldw	r2,20(r16)
  885abc:	80800215 	stw	r2,8(r16)
  885ac0:	18001c26 	beq	r3,zero,885b34 <__swsetup_r+0xd4>
  885ac4:	0005883a 	mov	r2,zero
  885ac8:	dfc00217 	ldw	ra,8(sp)
  885acc:	dc400117 	ldw	r17,4(sp)
  885ad0:	dc000017 	ldw	r16,0(sp)
  885ad4:	dec00304 	addi	sp,sp,12
  885ad8:	f800283a 	ret
  885adc:	2080040c 	andi	r2,r4,16
  885ae0:	10002e26 	beq	r2,zero,885b9c <__swsetup_r+0x13c>
  885ae4:	2080010c 	andi	r2,r4,4
  885ae8:	10001e1e 	bne	r2,zero,885b64 <__swsetup_r+0x104>
  885aec:	80c00417 	ldw	r3,16(r16)
  885af0:	20800214 	ori	r2,r4,8
  885af4:	8080030d 	sth	r2,12(r16)
  885af8:	183feb1e 	bne	r3,zero,885aa8 <__swsetup_r+0x48>
  885afc:	1100a00c 	andi	r4,r2,640
  885b00:	01408004 	movi	r5,512
  885b04:	217fe826 	beq	r4,r5,885aa8 <__swsetup_r+0x48>
  885b08:	800b883a 	mov	r5,r16
  885b0c:	8809883a 	mov	r4,r17
  885b10:	088811c0 	call	88811c <__smakebuf_r>
  885b14:	8080030b 	ldhu	r2,12(r16)
  885b18:	80c00417 	ldw	r3,16(r16)
  885b1c:	003fe206 	br	885aa8 <__swsetup_r+0x48>
  885b20:	80800517 	ldw	r2,20(r16)
  885b24:	80000215 	stw	zero,8(r16)
  885b28:	0085c83a 	sub	r2,zero,r2
  885b2c:	80800615 	stw	r2,24(r16)
  885b30:	183fe41e 	bne	r3,zero,885ac4 <__swsetup_r+0x64>
  885b34:	80c0030b 	ldhu	r3,12(r16)
  885b38:	0005883a 	mov	r2,zero
  885b3c:	1900200c 	andi	r4,r3,128
  885b40:	203fe126 	beq	r4,zero,885ac8 <__swsetup_r+0x68>
  885b44:	18c01014 	ori	r3,r3,64
  885b48:	80c0030d 	sth	r3,12(r16)
  885b4c:	00bfffc4 	movi	r2,-1
  885b50:	003fdd06 	br	885ac8 <__swsetup_r+0x68>
  885b54:	0887a340 	call	887a34 <__sinit>
  885b58:	003fcd06 	br	885a90 <__swsetup_r+0x30>
  885b5c:	0005883a 	mov	r2,zero
  885b60:	003fd606 	br	885abc <__swsetup_r+0x5c>
  885b64:	81400c17 	ldw	r5,48(r16)
  885b68:	28000626 	beq	r5,zero,885b84 <__swsetup_r+0x124>
  885b6c:	80801004 	addi	r2,r16,64
  885b70:	28800326 	beq	r5,r2,885b80 <__swsetup_r+0x120>
  885b74:	8809883a 	mov	r4,r17
  885b78:	0887ba80 	call	887ba8 <_free_r>
  885b7c:	8100030b 	ldhu	r4,12(r16)
  885b80:	80000c15 	stw	zero,48(r16)
  885b84:	80c00417 	ldw	r3,16(r16)
  885b88:	00bff6c4 	movi	r2,-37
  885b8c:	1108703a 	and	r4,r2,r4
  885b90:	80000115 	stw	zero,4(r16)
  885b94:	80c00015 	stw	r3,0(r16)
  885b98:	003fd506 	br	885af0 <__swsetup_r+0x90>
  885b9c:	00800244 	movi	r2,9
  885ba0:	88800015 	stw	r2,0(r17)
  885ba4:	20801014 	ori	r2,r4,64
  885ba8:	8080030d 	sth	r2,12(r16)
  885bac:	00bfffc4 	movi	r2,-1
  885bb0:	003fc506 	br	885ac8 <__swsetup_r+0x68>

00885bb4 <quorem>:
  885bb4:	defff704 	addi	sp,sp,-36
  885bb8:	dc800215 	stw	r18,8(sp)
  885bbc:	20800417 	ldw	r2,16(r4)
  885bc0:	2c800417 	ldw	r18,16(r5)
  885bc4:	dfc00815 	stw	ra,32(sp)
  885bc8:	ddc00715 	stw	r23,28(sp)
  885bcc:	dd800615 	stw	r22,24(sp)
  885bd0:	dd400515 	stw	r21,20(sp)
  885bd4:	dd000415 	stw	r20,16(sp)
  885bd8:	dcc00315 	stw	r19,12(sp)
  885bdc:	dc400115 	stw	r17,4(sp)
  885be0:	dc000015 	stw	r16,0(sp)
  885be4:	14807116 	blt	r2,r18,885dac <quorem+0x1f8>
  885be8:	94bfffc4 	addi	r18,r18,-1
  885bec:	94ad883a 	add	r22,r18,r18
  885bf0:	b5ad883a 	add	r22,r22,r22
  885bf4:	2c400504 	addi	r17,r5,20
  885bf8:	8da9883a 	add	r20,r17,r22
  885bfc:	25400504 	addi	r21,r4,20
  885c00:	282f883a 	mov	r23,r5
  885c04:	adad883a 	add	r22,r21,r22
  885c08:	a1400017 	ldw	r5,0(r20)
  885c0c:	2021883a 	mov	r16,r4
  885c10:	b1000017 	ldw	r4,0(r22)
  885c14:	29400044 	addi	r5,r5,1
  885c18:	088cde80 	call	88cde8 <__udivsi3>
  885c1c:	1027883a 	mov	r19,r2
  885c20:	10002c26 	beq	r2,zero,885cd4 <quorem+0x120>
  885c24:	a813883a 	mov	r9,r21
  885c28:	880b883a 	mov	r5,r17
  885c2c:	0009883a 	mov	r4,zero
  885c30:	000d883a 	mov	r6,zero
  885c34:	2a000017 	ldw	r8,0(r5)
  885c38:	49c00017 	ldw	r7,0(r9)
  885c3c:	29400104 	addi	r5,r5,4
  885c40:	40bfffcc 	andi	r2,r8,65535
  885c44:	14c5383a 	mul	r2,r2,r19
  885c48:	4010d43a 	srli	r8,r8,16
  885c4c:	38ffffcc 	andi	r3,r7,65535
  885c50:	1105883a 	add	r2,r2,r4
  885c54:	1008d43a 	srli	r4,r2,16
  885c58:	44d1383a 	mul	r8,r8,r19
  885c5c:	198d883a 	add	r6,r3,r6
  885c60:	10ffffcc 	andi	r3,r2,65535
  885c64:	30c7c83a 	sub	r3,r6,r3
  885c68:	380ed43a 	srli	r7,r7,16
  885c6c:	4105883a 	add	r2,r8,r4
  885c70:	180dd43a 	srai	r6,r3,16
  885c74:	113fffcc 	andi	r4,r2,65535
  885c78:	390fc83a 	sub	r7,r7,r4
  885c7c:	398d883a 	add	r6,r7,r6
  885c80:	300e943a 	slli	r7,r6,16
  885c84:	18ffffcc 	andi	r3,r3,65535
  885c88:	1008d43a 	srli	r4,r2,16
  885c8c:	38ceb03a 	or	r7,r7,r3
  885c90:	49c00015 	stw	r7,0(r9)
  885c94:	300dd43a 	srai	r6,r6,16
  885c98:	4a400104 	addi	r9,r9,4
  885c9c:	a17fe52e 	bgeu	r20,r5,885c34 <quorem+0x80>
  885ca0:	b0800017 	ldw	r2,0(r22)
  885ca4:	10000b1e 	bne	r2,zero,885cd4 <quorem+0x120>
  885ca8:	b0bfff04 	addi	r2,r22,-4
  885cac:	a880082e 	bgeu	r21,r2,885cd0 <quorem+0x11c>
  885cb0:	b0ffff17 	ldw	r3,-4(r22)
  885cb4:	18000326 	beq	r3,zero,885cc4 <quorem+0x110>
  885cb8:	00000506 	br	885cd0 <quorem+0x11c>
  885cbc:	10c00017 	ldw	r3,0(r2)
  885cc0:	1800031e 	bne	r3,zero,885cd0 <quorem+0x11c>
  885cc4:	10bfff04 	addi	r2,r2,-4
  885cc8:	94bfffc4 	addi	r18,r18,-1
  885ccc:	a8bffb36 	bltu	r21,r2,885cbc <quorem+0x108>
  885cd0:	84800415 	stw	r18,16(r16)
  885cd4:	b80b883a 	mov	r5,r23
  885cd8:	8009883a 	mov	r4,r16
  885cdc:	0888dcc0 	call	888dcc <__mcmp>
  885ce0:	10002616 	blt	r2,zero,885d7c <quorem+0x1c8>
  885ce4:	9cc00044 	addi	r19,r19,1
  885ce8:	a805883a 	mov	r2,r21
  885cec:	000b883a 	mov	r5,zero
  885cf0:	11000017 	ldw	r4,0(r2)
  885cf4:	89800017 	ldw	r6,0(r17)
  885cf8:	10800104 	addi	r2,r2,4
  885cfc:	20ffffcc 	andi	r3,r4,65535
  885d00:	194b883a 	add	r5,r3,r5
  885d04:	30ffffcc 	andi	r3,r6,65535
  885d08:	28c7c83a 	sub	r3,r5,r3
  885d0c:	300cd43a 	srli	r6,r6,16
  885d10:	2008d43a 	srli	r4,r4,16
  885d14:	180bd43a 	srai	r5,r3,16
  885d18:	18ffffcc 	andi	r3,r3,65535
  885d1c:	2189c83a 	sub	r4,r4,r6
  885d20:	2149883a 	add	r4,r4,r5
  885d24:	200c943a 	slli	r6,r4,16
  885d28:	8c400104 	addi	r17,r17,4
  885d2c:	200bd43a 	srai	r5,r4,16
  885d30:	30c6b03a 	or	r3,r6,r3
  885d34:	10ffff15 	stw	r3,-4(r2)
  885d38:	a47fed2e 	bgeu	r20,r17,885cf0 <quorem+0x13c>
  885d3c:	9485883a 	add	r2,r18,r18
  885d40:	1085883a 	add	r2,r2,r2
  885d44:	a887883a 	add	r3,r21,r2
  885d48:	18800017 	ldw	r2,0(r3)
  885d4c:	10000b1e 	bne	r2,zero,885d7c <quorem+0x1c8>
  885d50:	18bfff04 	addi	r2,r3,-4
  885d54:	a880082e 	bgeu	r21,r2,885d78 <quorem+0x1c4>
  885d58:	18ffff17 	ldw	r3,-4(r3)
  885d5c:	18000326 	beq	r3,zero,885d6c <quorem+0x1b8>
  885d60:	00000506 	br	885d78 <quorem+0x1c4>
  885d64:	10c00017 	ldw	r3,0(r2)
  885d68:	1800031e 	bne	r3,zero,885d78 <quorem+0x1c4>
  885d6c:	10bfff04 	addi	r2,r2,-4
  885d70:	94bfffc4 	addi	r18,r18,-1
  885d74:	a8bffb36 	bltu	r21,r2,885d64 <quorem+0x1b0>
  885d78:	84800415 	stw	r18,16(r16)
  885d7c:	9805883a 	mov	r2,r19
  885d80:	dfc00817 	ldw	ra,32(sp)
  885d84:	ddc00717 	ldw	r23,28(sp)
  885d88:	dd800617 	ldw	r22,24(sp)
  885d8c:	dd400517 	ldw	r21,20(sp)
  885d90:	dd000417 	ldw	r20,16(sp)
  885d94:	dcc00317 	ldw	r19,12(sp)
  885d98:	dc800217 	ldw	r18,8(sp)
  885d9c:	dc400117 	ldw	r17,4(sp)
  885da0:	dc000017 	ldw	r16,0(sp)
  885da4:	dec00904 	addi	sp,sp,36
  885da8:	f800283a 	ret
  885dac:	0005883a 	mov	r2,zero
  885db0:	003ff306 	br	885d80 <quorem+0x1cc>

00885db4 <_dtoa_r>:
  885db4:	20801017 	ldw	r2,64(r4)
  885db8:	deffde04 	addi	sp,sp,-136
  885dbc:	df002015 	stw	fp,128(sp)
  885dc0:	dcc01b15 	stw	r19,108(sp)
  885dc4:	dc801a15 	stw	r18,104(sp)
  885dc8:	dc401915 	stw	r17,100(sp)
  885dcc:	dc001815 	stw	r16,96(sp)
  885dd0:	dfc02115 	stw	ra,132(sp)
  885dd4:	ddc01f15 	stw	r23,124(sp)
  885dd8:	dd801e15 	stw	r22,120(sp)
  885ddc:	dd401d15 	stw	r21,116(sp)
  885de0:	dd001c15 	stw	r20,112(sp)
  885de4:	d9c00315 	stw	r7,12(sp)
  885de8:	2039883a 	mov	fp,r4
  885dec:	3023883a 	mov	r17,r6
  885df0:	2825883a 	mov	r18,r5
  885df4:	dc002417 	ldw	r16,144(sp)
  885df8:	3027883a 	mov	r19,r6
  885dfc:	10000826 	beq	r2,zero,885e20 <_dtoa_r+0x6c>
  885e00:	21801117 	ldw	r6,68(r4)
  885e04:	00c00044 	movi	r3,1
  885e08:	100b883a 	mov	r5,r2
  885e0c:	1986983a 	sll	r3,r3,r6
  885e10:	11800115 	stw	r6,4(r2)
  885e14:	10c00215 	stw	r3,8(r2)
  885e18:	08885ac0 	call	8885ac <_Bfree>
  885e1c:	e0001015 	stw	zero,64(fp)
  885e20:	88002e16 	blt	r17,zero,885edc <_dtoa_r+0x128>
  885e24:	80000015 	stw	zero,0(r16)
  885e28:	889ffc2c 	andhi	r2,r17,32752
  885e2c:	00dffc34 	movhi	r3,32752
  885e30:	10c01c26 	beq	r2,r3,885ea4 <_dtoa_r+0xf0>
  885e34:	000d883a 	mov	r6,zero
  885e38:	000f883a 	mov	r7,zero
  885e3c:	9009883a 	mov	r4,r18
  885e40:	980b883a 	mov	r5,r19
  885e44:	088e0380 	call	88e038 <__eqdf2>
  885e48:	10002b1e 	bne	r2,zero,885ef8 <_dtoa_r+0x144>
  885e4c:	d9c02317 	ldw	r7,140(sp)
  885e50:	00800044 	movi	r2,1
  885e54:	38800015 	stw	r2,0(r7)
  885e58:	d8802517 	ldw	r2,148(sp)
  885e5c:	10019e26 	beq	r2,zero,8864d8 <_dtoa_r+0x724>
  885e60:	d8c02517 	ldw	r3,148(sp)
  885e64:	00802274 	movhi	r2,137
  885e68:	10894744 	addi	r2,r2,9501
  885e6c:	18800015 	stw	r2,0(r3)
  885e70:	10bfffc4 	addi	r2,r2,-1
  885e74:	dfc02117 	ldw	ra,132(sp)
  885e78:	df002017 	ldw	fp,128(sp)
  885e7c:	ddc01f17 	ldw	r23,124(sp)
  885e80:	dd801e17 	ldw	r22,120(sp)
  885e84:	dd401d17 	ldw	r21,116(sp)
  885e88:	dd001c17 	ldw	r20,112(sp)
  885e8c:	dcc01b17 	ldw	r19,108(sp)
  885e90:	dc801a17 	ldw	r18,104(sp)
  885e94:	dc401917 	ldw	r17,100(sp)
  885e98:	dc001817 	ldw	r16,96(sp)
  885e9c:	dec02204 	addi	sp,sp,136
  885ea0:	f800283a 	ret
  885ea4:	d8c02317 	ldw	r3,140(sp)
  885ea8:	0089c3c4 	movi	r2,9999
  885eac:	18800015 	stw	r2,0(r3)
  885eb0:	90017726 	beq	r18,zero,886490 <_dtoa_r+0x6dc>
  885eb4:	00802274 	movhi	r2,137
  885eb8:	10895304 	addi	r2,r2,9548
  885ebc:	d9002517 	ldw	r4,148(sp)
  885ec0:	203fec26 	beq	r4,zero,885e74 <_dtoa_r+0xc0>
  885ec4:	10c000c7 	ldb	r3,3(r2)
  885ec8:	1801781e 	bne	r3,zero,8864ac <_dtoa_r+0x6f8>
  885ecc:	10c000c4 	addi	r3,r2,3
  885ed0:	d9802517 	ldw	r6,148(sp)
  885ed4:	30c00015 	stw	r3,0(r6)
  885ed8:	003fe606 	br	885e74 <_dtoa_r+0xc0>
  885edc:	04e00034 	movhi	r19,32768
  885ee0:	9cffffc4 	addi	r19,r19,-1
  885ee4:	00800044 	movi	r2,1
  885ee8:	8ce6703a 	and	r19,r17,r19
  885eec:	80800015 	stw	r2,0(r16)
  885ef0:	9823883a 	mov	r17,r19
  885ef4:	003fcc06 	br	885e28 <_dtoa_r+0x74>
  885ef8:	d8800204 	addi	r2,sp,8
  885efc:	d8800015 	stw	r2,0(sp)
  885f00:	d9c00104 	addi	r7,sp,4
  885f04:	900b883a 	mov	r5,r18
  885f08:	980d883a 	mov	r6,r19
  885f0c:	e009883a 	mov	r4,fp
  885f10:	8820d53a 	srli	r16,r17,20
  885f14:	08891980 	call	889198 <__d2b>
  885f18:	d8800915 	stw	r2,36(sp)
  885f1c:	8001651e 	bne	r16,zero,8864b4 <_dtoa_r+0x700>
  885f20:	dd800217 	ldw	r22,8(sp)
  885f24:	dc000117 	ldw	r16,4(sp)
  885f28:	00800804 	movi	r2,32
  885f2c:	b421883a 	add	r16,r22,r16
  885f30:	80c10c84 	addi	r3,r16,1074
  885f34:	10c2d10e 	bge	r2,r3,886a7c <_dtoa_r+0xcc8>
  885f38:	00801004 	movi	r2,64
  885f3c:	81010484 	addi	r4,r16,1042
  885f40:	10c7c83a 	sub	r3,r2,r3
  885f44:	9108d83a 	srl	r4,r18,r4
  885f48:	88e2983a 	sll	r17,r17,r3
  885f4c:	2448b03a 	or	r4,r4,r17
  885f50:	088f4000 	call	88f400 <__floatunsidf>
  885f54:	017f8434 	movhi	r5,65040
  885f58:	01800044 	movi	r6,1
  885f5c:	1009883a 	mov	r4,r2
  885f60:	194b883a 	add	r5,r3,r5
  885f64:	843fffc4 	addi	r16,r16,-1
  885f68:	d9801115 	stw	r6,68(sp)
  885f6c:	000d883a 	mov	r6,zero
  885f70:	01cffe34 	movhi	r7,16376
  885f74:	088e9a80 	call	88e9a8 <__subdf3>
  885f78:	0198dbf4 	movhi	r6,25455
  885f7c:	01cff4f4 	movhi	r7,16339
  885f80:	3190d844 	addi	r6,r6,17249
  885f84:	39e1e9c4 	addi	r7,r7,-30809
  885f88:	1009883a 	mov	r4,r2
  885f8c:	180b883a 	mov	r5,r3
  885f90:	088e2900 	call	88e290 <__muldf3>
  885f94:	01a2d874 	movhi	r6,35681
  885f98:	01cff1f4 	movhi	r7,16327
  885f9c:	31b22cc4 	addi	r6,r6,-14157
  885fa0:	39e28a04 	addi	r7,r7,-30168
  885fa4:	180b883a 	mov	r5,r3
  885fa8:	1009883a 	mov	r4,r2
  885fac:	088cea40 	call	88cea4 <__adddf3>
  885fb0:	8009883a 	mov	r4,r16
  885fb4:	1029883a 	mov	r20,r2
  885fb8:	1823883a 	mov	r17,r3
  885fbc:	088f3240 	call	88f324 <__floatsidf>
  885fc0:	019427f4 	movhi	r6,20639
  885fc4:	01cff4f4 	movhi	r7,16339
  885fc8:	319e7ec4 	addi	r6,r6,31227
  885fcc:	39d104c4 	addi	r7,r7,17427
  885fd0:	1009883a 	mov	r4,r2
  885fd4:	180b883a 	mov	r5,r3
  885fd8:	088e2900 	call	88e290 <__muldf3>
  885fdc:	100d883a 	mov	r6,r2
  885fe0:	180f883a 	mov	r7,r3
  885fe4:	a009883a 	mov	r4,r20
  885fe8:	880b883a 	mov	r5,r17
  885fec:	088cea40 	call	88cea4 <__adddf3>
  885ff0:	1009883a 	mov	r4,r2
  885ff4:	180b883a 	mov	r5,r3
  885ff8:	1029883a 	mov	r20,r2
  885ffc:	1823883a 	mov	r17,r3
  886000:	088f2a40 	call	88f2a4 <__fixdfsi>
  886004:	000d883a 	mov	r6,zero
  886008:	000f883a 	mov	r7,zero
  88600c:	a009883a 	mov	r4,r20
  886010:	880b883a 	mov	r5,r17
  886014:	d8800515 	stw	r2,20(sp)
  886018:	088e19c0 	call	88e19c <__ledf2>
  88601c:	10028716 	blt	r2,zero,886a3c <_dtoa_r+0xc88>
  886020:	d8c00517 	ldw	r3,20(sp)
  886024:	00800584 	movi	r2,22
  886028:	10c27536 	bltu	r2,r3,886a00 <_dtoa_r+0xc4c>
  88602c:	180490fa 	slli	r2,r3,3
  886030:	00c02274 	movhi	r3,137
  886034:	18c96e04 	addi	r3,r3,9656
  886038:	1885883a 	add	r2,r3,r2
  88603c:	11000017 	ldw	r4,0(r2)
  886040:	11400117 	ldw	r5,4(r2)
  886044:	900d883a 	mov	r6,r18
  886048:	980f883a 	mov	r7,r19
  88604c:	088e0c00 	call	88e0c0 <__gedf2>
  886050:	00828d0e 	bge	zero,r2,886a88 <_dtoa_r+0xcd4>
  886054:	d9000517 	ldw	r4,20(sp)
  886058:	d8000e15 	stw	zero,56(sp)
  88605c:	213fffc4 	addi	r4,r4,-1
  886060:	d9000515 	stw	r4,20(sp)
  886064:	b42dc83a 	sub	r22,r22,r16
  886068:	b5bfffc4 	addi	r22,r22,-1
  88606c:	b0026f16 	blt	r22,zero,886a2c <_dtoa_r+0xc78>
  886070:	d8000815 	stw	zero,32(sp)
  886074:	d9c00517 	ldw	r7,20(sp)
  886078:	38026416 	blt	r7,zero,886a0c <_dtoa_r+0xc58>
  88607c:	b1ed883a 	add	r22,r22,r7
  886080:	d9c00d15 	stw	r7,52(sp)
  886084:	d8000a15 	stw	zero,40(sp)
  886088:	d9800317 	ldw	r6,12(sp)
  88608c:	00800244 	movi	r2,9
  886090:	11811436 	bltu	r2,r6,8864e4 <_dtoa_r+0x730>
  886094:	00800144 	movi	r2,5
  886098:	1184e10e 	bge	r2,r6,887420 <_dtoa_r+0x166c>
  88609c:	31bfff04 	addi	r6,r6,-4
  8860a0:	d9800315 	stw	r6,12(sp)
  8860a4:	0023883a 	mov	r17,zero
  8860a8:	d9800317 	ldw	r6,12(sp)
  8860ac:	008000c4 	movi	r2,3
  8860b0:	30836726 	beq	r6,r2,886e50 <_dtoa_r+0x109c>
  8860b4:	1183410e 	bge	r2,r6,886dbc <_dtoa_r+0x1008>
  8860b8:	d9c00317 	ldw	r7,12(sp)
  8860bc:	00800104 	movi	r2,4
  8860c0:	38827c26 	beq	r7,r2,886ab4 <_dtoa_r+0xd00>
  8860c4:	00800144 	movi	r2,5
  8860c8:	3884c41e 	bne	r7,r2,8873dc <_dtoa_r+0x1628>
  8860cc:	00800044 	movi	r2,1
  8860d0:	d8800b15 	stw	r2,44(sp)
  8860d4:	d8c00517 	ldw	r3,20(sp)
  8860d8:	d9002217 	ldw	r4,136(sp)
  8860dc:	1907883a 	add	r3,r3,r4
  8860e0:	19800044 	addi	r6,r3,1
  8860e4:	d8c00c15 	stw	r3,48(sp)
  8860e8:	d9800615 	stw	r6,24(sp)
  8860ec:	0183a40e 	bge	zero,r6,886f80 <_dtoa_r+0x11cc>
  8860f0:	d9800617 	ldw	r6,24(sp)
  8860f4:	3021883a 	mov	r16,r6
  8860f8:	e0001115 	stw	zero,68(fp)
  8860fc:	008005c4 	movi	r2,23
  886100:	1184c92e 	bgeu	r2,r6,887428 <_dtoa_r+0x1674>
  886104:	00c00044 	movi	r3,1
  886108:	00800104 	movi	r2,4
  88610c:	1085883a 	add	r2,r2,r2
  886110:	11000504 	addi	r4,r2,20
  886114:	180b883a 	mov	r5,r3
  886118:	18c00044 	addi	r3,r3,1
  88611c:	313ffb2e 	bgeu	r6,r4,88610c <_dtoa_r+0x358>
  886120:	e1401115 	stw	r5,68(fp)
  886124:	e009883a 	mov	r4,fp
  886128:	08885040 	call	888504 <_Balloc>
  88612c:	d8800715 	stw	r2,28(sp)
  886130:	e0801015 	stw	r2,64(fp)
  886134:	00800384 	movi	r2,14
  886138:	1400f736 	bltu	r2,r16,886518 <_dtoa_r+0x764>
  88613c:	8800f626 	beq	r17,zero,886518 <_dtoa_r+0x764>
  886140:	d9c00517 	ldw	r7,20(sp)
  886144:	01c39a0e 	bge	zero,r7,886fb0 <_dtoa_r+0x11fc>
  886148:	388003cc 	andi	r2,r7,15
  88614c:	100490fa 	slli	r2,r2,3
  886150:	382bd13a 	srai	r21,r7,4
  886154:	00c02274 	movhi	r3,137
  886158:	18c96e04 	addi	r3,r3,9656
  88615c:	1885883a 	add	r2,r3,r2
  886160:	a8c0040c 	andi	r3,r21,16
  886164:	12400017 	ldw	r9,0(r2)
  886168:	12000117 	ldw	r8,4(r2)
  88616c:	18037926 	beq	r3,zero,886f54 <_dtoa_r+0x11a0>
  886170:	00802274 	movhi	r2,137
  886174:	10896404 	addi	r2,r2,9616
  886178:	11800817 	ldw	r6,32(r2)
  88617c:	11c00917 	ldw	r7,36(r2)
  886180:	9009883a 	mov	r4,r18
  886184:	980b883a 	mov	r5,r19
  886188:	da001715 	stw	r8,92(sp)
  88618c:	da401615 	stw	r9,88(sp)
  886190:	088d7500 	call	88d750 <__divdf3>
  886194:	da001717 	ldw	r8,92(sp)
  886198:	da401617 	ldw	r9,88(sp)
  88619c:	ad4003cc 	andi	r21,r21,15
  8861a0:	040000c4 	movi	r16,3
  8861a4:	1023883a 	mov	r17,r2
  8861a8:	1829883a 	mov	r20,r3
  8861ac:	a8001126 	beq	r21,zero,8861f4 <_dtoa_r+0x440>
  8861b0:	05c02274 	movhi	r23,137
  8861b4:	bdc96404 	addi	r23,r23,9616
  8861b8:	4805883a 	mov	r2,r9
  8861bc:	4007883a 	mov	r3,r8
  8861c0:	a980004c 	andi	r6,r21,1
  8861c4:	1009883a 	mov	r4,r2
  8861c8:	a82bd07a 	srai	r21,r21,1
  8861cc:	180b883a 	mov	r5,r3
  8861d0:	30000426 	beq	r6,zero,8861e4 <_dtoa_r+0x430>
  8861d4:	b9800017 	ldw	r6,0(r23)
  8861d8:	b9c00117 	ldw	r7,4(r23)
  8861dc:	84000044 	addi	r16,r16,1
  8861e0:	088e2900 	call	88e290 <__muldf3>
  8861e4:	bdc00204 	addi	r23,r23,8
  8861e8:	a83ff51e 	bne	r21,zero,8861c0 <_dtoa_r+0x40c>
  8861ec:	1013883a 	mov	r9,r2
  8861f0:	1811883a 	mov	r8,r3
  8861f4:	480d883a 	mov	r6,r9
  8861f8:	400f883a 	mov	r7,r8
  8861fc:	8809883a 	mov	r4,r17
  886200:	a00b883a 	mov	r5,r20
  886204:	088d7500 	call	88d750 <__divdf3>
  886208:	d8800f15 	stw	r2,60(sp)
  88620c:	d8c01015 	stw	r3,64(sp)
  886210:	d8c00e17 	ldw	r3,56(sp)
  886214:	18000626 	beq	r3,zero,886230 <_dtoa_r+0x47c>
  886218:	d9000f17 	ldw	r4,60(sp)
  88621c:	d9401017 	ldw	r5,64(sp)
  886220:	000d883a 	mov	r6,zero
  886224:	01cffc34 	movhi	r7,16368
  886228:	088e19c0 	call	88e19c <__ledf2>
  88622c:	10040b16 	blt	r2,zero,88725c <_dtoa_r+0x14a8>
  886230:	8009883a 	mov	r4,r16
  886234:	088f3240 	call	88f324 <__floatsidf>
  886238:	d9800f17 	ldw	r6,60(sp)
  88623c:	d9c01017 	ldw	r7,64(sp)
  886240:	1009883a 	mov	r4,r2
  886244:	180b883a 	mov	r5,r3
  886248:	088e2900 	call	88e290 <__muldf3>
  88624c:	000d883a 	mov	r6,zero
  886250:	01d00734 	movhi	r7,16412
  886254:	1009883a 	mov	r4,r2
  886258:	180b883a 	mov	r5,r3
  88625c:	088cea40 	call	88cea4 <__adddf3>
  886260:	1021883a 	mov	r16,r2
  886264:	d8800617 	ldw	r2,24(sp)
  886268:	047f3034 	movhi	r17,64704
  88626c:	1c63883a 	add	r17,r3,r17
  886270:	10031826 	beq	r2,zero,886ed4 <_dtoa_r+0x1120>
  886274:	d8c00517 	ldw	r3,20(sp)
  886278:	db000617 	ldw	r12,24(sp)
  88627c:	d8c01315 	stw	r3,76(sp)
  886280:	d9000b17 	ldw	r4,44(sp)
  886284:	20038f26 	beq	r4,zero,8870c4 <_dtoa_r+0x1310>
  886288:	60bfffc4 	addi	r2,r12,-1
  88628c:	100490fa 	slli	r2,r2,3
  886290:	00c02274 	movhi	r3,137
  886294:	18c96e04 	addi	r3,r3,9656
  886298:	1885883a 	add	r2,r3,r2
  88629c:	11800017 	ldw	r6,0(r2)
  8862a0:	11c00117 	ldw	r7,4(r2)
  8862a4:	d8800717 	ldw	r2,28(sp)
  8862a8:	0009883a 	mov	r4,zero
  8862ac:	014ff834 	movhi	r5,16352
  8862b0:	db001615 	stw	r12,88(sp)
  8862b4:	15c00044 	addi	r23,r2,1
  8862b8:	088d7500 	call	88d750 <__divdf3>
  8862bc:	800d883a 	mov	r6,r16
  8862c0:	880f883a 	mov	r7,r17
  8862c4:	1009883a 	mov	r4,r2
  8862c8:	180b883a 	mov	r5,r3
  8862cc:	088e9a80 	call	88e9a8 <__subdf3>
  8862d0:	d9401017 	ldw	r5,64(sp)
  8862d4:	d9000f17 	ldw	r4,60(sp)
  8862d8:	102b883a 	mov	r21,r2
  8862dc:	d8c01215 	stw	r3,72(sp)
  8862e0:	088f2a40 	call	88f2a4 <__fixdfsi>
  8862e4:	1009883a 	mov	r4,r2
  8862e8:	1029883a 	mov	r20,r2
  8862ec:	088f3240 	call	88f324 <__floatsidf>
  8862f0:	d9000f17 	ldw	r4,60(sp)
  8862f4:	d9401017 	ldw	r5,64(sp)
  8862f8:	100d883a 	mov	r6,r2
  8862fc:	180f883a 	mov	r7,r3
  886300:	088e9a80 	call	88e9a8 <__subdf3>
  886304:	1823883a 	mov	r17,r3
  886308:	d8c00717 	ldw	r3,28(sp)
  88630c:	d9401217 	ldw	r5,72(sp)
  886310:	a2000c04 	addi	r8,r20,48
  886314:	1021883a 	mov	r16,r2
  886318:	1a000005 	stb	r8,0(r3)
  88631c:	800d883a 	mov	r6,r16
  886320:	880f883a 	mov	r7,r17
  886324:	a809883a 	mov	r4,r21
  886328:	4029883a 	mov	r20,r8
  88632c:	088e0c00 	call	88e0c0 <__gedf2>
  886330:	00841d16 	blt	zero,r2,8873a8 <_dtoa_r+0x15f4>
  886334:	800d883a 	mov	r6,r16
  886338:	880f883a 	mov	r7,r17
  88633c:	0009883a 	mov	r4,zero
  886340:	014ffc34 	movhi	r5,16368
  886344:	088e9a80 	call	88e9a8 <__subdf3>
  886348:	d9401217 	ldw	r5,72(sp)
  88634c:	100d883a 	mov	r6,r2
  886350:	180f883a 	mov	r7,r3
  886354:	a809883a 	mov	r4,r21
  886358:	088e0c00 	call	88e0c0 <__gedf2>
  88635c:	db001617 	ldw	r12,88(sp)
  886360:	00840e16 	blt	zero,r2,88739c <_dtoa_r+0x15e8>
  886364:	00800044 	movi	r2,1
  886368:	13006b0e 	bge	r2,r12,886518 <_dtoa_r+0x764>
  88636c:	d9000717 	ldw	r4,28(sp)
  886370:	dd800f15 	stw	r22,60(sp)
  886374:	dcc01015 	stw	r19,64(sp)
  886378:	2319883a 	add	r12,r4,r12
  88637c:	dcc01217 	ldw	r19,72(sp)
  886380:	602d883a 	mov	r22,r12
  886384:	dc801215 	stw	r18,72(sp)
  886388:	b825883a 	mov	r18,r23
  88638c:	00000906 	br	8863b4 <_dtoa_r+0x600>
  886390:	088e9a80 	call	88e9a8 <__subdf3>
  886394:	a80d883a 	mov	r6,r21
  886398:	980f883a 	mov	r7,r19
  88639c:	1009883a 	mov	r4,r2
  8863a0:	180b883a 	mov	r5,r3
  8863a4:	088e19c0 	call	88e19c <__ledf2>
  8863a8:	1003e816 	blt	r2,zero,88734c <_dtoa_r+0x1598>
  8863ac:	b825883a 	mov	r18,r23
  8863b0:	bd83e926 	beq	r23,r22,887358 <_dtoa_r+0x15a4>
  8863b4:	a809883a 	mov	r4,r21
  8863b8:	980b883a 	mov	r5,r19
  8863bc:	000d883a 	mov	r6,zero
  8863c0:	01d00934 	movhi	r7,16420
  8863c4:	088e2900 	call	88e290 <__muldf3>
  8863c8:	000d883a 	mov	r6,zero
  8863cc:	01d00934 	movhi	r7,16420
  8863d0:	8009883a 	mov	r4,r16
  8863d4:	880b883a 	mov	r5,r17
  8863d8:	102b883a 	mov	r21,r2
  8863dc:	1827883a 	mov	r19,r3
  8863e0:	088e2900 	call	88e290 <__muldf3>
  8863e4:	180b883a 	mov	r5,r3
  8863e8:	1009883a 	mov	r4,r2
  8863ec:	1821883a 	mov	r16,r3
  8863f0:	1023883a 	mov	r17,r2
  8863f4:	088f2a40 	call	88f2a4 <__fixdfsi>
  8863f8:	1009883a 	mov	r4,r2
  8863fc:	1029883a 	mov	r20,r2
  886400:	088f3240 	call	88f324 <__floatsidf>
  886404:	8809883a 	mov	r4,r17
  886408:	800b883a 	mov	r5,r16
  88640c:	100d883a 	mov	r6,r2
  886410:	180f883a 	mov	r7,r3
  886414:	088e9a80 	call	88e9a8 <__subdf3>
  886418:	a5000c04 	addi	r20,r20,48
  88641c:	a80d883a 	mov	r6,r21
  886420:	980f883a 	mov	r7,r19
  886424:	1009883a 	mov	r4,r2
  886428:	180b883a 	mov	r5,r3
  88642c:	95000005 	stb	r20,0(r18)
  886430:	1021883a 	mov	r16,r2
  886434:	1823883a 	mov	r17,r3
  886438:	088e19c0 	call	88e19c <__ledf2>
  88643c:	bdc00044 	addi	r23,r23,1
  886440:	800d883a 	mov	r6,r16
  886444:	880f883a 	mov	r7,r17
  886448:	0009883a 	mov	r4,zero
  88644c:	014ffc34 	movhi	r5,16368
  886450:	103fcf0e 	bge	r2,zero,886390 <_dtoa_r+0x5dc>
  886454:	d8c01317 	ldw	r3,76(sp)
  886458:	d8c00515 	stw	r3,20(sp)
  88645c:	d9400917 	ldw	r5,36(sp)
  886460:	e009883a 	mov	r4,fp
  886464:	08885ac0 	call	8885ac <_Bfree>
  886468:	d9000517 	ldw	r4,20(sp)
  88646c:	d9802317 	ldw	r6,140(sp)
  886470:	d9c02517 	ldw	r7,148(sp)
  886474:	b8000005 	stb	zero,0(r23)
  886478:	20800044 	addi	r2,r4,1
  88647c:	30800015 	stw	r2,0(r6)
  886480:	3802aa26 	beq	r7,zero,886f2c <_dtoa_r+0x1178>
  886484:	3dc00015 	stw	r23,0(r7)
  886488:	d8800717 	ldw	r2,28(sp)
  88648c:	003e7906 	br	885e74 <_dtoa_r+0xc0>
  886490:	00800434 	movhi	r2,16
  886494:	10bfffc4 	addi	r2,r2,-1
  886498:	88a2703a 	and	r17,r17,r2
  88649c:	883e851e 	bne	r17,zero,885eb4 <_dtoa_r+0x100>
  8864a0:	00802274 	movhi	r2,137
  8864a4:	10895004 	addi	r2,r2,9536
  8864a8:	003e8406 	br	885ebc <_dtoa_r+0x108>
  8864ac:	10c00204 	addi	r3,r2,8
  8864b0:	003e8706 	br	885ed0 <_dtoa_r+0x11c>
  8864b4:	01400434 	movhi	r5,16
  8864b8:	297fffc4 	addi	r5,r5,-1
  8864bc:	994a703a 	and	r5,r19,r5
  8864c0:	9009883a 	mov	r4,r18
  8864c4:	843f0044 	addi	r16,r16,-1023
  8864c8:	294ffc34 	orhi	r5,r5,16368
  8864cc:	dd800217 	ldw	r22,8(sp)
  8864d0:	d8001115 	stw	zero,68(sp)
  8864d4:	003ea506 	br	885f6c <_dtoa_r+0x1b8>
  8864d8:	00802274 	movhi	r2,137
  8864dc:	10894704 	addi	r2,r2,9500
  8864e0:	003e6406 	br	885e74 <_dtoa_r+0xc0>
  8864e4:	e0001115 	stw	zero,68(fp)
  8864e8:	000b883a 	mov	r5,zero
  8864ec:	e009883a 	mov	r4,fp
  8864f0:	08885040 	call	888504 <_Balloc>
  8864f4:	01bfffc4 	movi	r6,-1
  8864f8:	01c00044 	movi	r7,1
  8864fc:	d8800715 	stw	r2,28(sp)
  886500:	d9800c15 	stw	r6,48(sp)
  886504:	e0801015 	stw	r2,64(fp)
  886508:	d8000315 	stw	zero,12(sp)
  88650c:	d9c00b15 	stw	r7,44(sp)
  886510:	d9800615 	stw	r6,24(sp)
  886514:	d8002215 	stw	zero,136(sp)
  886518:	d8800117 	ldw	r2,4(sp)
  88651c:	10008916 	blt	r2,zero,886744 <_dtoa_r+0x990>
  886520:	d9000517 	ldw	r4,20(sp)
  886524:	00c00384 	movi	r3,14
  886528:	19008616 	blt	r3,r4,886744 <_dtoa_r+0x990>
  88652c:	200490fa 	slli	r2,r4,3
  886530:	00c02274 	movhi	r3,137
  886534:	d9802217 	ldw	r6,136(sp)
  886538:	18c96e04 	addi	r3,r3,9656
  88653c:	1885883a 	add	r2,r3,r2
  886540:	14000017 	ldw	r16,0(r2)
  886544:	14400117 	ldw	r17,4(r2)
  886548:	30016316 	blt	r6,zero,886ad8 <_dtoa_r+0xd24>
  88654c:	800d883a 	mov	r6,r16
  886550:	880f883a 	mov	r7,r17
  886554:	9009883a 	mov	r4,r18
  886558:	980b883a 	mov	r5,r19
  88655c:	088d7500 	call	88d750 <__divdf3>
  886560:	180b883a 	mov	r5,r3
  886564:	1009883a 	mov	r4,r2
  886568:	088f2a40 	call	88f2a4 <__fixdfsi>
  88656c:	1009883a 	mov	r4,r2
  886570:	102b883a 	mov	r21,r2
  886574:	088f3240 	call	88f324 <__floatsidf>
  886578:	800d883a 	mov	r6,r16
  88657c:	880f883a 	mov	r7,r17
  886580:	1009883a 	mov	r4,r2
  886584:	180b883a 	mov	r5,r3
  886588:	088e2900 	call	88e290 <__muldf3>
  88658c:	100d883a 	mov	r6,r2
  886590:	180f883a 	mov	r7,r3
  886594:	9009883a 	mov	r4,r18
  886598:	980b883a 	mov	r5,r19
  88659c:	088e9a80 	call	88e9a8 <__subdf3>
  8865a0:	d9c00717 	ldw	r7,28(sp)
  8865a4:	1009883a 	mov	r4,r2
  8865a8:	a8800c04 	addi	r2,r21,48
  8865ac:	38800005 	stb	r2,0(r7)
  8865b0:	3dc00044 	addi	r23,r7,1
  8865b4:	d9c00617 	ldw	r7,24(sp)
  8865b8:	01800044 	movi	r6,1
  8865bc:	180b883a 	mov	r5,r3
  8865c0:	2005883a 	mov	r2,r4
  8865c4:	39803826 	beq	r7,r6,8866a8 <_dtoa_r+0x8f4>
  8865c8:	000d883a 	mov	r6,zero
  8865cc:	01d00934 	movhi	r7,16420
  8865d0:	088e2900 	call	88e290 <__muldf3>
  8865d4:	000d883a 	mov	r6,zero
  8865d8:	000f883a 	mov	r7,zero
  8865dc:	1009883a 	mov	r4,r2
  8865e0:	180b883a 	mov	r5,r3
  8865e4:	1025883a 	mov	r18,r2
  8865e8:	1827883a 	mov	r19,r3
  8865ec:	088e0380 	call	88e038 <__eqdf2>
  8865f0:	103f9a26 	beq	r2,zero,88645c <_dtoa_r+0x6a8>
  8865f4:	d9c00617 	ldw	r7,24(sp)
  8865f8:	d8c00717 	ldw	r3,28(sp)
  8865fc:	b829883a 	mov	r20,r23
  886600:	38bfffc4 	addi	r2,r7,-1
  886604:	18ad883a 	add	r22,r3,r2
  886608:	00000a06 	br	886634 <_dtoa_r+0x880>
  88660c:	088e2900 	call	88e290 <__muldf3>
  886610:	000d883a 	mov	r6,zero
  886614:	000f883a 	mov	r7,zero
  886618:	1009883a 	mov	r4,r2
  88661c:	180b883a 	mov	r5,r3
  886620:	1025883a 	mov	r18,r2
  886624:	1827883a 	mov	r19,r3
  886628:	b829883a 	mov	r20,r23
  88662c:	088e0380 	call	88e038 <__eqdf2>
  886630:	103f8a26 	beq	r2,zero,88645c <_dtoa_r+0x6a8>
  886634:	800d883a 	mov	r6,r16
  886638:	880f883a 	mov	r7,r17
  88663c:	9009883a 	mov	r4,r18
  886640:	980b883a 	mov	r5,r19
  886644:	088d7500 	call	88d750 <__divdf3>
  886648:	180b883a 	mov	r5,r3
  88664c:	1009883a 	mov	r4,r2
  886650:	088f2a40 	call	88f2a4 <__fixdfsi>
  886654:	1009883a 	mov	r4,r2
  886658:	102b883a 	mov	r21,r2
  88665c:	088f3240 	call	88f324 <__floatsidf>
  886660:	800d883a 	mov	r6,r16
  886664:	880f883a 	mov	r7,r17
  886668:	1009883a 	mov	r4,r2
  88666c:	180b883a 	mov	r5,r3
  886670:	088e2900 	call	88e290 <__muldf3>
  886674:	100d883a 	mov	r6,r2
  886678:	180f883a 	mov	r7,r3
  88667c:	9009883a 	mov	r4,r18
  886680:	980b883a 	mov	r5,r19
  886684:	088e9a80 	call	88e9a8 <__subdf3>
  886688:	aa000c04 	addi	r8,r21,48
  88668c:	a2000005 	stb	r8,0(r20)
  886690:	000d883a 	mov	r6,zero
  886694:	01d00934 	movhi	r7,16420
  886698:	1009883a 	mov	r4,r2
  88669c:	180b883a 	mov	r5,r3
  8866a0:	a5c00044 	addi	r23,r20,1
  8866a4:	b53fd91e 	bne	r22,r20,88660c <_dtoa_r+0x858>
  8866a8:	100d883a 	mov	r6,r2
  8866ac:	180f883a 	mov	r7,r3
  8866b0:	1009883a 	mov	r4,r2
  8866b4:	180b883a 	mov	r5,r3
  8866b8:	088cea40 	call	88cea4 <__adddf3>
  8866bc:	100d883a 	mov	r6,r2
  8866c0:	180f883a 	mov	r7,r3
  8866c4:	8009883a 	mov	r4,r16
  8866c8:	880b883a 	mov	r5,r17
  8866cc:	1027883a 	mov	r19,r2
  8866d0:	1825883a 	mov	r18,r3
  8866d4:	088e19c0 	call	88e19c <__ledf2>
  8866d8:	10000816 	blt	r2,zero,8866fc <_dtoa_r+0x948>
  8866dc:	980d883a 	mov	r6,r19
  8866e0:	900f883a 	mov	r7,r18
  8866e4:	8009883a 	mov	r4,r16
  8866e8:	880b883a 	mov	r5,r17
  8866ec:	088e0380 	call	88e038 <__eqdf2>
  8866f0:	103f5a1e 	bne	r2,zero,88645c <_dtoa_r+0x6a8>
  8866f4:	ad40004c 	andi	r21,r21,1
  8866f8:	a83f5826 	beq	r21,zero,88645c <_dtoa_r+0x6a8>
  8866fc:	bd3fffc3 	ldbu	r20,-1(r23)
  886700:	b8bfffc4 	addi	r2,r23,-1
  886704:	1007883a 	mov	r3,r2
  886708:	01400e44 	movi	r5,57
  88670c:	d9800717 	ldw	r6,28(sp)
  886710:	00000506 	br	886728 <_dtoa_r+0x974>
  886714:	18ffffc4 	addi	r3,r3,-1
  886718:	11824726 	beq	r2,r6,887038 <_dtoa_r+0x1284>
  88671c:	1d000003 	ldbu	r20,0(r3)
  886720:	102f883a 	mov	r23,r2
  886724:	10bfffc4 	addi	r2,r2,-1
  886728:	a1003fcc 	andi	r4,r20,255
  88672c:	2100201c 	xori	r4,r4,128
  886730:	213fe004 	addi	r4,r4,-128
  886734:	217ff726 	beq	r4,r5,886714 <_dtoa_r+0x960>
  886738:	a2000044 	addi	r8,r20,1
  88673c:	12000005 	stb	r8,0(r2)
  886740:	003f4606 	br	88645c <_dtoa_r+0x6a8>
  886744:	d9000b17 	ldw	r4,44(sp)
  886748:	2000c826 	beq	r4,zero,886a6c <_dtoa_r+0xcb8>
  88674c:	d9800317 	ldw	r6,12(sp)
  886750:	00c00044 	movi	r3,1
  886754:	1980f90e 	bge	r3,r6,886b3c <_dtoa_r+0xd88>
  886758:	d8800617 	ldw	r2,24(sp)
  88675c:	d8c00a17 	ldw	r3,40(sp)
  886760:	157fffc4 	addi	r21,r2,-1
  886764:	1d41f316 	blt	r3,r21,886f34 <_dtoa_r+0x1180>
  886768:	1d6bc83a 	sub	r21,r3,r21
  88676c:	d9c00617 	ldw	r7,24(sp)
  886770:	3802aa16 	blt	r7,zero,88721c <_dtoa_r+0x1468>
  886774:	dd000817 	ldw	r20,32(sp)
  886778:	d8800617 	ldw	r2,24(sp)
  88677c:	d8c00817 	ldw	r3,32(sp)
  886780:	01400044 	movi	r5,1
  886784:	e009883a 	mov	r4,fp
  886788:	1887883a 	add	r3,r3,r2
  88678c:	d8c00815 	stw	r3,32(sp)
  886790:	b0ad883a 	add	r22,r22,r2
  886794:	08889100 	call	888910 <__i2b>
  886798:	1023883a 	mov	r17,r2
  88679c:	a0000826 	beq	r20,zero,8867c0 <_dtoa_r+0xa0c>
  8867a0:	0580070e 	bge	zero,r22,8867c0 <_dtoa_r+0xa0c>
  8867a4:	a005883a 	mov	r2,r20
  8867a8:	b500b916 	blt	r22,r20,886a90 <_dtoa_r+0xcdc>
  8867ac:	d9000817 	ldw	r4,32(sp)
  8867b0:	a0a9c83a 	sub	r20,r20,r2
  8867b4:	b0adc83a 	sub	r22,r22,r2
  8867b8:	2089c83a 	sub	r4,r4,r2
  8867bc:	d9000815 	stw	r4,32(sp)
  8867c0:	d9800a17 	ldw	r6,40(sp)
  8867c4:	0181810e 	bge	zero,r6,886dcc <_dtoa_r+0x1018>
  8867c8:	d9c00b17 	ldw	r7,44(sp)
  8867cc:	3800b326 	beq	r7,zero,886a9c <_dtoa_r+0xce8>
  8867d0:	a800b226 	beq	r21,zero,886a9c <_dtoa_r+0xce8>
  8867d4:	880b883a 	mov	r5,r17
  8867d8:	a80d883a 	mov	r6,r21
  8867dc:	e009883a 	mov	r4,fp
  8867e0:	0888b440 	call	888b44 <__pow5mult>
  8867e4:	d9800917 	ldw	r6,36(sp)
  8867e8:	100b883a 	mov	r5,r2
  8867ec:	e009883a 	mov	r4,fp
  8867f0:	1023883a 	mov	r17,r2
  8867f4:	088894c0 	call	88894c <__multiply>
  8867f8:	1021883a 	mov	r16,r2
  8867fc:	d8800a17 	ldw	r2,40(sp)
  886800:	d9400917 	ldw	r5,36(sp)
  886804:	e009883a 	mov	r4,fp
  886808:	1545c83a 	sub	r2,r2,r21
  88680c:	d8800a15 	stw	r2,40(sp)
  886810:	08885ac0 	call	8885ac <_Bfree>
  886814:	d8c00a17 	ldw	r3,40(sp)
  886818:	18009f1e 	bne	r3,zero,886a98 <_dtoa_r+0xce4>
  88681c:	05c00044 	movi	r23,1
  886820:	e009883a 	mov	r4,fp
  886824:	b80b883a 	mov	r5,r23
  886828:	08889100 	call	888910 <__i2b>
  88682c:	d9000d17 	ldw	r4,52(sp)
  886830:	102b883a 	mov	r21,r2
  886834:	2000ce26 	beq	r4,zero,886b70 <_dtoa_r+0xdbc>
  886838:	200d883a 	mov	r6,r4
  88683c:	100b883a 	mov	r5,r2
  886840:	e009883a 	mov	r4,fp
  886844:	0888b440 	call	888b44 <__pow5mult>
  886848:	d9800317 	ldw	r6,12(sp)
  88684c:	102b883a 	mov	r21,r2
  886850:	b981810e 	bge	r23,r6,886e58 <_dtoa_r+0x10a4>
  886854:	0027883a 	mov	r19,zero
  886858:	a8800417 	ldw	r2,16(r21)
  88685c:	05c00804 	movi	r23,32
  886860:	10800104 	addi	r2,r2,4
  886864:	1085883a 	add	r2,r2,r2
  886868:	1085883a 	add	r2,r2,r2
  88686c:	a885883a 	add	r2,r21,r2
  886870:	11000017 	ldw	r4,0(r2)
  886874:	08887f80 	call	8887f8 <__hi0bits>
  886878:	b885c83a 	sub	r2,r23,r2
  88687c:	1585883a 	add	r2,r2,r22
  886880:	108007cc 	andi	r2,r2,31
  886884:	1000b326 	beq	r2,zero,886b54 <_dtoa_r+0xda0>
  886888:	00c00804 	movi	r3,32
  88688c:	1887c83a 	sub	r3,r3,r2
  886890:	01000104 	movi	r4,4
  886894:	20c2cd0e 	bge	r4,r3,8873cc <_dtoa_r+0x1618>
  886898:	00c00704 	movi	r3,28
  88689c:	1885c83a 	sub	r2,r3,r2
  8868a0:	d8c00817 	ldw	r3,32(sp)
  8868a4:	a0a9883a 	add	r20,r20,r2
  8868a8:	b0ad883a 	add	r22,r22,r2
  8868ac:	1887883a 	add	r3,r3,r2
  8868b0:	d8c00815 	stw	r3,32(sp)
  8868b4:	d9800817 	ldw	r6,32(sp)
  8868b8:	0180040e 	bge	zero,r6,8868cc <_dtoa_r+0xb18>
  8868bc:	800b883a 	mov	r5,r16
  8868c0:	e009883a 	mov	r4,fp
  8868c4:	0888c840 	call	888c84 <__lshift>
  8868c8:	1021883a 	mov	r16,r2
  8868cc:	0580050e 	bge	zero,r22,8868e4 <_dtoa_r+0xb30>
  8868d0:	a80b883a 	mov	r5,r21
  8868d4:	b00d883a 	mov	r6,r22
  8868d8:	e009883a 	mov	r4,fp
  8868dc:	0888c840 	call	888c84 <__lshift>
  8868e0:	102b883a 	mov	r21,r2
  8868e4:	d9c00e17 	ldw	r7,56(sp)
  8868e8:	3801211e 	bne	r7,zero,886d70 <_dtoa_r+0xfbc>
  8868ec:	d9800617 	ldw	r6,24(sp)
  8868f0:	0181380e 	bge	zero,r6,886dd4 <_dtoa_r+0x1020>
  8868f4:	d8c00b17 	ldw	r3,44(sp)
  8868f8:	1800ab1e 	bne	r3,zero,886ba8 <_dtoa_r+0xdf4>
  8868fc:	dc800717 	ldw	r18,28(sp)
  886900:	dcc00617 	ldw	r19,24(sp)
  886904:	9029883a 	mov	r20,r18
  886908:	00000206 	br	886914 <_dtoa_r+0xb60>
  88690c:	08885d40 	call	8885d4 <__multadd>
  886910:	1021883a 	mov	r16,r2
  886914:	a80b883a 	mov	r5,r21
  886918:	8009883a 	mov	r4,r16
  88691c:	0885bb40 	call	885bb4 <quorem>
  886920:	10800c04 	addi	r2,r2,48
  886924:	90800005 	stb	r2,0(r18)
  886928:	94800044 	addi	r18,r18,1
  88692c:	9507c83a 	sub	r3,r18,r20
  886930:	000f883a 	mov	r7,zero
  886934:	01800284 	movi	r6,10
  886938:	800b883a 	mov	r5,r16
  88693c:	e009883a 	mov	r4,fp
  886940:	1cfff216 	blt	r3,r19,88690c <_dtoa_r+0xb58>
  886944:	1011883a 	mov	r8,r2
  886948:	d8800617 	ldw	r2,24(sp)
  88694c:	0082370e 	bge	zero,r2,88722c <_dtoa_r+0x1478>
  886950:	d9000717 	ldw	r4,28(sp)
  886954:	0025883a 	mov	r18,zero
  886958:	20af883a 	add	r23,r4,r2
  88695c:	01800044 	movi	r6,1
  886960:	800b883a 	mov	r5,r16
  886964:	e009883a 	mov	r4,fp
  886968:	da001715 	stw	r8,92(sp)
  88696c:	0888c840 	call	888c84 <__lshift>
  886970:	a80b883a 	mov	r5,r21
  886974:	1009883a 	mov	r4,r2
  886978:	d8800915 	stw	r2,36(sp)
  88697c:	0888dcc0 	call	888dcc <__mcmp>
  886980:	da001717 	ldw	r8,92(sp)
  886984:	0081800e 	bge	zero,r2,886f88 <_dtoa_r+0x11d4>
  886988:	b93fffc3 	ldbu	r4,-1(r23)
  88698c:	b8bfffc4 	addi	r2,r23,-1
  886990:	1007883a 	mov	r3,r2
  886994:	01800e44 	movi	r6,57
  886998:	d9c00717 	ldw	r7,28(sp)
  88699c:	00000506 	br	8869b4 <_dtoa_r+0xc00>
  8869a0:	18ffffc4 	addi	r3,r3,-1
  8869a4:	11c12326 	beq	r2,r7,886e34 <_dtoa_r+0x1080>
  8869a8:	19000003 	ldbu	r4,0(r3)
  8869ac:	102f883a 	mov	r23,r2
  8869b0:	10bfffc4 	addi	r2,r2,-1
  8869b4:	21403fcc 	andi	r5,r4,255
  8869b8:	2940201c 	xori	r5,r5,128
  8869bc:	297fe004 	addi	r5,r5,-128
  8869c0:	29bff726 	beq	r5,r6,8869a0 <_dtoa_r+0xbec>
  8869c4:	21000044 	addi	r4,r4,1
  8869c8:	11000005 	stb	r4,0(r2)
  8869cc:	a80b883a 	mov	r5,r21
  8869d0:	e009883a 	mov	r4,fp
  8869d4:	08885ac0 	call	8885ac <_Bfree>
  8869d8:	883ea026 	beq	r17,zero,88645c <_dtoa_r+0x6a8>
  8869dc:	90000426 	beq	r18,zero,8869f0 <_dtoa_r+0xc3c>
  8869e0:	94400326 	beq	r18,r17,8869f0 <_dtoa_r+0xc3c>
  8869e4:	900b883a 	mov	r5,r18
  8869e8:	e009883a 	mov	r4,fp
  8869ec:	08885ac0 	call	8885ac <_Bfree>
  8869f0:	880b883a 	mov	r5,r17
  8869f4:	e009883a 	mov	r4,fp
  8869f8:	08885ac0 	call	8885ac <_Bfree>
  8869fc:	003e9706 	br	88645c <_dtoa_r+0x6a8>
  886a00:	01800044 	movi	r6,1
  886a04:	d9800e15 	stw	r6,56(sp)
  886a08:	003d9606 	br	886064 <_dtoa_r+0x2b0>
  886a0c:	d8800817 	ldw	r2,32(sp)
  886a10:	d8c00517 	ldw	r3,20(sp)
  886a14:	d8000d15 	stw	zero,52(sp)
  886a18:	10c5c83a 	sub	r2,r2,r3
  886a1c:	00c9c83a 	sub	r4,zero,r3
  886a20:	d8800815 	stw	r2,32(sp)
  886a24:	d9000a15 	stw	r4,40(sp)
  886a28:	003d9706 	br	886088 <_dtoa_r+0x2d4>
  886a2c:	05adc83a 	sub	r22,zero,r22
  886a30:	dd800815 	stw	r22,32(sp)
  886a34:	002d883a 	mov	r22,zero
  886a38:	003d8e06 	br	886074 <_dtoa_r+0x2c0>
  886a3c:	d9000517 	ldw	r4,20(sp)
  886a40:	088f3240 	call	88f324 <__floatsidf>
  886a44:	100d883a 	mov	r6,r2
  886a48:	180f883a 	mov	r7,r3
  886a4c:	a009883a 	mov	r4,r20
  886a50:	880b883a 	mov	r5,r17
  886a54:	088e0380 	call	88e038 <__eqdf2>
  886a58:	103d7126 	beq	r2,zero,886020 <_dtoa_r+0x26c>
  886a5c:	d9c00517 	ldw	r7,20(sp)
  886a60:	39ffffc4 	addi	r7,r7,-1
  886a64:	d9c00515 	stw	r7,20(sp)
  886a68:	003d6d06 	br	886020 <_dtoa_r+0x26c>
  886a6c:	dd400a17 	ldw	r21,40(sp)
  886a70:	dd000817 	ldw	r20,32(sp)
  886a74:	0023883a 	mov	r17,zero
  886a78:	003f4806 	br	88679c <_dtoa_r+0x9e8>
  886a7c:	10e3c83a 	sub	r17,r2,r3
  886a80:	9448983a 	sll	r4,r18,r17
  886a84:	003d3206 	br	885f50 <_dtoa_r+0x19c>
  886a88:	d8000e15 	stw	zero,56(sp)
  886a8c:	003d7506 	br	886064 <_dtoa_r+0x2b0>
  886a90:	b005883a 	mov	r2,r22
  886a94:	003f4506 	br	8867ac <_dtoa_r+0x9f8>
  886a98:	dc000915 	stw	r16,36(sp)
  886a9c:	d9800a17 	ldw	r6,40(sp)
  886aa0:	d9400917 	ldw	r5,36(sp)
  886aa4:	e009883a 	mov	r4,fp
  886aa8:	0888b440 	call	888b44 <__pow5mult>
  886aac:	1021883a 	mov	r16,r2
  886ab0:	003f5a06 	br	88681c <_dtoa_r+0xa68>
  886ab4:	01c00044 	movi	r7,1
  886ab8:	d9c00b15 	stw	r7,44(sp)
  886abc:	d8802217 	ldw	r2,136(sp)
  886ac0:	0081280e 	bge	zero,r2,886f64 <_dtoa_r+0x11b0>
  886ac4:	100d883a 	mov	r6,r2
  886ac8:	1021883a 	mov	r16,r2
  886acc:	d8800c15 	stw	r2,48(sp)
  886ad0:	d8800615 	stw	r2,24(sp)
  886ad4:	003d8806 	br	8860f8 <_dtoa_r+0x344>
  886ad8:	d8800617 	ldw	r2,24(sp)
  886adc:	00be9b16 	blt	zero,r2,88654c <_dtoa_r+0x798>
  886ae0:	10010f1e 	bne	r2,zero,886f20 <_dtoa_r+0x116c>
  886ae4:	880b883a 	mov	r5,r17
  886ae8:	000d883a 	mov	r6,zero
  886aec:	01d00534 	movhi	r7,16404
  886af0:	8009883a 	mov	r4,r16
  886af4:	088e2900 	call	88e290 <__muldf3>
  886af8:	900d883a 	mov	r6,r18
  886afc:	980f883a 	mov	r7,r19
  886b00:	1009883a 	mov	r4,r2
  886b04:	180b883a 	mov	r5,r3
  886b08:	088e0c00 	call	88e0c0 <__gedf2>
  886b0c:	002b883a 	mov	r21,zero
  886b10:	0023883a 	mov	r17,zero
  886b14:	1000bf16 	blt	r2,zero,886e14 <_dtoa_r+0x1060>
  886b18:	d9802217 	ldw	r6,136(sp)
  886b1c:	ddc00717 	ldw	r23,28(sp)
  886b20:	018c303a 	nor	r6,zero,r6
  886b24:	d9800515 	stw	r6,20(sp)
  886b28:	a80b883a 	mov	r5,r21
  886b2c:	e009883a 	mov	r4,fp
  886b30:	08885ac0 	call	8885ac <_Bfree>
  886b34:	883e4926 	beq	r17,zero,88645c <_dtoa_r+0x6a8>
  886b38:	003fad06 	br	8869f0 <_dtoa_r+0xc3c>
  886b3c:	d9c01117 	ldw	r7,68(sp)
  886b40:	3801bc26 	beq	r7,zero,887234 <_dtoa_r+0x1480>
  886b44:	10810cc4 	addi	r2,r2,1075
  886b48:	dd400a17 	ldw	r21,40(sp)
  886b4c:	dd000817 	ldw	r20,32(sp)
  886b50:	003f0a06 	br	88677c <_dtoa_r+0x9c8>
  886b54:	00800704 	movi	r2,28
  886b58:	d9000817 	ldw	r4,32(sp)
  886b5c:	a0a9883a 	add	r20,r20,r2
  886b60:	b0ad883a 	add	r22,r22,r2
  886b64:	2089883a 	add	r4,r4,r2
  886b68:	d9000815 	stw	r4,32(sp)
  886b6c:	003f5106 	br	8868b4 <_dtoa_r+0xb00>
  886b70:	d8c00317 	ldw	r3,12(sp)
  886b74:	b8c1fc0e 	bge	r23,r3,887368 <_dtoa_r+0x15b4>
  886b78:	0027883a 	mov	r19,zero
  886b7c:	b805883a 	mov	r2,r23
  886b80:	003f3e06 	br	88687c <_dtoa_r+0xac8>
  886b84:	880b883a 	mov	r5,r17
  886b88:	e009883a 	mov	r4,fp
  886b8c:	000f883a 	mov	r7,zero
  886b90:	01800284 	movi	r6,10
  886b94:	08885d40 	call	8885d4 <__multadd>
  886b98:	d9000c17 	ldw	r4,48(sp)
  886b9c:	1023883a 	mov	r17,r2
  886ba0:	0102040e 	bge	zero,r4,8873b4 <_dtoa_r+0x1600>
  886ba4:	d9000615 	stw	r4,24(sp)
  886ba8:	0500050e 	bge	zero,r20,886bc0 <_dtoa_r+0xe0c>
  886bac:	880b883a 	mov	r5,r17
  886bb0:	a00d883a 	mov	r6,r20
  886bb4:	e009883a 	mov	r4,fp
  886bb8:	0888c840 	call	888c84 <__lshift>
  886bbc:	1023883a 	mov	r17,r2
  886bc0:	9801241e 	bne	r19,zero,887054 <_dtoa_r+0x12a0>
  886bc4:	8829883a 	mov	r20,r17
  886bc8:	d9000617 	ldw	r4,24(sp)
  886bcc:	dcc00717 	ldw	r19,28(sp)
  886bd0:	9480004c 	andi	r18,r18,1
  886bd4:	20bfffc4 	addi	r2,r4,-1
  886bd8:	9885883a 	add	r2,r19,r2
  886bdc:	d8800415 	stw	r2,16(sp)
  886be0:	dc800615 	stw	r18,24(sp)
  886be4:	a80b883a 	mov	r5,r21
  886be8:	8009883a 	mov	r4,r16
  886bec:	0885bb40 	call	885bb4 <quorem>
  886bf0:	880b883a 	mov	r5,r17
  886bf4:	8009883a 	mov	r4,r16
  886bf8:	102f883a 	mov	r23,r2
  886bfc:	0888dcc0 	call	888dcc <__mcmp>
  886c00:	a80b883a 	mov	r5,r21
  886c04:	a00d883a 	mov	r6,r20
  886c08:	e009883a 	mov	r4,fp
  886c0c:	102d883a 	mov	r22,r2
  886c10:	0888e2c0 	call	888e2c <__mdiff>
  886c14:	1007883a 	mov	r3,r2
  886c18:	10800317 	ldw	r2,12(r2)
  886c1c:	bc800c04 	addi	r18,r23,48
  886c20:	180b883a 	mov	r5,r3
  886c24:	10004e1e 	bne	r2,zero,886d60 <_dtoa_r+0xfac>
  886c28:	8009883a 	mov	r4,r16
  886c2c:	d8c01615 	stw	r3,88(sp)
  886c30:	0888dcc0 	call	888dcc <__mcmp>
  886c34:	d8c01617 	ldw	r3,88(sp)
  886c38:	e009883a 	mov	r4,fp
  886c3c:	d8801615 	stw	r2,88(sp)
  886c40:	180b883a 	mov	r5,r3
  886c44:	08885ac0 	call	8885ac <_Bfree>
  886c48:	d8801617 	ldw	r2,88(sp)
  886c4c:	1000041e 	bne	r2,zero,886c60 <_dtoa_r+0xeac>
  886c50:	d9800317 	ldw	r6,12(sp)
  886c54:	3000021e 	bne	r6,zero,886c60 <_dtoa_r+0xeac>
  886c58:	d8c00617 	ldw	r3,24(sp)
  886c5c:	18003726 	beq	r3,zero,886d3c <_dtoa_r+0xf88>
  886c60:	b0002016 	blt	r22,zero,886ce4 <_dtoa_r+0xf30>
  886c64:	b000041e 	bne	r22,zero,886c78 <_dtoa_r+0xec4>
  886c68:	d9000317 	ldw	r4,12(sp)
  886c6c:	2000021e 	bne	r4,zero,886c78 <_dtoa_r+0xec4>
  886c70:	d8c00617 	ldw	r3,24(sp)
  886c74:	18001b26 	beq	r3,zero,886ce4 <_dtoa_r+0xf30>
  886c78:	00810716 	blt	zero,r2,887098 <_dtoa_r+0x12e4>
  886c7c:	d8c00417 	ldw	r3,16(sp)
  886c80:	9d800044 	addi	r22,r19,1
  886c84:	9c800005 	stb	r18,0(r19)
  886c88:	b02f883a 	mov	r23,r22
  886c8c:	98c10626 	beq	r19,r3,8870a8 <_dtoa_r+0x12f4>
  886c90:	800b883a 	mov	r5,r16
  886c94:	000f883a 	mov	r7,zero
  886c98:	01800284 	movi	r6,10
  886c9c:	e009883a 	mov	r4,fp
  886ca0:	08885d40 	call	8885d4 <__multadd>
  886ca4:	1021883a 	mov	r16,r2
  886ca8:	000f883a 	mov	r7,zero
  886cac:	01800284 	movi	r6,10
  886cb0:	880b883a 	mov	r5,r17
  886cb4:	e009883a 	mov	r4,fp
  886cb8:	8d002526 	beq	r17,r20,886d50 <_dtoa_r+0xf9c>
  886cbc:	08885d40 	call	8885d4 <__multadd>
  886cc0:	a00b883a 	mov	r5,r20
  886cc4:	000f883a 	mov	r7,zero
  886cc8:	01800284 	movi	r6,10
  886ccc:	e009883a 	mov	r4,fp
  886cd0:	1023883a 	mov	r17,r2
  886cd4:	08885d40 	call	8885d4 <__multadd>
  886cd8:	1029883a 	mov	r20,r2
  886cdc:	b027883a 	mov	r19,r22
  886ce0:	003fc006 	br	886be4 <_dtoa_r+0xe30>
  886ce4:	9011883a 	mov	r8,r18
  886ce8:	00800e0e 	bge	zero,r2,886d24 <_dtoa_r+0xf70>
  886cec:	800b883a 	mov	r5,r16
  886cf0:	01800044 	movi	r6,1
  886cf4:	e009883a 	mov	r4,fp
  886cf8:	da001715 	stw	r8,92(sp)
  886cfc:	0888c840 	call	888c84 <__lshift>
  886d00:	a80b883a 	mov	r5,r21
  886d04:	1009883a 	mov	r4,r2
  886d08:	1021883a 	mov	r16,r2
  886d0c:	0888dcc0 	call	888dcc <__mcmp>
  886d10:	da001717 	ldw	r8,92(sp)
  886d14:	0081960e 	bge	zero,r2,887370 <_dtoa_r+0x15bc>
  886d18:	00800e44 	movi	r2,57
  886d1c:	40817026 	beq	r8,r2,8872e0 <_dtoa_r+0x152c>
  886d20:	ba000c44 	addi	r8,r23,49
  886d24:	8825883a 	mov	r18,r17
  886d28:	9dc00044 	addi	r23,r19,1
  886d2c:	9a000005 	stb	r8,0(r19)
  886d30:	a023883a 	mov	r17,r20
  886d34:	dc000915 	stw	r16,36(sp)
  886d38:	003f2406 	br	8869cc <_dtoa_r+0xc18>
  886d3c:	00800e44 	movi	r2,57
  886d40:	9011883a 	mov	r8,r18
  886d44:	90816626 	beq	r18,r2,8872e0 <_dtoa_r+0x152c>
  886d48:	05bff516 	blt	zero,r22,886d20 <_dtoa_r+0xf6c>
  886d4c:	003ff506 	br	886d24 <_dtoa_r+0xf70>
  886d50:	08885d40 	call	8885d4 <__multadd>
  886d54:	1023883a 	mov	r17,r2
  886d58:	1029883a 	mov	r20,r2
  886d5c:	003fdf06 	br	886cdc <_dtoa_r+0xf28>
  886d60:	e009883a 	mov	r4,fp
  886d64:	08885ac0 	call	8885ac <_Bfree>
  886d68:	00800044 	movi	r2,1
  886d6c:	003fbc06 	br	886c60 <_dtoa_r+0xeac>
  886d70:	a80b883a 	mov	r5,r21
  886d74:	8009883a 	mov	r4,r16
  886d78:	0888dcc0 	call	888dcc <__mcmp>
  886d7c:	103edb0e 	bge	r2,zero,8868ec <_dtoa_r+0xb38>
  886d80:	800b883a 	mov	r5,r16
  886d84:	000f883a 	mov	r7,zero
  886d88:	01800284 	movi	r6,10
  886d8c:	e009883a 	mov	r4,fp
  886d90:	08885d40 	call	8885d4 <__multadd>
  886d94:	1021883a 	mov	r16,r2
  886d98:	d8800517 	ldw	r2,20(sp)
  886d9c:	d8c00b17 	ldw	r3,44(sp)
  886da0:	10bfffc4 	addi	r2,r2,-1
  886da4:	d8800515 	stw	r2,20(sp)
  886da8:	183f761e 	bne	r3,zero,886b84 <_dtoa_r+0xdd0>
  886dac:	d9000c17 	ldw	r4,48(sp)
  886db0:	0101730e 	bge	zero,r4,887380 <_dtoa_r+0x15cc>
  886db4:	d9000615 	stw	r4,24(sp)
  886db8:	003ed006 	br	8868fc <_dtoa_r+0xb48>
  886dbc:	00800084 	movi	r2,2
  886dc0:	3081861e 	bne	r6,r2,8873dc <_dtoa_r+0x1628>
  886dc4:	d8000b15 	stw	zero,44(sp)
  886dc8:	003f3c06 	br	886abc <_dtoa_r+0xd08>
  886dcc:	dc000917 	ldw	r16,36(sp)
  886dd0:	003e9206 	br	88681c <_dtoa_r+0xa68>
  886dd4:	d9c00317 	ldw	r7,12(sp)
  886dd8:	00800084 	movi	r2,2
  886ddc:	11fec50e 	bge	r2,r7,8868f4 <_dtoa_r+0xb40>
  886de0:	d9000617 	ldw	r4,24(sp)
  886de4:	20013c1e 	bne	r4,zero,8872d8 <_dtoa_r+0x1524>
  886de8:	a80b883a 	mov	r5,r21
  886dec:	000f883a 	mov	r7,zero
  886df0:	01800144 	movi	r6,5
  886df4:	e009883a 	mov	r4,fp
  886df8:	08885d40 	call	8885d4 <__multadd>
  886dfc:	100b883a 	mov	r5,r2
  886e00:	8009883a 	mov	r4,r16
  886e04:	102b883a 	mov	r21,r2
  886e08:	0888dcc0 	call	888dcc <__mcmp>
  886e0c:	dc000915 	stw	r16,36(sp)
  886e10:	00bf410e 	bge	zero,r2,886b18 <_dtoa_r+0xd64>
  886e14:	d9c00717 	ldw	r7,28(sp)
  886e18:	00800c44 	movi	r2,49
  886e1c:	38800005 	stb	r2,0(r7)
  886e20:	d8800517 	ldw	r2,20(sp)
  886e24:	3dc00044 	addi	r23,r7,1
  886e28:	10800044 	addi	r2,r2,1
  886e2c:	d8800515 	stw	r2,20(sp)
  886e30:	003f3d06 	br	886b28 <_dtoa_r+0xd74>
  886e34:	d9800517 	ldw	r6,20(sp)
  886e38:	d9c00717 	ldw	r7,28(sp)
  886e3c:	00800c44 	movi	r2,49
  886e40:	31800044 	addi	r6,r6,1
  886e44:	d9800515 	stw	r6,20(sp)
  886e48:	38800005 	stb	r2,0(r7)
  886e4c:	003edf06 	br	8869cc <_dtoa_r+0xc18>
  886e50:	d8000b15 	stw	zero,44(sp)
  886e54:	003c9f06 	br	8860d4 <_dtoa_r+0x320>
  886e58:	903e7e1e 	bne	r18,zero,886854 <_dtoa_r+0xaa0>
  886e5c:	00800434 	movhi	r2,16
  886e60:	10bfffc4 	addi	r2,r2,-1
  886e64:	9884703a 	and	r2,r19,r2
  886e68:	1000ea1e 	bne	r2,zero,887214 <_dtoa_r+0x1460>
  886e6c:	9cdffc2c 	andhi	r19,r19,32752
  886e70:	9800e826 	beq	r19,zero,887214 <_dtoa_r+0x1460>
  886e74:	d9c00817 	ldw	r7,32(sp)
  886e78:	b5800044 	addi	r22,r22,1
  886e7c:	04c00044 	movi	r19,1
  886e80:	39c00044 	addi	r7,r7,1
  886e84:	d9c00815 	stw	r7,32(sp)
  886e88:	d8800d17 	ldw	r2,52(sp)
  886e8c:	103e721e 	bne	r2,zero,886858 <_dtoa_r+0xaa4>
  886e90:	00800044 	movi	r2,1
  886e94:	003e7906 	br	88687c <_dtoa_r+0xac8>
  886e98:	8009883a 	mov	r4,r16
  886e9c:	088f3240 	call	88f324 <__floatsidf>
  886ea0:	d9800f17 	ldw	r6,60(sp)
  886ea4:	d9c01017 	ldw	r7,64(sp)
  886ea8:	1009883a 	mov	r4,r2
  886eac:	180b883a 	mov	r5,r3
  886eb0:	088e2900 	call	88e290 <__muldf3>
  886eb4:	000d883a 	mov	r6,zero
  886eb8:	01d00734 	movhi	r7,16412
  886ebc:	1009883a 	mov	r4,r2
  886ec0:	180b883a 	mov	r5,r3
  886ec4:	088cea40 	call	88cea4 <__adddf3>
  886ec8:	047f3034 	movhi	r17,64704
  886ecc:	1021883a 	mov	r16,r2
  886ed0:	1c63883a 	add	r17,r3,r17
  886ed4:	d9000f17 	ldw	r4,60(sp)
  886ed8:	d9401017 	ldw	r5,64(sp)
  886edc:	000d883a 	mov	r6,zero
  886ee0:	01d00534 	movhi	r7,16404
  886ee4:	088e9a80 	call	88e9a8 <__subdf3>
  886ee8:	800d883a 	mov	r6,r16
  886eec:	880f883a 	mov	r7,r17
  886ef0:	1009883a 	mov	r4,r2
  886ef4:	180b883a 	mov	r5,r3
  886ef8:	102b883a 	mov	r21,r2
  886efc:	1829883a 	mov	r20,r3
  886f00:	088e0c00 	call	88e0c0 <__gedf2>
  886f04:	00806c16 	blt	zero,r2,8870b8 <_dtoa_r+0x1304>
  886f08:	89e0003c 	xorhi	r7,r17,32768
  886f0c:	800d883a 	mov	r6,r16
  886f10:	a809883a 	mov	r4,r21
  886f14:	a00b883a 	mov	r5,r20
  886f18:	088e19c0 	call	88e19c <__ledf2>
  886f1c:	103d7e0e 	bge	r2,zero,886518 <_dtoa_r+0x764>
  886f20:	002b883a 	mov	r21,zero
  886f24:	0023883a 	mov	r17,zero
  886f28:	003efb06 	br	886b18 <_dtoa_r+0xd64>
  886f2c:	d8800717 	ldw	r2,28(sp)
  886f30:	003bd006 	br	885e74 <_dtoa_r+0xc0>
  886f34:	d9000a17 	ldw	r4,40(sp)
  886f38:	d9800d17 	ldw	r6,52(sp)
  886f3c:	dd400a15 	stw	r21,40(sp)
  886f40:	a905c83a 	sub	r2,r21,r4
  886f44:	308d883a 	add	r6,r6,r2
  886f48:	d9800d15 	stw	r6,52(sp)
  886f4c:	002b883a 	mov	r21,zero
  886f50:	003e0606 	br	88676c <_dtoa_r+0x9b8>
  886f54:	9023883a 	mov	r17,r18
  886f58:	9829883a 	mov	r20,r19
  886f5c:	04000084 	movi	r16,2
  886f60:	003c9206 	br	8861ac <_dtoa_r+0x3f8>
  886f64:	04000044 	movi	r16,1
  886f68:	dc000c15 	stw	r16,48(sp)
  886f6c:	dc000615 	stw	r16,24(sp)
  886f70:	dc002215 	stw	r16,136(sp)
  886f74:	e0001115 	stw	zero,68(fp)
  886f78:	000b883a 	mov	r5,zero
  886f7c:	003c6906 	br	886124 <_dtoa_r+0x370>
  886f80:	3021883a 	mov	r16,r6
  886f84:	003ffb06 	br	886f74 <_dtoa_r+0x11c0>
  886f88:	1000021e 	bne	r2,zero,886f94 <_dtoa_r+0x11e0>
  886f8c:	4200004c 	andi	r8,r8,1
  886f90:	403e7d1e 	bne	r8,zero,886988 <_dtoa_r+0xbd4>
  886f94:	01000c04 	movi	r4,48
  886f98:	00000106 	br	886fa0 <_dtoa_r+0x11ec>
  886f9c:	102f883a 	mov	r23,r2
  886fa0:	b8bfffc4 	addi	r2,r23,-1
  886fa4:	10c00007 	ldb	r3,0(r2)
  886fa8:	193ffc26 	beq	r3,r4,886f9c <_dtoa_r+0x11e8>
  886fac:	003e8706 	br	8869cc <_dtoa_r+0xc18>
  886fb0:	d8800517 	ldw	r2,20(sp)
  886fb4:	00a3c83a 	sub	r17,zero,r2
  886fb8:	8800a426 	beq	r17,zero,88724c <_dtoa_r+0x1498>
  886fbc:	888003cc 	andi	r2,r17,15
  886fc0:	100490fa 	slli	r2,r2,3
  886fc4:	00c02274 	movhi	r3,137
  886fc8:	18c96e04 	addi	r3,r3,9656
  886fcc:	1885883a 	add	r2,r3,r2
  886fd0:	11800017 	ldw	r6,0(r2)
  886fd4:	11c00117 	ldw	r7,4(r2)
  886fd8:	9009883a 	mov	r4,r18
  886fdc:	980b883a 	mov	r5,r19
  886fe0:	8823d13a 	srai	r17,r17,4
  886fe4:	088e2900 	call	88e290 <__muldf3>
  886fe8:	d8800f15 	stw	r2,60(sp)
  886fec:	d8c01015 	stw	r3,64(sp)
  886ff0:	8800e826 	beq	r17,zero,887394 <_dtoa_r+0x15e0>
  886ff4:	05002274 	movhi	r20,137
  886ff8:	a5096404 	addi	r20,r20,9616
  886ffc:	04000084 	movi	r16,2
  887000:	8980004c 	andi	r6,r17,1
  887004:	1009883a 	mov	r4,r2
  887008:	8823d07a 	srai	r17,r17,1
  88700c:	180b883a 	mov	r5,r3
  887010:	30000426 	beq	r6,zero,887024 <_dtoa_r+0x1270>
  887014:	a1800017 	ldw	r6,0(r20)
  887018:	a1c00117 	ldw	r7,4(r20)
  88701c:	84000044 	addi	r16,r16,1
  887020:	088e2900 	call	88e290 <__muldf3>
  887024:	a5000204 	addi	r20,r20,8
  887028:	883ff51e 	bne	r17,zero,887000 <_dtoa_r+0x124c>
  88702c:	d8800f15 	stw	r2,60(sp)
  887030:	d8c01015 	stw	r3,64(sp)
  887034:	003c7606 	br	886210 <_dtoa_r+0x45c>
  887038:	00c00c04 	movi	r3,48
  88703c:	10c00005 	stb	r3,0(r2)
  887040:	d8c00517 	ldw	r3,20(sp)
  887044:	bd3fffc3 	ldbu	r20,-1(r23)
  887048:	18c00044 	addi	r3,r3,1
  88704c:	d8c00515 	stw	r3,20(sp)
  887050:	003db906 	br	886738 <_dtoa_r+0x984>
  887054:	89400117 	ldw	r5,4(r17)
  887058:	e009883a 	mov	r4,fp
  88705c:	08885040 	call	888504 <_Balloc>
  887060:	89800417 	ldw	r6,16(r17)
  887064:	89400304 	addi	r5,r17,12
  887068:	11000304 	addi	r4,r2,12
  88706c:	31800084 	addi	r6,r6,2
  887070:	318d883a 	add	r6,r6,r6
  887074:	318d883a 	add	r6,r6,r6
  887078:	1027883a 	mov	r19,r2
  88707c:	08883bc0 	call	8883bc <memcpy>
  887080:	01800044 	movi	r6,1
  887084:	980b883a 	mov	r5,r19
  887088:	e009883a 	mov	r4,fp
  88708c:	0888c840 	call	888c84 <__lshift>
  887090:	1029883a 	mov	r20,r2
  887094:	003ecc06 	br	886bc8 <_dtoa_r+0xe14>
  887098:	00800e44 	movi	r2,57
  88709c:	90809026 	beq	r18,r2,8872e0 <_dtoa_r+0x152c>
  8870a0:	92000044 	addi	r8,r18,1
  8870a4:	003f1f06 	br	886d24 <_dtoa_r+0xf70>
  8870a8:	9011883a 	mov	r8,r18
  8870ac:	8825883a 	mov	r18,r17
  8870b0:	a023883a 	mov	r17,r20
  8870b4:	003e2906 	br	88695c <_dtoa_r+0xba8>
  8870b8:	002b883a 	mov	r21,zero
  8870bc:	0023883a 	mov	r17,zero
  8870c0:	003f5406 	br	886e14 <_dtoa_r+0x1060>
  8870c4:	61bfffc4 	addi	r6,r12,-1
  8870c8:	300490fa 	slli	r2,r6,3
  8870cc:	00c02274 	movhi	r3,137
  8870d0:	18c96e04 	addi	r3,r3,9656
  8870d4:	1885883a 	add	r2,r3,r2
  8870d8:	11000017 	ldw	r4,0(r2)
  8870dc:	11400117 	ldw	r5,4(r2)
  8870e0:	d8800717 	ldw	r2,28(sp)
  8870e4:	880f883a 	mov	r7,r17
  8870e8:	d9801215 	stw	r6,72(sp)
  8870ec:	800d883a 	mov	r6,r16
  8870f0:	db001615 	stw	r12,88(sp)
  8870f4:	15c00044 	addi	r23,r2,1
  8870f8:	088e2900 	call	88e290 <__muldf3>
  8870fc:	d9401017 	ldw	r5,64(sp)
  887100:	d9000f17 	ldw	r4,60(sp)
  887104:	d8c01515 	stw	r3,84(sp)
  887108:	d8801415 	stw	r2,80(sp)
  88710c:	088f2a40 	call	88f2a4 <__fixdfsi>
  887110:	1009883a 	mov	r4,r2
  887114:	1021883a 	mov	r16,r2
  887118:	088f3240 	call	88f324 <__floatsidf>
  88711c:	d9000f17 	ldw	r4,60(sp)
  887120:	d9401017 	ldw	r5,64(sp)
  887124:	100d883a 	mov	r6,r2
  887128:	180f883a 	mov	r7,r3
  88712c:	088e9a80 	call	88e9a8 <__subdf3>
  887130:	1829883a 	mov	r20,r3
  887134:	d8c00717 	ldw	r3,28(sp)
  887138:	84000c04 	addi	r16,r16,48
  88713c:	1023883a 	mov	r17,r2
  887140:	1c000005 	stb	r16,0(r3)
  887144:	db001617 	ldw	r12,88(sp)
  887148:	00800044 	movi	r2,1
  88714c:	60802226 	beq	r12,r2,8871d8 <_dtoa_r+0x1424>
  887150:	d9c00717 	ldw	r7,28(sp)
  887154:	8805883a 	mov	r2,r17
  887158:	b82b883a 	mov	r21,r23
  88715c:	3b19883a 	add	r12,r7,r12
  887160:	6023883a 	mov	r17,r12
  887164:	a007883a 	mov	r3,r20
  887168:	dc800f15 	stw	r18,60(sp)
  88716c:	000d883a 	mov	r6,zero
  887170:	01d00934 	movhi	r7,16420
  887174:	1009883a 	mov	r4,r2
  887178:	180b883a 	mov	r5,r3
  88717c:	088e2900 	call	88e290 <__muldf3>
  887180:	180b883a 	mov	r5,r3
  887184:	1009883a 	mov	r4,r2
  887188:	1829883a 	mov	r20,r3
  88718c:	1025883a 	mov	r18,r2
  887190:	088f2a40 	call	88f2a4 <__fixdfsi>
  887194:	1009883a 	mov	r4,r2
  887198:	1021883a 	mov	r16,r2
  88719c:	088f3240 	call	88f324 <__floatsidf>
  8871a0:	100d883a 	mov	r6,r2
  8871a4:	180f883a 	mov	r7,r3
  8871a8:	9009883a 	mov	r4,r18
  8871ac:	a00b883a 	mov	r5,r20
  8871b0:	84000c04 	addi	r16,r16,48
  8871b4:	088e9a80 	call	88e9a8 <__subdf3>
  8871b8:	ad400044 	addi	r21,r21,1
  8871bc:	ac3fffc5 	stb	r16,-1(r21)
  8871c0:	ac7fea1e 	bne	r21,r17,88716c <_dtoa_r+0x13b8>
  8871c4:	1023883a 	mov	r17,r2
  8871c8:	d8801217 	ldw	r2,72(sp)
  8871cc:	dc800f17 	ldw	r18,60(sp)
  8871d0:	1829883a 	mov	r20,r3
  8871d4:	b8af883a 	add	r23,r23,r2
  8871d8:	d9001417 	ldw	r4,80(sp)
  8871dc:	d9401517 	ldw	r5,84(sp)
  8871e0:	000d883a 	mov	r6,zero
  8871e4:	01cff834 	movhi	r7,16352
  8871e8:	088cea40 	call	88cea4 <__adddf3>
  8871ec:	880d883a 	mov	r6,r17
  8871f0:	a00f883a 	mov	r7,r20
  8871f4:	1009883a 	mov	r4,r2
  8871f8:	180b883a 	mov	r5,r3
  8871fc:	088e19c0 	call	88e19c <__ledf2>
  887200:	10003e0e 	bge	r2,zero,8872fc <_dtoa_r+0x1548>
  887204:	d9001317 	ldw	r4,76(sp)
  887208:	bd3fffc3 	ldbu	r20,-1(r23)
  88720c:	d9000515 	stw	r4,20(sp)
  887210:	003d3b06 	br	886700 <_dtoa_r+0x94c>
  887214:	0027883a 	mov	r19,zero
  887218:	003f1b06 	br	886e88 <_dtoa_r+0x10d4>
  88721c:	d8800817 	ldw	r2,32(sp)
  887220:	11e9c83a 	sub	r20,r2,r7
  887224:	0005883a 	mov	r2,zero
  887228:	003d5406 	br	88677c <_dtoa_r+0x9c8>
  88722c:	00800044 	movi	r2,1
  887230:	003dc706 	br	886950 <_dtoa_r+0xb9c>
  887234:	d8c00217 	ldw	r3,8(sp)
  887238:	00800d84 	movi	r2,54
  88723c:	dd400a17 	ldw	r21,40(sp)
  887240:	10c5c83a 	sub	r2,r2,r3
  887244:	dd000817 	ldw	r20,32(sp)
  887248:	003d4c06 	br	88677c <_dtoa_r+0x9c8>
  88724c:	dc800f15 	stw	r18,60(sp)
  887250:	dcc01015 	stw	r19,64(sp)
  887254:	04000084 	movi	r16,2
  887258:	003bed06 	br	886210 <_dtoa_r+0x45c>
  88725c:	d9000617 	ldw	r4,24(sp)
  887260:	203f0d26 	beq	r4,zero,886e98 <_dtoa_r+0x10e4>
  887264:	d9800c17 	ldw	r6,48(sp)
  887268:	01bcab0e 	bge	zero,r6,886518 <_dtoa_r+0x764>
  88726c:	d9401017 	ldw	r5,64(sp)
  887270:	d9000f17 	ldw	r4,60(sp)
  887274:	000d883a 	mov	r6,zero
  887278:	01d00934 	movhi	r7,16420
  88727c:	088e2900 	call	88e290 <__muldf3>
  887280:	81000044 	addi	r4,r16,1
  887284:	d8800f15 	stw	r2,60(sp)
  887288:	d8c01015 	stw	r3,64(sp)
  88728c:	088f3240 	call	88f324 <__floatsidf>
  887290:	d9800f17 	ldw	r6,60(sp)
  887294:	d9c01017 	ldw	r7,64(sp)
  887298:	1009883a 	mov	r4,r2
  88729c:	180b883a 	mov	r5,r3
  8872a0:	088e2900 	call	88e290 <__muldf3>
  8872a4:	01d00734 	movhi	r7,16412
  8872a8:	000d883a 	mov	r6,zero
  8872ac:	1009883a 	mov	r4,r2
  8872b0:	180b883a 	mov	r5,r3
  8872b4:	088cea40 	call	88cea4 <__adddf3>
  8872b8:	d9c00517 	ldw	r7,20(sp)
  8872bc:	047f3034 	movhi	r17,64704
  8872c0:	1021883a 	mov	r16,r2
  8872c4:	39ffffc4 	addi	r7,r7,-1
  8872c8:	d9c01315 	stw	r7,76(sp)
  8872cc:	1c63883a 	add	r17,r3,r17
  8872d0:	db000c17 	ldw	r12,48(sp)
  8872d4:	003bea06 	br	886280 <_dtoa_r+0x4cc>
  8872d8:	dc000915 	stw	r16,36(sp)
  8872dc:	003e0e06 	br	886b18 <_dtoa_r+0xd64>
  8872e0:	01000e44 	movi	r4,57
  8872e4:	8825883a 	mov	r18,r17
  8872e8:	9dc00044 	addi	r23,r19,1
  8872ec:	99000005 	stb	r4,0(r19)
  8872f0:	a023883a 	mov	r17,r20
  8872f4:	dc000915 	stw	r16,36(sp)
  8872f8:	003da406 	br	88698c <_dtoa_r+0xbd8>
  8872fc:	d9801417 	ldw	r6,80(sp)
  887300:	d9c01517 	ldw	r7,84(sp)
  887304:	0009883a 	mov	r4,zero
  887308:	014ff834 	movhi	r5,16352
  88730c:	088e9a80 	call	88e9a8 <__subdf3>
  887310:	880d883a 	mov	r6,r17
  887314:	a00f883a 	mov	r7,r20
  887318:	1009883a 	mov	r4,r2
  88731c:	180b883a 	mov	r5,r3
  887320:	088e0c00 	call	88e0c0 <__gedf2>
  887324:	00bc7c0e 	bge	zero,r2,886518 <_dtoa_r+0x764>
  887328:	01000c04 	movi	r4,48
  88732c:	00000106 	br	887334 <_dtoa_r+0x1580>
  887330:	102f883a 	mov	r23,r2
  887334:	b8bfffc4 	addi	r2,r23,-1
  887338:	10c00007 	ldb	r3,0(r2)
  88733c:	193ffc26 	beq	r3,r4,887330 <_dtoa_r+0x157c>
  887340:	d9801317 	ldw	r6,76(sp)
  887344:	d9800515 	stw	r6,20(sp)
  887348:	003c4406 	br	88645c <_dtoa_r+0x6a8>
  88734c:	d9801317 	ldw	r6,76(sp)
  887350:	d9800515 	stw	r6,20(sp)
  887354:	003cea06 	br	886700 <_dtoa_r+0x94c>
  887358:	dd800f17 	ldw	r22,60(sp)
  88735c:	dcc01017 	ldw	r19,64(sp)
  887360:	dc801217 	ldw	r18,72(sp)
  887364:	003c6c06 	br	886518 <_dtoa_r+0x764>
  887368:	903e031e 	bne	r18,zero,886b78 <_dtoa_r+0xdc4>
  88736c:	003ebb06 	br	886e5c <_dtoa_r+0x10a8>
  887370:	103e6c1e 	bne	r2,zero,886d24 <_dtoa_r+0xf70>
  887374:	4080004c 	andi	r2,r8,1
  887378:	103e6a26 	beq	r2,zero,886d24 <_dtoa_r+0xf70>
  88737c:	003e6606 	br	886d18 <_dtoa_r+0xf64>
  887380:	d8c00317 	ldw	r3,12(sp)
  887384:	00800084 	movi	r2,2
  887388:	10c02916 	blt	r2,r3,887430 <_dtoa_r+0x167c>
  88738c:	d9000c17 	ldw	r4,48(sp)
  887390:	003e8806 	br	886db4 <_dtoa_r+0x1000>
  887394:	04000084 	movi	r16,2
  887398:	003b9d06 	br	886210 <_dtoa_r+0x45c>
  88739c:	d9001317 	ldw	r4,76(sp)
  8873a0:	d9000515 	stw	r4,20(sp)
  8873a4:	003cd606 	br	886700 <_dtoa_r+0x94c>
  8873a8:	d8801317 	ldw	r2,76(sp)
  8873ac:	d8800515 	stw	r2,20(sp)
  8873b0:	003c2a06 	br	88645c <_dtoa_r+0x6a8>
  8873b4:	d9800317 	ldw	r6,12(sp)
  8873b8:	00800084 	movi	r2,2
  8873bc:	11801516 	blt	r2,r6,887414 <_dtoa_r+0x1660>
  8873c0:	d9c00c17 	ldw	r7,48(sp)
  8873c4:	d9c00615 	stw	r7,24(sp)
  8873c8:	003df706 	br	886ba8 <_dtoa_r+0xdf4>
  8873cc:	193d3926 	beq	r3,r4,8868b4 <_dtoa_r+0xb00>
  8873d0:	00c00f04 	movi	r3,60
  8873d4:	1885c83a 	sub	r2,r3,r2
  8873d8:	003ddf06 	br	886b58 <_dtoa_r+0xda4>
  8873dc:	e009883a 	mov	r4,fp
  8873e0:	e0001115 	stw	zero,68(fp)
  8873e4:	000b883a 	mov	r5,zero
  8873e8:	08885040 	call	888504 <_Balloc>
  8873ec:	d8800715 	stw	r2,28(sp)
  8873f0:	d8c00717 	ldw	r3,28(sp)
  8873f4:	00bfffc4 	movi	r2,-1
  8873f8:	01000044 	movi	r4,1
  8873fc:	d8800c15 	stw	r2,48(sp)
  887400:	e0c01015 	stw	r3,64(fp)
  887404:	d9000b15 	stw	r4,44(sp)
  887408:	d8800615 	stw	r2,24(sp)
  88740c:	d8002215 	stw	zero,136(sp)
  887410:	003c4106 	br	886518 <_dtoa_r+0x764>
  887414:	d8c00c17 	ldw	r3,48(sp)
  887418:	d8c00615 	stw	r3,24(sp)
  88741c:	003e7006 	br	886de0 <_dtoa_r+0x102c>
  887420:	04400044 	movi	r17,1
  887424:	003b2006 	br	8860a8 <_dtoa_r+0x2f4>
  887428:	000b883a 	mov	r5,zero
  88742c:	003b3d06 	br	886124 <_dtoa_r+0x370>
  887430:	d8800c17 	ldw	r2,48(sp)
  887434:	d8800615 	stw	r2,24(sp)
  887438:	003e6906 	br	886de0 <_dtoa_r+0x102c>

0088743c <__sflush_r>:
  88743c:	2880030b 	ldhu	r2,12(r5)
  887440:	defffb04 	addi	sp,sp,-20
  887444:	dcc00315 	stw	r19,12(sp)
  887448:	dc400115 	stw	r17,4(sp)
  88744c:	dfc00415 	stw	ra,16(sp)
  887450:	dc800215 	stw	r18,8(sp)
  887454:	dc000015 	stw	r16,0(sp)
  887458:	10c0020c 	andi	r3,r2,8
  88745c:	2823883a 	mov	r17,r5
  887460:	2027883a 	mov	r19,r4
  887464:	1800311e 	bne	r3,zero,88752c <__sflush_r+0xf0>
  887468:	28c00117 	ldw	r3,4(r5)
  88746c:	10820014 	ori	r2,r2,2048
  887470:	2880030d 	sth	r2,12(r5)
  887474:	00c04b0e 	bge	zero,r3,8875a4 <__sflush_r+0x168>
  887478:	8a000a17 	ldw	r8,40(r17)
  88747c:	40002326 	beq	r8,zero,88750c <__sflush_r+0xd0>
  887480:	9c000017 	ldw	r16,0(r19)
  887484:	10c4000c 	andi	r3,r2,4096
  887488:	98000015 	stw	zero,0(r19)
  88748c:	18004826 	beq	r3,zero,8875b0 <__sflush_r+0x174>
  887490:	89801417 	ldw	r6,80(r17)
  887494:	10c0010c 	andi	r3,r2,4
  887498:	18000626 	beq	r3,zero,8874b4 <__sflush_r+0x78>
  88749c:	88c00117 	ldw	r3,4(r17)
  8874a0:	88800c17 	ldw	r2,48(r17)
  8874a4:	30cdc83a 	sub	r6,r6,r3
  8874a8:	10000226 	beq	r2,zero,8874b4 <__sflush_r+0x78>
  8874ac:	88800f17 	ldw	r2,60(r17)
  8874b0:	308dc83a 	sub	r6,r6,r2
  8874b4:	89400717 	ldw	r5,28(r17)
  8874b8:	000f883a 	mov	r7,zero
  8874bc:	9809883a 	mov	r4,r19
  8874c0:	403ee83a 	callr	r8
  8874c4:	00ffffc4 	movi	r3,-1
  8874c8:	10c04426 	beq	r2,r3,8875dc <__sflush_r+0x1a0>
  8874cc:	88c0030b 	ldhu	r3,12(r17)
  8874d0:	89000417 	ldw	r4,16(r17)
  8874d4:	88000115 	stw	zero,4(r17)
  8874d8:	197dffcc 	andi	r5,r3,63487
  8874dc:	8940030d 	sth	r5,12(r17)
  8874e0:	89000015 	stw	r4,0(r17)
  8874e4:	18c4000c 	andi	r3,r3,4096
  8874e8:	18002c1e 	bne	r3,zero,88759c <__sflush_r+0x160>
  8874ec:	89400c17 	ldw	r5,48(r17)
  8874f0:	9c000015 	stw	r16,0(r19)
  8874f4:	28000526 	beq	r5,zero,88750c <__sflush_r+0xd0>
  8874f8:	88801004 	addi	r2,r17,64
  8874fc:	28800226 	beq	r5,r2,887508 <__sflush_r+0xcc>
  887500:	9809883a 	mov	r4,r19
  887504:	0887ba80 	call	887ba8 <_free_r>
  887508:	88000c15 	stw	zero,48(r17)
  88750c:	0005883a 	mov	r2,zero
  887510:	dfc00417 	ldw	ra,16(sp)
  887514:	dcc00317 	ldw	r19,12(sp)
  887518:	dc800217 	ldw	r18,8(sp)
  88751c:	dc400117 	ldw	r17,4(sp)
  887520:	dc000017 	ldw	r16,0(sp)
  887524:	dec00504 	addi	sp,sp,20
  887528:	f800283a 	ret
  88752c:	2c800417 	ldw	r18,16(r5)
  887530:	903ff626 	beq	r18,zero,88750c <__sflush_r+0xd0>
  887534:	2c000017 	ldw	r16,0(r5)
  887538:	108000cc 	andi	r2,r2,3
  88753c:	2c800015 	stw	r18,0(r5)
  887540:	84a1c83a 	sub	r16,r16,r18
  887544:	1000131e 	bne	r2,zero,887594 <__sflush_r+0x158>
  887548:	28800517 	ldw	r2,20(r5)
  88754c:	88800215 	stw	r2,8(r17)
  887550:	04000316 	blt	zero,r16,887560 <__sflush_r+0x124>
  887554:	003fed06 	br	88750c <__sflush_r+0xd0>
  887558:	90a5883a 	add	r18,r18,r2
  88755c:	043feb0e 	bge	zero,r16,88750c <__sflush_r+0xd0>
  887560:	88800917 	ldw	r2,36(r17)
  887564:	89400717 	ldw	r5,28(r17)
  887568:	800f883a 	mov	r7,r16
  88756c:	900d883a 	mov	r6,r18
  887570:	9809883a 	mov	r4,r19
  887574:	103ee83a 	callr	r2
  887578:	80a1c83a 	sub	r16,r16,r2
  88757c:	00bff616 	blt	zero,r2,887558 <__sflush_r+0x11c>
  887580:	88c0030b 	ldhu	r3,12(r17)
  887584:	00bfffc4 	movi	r2,-1
  887588:	18c01014 	ori	r3,r3,64
  88758c:	88c0030d 	sth	r3,12(r17)
  887590:	003fdf06 	br	887510 <__sflush_r+0xd4>
  887594:	0005883a 	mov	r2,zero
  887598:	003fec06 	br	88754c <__sflush_r+0x110>
  88759c:	88801415 	stw	r2,80(r17)
  8875a0:	003fd206 	br	8874ec <__sflush_r+0xb0>
  8875a4:	28c00f17 	ldw	r3,60(r5)
  8875a8:	00ffb316 	blt	zero,r3,887478 <__sflush_r+0x3c>
  8875ac:	003fd706 	br	88750c <__sflush_r+0xd0>
  8875b0:	89400717 	ldw	r5,28(r17)
  8875b4:	000d883a 	mov	r6,zero
  8875b8:	01c00044 	movi	r7,1
  8875bc:	9809883a 	mov	r4,r19
  8875c0:	403ee83a 	callr	r8
  8875c4:	100d883a 	mov	r6,r2
  8875c8:	00bfffc4 	movi	r2,-1
  8875cc:	30801426 	beq	r6,r2,887620 <__sflush_r+0x1e4>
  8875d0:	8880030b 	ldhu	r2,12(r17)
  8875d4:	8a000a17 	ldw	r8,40(r17)
  8875d8:	003fae06 	br	887494 <__sflush_r+0x58>
  8875dc:	98c00017 	ldw	r3,0(r19)
  8875e0:	183fba26 	beq	r3,zero,8874cc <__sflush_r+0x90>
  8875e4:	01000744 	movi	r4,29
  8875e8:	19000626 	beq	r3,r4,887604 <__sflush_r+0x1c8>
  8875ec:	01000584 	movi	r4,22
  8875f0:	19000426 	beq	r3,r4,887604 <__sflush_r+0x1c8>
  8875f4:	88c0030b 	ldhu	r3,12(r17)
  8875f8:	18c01014 	ori	r3,r3,64
  8875fc:	88c0030d 	sth	r3,12(r17)
  887600:	003fc306 	br	887510 <__sflush_r+0xd4>
  887604:	8880030b 	ldhu	r2,12(r17)
  887608:	88c00417 	ldw	r3,16(r17)
  88760c:	88000115 	stw	zero,4(r17)
  887610:	10bdffcc 	andi	r2,r2,63487
  887614:	8880030d 	sth	r2,12(r17)
  887618:	88c00015 	stw	r3,0(r17)
  88761c:	003fb306 	br	8874ec <__sflush_r+0xb0>
  887620:	98800017 	ldw	r2,0(r19)
  887624:	103fea26 	beq	r2,zero,8875d0 <__sflush_r+0x194>
  887628:	00c00744 	movi	r3,29
  88762c:	10c00226 	beq	r2,r3,887638 <__sflush_r+0x1fc>
  887630:	00c00584 	movi	r3,22
  887634:	10c0031e 	bne	r2,r3,887644 <__sflush_r+0x208>
  887638:	9c000015 	stw	r16,0(r19)
  88763c:	0005883a 	mov	r2,zero
  887640:	003fb306 	br	887510 <__sflush_r+0xd4>
  887644:	88c0030b 	ldhu	r3,12(r17)
  887648:	3005883a 	mov	r2,r6
  88764c:	18c01014 	ori	r3,r3,64
  887650:	88c0030d 	sth	r3,12(r17)
  887654:	003fae06 	br	887510 <__sflush_r+0xd4>

00887658 <_fflush_r>:
  887658:	defffd04 	addi	sp,sp,-12
  88765c:	dc000115 	stw	r16,4(sp)
  887660:	dfc00215 	stw	ra,8(sp)
  887664:	2021883a 	mov	r16,r4
  887668:	20000226 	beq	r4,zero,887674 <_fflush_r+0x1c>
  88766c:	20800e17 	ldw	r2,56(r4)
  887670:	10000c26 	beq	r2,zero,8876a4 <_fflush_r+0x4c>
  887674:	2880030f 	ldh	r2,12(r5)
  887678:	1000051e 	bne	r2,zero,887690 <_fflush_r+0x38>
  88767c:	0005883a 	mov	r2,zero
  887680:	dfc00217 	ldw	ra,8(sp)
  887684:	dc000117 	ldw	r16,4(sp)
  887688:	dec00304 	addi	sp,sp,12
  88768c:	f800283a 	ret
  887690:	8009883a 	mov	r4,r16
  887694:	dfc00217 	ldw	ra,8(sp)
  887698:	dc000117 	ldw	r16,4(sp)
  88769c:	dec00304 	addi	sp,sp,12
  8876a0:	088743c1 	jmpi	88743c <__sflush_r>
  8876a4:	d9400015 	stw	r5,0(sp)
  8876a8:	0887a340 	call	887a34 <__sinit>
  8876ac:	d9400017 	ldw	r5,0(sp)
  8876b0:	003ff006 	br	887674 <_fflush_r+0x1c>

008876b4 <fflush>:
  8876b4:	20000526 	beq	r4,zero,8876cc <fflush+0x18>
  8876b8:	00802274 	movhi	r2,137
  8876bc:	10912004 	addi	r2,r2,17536
  8876c0:	200b883a 	mov	r5,r4
  8876c4:	11000017 	ldw	r4,0(r2)
  8876c8:	08876581 	jmpi	887658 <_fflush_r>
  8876cc:	00802274 	movhi	r2,137
  8876d0:	10911f04 	addi	r2,r2,17532
  8876d4:	11000017 	ldw	r4,0(r2)
  8876d8:	01402234 	movhi	r5,136
  8876dc:	295d9604 	addi	r5,r5,30296
  8876e0:	0887f7c1 	jmpi	887f7c <_fwalk_reent>

008876e4 <__fp_unlock>:
  8876e4:	0005883a 	mov	r2,zero
  8876e8:	f800283a 	ret

008876ec <_cleanup_r>:
  8876ec:	01402274 	movhi	r5,137
  8876f0:	296bc204 	addi	r5,r5,-20728
  8876f4:	0887f7c1 	jmpi	887f7c <_fwalk_reent>

008876f8 <__sinit.part.1>:
  8876f8:	defff704 	addi	sp,sp,-36
  8876fc:	00c02234 	movhi	r3,136
  887700:	dfc00815 	stw	ra,32(sp)
  887704:	ddc00715 	stw	r23,28(sp)
  887708:	dd800615 	stw	r22,24(sp)
  88770c:	dd400515 	stw	r21,20(sp)
  887710:	dd000415 	stw	r20,16(sp)
  887714:	dcc00315 	stw	r19,12(sp)
  887718:	dc800215 	stw	r18,8(sp)
  88771c:	dc400115 	stw	r17,4(sp)
  887720:	dc000015 	stw	r16,0(sp)
  887724:	18ddbb04 	addi	r3,r3,30444
  887728:	24000117 	ldw	r16,4(r4)
  88772c:	20c00f15 	stw	r3,60(r4)
  887730:	2080bb04 	addi	r2,r4,748
  887734:	00c000c4 	movi	r3,3
  887738:	20c0b915 	stw	r3,740(r4)
  88773c:	2080ba15 	stw	r2,744(r4)
  887740:	2000b815 	stw	zero,736(r4)
  887744:	05c00204 	movi	r23,8
  887748:	00800104 	movi	r2,4
  88774c:	2025883a 	mov	r18,r4
  887750:	b80d883a 	mov	r6,r23
  887754:	81001704 	addi	r4,r16,92
  887758:	000b883a 	mov	r5,zero
  88775c:	80000015 	stw	zero,0(r16)
  887760:	80000115 	stw	zero,4(r16)
  887764:	80000215 	stw	zero,8(r16)
  887768:	8080030d 	sth	r2,12(r16)
  88776c:	80001915 	stw	zero,100(r16)
  887770:	8000038d 	sth	zero,14(r16)
  887774:	80000415 	stw	zero,16(r16)
  887778:	80000515 	stw	zero,20(r16)
  88777c:	80000615 	stw	zero,24(r16)
  887780:	08831b00 	call	8831b0 <memset>
  887784:	05802274 	movhi	r22,137
  887788:	94400217 	ldw	r17,8(r18)
  88778c:	05402274 	movhi	r21,137
  887790:	05002274 	movhi	r20,137
  887794:	04c02274 	movhi	r19,137
  887798:	b5a55d04 	addi	r22,r22,-27276
  88779c:	ad657404 	addi	r21,r21,-27184
  8877a0:	a5259304 	addi	r20,r20,-27060
  8877a4:	9ce5aa04 	addi	r19,r19,-26968
  8877a8:	85800815 	stw	r22,32(r16)
  8877ac:	85400915 	stw	r21,36(r16)
  8877b0:	85000a15 	stw	r20,40(r16)
  8877b4:	84c00b15 	stw	r19,44(r16)
  8877b8:	84000715 	stw	r16,28(r16)
  8877bc:	00800284 	movi	r2,10
  8877c0:	8880030d 	sth	r2,12(r17)
  8877c4:	00800044 	movi	r2,1
  8877c8:	b80d883a 	mov	r6,r23
  8877cc:	89001704 	addi	r4,r17,92
  8877d0:	000b883a 	mov	r5,zero
  8877d4:	88000015 	stw	zero,0(r17)
  8877d8:	88000115 	stw	zero,4(r17)
  8877dc:	88000215 	stw	zero,8(r17)
  8877e0:	88001915 	stw	zero,100(r17)
  8877e4:	8880038d 	sth	r2,14(r17)
  8877e8:	88000415 	stw	zero,16(r17)
  8877ec:	88000515 	stw	zero,20(r17)
  8877f0:	88000615 	stw	zero,24(r17)
  8877f4:	08831b00 	call	8831b0 <memset>
  8877f8:	94000317 	ldw	r16,12(r18)
  8877fc:	00800484 	movi	r2,18
  887800:	8c400715 	stw	r17,28(r17)
  887804:	8d800815 	stw	r22,32(r17)
  887808:	8d400915 	stw	r21,36(r17)
  88780c:	8d000a15 	stw	r20,40(r17)
  887810:	8cc00b15 	stw	r19,44(r17)
  887814:	8080030d 	sth	r2,12(r16)
  887818:	00800084 	movi	r2,2
  88781c:	80000015 	stw	zero,0(r16)
  887820:	80000115 	stw	zero,4(r16)
  887824:	80000215 	stw	zero,8(r16)
  887828:	80001915 	stw	zero,100(r16)
  88782c:	8080038d 	sth	r2,14(r16)
  887830:	80000415 	stw	zero,16(r16)
  887834:	80000515 	stw	zero,20(r16)
  887838:	80000615 	stw	zero,24(r16)
  88783c:	b80d883a 	mov	r6,r23
  887840:	000b883a 	mov	r5,zero
  887844:	81001704 	addi	r4,r16,92
  887848:	08831b00 	call	8831b0 <memset>
  88784c:	00800044 	movi	r2,1
  887850:	84000715 	stw	r16,28(r16)
  887854:	85800815 	stw	r22,32(r16)
  887858:	85400915 	stw	r21,36(r16)
  88785c:	85000a15 	stw	r20,40(r16)
  887860:	84c00b15 	stw	r19,44(r16)
  887864:	90800e15 	stw	r2,56(r18)
  887868:	dfc00817 	ldw	ra,32(sp)
  88786c:	ddc00717 	ldw	r23,28(sp)
  887870:	dd800617 	ldw	r22,24(sp)
  887874:	dd400517 	ldw	r21,20(sp)
  887878:	dd000417 	ldw	r20,16(sp)
  88787c:	dcc00317 	ldw	r19,12(sp)
  887880:	dc800217 	ldw	r18,8(sp)
  887884:	dc400117 	ldw	r17,4(sp)
  887888:	dc000017 	ldw	r16,0(sp)
  88788c:	dec00904 	addi	sp,sp,36
  887890:	f800283a 	ret

00887894 <__fp_lock>:
  887894:	0005883a 	mov	r2,zero
  887898:	f800283a 	ret

0088789c <__sfmoreglue>:
  88789c:	defffc04 	addi	sp,sp,-16
  8878a0:	dc400115 	stw	r17,4(sp)
  8878a4:	2c7fffc4 	addi	r17,r5,-1
  8878a8:	8c401a24 	muli	r17,r17,104
  8878ac:	dc800215 	stw	r18,8(sp)
  8878b0:	2825883a 	mov	r18,r5
  8878b4:	89401d04 	addi	r5,r17,116
  8878b8:	dc000015 	stw	r16,0(sp)
  8878bc:	dfc00315 	stw	ra,12(sp)
  8878c0:	08829a40 	call	8829a4 <_malloc_r>
  8878c4:	1021883a 	mov	r16,r2
  8878c8:	10000726 	beq	r2,zero,8878e8 <__sfmoreglue+0x4c>
  8878cc:	11000304 	addi	r4,r2,12
  8878d0:	10000015 	stw	zero,0(r2)
  8878d4:	14800115 	stw	r18,4(r2)
  8878d8:	11000215 	stw	r4,8(r2)
  8878dc:	89801a04 	addi	r6,r17,104
  8878e0:	000b883a 	mov	r5,zero
  8878e4:	08831b00 	call	8831b0 <memset>
  8878e8:	8005883a 	mov	r2,r16
  8878ec:	dfc00317 	ldw	ra,12(sp)
  8878f0:	dc800217 	ldw	r18,8(sp)
  8878f4:	dc400117 	ldw	r17,4(sp)
  8878f8:	dc000017 	ldw	r16,0(sp)
  8878fc:	dec00404 	addi	sp,sp,16
  887900:	f800283a 	ret

00887904 <__sfp>:
  887904:	defffb04 	addi	sp,sp,-20
  887908:	dc000015 	stw	r16,0(sp)
  88790c:	04002274 	movhi	r16,137
  887910:	84111f04 	addi	r16,r16,17532
  887914:	dcc00315 	stw	r19,12(sp)
  887918:	2027883a 	mov	r19,r4
  88791c:	81000017 	ldw	r4,0(r16)
  887920:	dfc00415 	stw	ra,16(sp)
  887924:	dc800215 	stw	r18,8(sp)
  887928:	20800e17 	ldw	r2,56(r4)
  88792c:	dc400115 	stw	r17,4(sp)
  887930:	1000021e 	bne	r2,zero,88793c <__sfp+0x38>
  887934:	08876f80 	call	8876f8 <__sinit.part.1>
  887938:	81000017 	ldw	r4,0(r16)
  88793c:	2480b804 	addi	r18,r4,736
  887940:	047fffc4 	movi	r17,-1
  887944:	91000117 	ldw	r4,4(r18)
  887948:	94000217 	ldw	r16,8(r18)
  88794c:	213fffc4 	addi	r4,r4,-1
  887950:	20000a16 	blt	r4,zero,88797c <__sfp+0x78>
  887954:	8080030f 	ldh	r2,12(r16)
  887958:	10000c26 	beq	r2,zero,88798c <__sfp+0x88>
  88795c:	80c01d04 	addi	r3,r16,116
  887960:	00000206 	br	88796c <__sfp+0x68>
  887964:	18bfe60f 	ldh	r2,-104(r3)
  887968:	10000826 	beq	r2,zero,88798c <__sfp+0x88>
  88796c:	213fffc4 	addi	r4,r4,-1
  887970:	1c3ffd04 	addi	r16,r3,-12
  887974:	18c01a04 	addi	r3,r3,104
  887978:	247ffa1e 	bne	r4,r17,887964 <__sfp+0x60>
  88797c:	90800017 	ldw	r2,0(r18)
  887980:	10001d26 	beq	r2,zero,8879f8 <__sfp+0xf4>
  887984:	1025883a 	mov	r18,r2
  887988:	003fee06 	br	887944 <__sfp+0x40>
  88798c:	00bfffc4 	movi	r2,-1
  887990:	8080038d 	sth	r2,14(r16)
  887994:	00800044 	movi	r2,1
  887998:	8080030d 	sth	r2,12(r16)
  88799c:	80001915 	stw	zero,100(r16)
  8879a0:	80000015 	stw	zero,0(r16)
  8879a4:	80000215 	stw	zero,8(r16)
  8879a8:	80000115 	stw	zero,4(r16)
  8879ac:	80000415 	stw	zero,16(r16)
  8879b0:	80000515 	stw	zero,20(r16)
  8879b4:	80000615 	stw	zero,24(r16)
  8879b8:	01800204 	movi	r6,8
  8879bc:	000b883a 	mov	r5,zero
  8879c0:	81001704 	addi	r4,r16,92
  8879c4:	08831b00 	call	8831b0 <memset>
  8879c8:	8005883a 	mov	r2,r16
  8879cc:	80000c15 	stw	zero,48(r16)
  8879d0:	80000d15 	stw	zero,52(r16)
  8879d4:	80001115 	stw	zero,68(r16)
  8879d8:	80001215 	stw	zero,72(r16)
  8879dc:	dfc00417 	ldw	ra,16(sp)
  8879e0:	dcc00317 	ldw	r19,12(sp)
  8879e4:	dc800217 	ldw	r18,8(sp)
  8879e8:	dc400117 	ldw	r17,4(sp)
  8879ec:	dc000017 	ldw	r16,0(sp)
  8879f0:	dec00504 	addi	sp,sp,20
  8879f4:	f800283a 	ret
  8879f8:	01400104 	movi	r5,4
  8879fc:	9809883a 	mov	r4,r19
  887a00:	088789c0 	call	88789c <__sfmoreglue>
  887a04:	90800015 	stw	r2,0(r18)
  887a08:	103fde1e 	bne	r2,zero,887984 <__sfp+0x80>
  887a0c:	00800304 	movi	r2,12
  887a10:	98800015 	stw	r2,0(r19)
  887a14:	0005883a 	mov	r2,zero
  887a18:	003ff006 	br	8879dc <__sfp+0xd8>

00887a1c <_cleanup>:
  887a1c:	00802274 	movhi	r2,137
  887a20:	10911f04 	addi	r2,r2,17532
  887a24:	11000017 	ldw	r4,0(r2)
  887a28:	01402274 	movhi	r5,137
  887a2c:	296bc204 	addi	r5,r5,-20728
  887a30:	0887f7c1 	jmpi	887f7c <_fwalk_reent>

00887a34 <__sinit>:
  887a34:	20800e17 	ldw	r2,56(r4)
  887a38:	10000126 	beq	r2,zero,887a40 <__sinit+0xc>
  887a3c:	f800283a 	ret
  887a40:	08876f81 	jmpi	8876f8 <__sinit.part.1>

00887a44 <__sfp_lock_acquire>:
  887a44:	f800283a 	ret

00887a48 <__sfp_lock_release>:
  887a48:	f800283a 	ret

00887a4c <__sinit_lock_acquire>:
  887a4c:	f800283a 	ret

00887a50 <__sinit_lock_release>:
  887a50:	f800283a 	ret

00887a54 <__fp_lock_all>:
  887a54:	00802274 	movhi	r2,137
  887a58:	10912004 	addi	r2,r2,17536
  887a5c:	11000017 	ldw	r4,0(r2)
  887a60:	01402234 	movhi	r5,136
  887a64:	295e2504 	addi	r5,r5,30868
  887a68:	0887eb81 	jmpi	887eb8 <_fwalk>

00887a6c <__fp_unlock_all>:
  887a6c:	00802274 	movhi	r2,137
  887a70:	10912004 	addi	r2,r2,17536
  887a74:	11000017 	ldw	r4,0(r2)
  887a78:	01402234 	movhi	r5,136
  887a7c:	295db904 	addi	r5,r5,30436
  887a80:	0887eb81 	jmpi	887eb8 <_fwalk>

00887a84 <_malloc_trim_r>:
  887a84:	defffb04 	addi	sp,sp,-20
  887a88:	dcc00315 	stw	r19,12(sp)
  887a8c:	04c02274 	movhi	r19,137
  887a90:	dc800215 	stw	r18,8(sp)
  887a94:	dc400115 	stw	r17,4(sp)
  887a98:	dc000015 	stw	r16,0(sp)
  887a9c:	dfc00415 	stw	ra,16(sp)
  887aa0:	2821883a 	mov	r16,r5
  887aa4:	9ccb6704 	addi	r19,r19,11676
  887aa8:	2025883a 	mov	r18,r4
  887aac:	088fc480 	call	88fc48 <__malloc_lock>
  887ab0:	98800217 	ldw	r2,8(r19)
  887ab4:	14400117 	ldw	r17,4(r2)
  887ab8:	00bfff04 	movi	r2,-4
  887abc:	88a2703a 	and	r17,r17,r2
  887ac0:	8c21c83a 	sub	r16,r17,r16
  887ac4:	8403fbc4 	addi	r16,r16,4079
  887ac8:	8020d33a 	srli	r16,r16,12
  887acc:	0083ffc4 	movi	r2,4095
  887ad0:	843fffc4 	addi	r16,r16,-1
  887ad4:	8020933a 	slli	r16,r16,12
  887ad8:	1400060e 	bge	r2,r16,887af4 <_malloc_trim_r+0x70>
  887adc:	000b883a 	mov	r5,zero
  887ae0:	9009883a 	mov	r4,r18
  887ae4:	08833440 	call	883344 <_sbrk_r>
  887ae8:	98c00217 	ldw	r3,8(r19)
  887aec:	1c47883a 	add	r3,r3,r17
  887af0:	10c00a26 	beq	r2,r3,887b1c <_malloc_trim_r+0x98>
  887af4:	9009883a 	mov	r4,r18
  887af8:	088fc6c0 	call	88fc6c <__malloc_unlock>
  887afc:	0005883a 	mov	r2,zero
  887b00:	dfc00417 	ldw	ra,16(sp)
  887b04:	dcc00317 	ldw	r19,12(sp)
  887b08:	dc800217 	ldw	r18,8(sp)
  887b0c:	dc400117 	ldw	r17,4(sp)
  887b10:	dc000017 	ldw	r16,0(sp)
  887b14:	dec00504 	addi	sp,sp,20
  887b18:	f800283a 	ret
  887b1c:	040bc83a 	sub	r5,zero,r16
  887b20:	9009883a 	mov	r4,r18
  887b24:	08833440 	call	883344 <_sbrk_r>
  887b28:	00ffffc4 	movi	r3,-1
  887b2c:	10c00d26 	beq	r2,r3,887b64 <_malloc_trim_r+0xe0>
  887b30:	00c02274 	movhi	r3,137
  887b34:	18d81504 	addi	r3,r3,24660
  887b38:	18800017 	ldw	r2,0(r3)
  887b3c:	99000217 	ldw	r4,8(r19)
  887b40:	8c23c83a 	sub	r17,r17,r16
  887b44:	8c400054 	ori	r17,r17,1
  887b48:	1421c83a 	sub	r16,r2,r16
  887b4c:	24400115 	stw	r17,4(r4)
  887b50:	9009883a 	mov	r4,r18
  887b54:	1c000015 	stw	r16,0(r3)
  887b58:	088fc6c0 	call	88fc6c <__malloc_unlock>
  887b5c:	00800044 	movi	r2,1
  887b60:	003fe706 	br	887b00 <_malloc_trim_r+0x7c>
  887b64:	000b883a 	mov	r5,zero
  887b68:	9009883a 	mov	r4,r18
  887b6c:	08833440 	call	883344 <_sbrk_r>
  887b70:	99000217 	ldw	r4,8(r19)
  887b74:	014003c4 	movi	r5,15
  887b78:	1107c83a 	sub	r3,r2,r4
  887b7c:	28ffdd0e 	bge	r5,r3,887af4 <_malloc_trim_r+0x70>
  887b80:	01402274 	movhi	r5,137
  887b84:	29512104 	addi	r5,r5,17540
  887b88:	29400017 	ldw	r5,0(r5)
  887b8c:	18c00054 	ori	r3,r3,1
  887b90:	20c00115 	stw	r3,4(r4)
  887b94:	00c02274 	movhi	r3,137
  887b98:	1145c83a 	sub	r2,r2,r5
  887b9c:	18d81504 	addi	r3,r3,24660
  887ba0:	18800015 	stw	r2,0(r3)
  887ba4:	003fd306 	br	887af4 <_malloc_trim_r+0x70>

00887ba8 <_free_r>:
  887ba8:	28004126 	beq	r5,zero,887cb0 <_free_r+0x108>
  887bac:	defffd04 	addi	sp,sp,-12
  887bb0:	dc400115 	stw	r17,4(sp)
  887bb4:	dc000015 	stw	r16,0(sp)
  887bb8:	2023883a 	mov	r17,r4
  887bbc:	2821883a 	mov	r16,r5
  887bc0:	dfc00215 	stw	ra,8(sp)
  887bc4:	088fc480 	call	88fc48 <__malloc_lock>
  887bc8:	81ffff17 	ldw	r7,-4(r16)
  887bcc:	00bfff84 	movi	r2,-2
  887bd0:	01002274 	movhi	r4,137
  887bd4:	81bffe04 	addi	r6,r16,-8
  887bd8:	3884703a 	and	r2,r7,r2
  887bdc:	210b6704 	addi	r4,r4,11676
  887be0:	308b883a 	add	r5,r6,r2
  887be4:	2a400117 	ldw	r9,4(r5)
  887be8:	22000217 	ldw	r8,8(r4)
  887bec:	00ffff04 	movi	r3,-4
  887bf0:	48c6703a 	and	r3,r9,r3
  887bf4:	2a005726 	beq	r5,r8,887d54 <_free_r+0x1ac>
  887bf8:	28c00115 	stw	r3,4(r5)
  887bfc:	39c0004c 	andi	r7,r7,1
  887c00:	3800091e 	bne	r7,zero,887c28 <_free_r+0x80>
  887c04:	823ffe17 	ldw	r8,-8(r16)
  887c08:	22400204 	addi	r9,r4,8
  887c0c:	320dc83a 	sub	r6,r6,r8
  887c10:	31c00217 	ldw	r7,8(r6)
  887c14:	1205883a 	add	r2,r2,r8
  887c18:	3a406526 	beq	r7,r9,887db0 <_free_r+0x208>
  887c1c:	32000317 	ldw	r8,12(r6)
  887c20:	3a000315 	stw	r8,12(r7)
  887c24:	41c00215 	stw	r7,8(r8)
  887c28:	28cf883a 	add	r7,r5,r3
  887c2c:	39c00117 	ldw	r7,4(r7)
  887c30:	39c0004c 	andi	r7,r7,1
  887c34:	38003a26 	beq	r7,zero,887d20 <_free_r+0x178>
  887c38:	10c00054 	ori	r3,r2,1
  887c3c:	30c00115 	stw	r3,4(r6)
  887c40:	3087883a 	add	r3,r6,r2
  887c44:	18800015 	stw	r2,0(r3)
  887c48:	00c07fc4 	movi	r3,511
  887c4c:	18801936 	bltu	r3,r2,887cb4 <_free_r+0x10c>
  887c50:	1004d0fa 	srli	r2,r2,3
  887c54:	01c00044 	movi	r7,1
  887c58:	21400117 	ldw	r5,4(r4)
  887c5c:	10c00044 	addi	r3,r2,1
  887c60:	18c7883a 	add	r3,r3,r3
  887c64:	1005d0ba 	srai	r2,r2,2
  887c68:	18c7883a 	add	r3,r3,r3
  887c6c:	18c7883a 	add	r3,r3,r3
  887c70:	1907883a 	add	r3,r3,r4
  887c74:	3884983a 	sll	r2,r7,r2
  887c78:	19c00017 	ldw	r7,0(r3)
  887c7c:	1a3ffe04 	addi	r8,r3,-8
  887c80:	1144b03a 	or	r2,r2,r5
  887c84:	32000315 	stw	r8,12(r6)
  887c88:	31c00215 	stw	r7,8(r6)
  887c8c:	20800115 	stw	r2,4(r4)
  887c90:	19800015 	stw	r6,0(r3)
  887c94:	39800315 	stw	r6,12(r7)
  887c98:	8809883a 	mov	r4,r17
  887c9c:	dfc00217 	ldw	ra,8(sp)
  887ca0:	dc400117 	ldw	r17,4(sp)
  887ca4:	dc000017 	ldw	r16,0(sp)
  887ca8:	dec00304 	addi	sp,sp,12
  887cac:	088fc6c1 	jmpi	88fc6c <__malloc_unlock>
  887cb0:	f800283a 	ret
  887cb4:	100ad27a 	srli	r5,r2,9
  887cb8:	00c00104 	movi	r3,4
  887cbc:	19404a36 	bltu	r3,r5,887de8 <_free_r+0x240>
  887cc0:	100ad1ba 	srli	r5,r2,6
  887cc4:	28c00e44 	addi	r3,r5,57
  887cc8:	18c7883a 	add	r3,r3,r3
  887ccc:	29400e04 	addi	r5,r5,56
  887cd0:	18c7883a 	add	r3,r3,r3
  887cd4:	18c7883a 	add	r3,r3,r3
  887cd8:	1909883a 	add	r4,r3,r4
  887cdc:	20c00017 	ldw	r3,0(r4)
  887ce0:	01c02274 	movhi	r7,137
  887ce4:	213ffe04 	addi	r4,r4,-8
  887ce8:	39cb6704 	addi	r7,r7,11676
  887cec:	20c04426 	beq	r4,r3,887e00 <_free_r+0x258>
  887cf0:	01ffff04 	movi	r7,-4
  887cf4:	19400117 	ldw	r5,4(r3)
  887cf8:	29ca703a 	and	r5,r5,r7
  887cfc:	1140022e 	bgeu	r2,r5,887d08 <_free_r+0x160>
  887d00:	18c00217 	ldw	r3,8(r3)
  887d04:	20fffb1e 	bne	r4,r3,887cf4 <_free_r+0x14c>
  887d08:	19000317 	ldw	r4,12(r3)
  887d0c:	31000315 	stw	r4,12(r6)
  887d10:	30c00215 	stw	r3,8(r6)
  887d14:	21800215 	stw	r6,8(r4)
  887d18:	19800315 	stw	r6,12(r3)
  887d1c:	003fde06 	br	887c98 <_free_r+0xf0>
  887d20:	29c00217 	ldw	r7,8(r5)
  887d24:	10c5883a 	add	r2,r2,r3
  887d28:	00c02274 	movhi	r3,137
  887d2c:	18cb6904 	addi	r3,r3,11684
  887d30:	38c03b26 	beq	r7,r3,887e20 <_free_r+0x278>
  887d34:	2a000317 	ldw	r8,12(r5)
  887d38:	11400054 	ori	r5,r2,1
  887d3c:	3087883a 	add	r3,r6,r2
  887d40:	3a000315 	stw	r8,12(r7)
  887d44:	41c00215 	stw	r7,8(r8)
  887d48:	31400115 	stw	r5,4(r6)
  887d4c:	18800015 	stw	r2,0(r3)
  887d50:	003fbd06 	br	887c48 <_free_r+0xa0>
  887d54:	39c0004c 	andi	r7,r7,1
  887d58:	10c5883a 	add	r2,r2,r3
  887d5c:	3800071e 	bne	r7,zero,887d7c <_free_r+0x1d4>
  887d60:	81fffe17 	ldw	r7,-8(r16)
  887d64:	31cdc83a 	sub	r6,r6,r7
  887d68:	30c00317 	ldw	r3,12(r6)
  887d6c:	31400217 	ldw	r5,8(r6)
  887d70:	11c5883a 	add	r2,r2,r7
  887d74:	28c00315 	stw	r3,12(r5)
  887d78:	19400215 	stw	r5,8(r3)
  887d7c:	10c00054 	ori	r3,r2,1
  887d80:	30c00115 	stw	r3,4(r6)
  887d84:	00c02274 	movhi	r3,137
  887d88:	18d12204 	addi	r3,r3,17544
  887d8c:	18c00017 	ldw	r3,0(r3)
  887d90:	21800215 	stw	r6,8(r4)
  887d94:	10ffc036 	bltu	r2,r3,887c98 <_free_r+0xf0>
  887d98:	00802274 	movhi	r2,137
  887d9c:	10980504 	addi	r2,r2,24596
  887da0:	11400017 	ldw	r5,0(r2)
  887da4:	8809883a 	mov	r4,r17
  887da8:	0887a840 	call	887a84 <_malloc_trim_r>
  887dac:	003fba06 	br	887c98 <_free_r+0xf0>
  887db0:	28c9883a 	add	r4,r5,r3
  887db4:	21000117 	ldw	r4,4(r4)
  887db8:	2100004c 	andi	r4,r4,1
  887dbc:	2000391e 	bne	r4,zero,887ea4 <_free_r+0x2fc>
  887dc0:	29c00217 	ldw	r7,8(r5)
  887dc4:	29000317 	ldw	r4,12(r5)
  887dc8:	1885883a 	add	r2,r3,r2
  887dcc:	10c00054 	ori	r3,r2,1
  887dd0:	39000315 	stw	r4,12(r7)
  887dd4:	21c00215 	stw	r7,8(r4)
  887dd8:	30c00115 	stw	r3,4(r6)
  887ddc:	308d883a 	add	r6,r6,r2
  887de0:	30800015 	stw	r2,0(r6)
  887de4:	003fac06 	br	887c98 <_free_r+0xf0>
  887de8:	00c00504 	movi	r3,20
  887dec:	19401536 	bltu	r3,r5,887e44 <_free_r+0x29c>
  887df0:	28c01704 	addi	r3,r5,92
  887df4:	18c7883a 	add	r3,r3,r3
  887df8:	294016c4 	addi	r5,r5,91
  887dfc:	003fb406 	br	887cd0 <_free_r+0x128>
  887e00:	280bd0ba 	srai	r5,r5,2
  887e04:	00c00044 	movi	r3,1
  887e08:	38800117 	ldw	r2,4(r7)
  887e0c:	194a983a 	sll	r5,r3,r5
  887e10:	2007883a 	mov	r3,r4
  887e14:	2884b03a 	or	r2,r5,r2
  887e18:	38800115 	stw	r2,4(r7)
  887e1c:	003fbb06 	br	887d0c <_free_r+0x164>
  887e20:	21800515 	stw	r6,20(r4)
  887e24:	21800415 	stw	r6,16(r4)
  887e28:	10c00054 	ori	r3,r2,1
  887e2c:	31c00315 	stw	r7,12(r6)
  887e30:	31c00215 	stw	r7,8(r6)
  887e34:	30c00115 	stw	r3,4(r6)
  887e38:	308d883a 	add	r6,r6,r2
  887e3c:	30800015 	stw	r2,0(r6)
  887e40:	003f9506 	br	887c98 <_free_r+0xf0>
  887e44:	00c01504 	movi	r3,84
  887e48:	19400536 	bltu	r3,r5,887e60 <_free_r+0x2b8>
  887e4c:	100ad33a 	srli	r5,r2,12
  887e50:	28c01bc4 	addi	r3,r5,111
  887e54:	18c7883a 	add	r3,r3,r3
  887e58:	29401b84 	addi	r5,r5,110
  887e5c:	003f9c06 	br	887cd0 <_free_r+0x128>
  887e60:	00c05504 	movi	r3,340
  887e64:	19400536 	bltu	r3,r5,887e7c <_free_r+0x2d4>
  887e68:	100ad3fa 	srli	r5,r2,15
  887e6c:	28c01e04 	addi	r3,r5,120
  887e70:	18c7883a 	add	r3,r3,r3
  887e74:	29401dc4 	addi	r5,r5,119
  887e78:	003f9506 	br	887cd0 <_free_r+0x128>
  887e7c:	00c15504 	movi	r3,1364
  887e80:	19400536 	bltu	r3,r5,887e98 <_free_r+0x2f0>
  887e84:	100ad4ba 	srli	r5,r2,18
  887e88:	28c01f44 	addi	r3,r5,125
  887e8c:	18c7883a 	add	r3,r3,r3
  887e90:	29401f04 	addi	r5,r5,124
  887e94:	003f8e06 	br	887cd0 <_free_r+0x128>
  887e98:	00c03f84 	movi	r3,254
  887e9c:	01401f84 	movi	r5,126
  887ea0:	003f8b06 	br	887cd0 <_free_r+0x128>
  887ea4:	10c00054 	ori	r3,r2,1
  887ea8:	30c00115 	stw	r3,4(r6)
  887eac:	308d883a 	add	r6,r6,r2
  887eb0:	30800015 	stw	r2,0(r6)
  887eb4:	003f7806 	br	887c98 <_free_r+0xf0>

00887eb8 <_fwalk>:
  887eb8:	defff704 	addi	sp,sp,-36
  887ebc:	dd000415 	stw	r20,16(sp)
  887ec0:	dfc00815 	stw	ra,32(sp)
  887ec4:	ddc00715 	stw	r23,28(sp)
  887ec8:	dd800615 	stw	r22,24(sp)
  887ecc:	dd400515 	stw	r21,20(sp)
  887ed0:	dcc00315 	stw	r19,12(sp)
  887ed4:	dc800215 	stw	r18,8(sp)
  887ed8:	dc400115 	stw	r17,4(sp)
  887edc:	dc000015 	stw	r16,0(sp)
  887ee0:	2500b804 	addi	r20,r4,736
  887ee4:	a0002326 	beq	r20,zero,887f74 <_fwalk+0xbc>
  887ee8:	282b883a 	mov	r21,r5
  887eec:	002f883a 	mov	r23,zero
  887ef0:	05800044 	movi	r22,1
  887ef4:	04ffffc4 	movi	r19,-1
  887ef8:	a4400117 	ldw	r17,4(r20)
  887efc:	a4800217 	ldw	r18,8(r20)
  887f00:	8c7fffc4 	addi	r17,r17,-1
  887f04:	88000d16 	blt	r17,zero,887f3c <_fwalk+0x84>
  887f08:	94000304 	addi	r16,r18,12
  887f0c:	94800384 	addi	r18,r18,14
  887f10:	8080000b 	ldhu	r2,0(r16)
  887f14:	8c7fffc4 	addi	r17,r17,-1
  887f18:	813ffd04 	addi	r4,r16,-12
  887f1c:	b080042e 	bgeu	r22,r2,887f30 <_fwalk+0x78>
  887f20:	9080000f 	ldh	r2,0(r18)
  887f24:	14c00226 	beq	r2,r19,887f30 <_fwalk+0x78>
  887f28:	a83ee83a 	callr	r21
  887f2c:	b8aeb03a 	or	r23,r23,r2
  887f30:	84001a04 	addi	r16,r16,104
  887f34:	94801a04 	addi	r18,r18,104
  887f38:	8cfff51e 	bne	r17,r19,887f10 <_fwalk+0x58>
  887f3c:	a5000017 	ldw	r20,0(r20)
  887f40:	a03fed1e 	bne	r20,zero,887ef8 <_fwalk+0x40>
  887f44:	b805883a 	mov	r2,r23
  887f48:	dfc00817 	ldw	ra,32(sp)
  887f4c:	ddc00717 	ldw	r23,28(sp)
  887f50:	dd800617 	ldw	r22,24(sp)
  887f54:	dd400517 	ldw	r21,20(sp)
  887f58:	dd000417 	ldw	r20,16(sp)
  887f5c:	dcc00317 	ldw	r19,12(sp)
  887f60:	dc800217 	ldw	r18,8(sp)
  887f64:	dc400117 	ldw	r17,4(sp)
  887f68:	dc000017 	ldw	r16,0(sp)
  887f6c:	dec00904 	addi	sp,sp,36
  887f70:	f800283a 	ret
  887f74:	002f883a 	mov	r23,zero
  887f78:	003ff206 	br	887f44 <_fwalk+0x8c>

00887f7c <_fwalk_reent>:
  887f7c:	defff704 	addi	sp,sp,-36
  887f80:	dd000415 	stw	r20,16(sp)
  887f84:	dfc00815 	stw	ra,32(sp)
  887f88:	ddc00715 	stw	r23,28(sp)
  887f8c:	dd800615 	stw	r22,24(sp)
  887f90:	dd400515 	stw	r21,20(sp)
  887f94:	dcc00315 	stw	r19,12(sp)
  887f98:	dc800215 	stw	r18,8(sp)
  887f9c:	dc400115 	stw	r17,4(sp)
  887fa0:	dc000015 	stw	r16,0(sp)
  887fa4:	2500b804 	addi	r20,r4,736
  887fa8:	a0002326 	beq	r20,zero,888038 <_fwalk_reent+0xbc>
  887fac:	282b883a 	mov	r21,r5
  887fb0:	2027883a 	mov	r19,r4
  887fb4:	002f883a 	mov	r23,zero
  887fb8:	05800044 	movi	r22,1
  887fbc:	04bfffc4 	movi	r18,-1
  887fc0:	a4400117 	ldw	r17,4(r20)
  887fc4:	a4000217 	ldw	r16,8(r20)
  887fc8:	8c7fffc4 	addi	r17,r17,-1
  887fcc:	88000c16 	blt	r17,zero,888000 <_fwalk_reent+0x84>
  887fd0:	84000304 	addi	r16,r16,12
  887fd4:	8080000b 	ldhu	r2,0(r16)
  887fd8:	8c7fffc4 	addi	r17,r17,-1
  887fdc:	817ffd04 	addi	r5,r16,-12
  887fe0:	b080052e 	bgeu	r22,r2,887ff8 <_fwalk_reent+0x7c>
  887fe4:	8080008f 	ldh	r2,2(r16)
  887fe8:	9809883a 	mov	r4,r19
  887fec:	14800226 	beq	r2,r18,887ff8 <_fwalk_reent+0x7c>
  887ff0:	a83ee83a 	callr	r21
  887ff4:	b8aeb03a 	or	r23,r23,r2
  887ff8:	84001a04 	addi	r16,r16,104
  887ffc:	8cbff51e 	bne	r17,r18,887fd4 <_fwalk_reent+0x58>
  888000:	a5000017 	ldw	r20,0(r20)
  888004:	a03fee1e 	bne	r20,zero,887fc0 <_fwalk_reent+0x44>
  888008:	b805883a 	mov	r2,r23
  88800c:	dfc00817 	ldw	ra,32(sp)
  888010:	ddc00717 	ldw	r23,28(sp)
  888014:	dd800617 	ldw	r22,24(sp)
  888018:	dd400517 	ldw	r21,20(sp)
  88801c:	dd000417 	ldw	r20,16(sp)
  888020:	dcc00317 	ldw	r19,12(sp)
  888024:	dc800217 	ldw	r18,8(sp)
  888028:	dc400117 	ldw	r17,4(sp)
  88802c:	dc000017 	ldw	r16,0(sp)
  888030:	dec00904 	addi	sp,sp,36
  888034:	f800283a 	ret
  888038:	002f883a 	mov	r23,zero
  88803c:	003ff206 	br	888008 <_fwalk_reent+0x8c>

00888040 <_setlocale_r>:
  888040:	30001b26 	beq	r6,zero,8880b0 <_setlocale_r+0x70>
  888044:	01402274 	movhi	r5,137
  888048:	defffe04 	addi	sp,sp,-8
  88804c:	29495404 	addi	r5,r5,9552
  888050:	3009883a 	mov	r4,r6
  888054:	dc000015 	stw	r16,0(sp)
  888058:	dfc00115 	stw	ra,4(sp)
  88805c:	3021883a 	mov	r16,r6
  888060:	088369c0 	call	88369c <strcmp>
  888064:	1000061e 	bne	r2,zero,888080 <_setlocale_r+0x40>
  888068:	00802274 	movhi	r2,137
  88806c:	10893604 	addi	r2,r2,9432
  888070:	dfc00117 	ldw	ra,4(sp)
  888074:	dc000017 	ldw	r16,0(sp)
  888078:	dec00204 	addi	sp,sp,8
  88807c:	f800283a 	ret
  888080:	01402274 	movhi	r5,137
  888084:	29493604 	addi	r5,r5,9432
  888088:	8009883a 	mov	r4,r16
  88808c:	088369c0 	call	88369c <strcmp>
  888090:	103ff526 	beq	r2,zero,888068 <_setlocale_r+0x28>
  888094:	01402274 	movhi	r5,137
  888098:	29492904 	addi	r5,r5,9380
  88809c:	8009883a 	mov	r4,r16
  8880a0:	088369c0 	call	88369c <strcmp>
  8880a4:	103ff026 	beq	r2,zero,888068 <_setlocale_r+0x28>
  8880a8:	0005883a 	mov	r2,zero
  8880ac:	003ff006 	br	888070 <_setlocale_r+0x30>
  8880b0:	00802274 	movhi	r2,137
  8880b4:	10893604 	addi	r2,r2,9432
  8880b8:	f800283a 	ret

008880bc <__locale_charset>:
  8880bc:	00802274 	movhi	r2,137
  8880c0:	108c7104 	addi	r2,r2,12740
  8880c4:	f800283a 	ret

008880c8 <__locale_mb_cur_max>:
  8880c8:	00802274 	movhi	r2,137
  8880cc:	10912304 	addi	r2,r2,17548
  8880d0:	10800017 	ldw	r2,0(r2)
  8880d4:	f800283a 	ret

008880d8 <__locale_msgcharset>:
  8880d8:	00802274 	movhi	r2,137
  8880dc:	108c6904 	addi	r2,r2,12708
  8880e0:	f800283a 	ret

008880e4 <__locale_cjk_lang>:
  8880e4:	0005883a 	mov	r2,zero
  8880e8:	f800283a 	ret

008880ec <_localeconv_r>:
  8880ec:	00802274 	movhi	r2,137
  8880f0:	108c7904 	addi	r2,r2,12772
  8880f4:	f800283a 	ret

008880f8 <setlocale>:
  8880f8:	00802274 	movhi	r2,137
  8880fc:	10912004 	addi	r2,r2,17536
  888100:	280d883a 	mov	r6,r5
  888104:	200b883a 	mov	r5,r4
  888108:	11000017 	ldw	r4,0(r2)
  88810c:	08880401 	jmpi	888040 <_setlocale_r>

00888110 <localeconv>:
  888110:	00802274 	movhi	r2,137
  888114:	108c7904 	addi	r2,r2,12772
  888118:	f800283a 	ret

0088811c <__smakebuf_r>:
  88811c:	2880030b 	ldhu	r2,12(r5)
  888120:	10c0008c 	andi	r3,r2,2
  888124:	1800411e 	bne	r3,zero,88822c <__smakebuf_r+0x110>
  888128:	deffec04 	addi	sp,sp,-80
  88812c:	dc000f15 	stw	r16,60(sp)
  888130:	2821883a 	mov	r16,r5
  888134:	2940038f 	ldh	r5,14(r5)
  888138:	dc401015 	stw	r17,64(sp)
  88813c:	dfc01315 	stw	ra,76(sp)
  888140:	dcc01215 	stw	r19,72(sp)
  888144:	dc801115 	stw	r18,68(sp)
  888148:	2023883a 	mov	r17,r4
  88814c:	28001c16 	blt	r5,zero,8881c0 <__smakebuf_r+0xa4>
  888150:	d80d883a 	mov	r6,sp
  888154:	088b2140 	call	88b214 <_fstat_r>
  888158:	10001816 	blt	r2,zero,8881bc <__smakebuf_r+0xa0>
  88815c:	d8800117 	ldw	r2,4(sp)
  888160:	00e00014 	movui	r3,32768
  888164:	10bc000c 	andi	r2,r2,61440
  888168:	14c80020 	cmpeqi	r19,r2,8192
  88816c:	10c03726 	beq	r2,r3,88824c <__smakebuf_r+0x130>
  888170:	80c0030b 	ldhu	r3,12(r16)
  888174:	18c20014 	ori	r3,r3,2048
  888178:	80c0030d 	sth	r3,12(r16)
  88817c:	00c80004 	movi	r3,8192
  888180:	10c0521e 	bne	r2,r3,8882cc <__smakebuf_r+0x1b0>
  888184:	8140038f 	ldh	r5,14(r16)
  888188:	8809883a 	mov	r4,r17
  88818c:	088b72c0 	call	88b72c <_isatty_r>
  888190:	10004c26 	beq	r2,zero,8882c4 <__smakebuf_r+0x1a8>
  888194:	8080030b 	ldhu	r2,12(r16)
  888198:	80c010c4 	addi	r3,r16,67
  88819c:	80c00015 	stw	r3,0(r16)
  8881a0:	10800054 	ori	r2,r2,1
  8881a4:	8080030d 	sth	r2,12(r16)
  8881a8:	00800044 	movi	r2,1
  8881ac:	80c00415 	stw	r3,16(r16)
  8881b0:	80800515 	stw	r2,20(r16)
  8881b4:	04810004 	movi	r18,1024
  8881b8:	00000706 	br	8881d8 <__smakebuf_r+0xbc>
  8881bc:	8080030b 	ldhu	r2,12(r16)
  8881c0:	10c0200c 	andi	r3,r2,128
  8881c4:	18001f1e 	bne	r3,zero,888244 <__smakebuf_r+0x128>
  8881c8:	04810004 	movi	r18,1024
  8881cc:	10820014 	ori	r2,r2,2048
  8881d0:	8080030d 	sth	r2,12(r16)
  8881d4:	0027883a 	mov	r19,zero
  8881d8:	900b883a 	mov	r5,r18
  8881dc:	8809883a 	mov	r4,r17
  8881e0:	08829a40 	call	8829a4 <_malloc_r>
  8881e4:	10002c26 	beq	r2,zero,888298 <__smakebuf_r+0x17c>
  8881e8:	80c0030b 	ldhu	r3,12(r16)
  8881ec:	01002234 	movhi	r4,136
  8881f0:	211dbb04 	addi	r4,r4,30444
  8881f4:	89000f15 	stw	r4,60(r17)
  8881f8:	18c02014 	ori	r3,r3,128
  8881fc:	80c0030d 	sth	r3,12(r16)
  888200:	80800015 	stw	r2,0(r16)
  888204:	80800415 	stw	r2,16(r16)
  888208:	84800515 	stw	r18,20(r16)
  88820c:	98001a1e 	bne	r19,zero,888278 <__smakebuf_r+0x15c>
  888210:	dfc01317 	ldw	ra,76(sp)
  888214:	dcc01217 	ldw	r19,72(sp)
  888218:	dc801117 	ldw	r18,68(sp)
  88821c:	dc401017 	ldw	r17,64(sp)
  888220:	dc000f17 	ldw	r16,60(sp)
  888224:	dec01404 	addi	sp,sp,80
  888228:	f800283a 	ret
  88822c:	288010c4 	addi	r2,r5,67
  888230:	28800015 	stw	r2,0(r5)
  888234:	28800415 	stw	r2,16(r5)
  888238:	00800044 	movi	r2,1
  88823c:	28800515 	stw	r2,20(r5)
  888240:	f800283a 	ret
  888244:	04801004 	movi	r18,64
  888248:	003fe006 	br	8881cc <__smakebuf_r+0xb0>
  88824c:	81000a17 	ldw	r4,40(r16)
  888250:	00c02274 	movhi	r3,137
  888254:	18e59304 	addi	r3,r3,-27060
  888258:	20ffc51e 	bne	r4,r3,888170 <__smakebuf_r+0x54>
  88825c:	8080030b 	ldhu	r2,12(r16)
  888260:	04810004 	movi	r18,1024
  888264:	84801315 	stw	r18,76(r16)
  888268:	1484b03a 	or	r2,r2,r18
  88826c:	8080030d 	sth	r2,12(r16)
  888270:	0027883a 	mov	r19,zero
  888274:	003fd806 	br	8881d8 <__smakebuf_r+0xbc>
  888278:	8140038f 	ldh	r5,14(r16)
  88827c:	8809883a 	mov	r4,r17
  888280:	088b72c0 	call	88b72c <_isatty_r>
  888284:	103fe226 	beq	r2,zero,888210 <__smakebuf_r+0xf4>
  888288:	8080030b 	ldhu	r2,12(r16)
  88828c:	10800054 	ori	r2,r2,1
  888290:	8080030d 	sth	r2,12(r16)
  888294:	003fde06 	br	888210 <__smakebuf_r+0xf4>
  888298:	8080030b 	ldhu	r2,12(r16)
  88829c:	10c0800c 	andi	r3,r2,512
  8882a0:	183fdb1e 	bne	r3,zero,888210 <__smakebuf_r+0xf4>
  8882a4:	10800094 	ori	r2,r2,2
  8882a8:	80c010c4 	addi	r3,r16,67
  8882ac:	8080030d 	sth	r2,12(r16)
  8882b0:	00800044 	movi	r2,1
  8882b4:	80c00015 	stw	r3,0(r16)
  8882b8:	80c00415 	stw	r3,16(r16)
  8882bc:	80800515 	stw	r2,20(r16)
  8882c0:	003fd306 	br	888210 <__smakebuf_r+0xf4>
  8882c4:	04810004 	movi	r18,1024
  8882c8:	003fc306 	br	8881d8 <__smakebuf_r+0xbc>
  8882cc:	0027883a 	mov	r19,zero
  8882d0:	04810004 	movi	r18,1024
  8882d4:	003fc006 	br	8881d8 <__smakebuf_r+0xbc>

008882d8 <memchr>:
  8882d8:	208000cc 	andi	r2,r4,3
  8882dc:	280f883a 	mov	r7,r5
  8882e0:	10003426 	beq	r2,zero,8883b4 <memchr+0xdc>
  8882e4:	30bfffc4 	addi	r2,r6,-1
  8882e8:	30001a26 	beq	r6,zero,888354 <memchr+0x7c>
  8882ec:	20c00003 	ldbu	r3,0(r4)
  8882f0:	29803fcc 	andi	r6,r5,255
  8882f4:	30c0051e 	bne	r6,r3,88830c <memchr+0x34>
  8882f8:	00001806 	br	88835c <memchr+0x84>
  8882fc:	10001526 	beq	r2,zero,888354 <memchr+0x7c>
  888300:	20c00003 	ldbu	r3,0(r4)
  888304:	10bfffc4 	addi	r2,r2,-1
  888308:	30c01426 	beq	r6,r3,88835c <memchr+0x84>
  88830c:	21000044 	addi	r4,r4,1
  888310:	20c000cc 	andi	r3,r4,3
  888314:	183ff91e 	bne	r3,zero,8882fc <memchr+0x24>
  888318:	020000c4 	movi	r8,3
  88831c:	40801136 	bltu	r8,r2,888364 <memchr+0x8c>
  888320:	10000c26 	beq	r2,zero,888354 <memchr+0x7c>
  888324:	20c00003 	ldbu	r3,0(r4)
  888328:	29403fcc 	andi	r5,r5,255
  88832c:	28c00b26 	beq	r5,r3,88835c <memchr+0x84>
  888330:	20c00044 	addi	r3,r4,1
  888334:	39803fcc 	andi	r6,r7,255
  888338:	2089883a 	add	r4,r4,r2
  88833c:	00000306 	br	88834c <memchr+0x74>
  888340:	18c00044 	addi	r3,r3,1
  888344:	197fffc3 	ldbu	r5,-1(r3)
  888348:	31400526 	beq	r6,r5,888360 <memchr+0x88>
  88834c:	1805883a 	mov	r2,r3
  888350:	20fffb1e 	bne	r4,r3,888340 <memchr+0x68>
  888354:	0005883a 	mov	r2,zero
  888358:	f800283a 	ret
  88835c:	2005883a 	mov	r2,r4
  888360:	f800283a 	ret
  888364:	28c03fcc 	andi	r3,r5,255
  888368:	1812923a 	slli	r9,r3,8
  88836c:	02ffbff4 	movhi	r11,65279
  888370:	02a02074 	movhi	r10,32897
  888374:	48d2b03a 	or	r9,r9,r3
  888378:	4806943a 	slli	r3,r9,16
  88837c:	5affbfc4 	addi	r11,r11,-257
  888380:	52a02004 	addi	r10,r10,-32640
  888384:	48d2b03a 	or	r9,r9,r3
  888388:	20c00017 	ldw	r3,0(r4)
  88838c:	48c6f03a 	xor	r3,r9,r3
  888390:	1acd883a 	add	r6,r3,r11
  888394:	00c6303a 	nor	r3,zero,r3
  888398:	30c6703a 	and	r3,r6,r3
  88839c:	1a86703a 	and	r3,r3,r10
  8883a0:	183fe01e 	bne	r3,zero,888324 <memchr+0x4c>
  8883a4:	10bfff04 	addi	r2,r2,-4
  8883a8:	21000104 	addi	r4,r4,4
  8883ac:	40bff636 	bltu	r8,r2,888388 <memchr+0xb0>
  8883b0:	003fdb06 	br	888320 <memchr+0x48>
  8883b4:	3005883a 	mov	r2,r6
  8883b8:	003fd706 	br	888318 <memchr+0x40>

008883bc <memcpy>:
  8883bc:	defffd04 	addi	sp,sp,-12
  8883c0:	dfc00215 	stw	ra,8(sp)
  8883c4:	dc400115 	stw	r17,4(sp)
  8883c8:	dc000015 	stw	r16,0(sp)
  8883cc:	00c003c4 	movi	r3,15
  8883d0:	2005883a 	mov	r2,r4
  8883d4:	1980452e 	bgeu	r3,r6,8884ec <memcpy+0x130>
  8883d8:	2906b03a 	or	r3,r5,r4
  8883dc:	18c000cc 	andi	r3,r3,3
  8883e0:	1800441e 	bne	r3,zero,8884f4 <memcpy+0x138>
  8883e4:	347ffc04 	addi	r17,r6,-16
  8883e8:	8822d13a 	srli	r17,r17,4
  8883ec:	28c00104 	addi	r3,r5,4
  8883f0:	23400104 	addi	r13,r4,4
  8883f4:	8820913a 	slli	r16,r17,4
  8883f8:	2b000204 	addi	r12,r5,8
  8883fc:	22c00204 	addi	r11,r4,8
  888400:	84000504 	addi	r16,r16,20
  888404:	2a800304 	addi	r10,r5,12
  888408:	22400304 	addi	r9,r4,12
  88840c:	2c21883a 	add	r16,r5,r16
  888410:	2811883a 	mov	r8,r5
  888414:	200f883a 	mov	r7,r4
  888418:	41000017 	ldw	r4,0(r8)
  88841c:	1fc00017 	ldw	ra,0(r3)
  888420:	63c00017 	ldw	r15,0(r12)
  888424:	39000015 	stw	r4,0(r7)
  888428:	53800017 	ldw	r14,0(r10)
  88842c:	6fc00015 	stw	ra,0(r13)
  888430:	5bc00015 	stw	r15,0(r11)
  888434:	4b800015 	stw	r14,0(r9)
  888438:	18c00404 	addi	r3,r3,16
  88843c:	39c00404 	addi	r7,r7,16
  888440:	42000404 	addi	r8,r8,16
  888444:	6b400404 	addi	r13,r13,16
  888448:	63000404 	addi	r12,r12,16
  88844c:	5ac00404 	addi	r11,r11,16
  888450:	52800404 	addi	r10,r10,16
  888454:	4a400404 	addi	r9,r9,16
  888458:	1c3fef1e 	bne	r3,r16,888418 <memcpy+0x5c>
  88845c:	89c00044 	addi	r7,r17,1
  888460:	380e913a 	slli	r7,r7,4
  888464:	310003cc 	andi	r4,r6,15
  888468:	02c000c4 	movi	r11,3
  88846c:	11c7883a 	add	r3,r2,r7
  888470:	29cb883a 	add	r5,r5,r7
  888474:	5900212e 	bgeu	r11,r4,8884fc <memcpy+0x140>
  888478:	1813883a 	mov	r9,r3
  88847c:	2811883a 	mov	r8,r5
  888480:	200f883a 	mov	r7,r4
  888484:	42800017 	ldw	r10,0(r8)
  888488:	4a400104 	addi	r9,r9,4
  88848c:	39ffff04 	addi	r7,r7,-4
  888490:	4abfff15 	stw	r10,-4(r9)
  888494:	42000104 	addi	r8,r8,4
  888498:	59fffa36 	bltu	r11,r7,888484 <memcpy+0xc8>
  88849c:	213fff04 	addi	r4,r4,-4
  8884a0:	2008d0ba 	srli	r4,r4,2
  8884a4:	318000cc 	andi	r6,r6,3
  8884a8:	21000044 	addi	r4,r4,1
  8884ac:	2109883a 	add	r4,r4,r4
  8884b0:	2109883a 	add	r4,r4,r4
  8884b4:	1907883a 	add	r3,r3,r4
  8884b8:	290b883a 	add	r5,r5,r4
  8884bc:	30000626 	beq	r6,zero,8884d8 <memcpy+0x11c>
  8884c0:	198d883a 	add	r6,r3,r6
  8884c4:	29c00003 	ldbu	r7,0(r5)
  8884c8:	18c00044 	addi	r3,r3,1
  8884cc:	29400044 	addi	r5,r5,1
  8884d0:	19ffffc5 	stb	r7,-1(r3)
  8884d4:	19bffb1e 	bne	r3,r6,8884c4 <memcpy+0x108>
  8884d8:	dfc00217 	ldw	ra,8(sp)
  8884dc:	dc400117 	ldw	r17,4(sp)
  8884e0:	dc000017 	ldw	r16,0(sp)
  8884e4:	dec00304 	addi	sp,sp,12
  8884e8:	f800283a 	ret
  8884ec:	2007883a 	mov	r3,r4
  8884f0:	003ff206 	br	8884bc <memcpy+0x100>
  8884f4:	2007883a 	mov	r3,r4
  8884f8:	003ff106 	br	8884c0 <memcpy+0x104>
  8884fc:	200d883a 	mov	r6,r4
  888500:	003fee06 	br	8884bc <memcpy+0x100>

00888504 <_Balloc>:
  888504:	20801317 	ldw	r2,76(r4)
  888508:	defffc04 	addi	sp,sp,-16
  88850c:	dc400115 	stw	r17,4(sp)
  888510:	dc000015 	stw	r16,0(sp)
  888514:	dfc00315 	stw	ra,12(sp)
  888518:	dc800215 	stw	r18,8(sp)
  88851c:	2023883a 	mov	r17,r4
  888520:	2821883a 	mov	r16,r5
  888524:	10000f26 	beq	r2,zero,888564 <_Balloc+0x60>
  888528:	8407883a 	add	r3,r16,r16
  88852c:	18c7883a 	add	r3,r3,r3
  888530:	10c7883a 	add	r3,r2,r3
  888534:	18800017 	ldw	r2,0(r3)
  888538:	10001126 	beq	r2,zero,888580 <_Balloc+0x7c>
  88853c:	11000017 	ldw	r4,0(r2)
  888540:	19000015 	stw	r4,0(r3)
  888544:	10000415 	stw	zero,16(r2)
  888548:	10000315 	stw	zero,12(r2)
  88854c:	dfc00317 	ldw	ra,12(sp)
  888550:	dc800217 	ldw	r18,8(sp)
  888554:	dc400117 	ldw	r17,4(sp)
  888558:	dc000017 	ldw	r16,0(sp)
  88855c:	dec00404 	addi	sp,sp,16
  888560:	f800283a 	ret
  888564:	01800844 	movi	r6,33
  888568:	01400104 	movi	r5,4
  88856c:	088ae440 	call	88ae44 <_calloc_r>
  888570:	88801315 	stw	r2,76(r17)
  888574:	103fec1e 	bne	r2,zero,888528 <_Balloc+0x24>
  888578:	0005883a 	mov	r2,zero
  88857c:	003ff306 	br	88854c <_Balloc+0x48>
  888580:	01400044 	movi	r5,1
  888584:	2c24983a 	sll	r18,r5,r16
  888588:	8809883a 	mov	r4,r17
  88858c:	91800144 	addi	r6,r18,5
  888590:	318d883a 	add	r6,r6,r6
  888594:	318d883a 	add	r6,r6,r6
  888598:	088ae440 	call	88ae44 <_calloc_r>
  88859c:	103ff626 	beq	r2,zero,888578 <_Balloc+0x74>
  8885a0:	14000115 	stw	r16,4(r2)
  8885a4:	14800215 	stw	r18,8(r2)
  8885a8:	003fe606 	br	888544 <_Balloc+0x40>

008885ac <_Bfree>:
  8885ac:	28000826 	beq	r5,zero,8885d0 <_Bfree+0x24>
  8885b0:	28c00117 	ldw	r3,4(r5)
  8885b4:	20801317 	ldw	r2,76(r4)
  8885b8:	18c7883a 	add	r3,r3,r3
  8885bc:	18c7883a 	add	r3,r3,r3
  8885c0:	10c5883a 	add	r2,r2,r3
  8885c4:	10c00017 	ldw	r3,0(r2)
  8885c8:	28c00015 	stw	r3,0(r5)
  8885cc:	11400015 	stw	r5,0(r2)
  8885d0:	f800283a 	ret

008885d4 <__multadd>:
  8885d4:	defffa04 	addi	sp,sp,-24
  8885d8:	dc800315 	stw	r18,12(sp)
  8885dc:	dc400215 	stw	r17,8(sp)
  8885e0:	dc000115 	stw	r16,4(sp)
  8885e4:	2823883a 	mov	r17,r5
  8885e8:	2c000417 	ldw	r16,16(r5)
  8885ec:	dfc00515 	stw	ra,20(sp)
  8885f0:	dcc00415 	stw	r19,16(sp)
  8885f4:	2025883a 	mov	r18,r4
  8885f8:	29400504 	addi	r5,r5,20
  8885fc:	0011883a 	mov	r8,zero
  888600:	28c00017 	ldw	r3,0(r5)
  888604:	29400104 	addi	r5,r5,4
  888608:	42000044 	addi	r8,r8,1
  88860c:	18bfffcc 	andi	r2,r3,65535
  888610:	1185383a 	mul	r2,r2,r6
  888614:	1806d43a 	srli	r3,r3,16
  888618:	11cf883a 	add	r7,r2,r7
  88861c:	3808d43a 	srli	r4,r7,16
  888620:	1987383a 	mul	r3,r3,r6
  888624:	38bfffcc 	andi	r2,r7,65535
  888628:	1907883a 	add	r3,r3,r4
  88862c:	1808943a 	slli	r4,r3,16
  888630:	180ed43a 	srli	r7,r3,16
  888634:	2085883a 	add	r2,r4,r2
  888638:	28bfff15 	stw	r2,-4(r5)
  88863c:	443ff016 	blt	r8,r16,888600 <__multadd+0x2c>
  888640:	38000926 	beq	r7,zero,888668 <__multadd+0x94>
  888644:	88800217 	ldw	r2,8(r17)
  888648:	80800f0e 	bge	r16,r2,888688 <__multadd+0xb4>
  88864c:	80800144 	addi	r2,r16,5
  888650:	1085883a 	add	r2,r2,r2
  888654:	1085883a 	add	r2,r2,r2
  888658:	8885883a 	add	r2,r17,r2
  88865c:	11c00015 	stw	r7,0(r2)
  888660:	84000044 	addi	r16,r16,1
  888664:	8c000415 	stw	r16,16(r17)
  888668:	8805883a 	mov	r2,r17
  88866c:	dfc00517 	ldw	ra,20(sp)
  888670:	dcc00417 	ldw	r19,16(sp)
  888674:	dc800317 	ldw	r18,12(sp)
  888678:	dc400217 	ldw	r17,8(sp)
  88867c:	dc000117 	ldw	r16,4(sp)
  888680:	dec00604 	addi	sp,sp,24
  888684:	f800283a 	ret
  888688:	89400117 	ldw	r5,4(r17)
  88868c:	9009883a 	mov	r4,r18
  888690:	d9c00015 	stw	r7,0(sp)
  888694:	29400044 	addi	r5,r5,1
  888698:	08885040 	call	888504 <_Balloc>
  88869c:	89800417 	ldw	r6,16(r17)
  8886a0:	89400304 	addi	r5,r17,12
  8886a4:	11000304 	addi	r4,r2,12
  8886a8:	31800084 	addi	r6,r6,2
  8886ac:	318d883a 	add	r6,r6,r6
  8886b0:	318d883a 	add	r6,r6,r6
  8886b4:	1027883a 	mov	r19,r2
  8886b8:	08883bc0 	call	8883bc <memcpy>
  8886bc:	d9c00017 	ldw	r7,0(sp)
  8886c0:	88000a26 	beq	r17,zero,8886ec <__multadd+0x118>
  8886c4:	88c00117 	ldw	r3,4(r17)
  8886c8:	90801317 	ldw	r2,76(r18)
  8886cc:	18c7883a 	add	r3,r3,r3
  8886d0:	18c7883a 	add	r3,r3,r3
  8886d4:	10c5883a 	add	r2,r2,r3
  8886d8:	10c00017 	ldw	r3,0(r2)
  8886dc:	88c00015 	stw	r3,0(r17)
  8886e0:	14400015 	stw	r17,0(r2)
  8886e4:	9823883a 	mov	r17,r19
  8886e8:	003fd806 	br	88864c <__multadd+0x78>
  8886ec:	9823883a 	mov	r17,r19
  8886f0:	003fd606 	br	88864c <__multadd+0x78>

008886f4 <__s2b>:
  8886f4:	defff904 	addi	sp,sp,-28
  8886f8:	dc400115 	stw	r17,4(sp)
  8886fc:	dc000015 	stw	r16,0(sp)
  888700:	2023883a 	mov	r17,r4
  888704:	2821883a 	mov	r16,r5
  888708:	39000204 	addi	r4,r7,8
  88870c:	01400244 	movi	r5,9
  888710:	dcc00315 	stw	r19,12(sp)
  888714:	dc800215 	stw	r18,8(sp)
  888718:	dfc00615 	stw	ra,24(sp)
  88871c:	dd400515 	stw	r21,20(sp)
  888720:	dd000415 	stw	r20,16(sp)
  888724:	3825883a 	mov	r18,r7
  888728:	3027883a 	mov	r19,r6
  88872c:	088ccf00 	call	88ccf0 <__divsi3>
  888730:	00c00044 	movi	r3,1
  888734:	000b883a 	mov	r5,zero
  888738:	1880030e 	bge	r3,r2,888748 <__s2b+0x54>
  88873c:	18c7883a 	add	r3,r3,r3
  888740:	29400044 	addi	r5,r5,1
  888744:	18bffd16 	blt	r3,r2,88873c <__s2b+0x48>
  888748:	8809883a 	mov	r4,r17
  88874c:	08885040 	call	888504 <_Balloc>
  888750:	d8c00717 	ldw	r3,28(sp)
  888754:	10c00515 	stw	r3,20(r2)
  888758:	00c00044 	movi	r3,1
  88875c:	10c00415 	stw	r3,16(r2)
  888760:	00c00244 	movi	r3,9
  888764:	1cc0210e 	bge	r3,r19,8887ec <__s2b+0xf8>
  888768:	80eb883a 	add	r21,r16,r3
  88876c:	a829883a 	mov	r20,r21
  888770:	84e1883a 	add	r16,r16,r19
  888774:	a1c00007 	ldb	r7,0(r20)
  888778:	01800284 	movi	r6,10
  88877c:	a5000044 	addi	r20,r20,1
  888780:	100b883a 	mov	r5,r2
  888784:	39fff404 	addi	r7,r7,-48
  888788:	8809883a 	mov	r4,r17
  88878c:	08885d40 	call	8885d4 <__multadd>
  888790:	a43ff81e 	bne	r20,r16,888774 <__s2b+0x80>
  888794:	ace1883a 	add	r16,r21,r19
  888798:	843ffe04 	addi	r16,r16,-8
  88879c:	9c800a0e 	bge	r19,r18,8887c8 <__s2b+0xd4>
  8887a0:	94e5c83a 	sub	r18,r18,r19
  8887a4:	84a5883a 	add	r18,r16,r18
  8887a8:	81c00007 	ldb	r7,0(r16)
  8887ac:	01800284 	movi	r6,10
  8887b0:	84000044 	addi	r16,r16,1
  8887b4:	100b883a 	mov	r5,r2
  8887b8:	39fff404 	addi	r7,r7,-48
  8887bc:	8809883a 	mov	r4,r17
  8887c0:	08885d40 	call	8885d4 <__multadd>
  8887c4:	84bff81e 	bne	r16,r18,8887a8 <__s2b+0xb4>
  8887c8:	dfc00617 	ldw	ra,24(sp)
  8887cc:	dd400517 	ldw	r21,20(sp)
  8887d0:	dd000417 	ldw	r20,16(sp)
  8887d4:	dcc00317 	ldw	r19,12(sp)
  8887d8:	dc800217 	ldw	r18,8(sp)
  8887dc:	dc400117 	ldw	r17,4(sp)
  8887e0:	dc000017 	ldw	r16,0(sp)
  8887e4:	dec00704 	addi	sp,sp,28
  8887e8:	f800283a 	ret
  8887ec:	84000284 	addi	r16,r16,10
  8887f0:	1827883a 	mov	r19,r3
  8887f4:	003fe906 	br	88879c <__s2b+0xa8>

008887f8 <__hi0bits>:
  8887f8:	20bfffec 	andhi	r2,r4,65535
  8887fc:	1000141e 	bne	r2,zero,888850 <__hi0bits+0x58>
  888800:	2008943a 	slli	r4,r4,16
  888804:	00800404 	movi	r2,16
  888808:	20ffc02c 	andhi	r3,r4,65280
  88880c:	1800021e 	bne	r3,zero,888818 <__hi0bits+0x20>
  888810:	2008923a 	slli	r4,r4,8
  888814:	10800204 	addi	r2,r2,8
  888818:	20fc002c 	andhi	r3,r4,61440
  88881c:	1800021e 	bne	r3,zero,888828 <__hi0bits+0x30>
  888820:	2008913a 	slli	r4,r4,4
  888824:	10800104 	addi	r2,r2,4
  888828:	20f0002c 	andhi	r3,r4,49152
  88882c:	1800031e 	bne	r3,zero,88883c <__hi0bits+0x44>
  888830:	2109883a 	add	r4,r4,r4
  888834:	10800084 	addi	r2,r2,2
  888838:	2109883a 	add	r4,r4,r4
  88883c:	20000316 	blt	r4,zero,88884c <__hi0bits+0x54>
  888840:	2110002c 	andhi	r4,r4,16384
  888844:	2000041e 	bne	r4,zero,888858 <__hi0bits+0x60>
  888848:	00800804 	movi	r2,32
  88884c:	f800283a 	ret
  888850:	0005883a 	mov	r2,zero
  888854:	003fec06 	br	888808 <__hi0bits+0x10>
  888858:	10800044 	addi	r2,r2,1
  88885c:	f800283a 	ret

00888860 <__lo0bits>:
  888860:	20c00017 	ldw	r3,0(r4)
  888864:	188001cc 	andi	r2,r3,7
  888868:	10000826 	beq	r2,zero,88888c <__lo0bits+0x2c>
  88886c:	1880004c 	andi	r2,r3,1
  888870:	1000211e 	bne	r2,zero,8888f8 <__lo0bits+0x98>
  888874:	1880008c 	andi	r2,r3,2
  888878:	1000211e 	bne	r2,zero,888900 <__lo0bits+0xa0>
  88887c:	1806d0ba 	srli	r3,r3,2
  888880:	00800084 	movi	r2,2
  888884:	20c00015 	stw	r3,0(r4)
  888888:	f800283a 	ret
  88888c:	18bfffcc 	andi	r2,r3,65535
  888890:	10001326 	beq	r2,zero,8888e0 <__lo0bits+0x80>
  888894:	0005883a 	mov	r2,zero
  888898:	19403fcc 	andi	r5,r3,255
  88889c:	2800021e 	bne	r5,zero,8888a8 <__lo0bits+0x48>
  8888a0:	1806d23a 	srli	r3,r3,8
  8888a4:	10800204 	addi	r2,r2,8
  8888a8:	194003cc 	andi	r5,r3,15
  8888ac:	2800021e 	bne	r5,zero,8888b8 <__lo0bits+0x58>
  8888b0:	1806d13a 	srli	r3,r3,4
  8888b4:	10800104 	addi	r2,r2,4
  8888b8:	194000cc 	andi	r5,r3,3
  8888bc:	2800021e 	bne	r5,zero,8888c8 <__lo0bits+0x68>
  8888c0:	1806d0ba 	srli	r3,r3,2
  8888c4:	10800084 	addi	r2,r2,2
  8888c8:	1940004c 	andi	r5,r3,1
  8888cc:	2800081e 	bne	r5,zero,8888f0 <__lo0bits+0x90>
  8888d0:	1806d07a 	srli	r3,r3,1
  8888d4:	1800051e 	bne	r3,zero,8888ec <__lo0bits+0x8c>
  8888d8:	00800804 	movi	r2,32
  8888dc:	f800283a 	ret
  8888e0:	1806d43a 	srli	r3,r3,16
  8888e4:	00800404 	movi	r2,16
  8888e8:	003feb06 	br	888898 <__lo0bits+0x38>
  8888ec:	10800044 	addi	r2,r2,1
  8888f0:	20c00015 	stw	r3,0(r4)
  8888f4:	f800283a 	ret
  8888f8:	0005883a 	mov	r2,zero
  8888fc:	f800283a 	ret
  888900:	1806d07a 	srli	r3,r3,1
  888904:	00800044 	movi	r2,1
  888908:	20c00015 	stw	r3,0(r4)
  88890c:	f800283a 	ret

00888910 <__i2b>:
  888910:	defffd04 	addi	sp,sp,-12
  888914:	dc000015 	stw	r16,0(sp)
  888918:	04000044 	movi	r16,1
  88891c:	dc400115 	stw	r17,4(sp)
  888920:	2823883a 	mov	r17,r5
  888924:	800b883a 	mov	r5,r16
  888928:	dfc00215 	stw	ra,8(sp)
  88892c:	08885040 	call	888504 <_Balloc>
  888930:	14400515 	stw	r17,20(r2)
  888934:	14000415 	stw	r16,16(r2)
  888938:	dfc00217 	ldw	ra,8(sp)
  88893c:	dc400117 	ldw	r17,4(sp)
  888940:	dc000017 	ldw	r16,0(sp)
  888944:	dec00304 	addi	sp,sp,12
  888948:	f800283a 	ret

0088894c <__multiply>:
  88894c:	defffa04 	addi	sp,sp,-24
  888950:	dcc00315 	stw	r19,12(sp)
  888954:	dc800215 	stw	r18,8(sp)
  888958:	34c00417 	ldw	r19,16(r6)
  88895c:	2c800417 	ldw	r18,16(r5)
  888960:	dd000415 	stw	r20,16(sp)
  888964:	dc400115 	stw	r17,4(sp)
  888968:	dfc00515 	stw	ra,20(sp)
  88896c:	dc000015 	stw	r16,0(sp)
  888970:	2829883a 	mov	r20,r5
  888974:	3023883a 	mov	r17,r6
  888978:	94c0050e 	bge	r18,r19,888990 <__multiply+0x44>
  88897c:	9007883a 	mov	r3,r18
  888980:	3029883a 	mov	r20,r6
  888984:	9825883a 	mov	r18,r19
  888988:	2823883a 	mov	r17,r5
  88898c:	1827883a 	mov	r19,r3
  888990:	a0800217 	ldw	r2,8(r20)
  888994:	94e1883a 	add	r16,r18,r19
  888998:	a1400117 	ldw	r5,4(r20)
  88899c:	1400010e 	bge	r2,r16,8889a4 <__multiply+0x58>
  8889a0:	29400044 	addi	r5,r5,1
  8889a4:	08885040 	call	888504 <_Balloc>
  8889a8:	8415883a 	add	r10,r16,r16
  8889ac:	12c00504 	addi	r11,r2,20
  8889b0:	5295883a 	add	r10,r10,r10
  8889b4:	5a95883a 	add	r10,r11,r10
  8889b8:	5807883a 	mov	r3,r11
  8889bc:	5a80032e 	bgeu	r11,r10,8889cc <__multiply+0x80>
  8889c0:	18000015 	stw	zero,0(r3)
  8889c4:	18c00104 	addi	r3,r3,4
  8889c8:	1abffd36 	bltu	r3,r10,8889c0 <__multiply+0x74>
  8889cc:	9ce7883a 	add	r19,r19,r19
  8889d0:	94a5883a 	add	r18,r18,r18
  8889d4:	89800504 	addi	r6,r17,20
  8889d8:	9ce7883a 	add	r19,r19,r19
  8889dc:	a3400504 	addi	r13,r20,20
  8889e0:	94a5883a 	add	r18,r18,r18
  8889e4:	34d9883a 	add	r12,r6,r19
  8889e8:	6c93883a 	add	r9,r13,r18
  8889ec:	3300422e 	bgeu	r6,r12,888af8 <__multiply+0x1ac>
  8889f0:	37c00017 	ldw	ra,0(r6)
  8889f4:	fbffffcc 	andi	r15,ra,65535
  8889f8:	78001b26 	beq	r15,zero,888a68 <__multiply+0x11c>
  8889fc:	5811883a 	mov	r8,r11
  888a00:	681d883a 	mov	r14,r13
  888a04:	000f883a 	mov	r7,zero
  888a08:	71000017 	ldw	r4,0(r14)
  888a0c:	40c00017 	ldw	r3,0(r8)
  888a10:	73800104 	addi	r14,r14,4
  888a14:	217fffcc 	andi	r5,r4,65535
  888a18:	2bcb383a 	mul	r5,r5,r15
  888a1c:	2008d43a 	srli	r4,r4,16
  888a20:	1c7fffcc 	andi	r17,r3,65535
  888a24:	2c4b883a 	add	r5,r5,r17
  888a28:	29cb883a 	add	r5,r5,r7
  888a2c:	23c9383a 	mul	r4,r4,r15
  888a30:	1806d43a 	srli	r3,r3,16
  888a34:	280ed43a 	srli	r7,r5,16
  888a38:	297fffcc 	andi	r5,r5,65535
  888a3c:	20c7883a 	add	r3,r4,r3
  888a40:	19c7883a 	add	r3,r3,r7
  888a44:	1808943a 	slli	r4,r3,16
  888a48:	4023883a 	mov	r17,r8
  888a4c:	180ed43a 	srli	r7,r3,16
  888a50:	214ab03a 	or	r5,r4,r5
  888a54:	41400015 	stw	r5,0(r8)
  888a58:	42000104 	addi	r8,r8,4
  888a5c:	727fea36 	bltu	r14,r9,888a08 <__multiply+0xbc>
  888a60:	89c00115 	stw	r7,4(r17)
  888a64:	37c00017 	ldw	ra,0(r6)
  888a68:	f83ed43a 	srli	ra,ra,16
  888a6c:	f8001f26 	beq	ra,zero,888aec <__multiply+0x1a0>
  888a70:	58c00017 	ldw	r3,0(r11)
  888a74:	681d883a 	mov	r14,r13
  888a78:	581f883a 	mov	r15,r11
  888a7c:	1811883a 	mov	r8,r3
  888a80:	5825883a 	mov	r18,r11
  888a84:	000f883a 	mov	r7,zero
  888a88:	00000106 	br	888a90 <__multiply+0x144>
  888a8c:	8825883a 	mov	r18,r17
  888a90:	7140000b 	ldhu	r5,0(r14)
  888a94:	4010d43a 	srli	r8,r8,16
  888a98:	193fffcc 	andi	r4,r3,65535
  888a9c:	2fcb383a 	mul	r5,r5,ra
  888aa0:	7bc00104 	addi	r15,r15,4
  888aa4:	73800104 	addi	r14,r14,4
  888aa8:	2a0b883a 	add	r5,r5,r8
  888aac:	29cb883a 	add	r5,r5,r7
  888ab0:	2806943a 	slli	r3,r5,16
  888ab4:	94400104 	addi	r17,r18,4
  888ab8:	280ad43a 	srli	r5,r5,16
  888abc:	1908b03a 	or	r4,r3,r4
  888ac0:	793fff15 	stw	r4,-4(r15)
  888ac4:	70ffff17 	ldw	r3,-4(r14)
  888ac8:	8a000017 	ldw	r8,0(r17)
  888acc:	1806d43a 	srli	r3,r3,16
  888ad0:	413fffcc 	andi	r4,r8,65535
  888ad4:	1fc7383a 	mul	r3,r3,ra
  888ad8:	1907883a 	add	r3,r3,r4
  888adc:	1947883a 	add	r3,r3,r5
  888ae0:	180ed43a 	srli	r7,r3,16
  888ae4:	727fe936 	bltu	r14,r9,888a8c <__multiply+0x140>
  888ae8:	90c00115 	stw	r3,4(r18)
  888aec:	31800104 	addi	r6,r6,4
  888af0:	5ac00104 	addi	r11,r11,4
  888af4:	333fbe36 	bltu	r6,r12,8889f0 <__multiply+0xa4>
  888af8:	0400090e 	bge	zero,r16,888b20 <__multiply+0x1d4>
  888afc:	50ffff17 	ldw	r3,-4(r10)
  888b00:	52bfff04 	addi	r10,r10,-4
  888b04:	18000326 	beq	r3,zero,888b14 <__multiply+0x1c8>
  888b08:	00000506 	br	888b20 <__multiply+0x1d4>
  888b0c:	50c00017 	ldw	r3,0(r10)
  888b10:	1800031e 	bne	r3,zero,888b20 <__multiply+0x1d4>
  888b14:	843fffc4 	addi	r16,r16,-1
  888b18:	52bfff04 	addi	r10,r10,-4
  888b1c:	803ffb1e 	bne	r16,zero,888b0c <__multiply+0x1c0>
  888b20:	14000415 	stw	r16,16(r2)
  888b24:	dfc00517 	ldw	ra,20(sp)
  888b28:	dd000417 	ldw	r20,16(sp)
  888b2c:	dcc00317 	ldw	r19,12(sp)
  888b30:	dc800217 	ldw	r18,8(sp)
  888b34:	dc400117 	ldw	r17,4(sp)
  888b38:	dc000017 	ldw	r16,0(sp)
  888b3c:	dec00604 	addi	sp,sp,24
  888b40:	f800283a 	ret

00888b44 <__pow5mult>:
  888b44:	defffa04 	addi	sp,sp,-24
  888b48:	dcc00315 	stw	r19,12(sp)
  888b4c:	dc000015 	stw	r16,0(sp)
  888b50:	dfc00515 	stw	ra,20(sp)
  888b54:	dd000415 	stw	r20,16(sp)
  888b58:	dc800215 	stw	r18,8(sp)
  888b5c:	dc400115 	stw	r17,4(sp)
  888b60:	308000cc 	andi	r2,r6,3
  888b64:	3021883a 	mov	r16,r6
  888b68:	2027883a 	mov	r19,r4
  888b6c:	10002f1e 	bne	r2,zero,888c2c <__pow5mult+0xe8>
  888b70:	2825883a 	mov	r18,r5
  888b74:	8021d0ba 	srai	r16,r16,2
  888b78:	80001a26 	beq	r16,zero,888be4 <__pow5mult+0xa0>
  888b7c:	9c401217 	ldw	r17,72(r19)
  888b80:	8800061e 	bne	r17,zero,888b9c <__pow5mult+0x58>
  888b84:	00003406 	br	888c58 <__pow5mult+0x114>
  888b88:	8021d07a 	srai	r16,r16,1
  888b8c:	80001526 	beq	r16,zero,888be4 <__pow5mult+0xa0>
  888b90:	88800017 	ldw	r2,0(r17)
  888b94:	10001c26 	beq	r2,zero,888c08 <__pow5mult+0xc4>
  888b98:	1023883a 	mov	r17,r2
  888b9c:	8080004c 	andi	r2,r16,1
  888ba0:	103ff926 	beq	r2,zero,888b88 <__pow5mult+0x44>
  888ba4:	880d883a 	mov	r6,r17
  888ba8:	900b883a 	mov	r5,r18
  888bac:	9809883a 	mov	r4,r19
  888bb0:	088894c0 	call	88894c <__multiply>
  888bb4:	90001b26 	beq	r18,zero,888c24 <__pow5mult+0xe0>
  888bb8:	91000117 	ldw	r4,4(r18)
  888bbc:	98c01317 	ldw	r3,76(r19)
  888bc0:	8021d07a 	srai	r16,r16,1
  888bc4:	2109883a 	add	r4,r4,r4
  888bc8:	2109883a 	add	r4,r4,r4
  888bcc:	1907883a 	add	r3,r3,r4
  888bd0:	19000017 	ldw	r4,0(r3)
  888bd4:	91000015 	stw	r4,0(r18)
  888bd8:	1c800015 	stw	r18,0(r3)
  888bdc:	1025883a 	mov	r18,r2
  888be0:	803feb1e 	bne	r16,zero,888b90 <__pow5mult+0x4c>
  888be4:	9005883a 	mov	r2,r18
  888be8:	dfc00517 	ldw	ra,20(sp)
  888bec:	dd000417 	ldw	r20,16(sp)
  888bf0:	dcc00317 	ldw	r19,12(sp)
  888bf4:	dc800217 	ldw	r18,8(sp)
  888bf8:	dc400117 	ldw	r17,4(sp)
  888bfc:	dc000017 	ldw	r16,0(sp)
  888c00:	dec00604 	addi	sp,sp,24
  888c04:	f800283a 	ret
  888c08:	880d883a 	mov	r6,r17
  888c0c:	880b883a 	mov	r5,r17
  888c10:	9809883a 	mov	r4,r19
  888c14:	088894c0 	call	88894c <__multiply>
  888c18:	88800015 	stw	r2,0(r17)
  888c1c:	10000015 	stw	zero,0(r2)
  888c20:	003fdd06 	br	888b98 <__pow5mult+0x54>
  888c24:	1025883a 	mov	r18,r2
  888c28:	003fd706 	br	888b88 <__pow5mult+0x44>
  888c2c:	10bfffc4 	addi	r2,r2,-1
  888c30:	1085883a 	add	r2,r2,r2
  888c34:	00c02274 	movhi	r3,137
  888c38:	18c95704 	addi	r3,r3,9564
  888c3c:	1085883a 	add	r2,r2,r2
  888c40:	1885883a 	add	r2,r3,r2
  888c44:	11800017 	ldw	r6,0(r2)
  888c48:	000f883a 	mov	r7,zero
  888c4c:	08885d40 	call	8885d4 <__multadd>
  888c50:	1025883a 	mov	r18,r2
  888c54:	003fc706 	br	888b74 <__pow5mult+0x30>
  888c58:	05000044 	movi	r20,1
  888c5c:	a00b883a 	mov	r5,r20
  888c60:	9809883a 	mov	r4,r19
  888c64:	08885040 	call	888504 <_Balloc>
  888c68:	1023883a 	mov	r17,r2
  888c6c:	00809c44 	movi	r2,625
  888c70:	88800515 	stw	r2,20(r17)
  888c74:	8d000415 	stw	r20,16(r17)
  888c78:	9c401215 	stw	r17,72(r19)
  888c7c:	88000015 	stw	zero,0(r17)
  888c80:	003fc606 	br	888b9c <__pow5mult+0x58>

00888c84 <__lshift>:
  888c84:	defff904 	addi	sp,sp,-28
  888c88:	dd400515 	stw	r21,20(sp)
  888c8c:	dcc00315 	stw	r19,12(sp)
  888c90:	302bd17a 	srai	r21,r6,5
  888c94:	2cc00417 	ldw	r19,16(r5)
  888c98:	28800217 	ldw	r2,8(r5)
  888c9c:	dd000415 	stw	r20,16(sp)
  888ca0:	ace7883a 	add	r19,r21,r19
  888ca4:	dc800215 	stw	r18,8(sp)
  888ca8:	dc400115 	stw	r17,4(sp)
  888cac:	dc000015 	stw	r16,0(sp)
  888cb0:	dfc00615 	stw	ra,24(sp)
  888cb4:	9c000044 	addi	r16,r19,1
  888cb8:	2823883a 	mov	r17,r5
  888cbc:	3029883a 	mov	r20,r6
  888cc0:	2025883a 	mov	r18,r4
  888cc4:	29400117 	ldw	r5,4(r5)
  888cc8:	1400030e 	bge	r2,r16,888cd8 <__lshift+0x54>
  888ccc:	1085883a 	add	r2,r2,r2
  888cd0:	29400044 	addi	r5,r5,1
  888cd4:	143ffd16 	blt	r2,r16,888ccc <__lshift+0x48>
  888cd8:	9009883a 	mov	r4,r18
  888cdc:	08885040 	call	888504 <_Balloc>
  888ce0:	10c00504 	addi	r3,r2,20
  888ce4:	0540070e 	bge	zero,r21,888d04 <__lshift+0x80>
  888ce8:	ad6b883a 	add	r21,r21,r21
  888cec:	ad6b883a 	add	r21,r21,r21
  888cf0:	1809883a 	mov	r4,r3
  888cf4:	1d47883a 	add	r3,r3,r21
  888cf8:	20000015 	stw	zero,0(r4)
  888cfc:	21000104 	addi	r4,r4,4
  888d00:	193ffd1e 	bne	r3,r4,888cf8 <__lshift+0x74>
  888d04:	8a000417 	ldw	r8,16(r17)
  888d08:	89000504 	addi	r4,r17,20
  888d0c:	a18007cc 	andi	r6,r20,31
  888d10:	4211883a 	add	r8,r8,r8
  888d14:	4211883a 	add	r8,r8,r8
  888d18:	2211883a 	add	r8,r4,r8
  888d1c:	30002326 	beq	r6,zero,888dac <__lshift+0x128>
  888d20:	02400804 	movi	r9,32
  888d24:	4993c83a 	sub	r9,r9,r6
  888d28:	000b883a 	mov	r5,zero
  888d2c:	21c00017 	ldw	r7,0(r4)
  888d30:	1815883a 	mov	r10,r3
  888d34:	18c00104 	addi	r3,r3,4
  888d38:	398e983a 	sll	r7,r7,r6
  888d3c:	21000104 	addi	r4,r4,4
  888d40:	394ab03a 	or	r5,r7,r5
  888d44:	197fff15 	stw	r5,-4(r3)
  888d48:	217fff17 	ldw	r5,-4(r4)
  888d4c:	2a4ad83a 	srl	r5,r5,r9
  888d50:	223ff636 	bltu	r4,r8,888d2c <__lshift+0xa8>
  888d54:	51400115 	stw	r5,4(r10)
  888d58:	28001a1e 	bne	r5,zero,888dc4 <__lshift+0x140>
  888d5c:	843fffc4 	addi	r16,r16,-1
  888d60:	14000415 	stw	r16,16(r2)
  888d64:	88000826 	beq	r17,zero,888d88 <__lshift+0x104>
  888d68:	89000117 	ldw	r4,4(r17)
  888d6c:	90c01317 	ldw	r3,76(r18)
  888d70:	2109883a 	add	r4,r4,r4
  888d74:	2109883a 	add	r4,r4,r4
  888d78:	1907883a 	add	r3,r3,r4
  888d7c:	19000017 	ldw	r4,0(r3)
  888d80:	89000015 	stw	r4,0(r17)
  888d84:	1c400015 	stw	r17,0(r3)
  888d88:	dfc00617 	ldw	ra,24(sp)
  888d8c:	dd400517 	ldw	r21,20(sp)
  888d90:	dd000417 	ldw	r20,16(sp)
  888d94:	dcc00317 	ldw	r19,12(sp)
  888d98:	dc800217 	ldw	r18,8(sp)
  888d9c:	dc400117 	ldw	r17,4(sp)
  888da0:	dc000017 	ldw	r16,0(sp)
  888da4:	dec00704 	addi	sp,sp,28
  888da8:	f800283a 	ret
  888dac:	21400017 	ldw	r5,0(r4)
  888db0:	18c00104 	addi	r3,r3,4
  888db4:	21000104 	addi	r4,r4,4
  888db8:	197fff15 	stw	r5,-4(r3)
  888dbc:	223ffb36 	bltu	r4,r8,888dac <__lshift+0x128>
  888dc0:	003fe606 	br	888d5c <__lshift+0xd8>
  888dc4:	9c000084 	addi	r16,r19,2
  888dc8:	003fe406 	br	888d5c <__lshift+0xd8>

00888dcc <__mcmp>:
  888dcc:	20800417 	ldw	r2,16(r4)
  888dd0:	28c00417 	ldw	r3,16(r5)
  888dd4:	10c5c83a 	sub	r2,r2,r3
  888dd8:	1000111e 	bne	r2,zero,888e20 <__mcmp+0x54>
  888ddc:	18c7883a 	add	r3,r3,r3
  888de0:	18c7883a 	add	r3,r3,r3
  888de4:	21000504 	addi	r4,r4,20
  888de8:	29400504 	addi	r5,r5,20
  888dec:	20c5883a 	add	r2,r4,r3
  888df0:	28cb883a 	add	r5,r5,r3
  888df4:	00000106 	br	888dfc <__mcmp+0x30>
  888df8:	20800a2e 	bgeu	r4,r2,888e24 <__mcmp+0x58>
  888dfc:	10bfff04 	addi	r2,r2,-4
  888e00:	297fff04 	addi	r5,r5,-4
  888e04:	11800017 	ldw	r6,0(r2)
  888e08:	28c00017 	ldw	r3,0(r5)
  888e0c:	30fffa26 	beq	r6,r3,888df8 <__mcmp+0x2c>
  888e10:	30c00236 	bltu	r6,r3,888e1c <__mcmp+0x50>
  888e14:	00800044 	movi	r2,1
  888e18:	f800283a 	ret
  888e1c:	00bfffc4 	movi	r2,-1
  888e20:	f800283a 	ret
  888e24:	0005883a 	mov	r2,zero
  888e28:	f800283a 	ret

00888e2c <__mdiff>:
  888e2c:	28c00417 	ldw	r3,16(r5)
  888e30:	30800417 	ldw	r2,16(r6)
  888e34:	defffa04 	addi	sp,sp,-24
  888e38:	dcc00315 	stw	r19,12(sp)
  888e3c:	dc800215 	stw	r18,8(sp)
  888e40:	dfc00515 	stw	ra,20(sp)
  888e44:	dd000415 	stw	r20,16(sp)
  888e48:	dc400115 	stw	r17,4(sp)
  888e4c:	dc000015 	stw	r16,0(sp)
  888e50:	1887c83a 	sub	r3,r3,r2
  888e54:	2825883a 	mov	r18,r5
  888e58:	3027883a 	mov	r19,r6
  888e5c:	1800141e 	bne	r3,zero,888eb0 <__mdiff+0x84>
  888e60:	1085883a 	add	r2,r2,r2
  888e64:	1085883a 	add	r2,r2,r2
  888e68:	2a000504 	addi	r8,r5,20
  888e6c:	34000504 	addi	r16,r6,20
  888e70:	4087883a 	add	r3,r8,r2
  888e74:	8085883a 	add	r2,r16,r2
  888e78:	00000106 	br	888e80 <__mdiff+0x54>
  888e7c:	40c0592e 	bgeu	r8,r3,888fe4 <__mdiff+0x1b8>
  888e80:	18ffff04 	addi	r3,r3,-4
  888e84:	10bfff04 	addi	r2,r2,-4
  888e88:	19c00017 	ldw	r7,0(r3)
  888e8c:	11400017 	ldw	r5,0(r2)
  888e90:	397ffa26 	beq	r7,r5,888e7c <__mdiff+0x50>
  888e94:	3940592e 	bgeu	r7,r5,888ffc <__mdiff+0x1d0>
  888e98:	9005883a 	mov	r2,r18
  888e9c:	4023883a 	mov	r17,r8
  888ea0:	9825883a 	mov	r18,r19
  888ea4:	05000044 	movi	r20,1
  888ea8:	1027883a 	mov	r19,r2
  888eac:	00000406 	br	888ec0 <__mdiff+0x94>
  888eb0:	18005616 	blt	r3,zero,88900c <__mdiff+0x1e0>
  888eb4:	34400504 	addi	r17,r6,20
  888eb8:	2c000504 	addi	r16,r5,20
  888ebc:	0029883a 	mov	r20,zero
  888ec0:	91400117 	ldw	r5,4(r18)
  888ec4:	08885040 	call	888504 <_Balloc>
  888ec8:	92400417 	ldw	r9,16(r18)
  888ecc:	9b000417 	ldw	r12,16(r19)
  888ed0:	12c00504 	addi	r11,r2,20
  888ed4:	4a51883a 	add	r8,r9,r9
  888ed8:	6319883a 	add	r12,r12,r12
  888edc:	4211883a 	add	r8,r8,r8
  888ee0:	6319883a 	add	r12,r12,r12
  888ee4:	15000315 	stw	r20,12(r2)
  888ee8:	8211883a 	add	r8,r16,r8
  888eec:	8b19883a 	add	r12,r17,r12
  888ef0:	0007883a 	mov	r3,zero
  888ef4:	81400017 	ldw	r5,0(r16)
  888ef8:	89c00017 	ldw	r7,0(r17)
  888efc:	59800104 	addi	r6,r11,4
  888f00:	293fffcc 	andi	r4,r5,65535
  888f04:	20c7883a 	add	r3,r4,r3
  888f08:	393fffcc 	andi	r4,r7,65535
  888f0c:	1909c83a 	sub	r4,r3,r4
  888f10:	280ad43a 	srli	r5,r5,16
  888f14:	380ed43a 	srli	r7,r7,16
  888f18:	2007d43a 	srai	r3,r4,16
  888f1c:	213fffcc 	andi	r4,r4,65535
  888f20:	29cbc83a 	sub	r5,r5,r7
  888f24:	28c7883a 	add	r3,r5,r3
  888f28:	180a943a 	slli	r5,r3,16
  888f2c:	8c400104 	addi	r17,r17,4
  888f30:	84000104 	addi	r16,r16,4
  888f34:	2908b03a 	or	r4,r5,r4
  888f38:	59000015 	stw	r4,0(r11)
  888f3c:	1807d43a 	srai	r3,r3,16
  888f40:	3015883a 	mov	r10,r6
  888f44:	3017883a 	mov	r11,r6
  888f48:	8b3fea36 	bltu	r17,r12,888ef4 <__mdiff+0xc8>
  888f4c:	8200162e 	bgeu	r16,r8,888fa8 <__mdiff+0x17c>
  888f50:	8017883a 	mov	r11,r16
  888f54:	59400017 	ldw	r5,0(r11)
  888f58:	31800104 	addi	r6,r6,4
  888f5c:	5ac00104 	addi	r11,r11,4
  888f60:	293fffcc 	andi	r4,r5,65535
  888f64:	20c7883a 	add	r3,r4,r3
  888f68:	280ed43a 	srli	r7,r5,16
  888f6c:	180bd43a 	srai	r5,r3,16
  888f70:	193fffcc 	andi	r4,r3,65535
  888f74:	3947883a 	add	r3,r7,r5
  888f78:	180a943a 	slli	r5,r3,16
  888f7c:	1807d43a 	srai	r3,r3,16
  888f80:	2908b03a 	or	r4,r5,r4
  888f84:	313fff15 	stw	r4,-4(r6)
  888f88:	5a3ff236 	bltu	r11,r8,888f54 <__mdiff+0x128>
  888f8c:	0406303a 	nor	r3,zero,r16
  888f90:	1a07883a 	add	r3,r3,r8
  888f94:	1806d0ba 	srli	r3,r3,2
  888f98:	18c00044 	addi	r3,r3,1
  888f9c:	18c7883a 	add	r3,r3,r3
  888fa0:	18c7883a 	add	r3,r3,r3
  888fa4:	50d5883a 	add	r10,r10,r3
  888fa8:	50ffff04 	addi	r3,r10,-4
  888fac:	2000041e 	bne	r4,zero,888fc0 <__mdiff+0x194>
  888fb0:	18ffff04 	addi	r3,r3,-4
  888fb4:	19000017 	ldw	r4,0(r3)
  888fb8:	4a7fffc4 	addi	r9,r9,-1
  888fbc:	203ffc26 	beq	r4,zero,888fb0 <__mdiff+0x184>
  888fc0:	12400415 	stw	r9,16(r2)
  888fc4:	dfc00517 	ldw	ra,20(sp)
  888fc8:	dd000417 	ldw	r20,16(sp)
  888fcc:	dcc00317 	ldw	r19,12(sp)
  888fd0:	dc800217 	ldw	r18,8(sp)
  888fd4:	dc400117 	ldw	r17,4(sp)
  888fd8:	dc000017 	ldw	r16,0(sp)
  888fdc:	dec00604 	addi	sp,sp,24
  888fe0:	f800283a 	ret
  888fe4:	000b883a 	mov	r5,zero
  888fe8:	08885040 	call	888504 <_Balloc>
  888fec:	00c00044 	movi	r3,1
  888ff0:	10c00415 	stw	r3,16(r2)
  888ff4:	10000515 	stw	zero,20(r2)
  888ff8:	003ff206 	br	888fc4 <__mdiff+0x198>
  888ffc:	8023883a 	mov	r17,r16
  889000:	0029883a 	mov	r20,zero
  889004:	4021883a 	mov	r16,r8
  889008:	003fad06 	br	888ec0 <__mdiff+0x94>
  88900c:	9005883a 	mov	r2,r18
  889010:	94400504 	addi	r17,r18,20
  889014:	9c000504 	addi	r16,r19,20
  889018:	9825883a 	mov	r18,r19
  88901c:	05000044 	movi	r20,1
  889020:	1027883a 	mov	r19,r2
  889024:	003fa606 	br	888ec0 <__mdiff+0x94>

00889028 <__ulp>:
  889028:	295ffc2c 	andhi	r5,r5,32752
  88902c:	00bf3034 	movhi	r2,64704
  889030:	2887883a 	add	r3,r5,r2
  889034:	00c0020e 	bge	zero,r3,889040 <__ulp+0x18>
  889038:	0005883a 	mov	r2,zero
  88903c:	f800283a 	ret
  889040:	00c7c83a 	sub	r3,zero,r3
  889044:	1807d53a 	srai	r3,r3,20
  889048:	008004c4 	movi	r2,19
  88904c:	10c00b0e 	bge	r2,r3,88907c <__ulp+0x54>
  889050:	18bffb04 	addi	r2,r3,-20
  889054:	01000784 	movi	r4,30
  889058:	0007883a 	mov	r3,zero
  88905c:	20800516 	blt	r4,r2,889074 <__ulp+0x4c>
  889060:	010007c4 	movi	r4,31
  889064:	2089c83a 	sub	r4,r4,r2
  889068:	00800044 	movi	r2,1
  88906c:	1104983a 	sll	r2,r2,r4
  889070:	f800283a 	ret
  889074:	00800044 	movi	r2,1
  889078:	f800283a 	ret
  88907c:	01400234 	movhi	r5,8
  889080:	28c7d83a 	sra	r3,r5,r3
  889084:	0005883a 	mov	r2,zero
  889088:	f800283a 	ret

0088908c <__b2d>:
  88908c:	defffa04 	addi	sp,sp,-24
  889090:	dc000015 	stw	r16,0(sp)
  889094:	24000417 	ldw	r16,16(r4)
  889098:	dc400115 	stw	r17,4(sp)
  88909c:	24400504 	addi	r17,r4,20
  8890a0:	8421883a 	add	r16,r16,r16
  8890a4:	8421883a 	add	r16,r16,r16
  8890a8:	8c21883a 	add	r16,r17,r16
  8890ac:	dc800215 	stw	r18,8(sp)
  8890b0:	84bfff17 	ldw	r18,-4(r16)
  8890b4:	dd000415 	stw	r20,16(sp)
  8890b8:	dcc00315 	stw	r19,12(sp)
  8890bc:	9009883a 	mov	r4,r18
  8890c0:	2829883a 	mov	r20,r5
  8890c4:	dfc00515 	stw	ra,20(sp)
  8890c8:	08887f80 	call	8887f8 <__hi0bits>
  8890cc:	00c00804 	movi	r3,32
  8890d0:	1889c83a 	sub	r4,r3,r2
  8890d4:	a1000015 	stw	r4,0(r20)
  8890d8:	01000284 	movi	r4,10
  8890dc:	84ffff04 	addi	r19,r16,-4
  8890e0:	20801216 	blt	r4,r2,88912c <__b2d+0xa0>
  8890e4:	018002c4 	movi	r6,11
  8890e8:	308dc83a 	sub	r6,r6,r2
  8890ec:	9186d83a 	srl	r3,r18,r6
  8890f0:	18cffc34 	orhi	r3,r3,16368
  8890f4:	8cc0212e 	bgeu	r17,r19,88917c <__b2d+0xf0>
  8890f8:	813ffe17 	ldw	r4,-8(r16)
  8890fc:	218cd83a 	srl	r6,r4,r6
  889100:	10800544 	addi	r2,r2,21
  889104:	9084983a 	sll	r2,r18,r2
  889108:	1184b03a 	or	r2,r2,r6
  88910c:	dfc00517 	ldw	ra,20(sp)
  889110:	dd000417 	ldw	r20,16(sp)
  889114:	dcc00317 	ldw	r19,12(sp)
  889118:	dc800217 	ldw	r18,8(sp)
  88911c:	dc400117 	ldw	r17,4(sp)
  889120:	dc000017 	ldw	r16,0(sp)
  889124:	dec00604 	addi	sp,sp,24
  889128:	f800283a 	ret
  88912c:	8cc00f2e 	bgeu	r17,r19,88916c <__b2d+0xe0>
  889130:	117ffd44 	addi	r5,r2,-11
  889134:	80bffe17 	ldw	r2,-8(r16)
  889138:	28000e26 	beq	r5,zero,889174 <__b2d+0xe8>
  88913c:	1949c83a 	sub	r4,r3,r5
  889140:	9164983a 	sll	r18,r18,r5
  889144:	1106d83a 	srl	r3,r2,r4
  889148:	81bffe04 	addi	r6,r16,-8
  88914c:	948ffc34 	orhi	r18,r18,16368
  889150:	90c6b03a 	or	r3,r18,r3
  889154:	89800e2e 	bgeu	r17,r6,889190 <__b2d+0x104>
  889158:	81bffd17 	ldw	r6,-12(r16)
  88915c:	1144983a 	sll	r2,r2,r5
  889160:	310ad83a 	srl	r5,r6,r4
  889164:	2884b03a 	or	r2,r5,r2
  889168:	003fe806 	br	88910c <__b2d+0x80>
  88916c:	10bffd44 	addi	r2,r2,-11
  889170:	1000041e 	bne	r2,zero,889184 <__b2d+0xf8>
  889174:	90cffc34 	orhi	r3,r18,16368
  889178:	003fe406 	br	88910c <__b2d+0x80>
  88917c:	000d883a 	mov	r6,zero
  889180:	003fdf06 	br	889100 <__b2d+0x74>
  889184:	90a4983a 	sll	r18,r18,r2
  889188:	0005883a 	mov	r2,zero
  88918c:	003ff906 	br	889174 <__b2d+0xe8>
  889190:	1144983a 	sll	r2,r2,r5
  889194:	003fdd06 	br	88910c <__b2d+0x80>

00889198 <__d2b>:
  889198:	defff804 	addi	sp,sp,-32
  88919c:	dc000215 	stw	r16,8(sp)
  8891a0:	3021883a 	mov	r16,r6
  8891a4:	dc400315 	stw	r17,12(sp)
  8891a8:	8022907a 	slli	r17,r16,1
  8891ac:	dd000615 	stw	r20,24(sp)
  8891b0:	2829883a 	mov	r20,r5
  8891b4:	01400044 	movi	r5,1
  8891b8:	dcc00515 	stw	r19,20(sp)
  8891bc:	dc800415 	stw	r18,16(sp)
  8891c0:	dfc00715 	stw	ra,28(sp)
  8891c4:	3825883a 	mov	r18,r7
  8891c8:	8822d57a 	srli	r17,r17,21
  8891cc:	08885040 	call	888504 <_Balloc>
  8891d0:	1027883a 	mov	r19,r2
  8891d4:	00800434 	movhi	r2,16
  8891d8:	10bfffc4 	addi	r2,r2,-1
  8891dc:	808c703a 	and	r6,r16,r2
  8891e0:	88000126 	beq	r17,zero,8891e8 <__d2b+0x50>
  8891e4:	31800434 	orhi	r6,r6,16
  8891e8:	d9800015 	stw	r6,0(sp)
  8891ec:	a0002426 	beq	r20,zero,889280 <__d2b+0xe8>
  8891f0:	d9000104 	addi	r4,sp,4
  8891f4:	dd000115 	stw	r20,4(sp)
  8891f8:	08888600 	call	888860 <__lo0bits>
  8891fc:	d8c00017 	ldw	r3,0(sp)
  889200:	10002f1e 	bne	r2,zero,8892c0 <__d2b+0x128>
  889204:	d9000117 	ldw	r4,4(sp)
  889208:	99000515 	stw	r4,20(r19)
  88920c:	1821003a 	cmpeq	r16,r3,zero
  889210:	01000084 	movi	r4,2
  889214:	2421c83a 	sub	r16,r4,r16
  889218:	98c00615 	stw	r3,24(r19)
  88921c:	9c000415 	stw	r16,16(r19)
  889220:	88001f1e 	bne	r17,zero,8892a0 <__d2b+0x108>
  889224:	10bef384 	addi	r2,r2,-1074
  889228:	90800015 	stw	r2,0(r18)
  88922c:	00900034 	movhi	r2,16384
  889230:	10bfffc4 	addi	r2,r2,-1
  889234:	8085883a 	add	r2,r16,r2
  889238:	1085883a 	add	r2,r2,r2
  88923c:	1085883a 	add	r2,r2,r2
  889240:	9885883a 	add	r2,r19,r2
  889244:	11000517 	ldw	r4,20(r2)
  889248:	8020917a 	slli	r16,r16,5
  88924c:	08887f80 	call	8887f8 <__hi0bits>
  889250:	d8c00817 	ldw	r3,32(sp)
  889254:	8085c83a 	sub	r2,r16,r2
  889258:	18800015 	stw	r2,0(r3)
  88925c:	9805883a 	mov	r2,r19
  889260:	dfc00717 	ldw	ra,28(sp)
  889264:	dd000617 	ldw	r20,24(sp)
  889268:	dcc00517 	ldw	r19,20(sp)
  88926c:	dc800417 	ldw	r18,16(sp)
  889270:	dc400317 	ldw	r17,12(sp)
  889274:	dc000217 	ldw	r16,8(sp)
  889278:	dec00804 	addi	sp,sp,32
  88927c:	f800283a 	ret
  889280:	d809883a 	mov	r4,sp
  889284:	08888600 	call	888860 <__lo0bits>
  889288:	d8c00017 	ldw	r3,0(sp)
  88928c:	04000044 	movi	r16,1
  889290:	9c000415 	stw	r16,16(r19)
  889294:	98c00515 	stw	r3,20(r19)
  889298:	10800804 	addi	r2,r2,32
  88929c:	883fe126 	beq	r17,zero,889224 <__d2b+0x8c>
  8892a0:	00c00d44 	movi	r3,53
  8892a4:	8c7ef344 	addi	r17,r17,-1075
  8892a8:	88a3883a 	add	r17,r17,r2
  8892ac:	1885c83a 	sub	r2,r3,r2
  8892b0:	d8c00817 	ldw	r3,32(sp)
  8892b4:	94400015 	stw	r17,0(r18)
  8892b8:	18800015 	stw	r2,0(r3)
  8892bc:	003fe706 	br	88925c <__d2b+0xc4>
  8892c0:	01000804 	movi	r4,32
  8892c4:	2089c83a 	sub	r4,r4,r2
  8892c8:	1908983a 	sll	r4,r3,r4
  8892cc:	d9400117 	ldw	r5,4(sp)
  8892d0:	1886d83a 	srl	r3,r3,r2
  8892d4:	2148b03a 	or	r4,r4,r5
  8892d8:	99000515 	stw	r4,20(r19)
  8892dc:	d8c00015 	stw	r3,0(sp)
  8892e0:	003fca06 	br	88920c <__d2b+0x74>

008892e4 <__ratio>:
  8892e4:	defff904 	addi	sp,sp,-28
  8892e8:	dc400315 	stw	r17,12(sp)
  8892ec:	2823883a 	mov	r17,r5
  8892f0:	d9400104 	addi	r5,sp,4
  8892f4:	dfc00615 	stw	ra,24(sp)
  8892f8:	dcc00515 	stw	r19,20(sp)
  8892fc:	dc800415 	stw	r18,16(sp)
  889300:	2027883a 	mov	r19,r4
  889304:	dc000215 	stw	r16,8(sp)
  889308:	088908c0 	call	88908c <__b2d>
  88930c:	d80b883a 	mov	r5,sp
  889310:	8809883a 	mov	r4,r17
  889314:	1025883a 	mov	r18,r2
  889318:	1821883a 	mov	r16,r3
  88931c:	088908c0 	call	88908c <__b2d>
  889320:	8a000417 	ldw	r8,16(r17)
  889324:	99000417 	ldw	r4,16(r19)
  889328:	d9400117 	ldw	r5,4(sp)
  88932c:	2209c83a 	sub	r4,r4,r8
  889330:	2010917a 	slli	r8,r4,5
  889334:	d9000017 	ldw	r4,0(sp)
  889338:	2909c83a 	sub	r4,r5,r4
  88933c:	4109883a 	add	r4,r8,r4
  889340:	01000e0e 	bge	zero,r4,88937c <__ratio+0x98>
  889344:	2008953a 	slli	r4,r4,20
  889348:	2421883a 	add	r16,r4,r16
  88934c:	100d883a 	mov	r6,r2
  889350:	180f883a 	mov	r7,r3
  889354:	9009883a 	mov	r4,r18
  889358:	800b883a 	mov	r5,r16
  88935c:	088d7500 	call	88d750 <__divdf3>
  889360:	dfc00617 	ldw	ra,24(sp)
  889364:	dcc00517 	ldw	r19,20(sp)
  889368:	dc800417 	ldw	r18,16(sp)
  88936c:	dc400317 	ldw	r17,12(sp)
  889370:	dc000217 	ldw	r16,8(sp)
  889374:	dec00704 	addi	sp,sp,28
  889378:	f800283a 	ret
  88937c:	2008953a 	slli	r4,r4,20
  889380:	1907c83a 	sub	r3,r3,r4
  889384:	003ff106 	br	88934c <__ratio+0x68>

00889388 <_mprec_log10>:
  889388:	defffe04 	addi	sp,sp,-8
  88938c:	dc000015 	stw	r16,0(sp)
  889390:	dfc00115 	stw	ra,4(sp)
  889394:	008005c4 	movi	r2,23
  889398:	2021883a 	mov	r16,r4
  88939c:	11000d0e 	bge	r2,r4,8893d4 <_mprec_log10+0x4c>
  8893a0:	0005883a 	mov	r2,zero
  8893a4:	00cffc34 	movhi	r3,16368
  8893a8:	843fffc4 	addi	r16,r16,-1
  8893ac:	000d883a 	mov	r6,zero
  8893b0:	01d00934 	movhi	r7,16420
  8893b4:	1009883a 	mov	r4,r2
  8893b8:	180b883a 	mov	r5,r3
  8893bc:	088e2900 	call	88e290 <__muldf3>
  8893c0:	803ff91e 	bne	r16,zero,8893a8 <_mprec_log10+0x20>
  8893c4:	dfc00117 	ldw	ra,4(sp)
  8893c8:	dc000017 	ldw	r16,0(sp)
  8893cc:	dec00204 	addi	sp,sp,8
  8893d0:	f800283a 	ret
  8893d4:	202090fa 	slli	r16,r4,3
  8893d8:	00802274 	movhi	r2,137
  8893dc:	10896e04 	addi	r2,r2,9656
  8893e0:	1421883a 	add	r16,r2,r16
  8893e4:	80800017 	ldw	r2,0(r16)
  8893e8:	80c00117 	ldw	r3,4(r16)
  8893ec:	dfc00117 	ldw	ra,4(sp)
  8893f0:	dc000017 	ldw	r16,0(sp)
  8893f4:	dec00204 	addi	sp,sp,8
  8893f8:	f800283a 	ret

008893fc <__copybits>:
  8893fc:	297fffc4 	addi	r5,r5,-1
  889400:	280fd17a 	srai	r7,r5,5
  889404:	30c00417 	ldw	r3,16(r6)
  889408:	30800504 	addi	r2,r6,20
  88940c:	39c00044 	addi	r7,r7,1
  889410:	18c7883a 	add	r3,r3,r3
  889414:	39cf883a 	add	r7,r7,r7
  889418:	18c7883a 	add	r3,r3,r3
  88941c:	39cf883a 	add	r7,r7,r7
  889420:	10c7883a 	add	r3,r2,r3
  889424:	21cf883a 	add	r7,r4,r7
  889428:	10c00d2e 	bgeu	r2,r3,889460 <__copybits+0x64>
  88942c:	200b883a 	mov	r5,r4
  889430:	12000017 	ldw	r8,0(r2)
  889434:	29400104 	addi	r5,r5,4
  889438:	10800104 	addi	r2,r2,4
  88943c:	2a3fff15 	stw	r8,-4(r5)
  889440:	10fffb36 	bltu	r2,r3,889430 <__copybits+0x34>
  889444:	1985c83a 	sub	r2,r3,r6
  889448:	10bffac4 	addi	r2,r2,-21
  88944c:	1004d0ba 	srli	r2,r2,2
  889450:	10800044 	addi	r2,r2,1
  889454:	1085883a 	add	r2,r2,r2
  889458:	1085883a 	add	r2,r2,r2
  88945c:	2089883a 	add	r4,r4,r2
  889460:	21c0032e 	bgeu	r4,r7,889470 <__copybits+0x74>
  889464:	20000015 	stw	zero,0(r4)
  889468:	21000104 	addi	r4,r4,4
  88946c:	21fffd36 	bltu	r4,r7,889464 <__copybits+0x68>
  889470:	f800283a 	ret

00889474 <__any_on>:
  889474:	20c00417 	ldw	r3,16(r4)
  889478:	2805d17a 	srai	r2,r5,5
  88947c:	21000504 	addi	r4,r4,20
  889480:	18800d0e 	bge	r3,r2,8894b8 <__any_on+0x44>
  889484:	18c7883a 	add	r3,r3,r3
  889488:	18c7883a 	add	r3,r3,r3
  88948c:	20c7883a 	add	r3,r4,r3
  889490:	20c0192e 	bgeu	r4,r3,8894f8 <__any_on+0x84>
  889494:	18bfff17 	ldw	r2,-4(r3)
  889498:	18ffff04 	addi	r3,r3,-4
  88949c:	1000041e 	bne	r2,zero,8894b0 <__any_on+0x3c>
  8894a0:	20c0142e 	bgeu	r4,r3,8894f4 <__any_on+0x80>
  8894a4:	18ffff04 	addi	r3,r3,-4
  8894a8:	19400017 	ldw	r5,0(r3)
  8894ac:	283ffc26 	beq	r5,zero,8894a0 <__any_on+0x2c>
  8894b0:	00800044 	movi	r2,1
  8894b4:	f800283a 	ret
  8894b8:	10c00a0e 	bge	r2,r3,8894e4 <__any_on+0x70>
  8894bc:	1085883a 	add	r2,r2,r2
  8894c0:	1085883a 	add	r2,r2,r2
  8894c4:	294007cc 	andi	r5,r5,31
  8894c8:	2087883a 	add	r3,r4,r2
  8894cc:	283ff026 	beq	r5,zero,889490 <__any_on+0x1c>
  8894d0:	19800017 	ldw	r6,0(r3)
  8894d4:	3144d83a 	srl	r2,r6,r5
  8894d8:	114a983a 	sll	r5,r2,r5
  8894dc:	317ff41e 	bne	r6,r5,8894b0 <__any_on+0x3c>
  8894e0:	003feb06 	br	889490 <__any_on+0x1c>
  8894e4:	1085883a 	add	r2,r2,r2
  8894e8:	1085883a 	add	r2,r2,r2
  8894ec:	2087883a 	add	r3,r4,r2
  8894f0:	003fe706 	br	889490 <__any_on+0x1c>
  8894f4:	f800283a 	ret
  8894f8:	0005883a 	mov	r2,zero
  8894fc:	f800283a 	ret

00889500 <__fpclassifyd>:
  889500:	00a00034 	movhi	r2,32768
  889504:	10bfffc4 	addi	r2,r2,-1
  889508:	2884703a 	and	r2,r5,r2
  88950c:	10000726 	beq	r2,zero,88952c <__fpclassifyd+0x2c>
  889510:	00fffc34 	movhi	r3,65520
  889514:	019ff834 	movhi	r6,32736
  889518:	28c7883a 	add	r3,r5,r3
  88951c:	31bfffc4 	addi	r6,r6,-1
  889520:	30c00536 	bltu	r6,r3,889538 <__fpclassifyd+0x38>
  889524:	00800104 	movi	r2,4
  889528:	f800283a 	ret
  88952c:	2000021e 	bne	r4,zero,889538 <__fpclassifyd+0x38>
  889530:	00800084 	movi	r2,2
  889534:	f800283a 	ret
  889538:	00dffc34 	movhi	r3,32752
  88953c:	019ff834 	movhi	r6,32736
  889540:	28cb883a 	add	r5,r5,r3
  889544:	31bfffc4 	addi	r6,r6,-1
  889548:	317ff62e 	bgeu	r6,r5,889524 <__fpclassifyd+0x24>
  88954c:	01400434 	movhi	r5,16
  889550:	297fffc4 	addi	r5,r5,-1
  889554:	28800236 	bltu	r5,r2,889560 <__fpclassifyd+0x60>
  889558:	008000c4 	movi	r2,3
  88955c:	f800283a 	ret
  889560:	10c00226 	beq	r2,r3,88956c <__fpclassifyd+0x6c>
  889564:	0005883a 	mov	r2,zero
  889568:	f800283a 	ret
  88956c:	2005003a 	cmpeq	r2,r4,zero
  889570:	f800283a 	ret

00889574 <__sread>:
  889574:	defffe04 	addi	sp,sp,-8
  889578:	dc000015 	stw	r16,0(sp)
  88957c:	2821883a 	mov	r16,r5
  889580:	2940038f 	ldh	r5,14(r5)
  889584:	dfc00115 	stw	ra,4(sp)
  889588:	088b93c0 	call	88b93c <_read_r>
  88958c:	10000716 	blt	r2,zero,8895ac <__sread+0x38>
  889590:	80c01417 	ldw	r3,80(r16)
  889594:	1887883a 	add	r3,r3,r2
  889598:	80c01415 	stw	r3,80(r16)
  88959c:	dfc00117 	ldw	ra,4(sp)
  8895a0:	dc000017 	ldw	r16,0(sp)
  8895a4:	dec00204 	addi	sp,sp,8
  8895a8:	f800283a 	ret
  8895ac:	80c0030b 	ldhu	r3,12(r16)
  8895b0:	18fbffcc 	andi	r3,r3,61439
  8895b4:	80c0030d 	sth	r3,12(r16)
  8895b8:	dfc00117 	ldw	ra,4(sp)
  8895bc:	dc000017 	ldw	r16,0(sp)
  8895c0:	dec00204 	addi	sp,sp,8
  8895c4:	f800283a 	ret

008895c8 <__seofread>:
  8895c8:	0005883a 	mov	r2,zero
  8895cc:	f800283a 	ret

008895d0 <__swrite>:
  8895d0:	2880030b 	ldhu	r2,12(r5)
  8895d4:	defffb04 	addi	sp,sp,-20
  8895d8:	dcc00315 	stw	r19,12(sp)
  8895dc:	dc800215 	stw	r18,8(sp)
  8895e0:	dc400115 	stw	r17,4(sp)
  8895e4:	dc000015 	stw	r16,0(sp)
  8895e8:	dfc00415 	stw	ra,16(sp)
  8895ec:	10c0400c 	andi	r3,r2,256
  8895f0:	2821883a 	mov	r16,r5
  8895f4:	2023883a 	mov	r17,r4
  8895f8:	3025883a 	mov	r18,r6
  8895fc:	3827883a 	mov	r19,r7
  889600:	18000526 	beq	r3,zero,889618 <__swrite+0x48>
  889604:	2940038f 	ldh	r5,14(r5)
  889608:	01c00084 	movi	r7,2
  88960c:	000d883a 	mov	r6,zero
  889610:	088b7800 	call	88b780 <_lseek_r>
  889614:	8080030b 	ldhu	r2,12(r16)
  889618:	8140038f 	ldh	r5,14(r16)
  88961c:	10bbffcc 	andi	r2,r2,61439
  889620:	980f883a 	mov	r7,r19
  889624:	900d883a 	mov	r6,r18
  889628:	8809883a 	mov	r4,r17
  88962c:	8080030d 	sth	r2,12(r16)
  889630:	dfc00417 	ldw	ra,16(sp)
  889634:	dcc00317 	ldw	r19,12(sp)
  889638:	dc800217 	ldw	r18,8(sp)
  88963c:	dc400117 	ldw	r17,4(sp)
  889640:	dc000017 	ldw	r16,0(sp)
  889644:	dec00504 	addi	sp,sp,20
  889648:	088ad901 	jmpi	88ad90 <_write_r>

0088964c <__sseek>:
  88964c:	defffe04 	addi	sp,sp,-8
  889650:	dc000015 	stw	r16,0(sp)
  889654:	2821883a 	mov	r16,r5
  889658:	2940038f 	ldh	r5,14(r5)
  88965c:	dfc00115 	stw	ra,4(sp)
  889660:	088b7800 	call	88b780 <_lseek_r>
  889664:	00ffffc4 	movi	r3,-1
  889668:	10c00826 	beq	r2,r3,88968c <__sseek+0x40>
  88966c:	80c0030b 	ldhu	r3,12(r16)
  889670:	80801415 	stw	r2,80(r16)
  889674:	18c40014 	ori	r3,r3,4096
  889678:	80c0030d 	sth	r3,12(r16)
  88967c:	dfc00117 	ldw	ra,4(sp)
  889680:	dc000017 	ldw	r16,0(sp)
  889684:	dec00204 	addi	sp,sp,8
  889688:	f800283a 	ret
  88968c:	80c0030b 	ldhu	r3,12(r16)
  889690:	18fbffcc 	andi	r3,r3,61439
  889694:	80c0030d 	sth	r3,12(r16)
  889698:	dfc00117 	ldw	ra,4(sp)
  88969c:	dc000017 	ldw	r16,0(sp)
  8896a0:	dec00204 	addi	sp,sp,8
  8896a4:	f800283a 	ret

008896a8 <__sclose>:
  8896a8:	2940038f 	ldh	r5,14(r5)
  8896ac:	088adf01 	jmpi	88adf0 <_close_r>

008896b0 <strlen>:
  8896b0:	208000cc 	andi	r2,r4,3
  8896b4:	10002026 	beq	r2,zero,889738 <strlen+0x88>
  8896b8:	20800007 	ldb	r2,0(r4)
  8896bc:	10002026 	beq	r2,zero,889740 <strlen+0x90>
  8896c0:	2005883a 	mov	r2,r4
  8896c4:	00000206 	br	8896d0 <strlen+0x20>
  8896c8:	10c00007 	ldb	r3,0(r2)
  8896cc:	18001826 	beq	r3,zero,889730 <strlen+0x80>
  8896d0:	10800044 	addi	r2,r2,1
  8896d4:	10c000cc 	andi	r3,r2,3
  8896d8:	183ffb1e 	bne	r3,zero,8896c8 <strlen+0x18>
  8896dc:	10c00017 	ldw	r3,0(r2)
  8896e0:	01ffbff4 	movhi	r7,65279
  8896e4:	39ffbfc4 	addi	r7,r7,-257
  8896e8:	00ca303a 	nor	r5,zero,r3
  8896ec:	01a02074 	movhi	r6,32897
  8896f0:	19c7883a 	add	r3,r3,r7
  8896f4:	31a02004 	addi	r6,r6,-32640
  8896f8:	1946703a 	and	r3,r3,r5
  8896fc:	1986703a 	and	r3,r3,r6
  889700:	1800091e 	bne	r3,zero,889728 <strlen+0x78>
  889704:	10800104 	addi	r2,r2,4
  889708:	10c00017 	ldw	r3,0(r2)
  88970c:	19cb883a 	add	r5,r3,r7
  889710:	00c6303a 	nor	r3,zero,r3
  889714:	28c6703a 	and	r3,r5,r3
  889718:	1986703a 	and	r3,r3,r6
  88971c:	183ff926 	beq	r3,zero,889704 <strlen+0x54>
  889720:	00000106 	br	889728 <strlen+0x78>
  889724:	10800044 	addi	r2,r2,1
  889728:	10c00007 	ldb	r3,0(r2)
  88972c:	183ffd1e 	bne	r3,zero,889724 <strlen+0x74>
  889730:	1105c83a 	sub	r2,r2,r4
  889734:	f800283a 	ret
  889738:	2005883a 	mov	r2,r4
  88973c:	003fe706 	br	8896dc <strlen+0x2c>
  889740:	0005883a 	mov	r2,zero
  889744:	f800283a 	ret

00889748 <__sprint_r.part.0>:
  889748:	28801917 	ldw	r2,100(r5)
  88974c:	defff604 	addi	sp,sp,-40
  889750:	dd400515 	stw	r21,20(sp)
  889754:	dfc00915 	stw	ra,36(sp)
  889758:	df000815 	stw	fp,32(sp)
  88975c:	ddc00715 	stw	r23,28(sp)
  889760:	dd800615 	stw	r22,24(sp)
  889764:	dd000415 	stw	r20,16(sp)
  889768:	dcc00315 	stw	r19,12(sp)
  88976c:	dc800215 	stw	r18,8(sp)
  889770:	dc400115 	stw	r17,4(sp)
  889774:	dc000015 	stw	r16,0(sp)
  889778:	1088000c 	andi	r2,r2,8192
  88977c:	302b883a 	mov	r21,r6
  889780:	10002e26 	beq	r2,zero,88983c <__sprint_r.part.0+0xf4>
  889784:	30800217 	ldw	r2,8(r6)
  889788:	35800017 	ldw	r22,0(r6)
  88978c:	10002926 	beq	r2,zero,889834 <__sprint_r.part.0+0xec>
  889790:	2827883a 	mov	r19,r5
  889794:	2029883a 	mov	r20,r4
  889798:	b5c00104 	addi	r23,r22,4
  88979c:	04bfffc4 	movi	r18,-1
  8897a0:	bc400017 	ldw	r17,0(r23)
  8897a4:	b4000017 	ldw	r16,0(r22)
  8897a8:	0039883a 	mov	fp,zero
  8897ac:	8822d0ba 	srli	r17,r17,2
  8897b0:	8800031e 	bne	r17,zero,8897c0 <__sprint_r.part.0+0x78>
  8897b4:	00001806 	br	889818 <__sprint_r.part.0+0xd0>
  8897b8:	84000104 	addi	r16,r16,4
  8897bc:	8f001526 	beq	r17,fp,889814 <__sprint_r.part.0+0xcc>
  8897c0:	81400017 	ldw	r5,0(r16)
  8897c4:	980d883a 	mov	r6,r19
  8897c8:	a009883a 	mov	r4,r20
  8897cc:	088b1700 	call	88b170 <_fputwc_r>
  8897d0:	e7000044 	addi	fp,fp,1
  8897d4:	14bff81e 	bne	r2,r18,8897b8 <__sprint_r.part.0+0x70>
  8897d8:	9005883a 	mov	r2,r18
  8897dc:	a8000215 	stw	zero,8(r21)
  8897e0:	a8000115 	stw	zero,4(r21)
  8897e4:	dfc00917 	ldw	ra,36(sp)
  8897e8:	df000817 	ldw	fp,32(sp)
  8897ec:	ddc00717 	ldw	r23,28(sp)
  8897f0:	dd800617 	ldw	r22,24(sp)
  8897f4:	dd400517 	ldw	r21,20(sp)
  8897f8:	dd000417 	ldw	r20,16(sp)
  8897fc:	dcc00317 	ldw	r19,12(sp)
  889800:	dc800217 	ldw	r18,8(sp)
  889804:	dc400117 	ldw	r17,4(sp)
  889808:	dc000017 	ldw	r16,0(sp)
  88980c:	dec00a04 	addi	sp,sp,40
  889810:	f800283a 	ret
  889814:	a8800217 	ldw	r2,8(r21)
  889818:	8c63883a 	add	r17,r17,r17
  88981c:	8c63883a 	add	r17,r17,r17
  889820:	1445c83a 	sub	r2,r2,r17
  889824:	a8800215 	stw	r2,8(r21)
  889828:	b5800204 	addi	r22,r22,8
  88982c:	bdc00204 	addi	r23,r23,8
  889830:	103fdb1e 	bne	r2,zero,8897a0 <__sprint_r.part.0+0x58>
  889834:	0005883a 	mov	r2,zero
  889838:	003fe806 	br	8897dc <__sprint_r.part.0+0x94>
  88983c:	088b2700 	call	88b270 <__sfvwrite_r>
  889840:	003fe606 	br	8897dc <__sprint_r.part.0+0x94>

00889844 <__sprint_r>:
  889844:	30c00217 	ldw	r3,8(r6)
  889848:	18000126 	beq	r3,zero,889850 <__sprint_r+0xc>
  88984c:	08897481 	jmpi	889748 <__sprint_r.part.0>
  889850:	30000115 	stw	zero,4(r6)
  889854:	0005883a 	mov	r2,zero
  889858:	f800283a 	ret

0088985c <___vfiprintf_internal_r>:
  88985c:	deffc904 	addi	sp,sp,-220
  889860:	df003515 	stw	fp,212(sp)
  889864:	dd003115 	stw	r20,196(sp)
  889868:	dfc03615 	stw	ra,216(sp)
  88986c:	ddc03415 	stw	r23,208(sp)
  889870:	dd803315 	stw	r22,204(sp)
  889874:	dd403215 	stw	r21,200(sp)
  889878:	dcc03015 	stw	r19,192(sp)
  88987c:	dc802f15 	stw	r18,188(sp)
  889880:	dc402e15 	stw	r17,184(sp)
  889884:	dc002d15 	stw	r16,180(sp)
  889888:	d9002015 	stw	r4,128(sp)
  88988c:	d9c02215 	stw	r7,136(sp)
  889890:	2829883a 	mov	r20,r5
  889894:	3039883a 	mov	fp,r6
  889898:	20000226 	beq	r4,zero,8898a4 <___vfiprintf_internal_r+0x48>
  88989c:	20800e17 	ldw	r2,56(r4)
  8898a0:	1000cf26 	beq	r2,zero,889be0 <___vfiprintf_internal_r+0x384>
  8898a4:	a080030b 	ldhu	r2,12(r20)
  8898a8:	10c8000c 	andi	r3,r2,8192
  8898ac:	1800061e 	bne	r3,zero,8898c8 <___vfiprintf_internal_r+0x6c>
  8898b0:	a1001917 	ldw	r4,100(r20)
  8898b4:	00f7ffc4 	movi	r3,-8193
  8898b8:	10880014 	ori	r2,r2,8192
  8898bc:	20c6703a 	and	r3,r4,r3
  8898c0:	a080030d 	sth	r2,12(r20)
  8898c4:	a0c01915 	stw	r3,100(r20)
  8898c8:	10c0020c 	andi	r3,r2,8
  8898cc:	1800a926 	beq	r3,zero,889b74 <___vfiprintf_internal_r+0x318>
  8898d0:	a0c00417 	ldw	r3,16(r20)
  8898d4:	1800a726 	beq	r3,zero,889b74 <___vfiprintf_internal_r+0x318>
  8898d8:	1080068c 	andi	r2,r2,26
  8898dc:	00c00284 	movi	r3,10
  8898e0:	10c0ac26 	beq	r2,r3,889b94 <___vfiprintf_internal_r+0x338>
  8898e4:	da801a04 	addi	r10,sp,104
  8898e8:	da801e15 	stw	r10,120(sp)
  8898ec:	d8801e17 	ldw	r2,120(sp)
  8898f0:	da8019c4 	addi	r10,sp,103
  8898f4:	05802274 	movhi	r22,137
  8898f8:	05c02274 	movhi	r23,137
  8898fc:	da801f15 	stw	r10,124(sp)
  889900:	1295c83a 	sub	r10,r2,r10
  889904:	b589a404 	addi	r22,r22,9872
  889908:	bdc9a004 	addi	r23,r23,9856
  88990c:	dec01a15 	stw	sp,104(sp)
  889910:	d8001c15 	stw	zero,112(sp)
  889914:	d8001b15 	stw	zero,108(sp)
  889918:	d8002615 	stw	zero,152(sp)
  88991c:	d8002315 	stw	zero,140(sp)
  889920:	da802715 	stw	r10,156(sp)
  889924:	d811883a 	mov	r8,sp
  889928:	dd002115 	stw	r20,132(sp)
  88992c:	e021883a 	mov	r16,fp
  889930:	80800007 	ldb	r2,0(r16)
  889934:	1003ea26 	beq	r2,zero,88a8e0 <___vfiprintf_internal_r+0x1084>
  889938:	00c00944 	movi	r3,37
  88993c:	8025883a 	mov	r18,r16
  889940:	10c0021e 	bne	r2,r3,88994c <___vfiprintf_internal_r+0xf0>
  889944:	00001606 	br	8899a0 <___vfiprintf_internal_r+0x144>
  889948:	10c00326 	beq	r2,r3,889958 <___vfiprintf_internal_r+0xfc>
  88994c:	94800044 	addi	r18,r18,1
  889950:	90800007 	ldb	r2,0(r18)
  889954:	103ffc1e 	bne	r2,zero,889948 <___vfiprintf_internal_r+0xec>
  889958:	9423c83a 	sub	r17,r18,r16
  88995c:	88001026 	beq	r17,zero,8899a0 <___vfiprintf_internal_r+0x144>
  889960:	d8c01c17 	ldw	r3,112(sp)
  889964:	d8801b17 	ldw	r2,108(sp)
  889968:	44000015 	stw	r16,0(r8)
  88996c:	88c7883a 	add	r3,r17,r3
  889970:	10800044 	addi	r2,r2,1
  889974:	44400115 	stw	r17,4(r8)
  889978:	d8c01c15 	stw	r3,112(sp)
  88997c:	d8801b15 	stw	r2,108(sp)
  889980:	010001c4 	movi	r4,7
  889984:	2080760e 	bge	r4,r2,889b60 <___vfiprintf_internal_r+0x304>
  889988:	1803821e 	bne	r3,zero,88a794 <___vfiprintf_internal_r+0xf38>
  88998c:	da802317 	ldw	r10,140(sp)
  889990:	d8001b15 	stw	zero,108(sp)
  889994:	d811883a 	mov	r8,sp
  889998:	5455883a 	add	r10,r10,r17
  88999c:	da802315 	stw	r10,140(sp)
  8899a0:	90800007 	ldb	r2,0(r18)
  8899a4:	10044626 	beq	r2,zero,88aac0 <___vfiprintf_internal_r+0x1264>
  8899a8:	90c00047 	ldb	r3,1(r18)
  8899ac:	94000044 	addi	r16,r18,1
  8899b0:	d8001d85 	stb	zero,118(sp)
  8899b4:	0009883a 	mov	r4,zero
  8899b8:	000f883a 	mov	r7,zero
  8899bc:	027fffc4 	movi	r9,-1
  8899c0:	0023883a 	mov	r17,zero
  8899c4:	0029883a 	mov	r20,zero
  8899c8:	01401604 	movi	r5,88
  8899cc:	01800244 	movi	r6,9
  8899d0:	03400a84 	movi	r13,42
  8899d4:	03001b04 	movi	r12,108
  8899d8:	84000044 	addi	r16,r16,1
  8899dc:	18bff804 	addi	r2,r3,-32
  8899e0:	28827336 	bltu	r5,r2,88a3b0 <___vfiprintf_internal_r+0xb54>
  8899e4:	100490ba 	slli	r2,r2,2
  8899e8:	02802274 	movhi	r10,137
  8899ec:	52a67f04 	addi	r10,r10,-26116
  8899f0:	1285883a 	add	r2,r2,r10
  8899f4:	10800017 	ldw	r2,0(r2)
  8899f8:	1000683a 	jmp	r2
  8899fc:	0088a0e4 	muli	r2,zero,8835
  889a00:	0088a3b0 	cmpltui	r2,zero,8846
  889a04:	0088a3b0 	cmpltui	r2,zero,8846
  889a08:	0088a104 	movi	r2,8836
  889a0c:	0088a3b0 	cmpltui	r2,zero,8846
  889a10:	0088a3b0 	cmpltui	r2,zero,8846
  889a14:	0088a3b0 	cmpltui	r2,zero,8846
  889a18:	0088a3b0 	cmpltui	r2,zero,8846
  889a1c:	0088a3b0 	cmpltui	r2,zero,8846
  889a20:	0088a3b0 	cmpltui	r2,zero,8846
  889a24:	0088a2ec 	andhi	r2,zero,8843
  889a28:	0088a308 	cmpgei	r2,zero,8844
  889a2c:	0088a3b0 	cmpltui	r2,zero,8846
  889a30:	00889bf0 	cmpltui	r2,zero,8815
  889a34:	0088a318 	cmpnei	r2,zero,8844
  889a38:	0088a3b0 	cmpltui	r2,zero,8846
  889a3c:	0088a110 	cmplti	r2,zero,8836
  889a40:	0088a11c 	xori	r2,zero,8836
  889a44:	0088a11c 	xori	r2,zero,8836
  889a48:	0088a11c 	xori	r2,zero,8836
  889a4c:	0088a11c 	xori	r2,zero,8836
  889a50:	0088a11c 	xori	r2,zero,8836
  889a54:	0088a11c 	xori	r2,zero,8836
  889a58:	0088a11c 	xori	r2,zero,8836
  889a5c:	0088a11c 	xori	r2,zero,8836
  889a60:	0088a11c 	xori	r2,zero,8836
  889a64:	0088a3b0 	cmpltui	r2,zero,8846
  889a68:	0088a3b0 	cmpltui	r2,zero,8846
  889a6c:	0088a3b0 	cmpltui	r2,zero,8846
  889a70:	0088a3b0 	cmpltui	r2,zero,8846
  889a74:	0088a3b0 	cmpltui	r2,zero,8846
  889a78:	0088a3b0 	cmpltui	r2,zero,8846
  889a7c:	0088a3b0 	cmpltui	r2,zero,8846
  889a80:	0088a3b0 	cmpltui	r2,zero,8846
  889a84:	0088a3b0 	cmpltui	r2,zero,8846
  889a88:	0088a3b0 	cmpltui	r2,zero,8846
  889a8c:	0088a148 	cmpgei	r2,zero,8837
  889a90:	0088a3b0 	cmpltui	r2,zero,8846
  889a94:	0088a3b0 	cmpltui	r2,zero,8846
  889a98:	0088a3b0 	cmpltui	r2,zero,8846
  889a9c:	0088a3b0 	cmpltui	r2,zero,8846
  889aa0:	0088a3b0 	cmpltui	r2,zero,8846
  889aa4:	0088a3b0 	cmpltui	r2,zero,8846
  889aa8:	0088a3b0 	cmpltui	r2,zero,8846
  889aac:	0088a3b0 	cmpltui	r2,zero,8846
  889ab0:	0088a3b0 	cmpltui	r2,zero,8846
  889ab4:	0088a3b0 	cmpltui	r2,zero,8846
  889ab8:	0088a180 	call	88a18 <__alt_mem_new_sdram_controller_0+0x88a18>
  889abc:	0088a3b0 	cmpltui	r2,zero,8846
  889ac0:	0088a3b0 	cmpltui	r2,zero,8846
  889ac4:	0088a3b0 	cmpltui	r2,zero,8846
  889ac8:	0088a3b0 	cmpltui	r2,zero,8846
  889acc:	0088a3b0 	cmpltui	r2,zero,8846
  889ad0:	0088a1d8 	cmpnei	r2,zero,8839
  889ad4:	0088a3b0 	cmpltui	r2,zero,8846
  889ad8:	0088a3b0 	cmpltui	r2,zero,8846
  889adc:	0088a248 	cmpgei	r2,zero,8841
  889ae0:	0088a3b0 	cmpltui	r2,zero,8846
  889ae4:	0088a3b0 	cmpltui	r2,zero,8846
  889ae8:	0088a3b0 	cmpltui	r2,zero,8846
  889aec:	0088a3b0 	cmpltui	r2,zero,8846
  889af0:	0088a3b0 	cmpltui	r2,zero,8846
  889af4:	0088a3b0 	cmpltui	r2,zero,8846
  889af8:	0088a3b0 	cmpltui	r2,zero,8846
  889afc:	0088a3b0 	cmpltui	r2,zero,8846
  889b00:	0088a3b0 	cmpltui	r2,zero,8846
  889b04:	0088a3b0 	cmpltui	r2,zero,8846
  889b08:	00889ff4 	movhi	r2,8831
  889b0c:	0088a020 	cmpeqi	r2,zero,8832
  889b10:	0088a3b0 	cmpltui	r2,zero,8846
  889b14:	0088a3b0 	cmpltui	r2,zero,8846
  889b18:	0088a3b0 	cmpltui	r2,zero,8846
  889b1c:	0088a358 	cmpnei	r2,zero,8845
  889b20:	0088a020 	cmpeqi	r2,zero,8832
  889b24:	0088a3b0 	cmpltui	r2,zero,8846
  889b28:	0088a3b0 	cmpltui	r2,zero,8846
  889b2c:	00889eb4 	movhi	r2,8826
  889b30:	0088a3b0 	cmpltui	r2,zero,8846
  889b34:	00889ec4 	movi	r2,8827
  889b38:	00889f00 	call	889f0 <__alt_mem_new_sdram_controller_0+0x889f0>
  889b3c:	00889bfc 	xorhi	r2,zero,8815
  889b40:	00889ea8 	cmpgeui	r2,zero,8826
  889b44:	0088a3b0 	cmpltui	r2,zero,8846
  889b48:	0088a284 	movi	r2,8842
  889b4c:	0088a3b0 	cmpltui	r2,zero,8846
  889b50:	0088a2dc 	xori	r2,zero,8843
  889b54:	0088a3b0 	cmpltui	r2,zero,8846
  889b58:	0088a3b0 	cmpltui	r2,zero,8846
  889b5c:	00889fa0 	cmpeqi	r2,zero,8830
  889b60:	42000204 	addi	r8,r8,8
  889b64:	da802317 	ldw	r10,140(sp)
  889b68:	5455883a 	add	r10,r10,r17
  889b6c:	da802315 	stw	r10,140(sp)
  889b70:	003f8b06 	br	8899a0 <___vfiprintf_internal_r+0x144>
  889b74:	d9002017 	ldw	r4,128(sp)
  889b78:	a00b883a 	mov	r5,r20
  889b7c:	0885a600 	call	885a60 <__swsetup_r>
  889b80:	1003b11e 	bne	r2,zero,88aa48 <___vfiprintf_internal_r+0x11ec>
  889b84:	a080030b 	ldhu	r2,12(r20)
  889b88:	00c00284 	movi	r3,10
  889b8c:	1080068c 	andi	r2,r2,26
  889b90:	10ff541e 	bne	r2,r3,8898e4 <___vfiprintf_internal_r+0x88>
  889b94:	a080038f 	ldh	r2,14(r20)
  889b98:	103f5216 	blt	r2,zero,8898e4 <___vfiprintf_internal_r+0x88>
  889b9c:	d9c02217 	ldw	r7,136(sp)
  889ba0:	d9002017 	ldw	r4,128(sp)
  889ba4:	e00d883a 	mov	r6,fp
  889ba8:	a00b883a 	mov	r5,r20
  889bac:	088acd40 	call	88acd4 <__sbprintf>
  889bb0:	dfc03617 	ldw	ra,216(sp)
  889bb4:	df003517 	ldw	fp,212(sp)
  889bb8:	ddc03417 	ldw	r23,208(sp)
  889bbc:	dd803317 	ldw	r22,204(sp)
  889bc0:	dd403217 	ldw	r21,200(sp)
  889bc4:	dd003117 	ldw	r20,196(sp)
  889bc8:	dcc03017 	ldw	r19,192(sp)
  889bcc:	dc802f17 	ldw	r18,188(sp)
  889bd0:	dc402e17 	ldw	r17,184(sp)
  889bd4:	dc002d17 	ldw	r16,180(sp)
  889bd8:	dec03704 	addi	sp,sp,220
  889bdc:	f800283a 	ret
  889be0:	0887a340 	call	887a34 <__sinit>
  889be4:	003f2f06 	br	8898a4 <___vfiprintf_internal_r+0x48>
  889be8:	0463c83a 	sub	r17,zero,r17
  889bec:	d8802215 	stw	r2,136(sp)
  889bf0:	a5000114 	ori	r20,r20,4
  889bf4:	80c00007 	ldb	r3,0(r16)
  889bf8:	003f7706 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  889bfc:	00800c04 	movi	r2,48
  889c00:	da802217 	ldw	r10,136(sp)
  889c04:	d8801d05 	stb	r2,116(sp)
  889c08:	00801e04 	movi	r2,120
  889c0c:	d8801d45 	stb	r2,117(sp)
  889c10:	d8001d85 	stb	zero,118(sp)
  889c14:	50c00104 	addi	r3,r10,4
  889c18:	54800017 	ldw	r18,0(r10)
  889c1c:	0027883a 	mov	r19,zero
  889c20:	a0800094 	ori	r2,r20,2
  889c24:	48030b16 	blt	r9,zero,88a854 <___vfiprintf_internal_r+0xff8>
  889c28:	00bfdfc4 	movi	r2,-129
  889c2c:	a096703a 	and	r11,r20,r2
  889c30:	d8c02215 	stw	r3,136(sp)
  889c34:	5d000094 	ori	r20,r11,2
  889c38:	90032b1e 	bne	r18,zero,88a8e8 <___vfiprintf_internal_r+0x108c>
  889c3c:	00802274 	movhi	r2,137
  889c40:	10894004 	addi	r2,r2,9472
  889c44:	d8802615 	stw	r2,152(sp)
  889c48:	0039883a 	mov	fp,zero
  889c4c:	48017b1e 	bne	r9,zero,88a23c <___vfiprintf_internal_r+0x9e0>
  889c50:	0013883a 	mov	r9,zero
  889c54:	0027883a 	mov	r19,zero
  889c58:	dd401a04 	addi	r21,sp,104
  889c5c:	4825883a 	mov	r18,r9
  889c60:	4cc0010e 	bge	r9,r19,889c68 <___vfiprintf_internal_r+0x40c>
  889c64:	9825883a 	mov	r18,r19
  889c68:	e7003fcc 	andi	fp,fp,255
  889c6c:	e700201c 	xori	fp,fp,128
  889c70:	e73fe004 	addi	fp,fp,-128
  889c74:	e0000126 	beq	fp,zero,889c7c <___vfiprintf_internal_r+0x420>
  889c78:	94800044 	addi	r18,r18,1
  889c7c:	a380008c 	andi	r14,r20,2
  889c80:	70000126 	beq	r14,zero,889c88 <___vfiprintf_internal_r+0x42c>
  889c84:	94800084 	addi	r18,r18,2
  889c88:	a700210c 	andi	fp,r20,132
  889c8c:	e001df1e 	bne	fp,zero,88a40c <___vfiprintf_internal_r+0xbb0>
  889c90:	8c87c83a 	sub	r3,r17,r18
  889c94:	00c1dd0e 	bge	zero,r3,88a40c <___vfiprintf_internal_r+0xbb0>
  889c98:	01c00404 	movi	r7,16
  889c9c:	d8801c17 	ldw	r2,112(sp)
  889ca0:	38c3ad0e 	bge	r7,r3,88ab58 <___vfiprintf_internal_r+0x12fc>
  889ca4:	02802274 	movhi	r10,137
  889ca8:	5289a404 	addi	r10,r10,9872
  889cac:	dc002915 	stw	r16,164(sp)
  889cb0:	d9801b17 	ldw	r6,108(sp)
  889cb4:	da802415 	stw	r10,144(sp)
  889cb8:	03c001c4 	movi	r15,7
  889cbc:	da402515 	stw	r9,148(sp)
  889cc0:	db802815 	stw	r14,160(sp)
  889cc4:	1821883a 	mov	r16,r3
  889cc8:	00000506 	br	889ce0 <___vfiprintf_internal_r+0x484>
  889ccc:	31400084 	addi	r5,r6,2
  889cd0:	42000204 	addi	r8,r8,8
  889cd4:	200d883a 	mov	r6,r4
  889cd8:	843ffc04 	addi	r16,r16,-16
  889cdc:	3c000d0e 	bge	r7,r16,889d14 <___vfiprintf_internal_r+0x4b8>
  889ce0:	10800404 	addi	r2,r2,16
  889ce4:	31000044 	addi	r4,r6,1
  889ce8:	45800015 	stw	r22,0(r8)
  889cec:	41c00115 	stw	r7,4(r8)
  889cf0:	d8801c15 	stw	r2,112(sp)
  889cf4:	d9001b15 	stw	r4,108(sp)
  889cf8:	793ff40e 	bge	r15,r4,889ccc <___vfiprintf_internal_r+0x470>
  889cfc:	1001b51e 	bne	r2,zero,88a3d4 <___vfiprintf_internal_r+0xb78>
  889d00:	843ffc04 	addi	r16,r16,-16
  889d04:	000d883a 	mov	r6,zero
  889d08:	01400044 	movi	r5,1
  889d0c:	d811883a 	mov	r8,sp
  889d10:	3c3ff316 	blt	r7,r16,889ce0 <___vfiprintf_internal_r+0x484>
  889d14:	8007883a 	mov	r3,r16
  889d18:	da402517 	ldw	r9,148(sp)
  889d1c:	db802817 	ldw	r14,160(sp)
  889d20:	dc002917 	ldw	r16,164(sp)
  889d24:	da802417 	ldw	r10,144(sp)
  889d28:	1885883a 	add	r2,r3,r2
  889d2c:	40c00115 	stw	r3,4(r8)
  889d30:	42800015 	stw	r10,0(r8)
  889d34:	d8801c15 	stw	r2,112(sp)
  889d38:	d9401b15 	stw	r5,108(sp)
  889d3c:	00c001c4 	movi	r3,7
  889d40:	19426016 	blt	r3,r5,88a6c4 <___vfiprintf_internal_r+0xe68>
  889d44:	d8c01d87 	ldb	r3,118(sp)
  889d48:	42000204 	addi	r8,r8,8
  889d4c:	29000044 	addi	r4,r5,1
  889d50:	1801b31e 	bne	r3,zero,88a420 <___vfiprintf_internal_r+0xbc4>
  889d54:	7001c026 	beq	r14,zero,88a458 <___vfiprintf_internal_r+0xbfc>
  889d58:	d8c01d04 	addi	r3,sp,116
  889d5c:	10800084 	addi	r2,r2,2
  889d60:	40c00015 	stw	r3,0(r8)
  889d64:	00c00084 	movi	r3,2
  889d68:	40c00115 	stw	r3,4(r8)
  889d6c:	d8801c15 	stw	r2,112(sp)
  889d70:	d9001b15 	stw	r4,108(sp)
  889d74:	00c001c4 	movi	r3,7
  889d78:	1902650e 	bge	r3,r4,88a710 <___vfiprintf_internal_r+0xeb4>
  889d7c:	10029a1e 	bne	r2,zero,88a7e8 <___vfiprintf_internal_r+0xf8c>
  889d80:	00c02004 	movi	r3,128
  889d84:	01000044 	movi	r4,1
  889d88:	000b883a 	mov	r5,zero
  889d8c:	d811883a 	mov	r8,sp
  889d90:	e0c1b31e 	bne	fp,r3,88a460 <___vfiprintf_internal_r+0xc04>
  889d94:	8cb9c83a 	sub	fp,r17,r18
  889d98:	0701b10e 	bge	zero,fp,88a460 <___vfiprintf_internal_r+0xc04>
  889d9c:	01c00404 	movi	r7,16
  889da0:	3f03890e 	bge	r7,fp,88abc8 <___vfiprintf_internal_r+0x136c>
  889da4:	00c02274 	movhi	r3,137
  889da8:	18c9a004 	addi	r3,r3,9856
  889dac:	d8c02415 	stw	r3,144(sp)
  889db0:	8007883a 	mov	r3,r16
  889db4:	034001c4 	movi	r13,7
  889db8:	e021883a 	mov	r16,fp
  889dbc:	da402515 	stw	r9,148(sp)
  889dc0:	1839883a 	mov	fp,r3
  889dc4:	00000506 	br	889ddc <___vfiprintf_internal_r+0x580>
  889dc8:	29800084 	addi	r6,r5,2
  889dcc:	42000204 	addi	r8,r8,8
  889dd0:	180b883a 	mov	r5,r3
  889dd4:	843ffc04 	addi	r16,r16,-16
  889dd8:	3c000d0e 	bge	r7,r16,889e10 <___vfiprintf_internal_r+0x5b4>
  889ddc:	10800404 	addi	r2,r2,16
  889de0:	28c00044 	addi	r3,r5,1
  889de4:	45c00015 	stw	r23,0(r8)
  889de8:	41c00115 	stw	r7,4(r8)
  889dec:	d8801c15 	stw	r2,112(sp)
  889df0:	d8c01b15 	stw	r3,108(sp)
  889df4:	68fff40e 	bge	r13,r3,889dc8 <___vfiprintf_internal_r+0x56c>
  889df8:	1002241e 	bne	r2,zero,88a68c <___vfiprintf_internal_r+0xe30>
  889dfc:	843ffc04 	addi	r16,r16,-16
  889e00:	01800044 	movi	r6,1
  889e04:	000b883a 	mov	r5,zero
  889e08:	d811883a 	mov	r8,sp
  889e0c:	3c3ff316 	blt	r7,r16,889ddc <___vfiprintf_internal_r+0x580>
  889e10:	da402517 	ldw	r9,148(sp)
  889e14:	e007883a 	mov	r3,fp
  889e18:	8039883a 	mov	fp,r16
  889e1c:	1821883a 	mov	r16,r3
  889e20:	d8c02417 	ldw	r3,144(sp)
  889e24:	1705883a 	add	r2,r2,fp
  889e28:	47000115 	stw	fp,4(r8)
  889e2c:	40c00015 	stw	r3,0(r8)
  889e30:	d8801c15 	stw	r2,112(sp)
  889e34:	d9801b15 	stw	r6,108(sp)
  889e38:	00c001c4 	movi	r3,7
  889e3c:	19827616 	blt	r3,r6,88a818 <___vfiprintf_internal_r+0xfbc>
  889e40:	4cf9c83a 	sub	fp,r9,r19
  889e44:	42000204 	addi	r8,r8,8
  889e48:	31000044 	addi	r4,r6,1
  889e4c:	300b883a 	mov	r5,r6
  889e50:	07018516 	blt	zero,fp,88a468 <___vfiprintf_internal_r+0xc0c>
  889e54:	9885883a 	add	r2,r19,r2
  889e58:	45400015 	stw	r21,0(r8)
  889e5c:	44c00115 	stw	r19,4(r8)
  889e60:	d8801c15 	stw	r2,112(sp)
  889e64:	d9001b15 	stw	r4,108(sp)
  889e68:	00c001c4 	movi	r3,7
  889e6c:	1901dd0e 	bge	r3,r4,88a5e4 <___vfiprintf_internal_r+0xd88>
  889e70:	1002401e 	bne	r2,zero,88a774 <___vfiprintf_internal_r+0xf18>
  889e74:	d8001b15 	stw	zero,108(sp)
  889e78:	a2c0010c 	andi	r11,r20,4
  889e7c:	58000226 	beq	r11,zero,889e88 <___vfiprintf_internal_r+0x62c>
  889e80:	8ca7c83a 	sub	r19,r17,r18
  889e84:	04c2f216 	blt	zero,r19,88aa50 <___vfiprintf_internal_r+0x11f4>
  889e88:	8c80010e 	bge	r17,r18,889e90 <___vfiprintf_internal_r+0x634>
  889e8c:	9023883a 	mov	r17,r18
  889e90:	da802317 	ldw	r10,140(sp)
  889e94:	5455883a 	add	r10,r10,r17
  889e98:	da802315 	stw	r10,140(sp)
  889e9c:	d8001b15 	stw	zero,108(sp)
  889ea0:	d811883a 	mov	r8,sp
  889ea4:	003ea206 	br	889930 <___vfiprintf_internal_r+0xd4>
  889ea8:	a5000814 	ori	r20,r20,32
  889eac:	80c00007 	ldb	r3,0(r16)
  889eb0:	003ec906 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  889eb4:	80c00007 	ldb	r3,0(r16)
  889eb8:	1b030926 	beq	r3,r12,88aae0 <___vfiprintf_internal_r+0x1284>
  889ebc:	a5000414 	ori	r20,r20,16
  889ec0:	003ec506 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  889ec4:	21003fcc 	andi	r4,r4,255
  889ec8:	20035e1e 	bne	r4,zero,88ac44 <___vfiprintf_internal_r+0x13e8>
  889ecc:	a080080c 	andi	r2,r20,32
  889ed0:	1002a526 	beq	r2,zero,88a968 <___vfiprintf_internal_r+0x110c>
  889ed4:	da802217 	ldw	r10,136(sp)
  889ed8:	50800017 	ldw	r2,0(r10)
  889edc:	da802317 	ldw	r10,140(sp)
  889ee0:	5007d7fa 	srai	r3,r10,31
  889ee4:	da802217 	ldw	r10,136(sp)
  889ee8:	10c00115 	stw	r3,4(r2)
  889eec:	52800104 	addi	r10,r10,4
  889ef0:	da802215 	stw	r10,136(sp)
  889ef4:	da802317 	ldw	r10,140(sp)
  889ef8:	12800015 	stw	r10,0(r2)
  889efc:	003e8c06 	br	889930 <___vfiprintf_internal_r+0xd4>
  889f00:	21003fcc 	andi	r4,r4,255
  889f04:	2003511e 	bne	r4,zero,88ac4c <___vfiprintf_internal_r+0x13f0>
  889f08:	a080080c 	andi	r2,r20,32
  889f0c:	1000a126 	beq	r2,zero,88a194 <___vfiprintf_internal_r+0x938>
  889f10:	da802217 	ldw	r10,136(sp)
  889f14:	d8001d85 	stb	zero,118(sp)
  889f18:	50800204 	addi	r2,r10,8
  889f1c:	54800017 	ldw	r18,0(r10)
  889f20:	54c00117 	ldw	r19,4(r10)
  889f24:	4802b416 	blt	r9,zero,88a9f8 <___vfiprintf_internal_r+0x119c>
  889f28:	013fdfc4 	movi	r4,-129
  889f2c:	94c6b03a 	or	r3,r18,r19
  889f30:	d8802215 	stw	r2,136(sp)
  889f34:	a128703a 	and	r20,r20,r4
  889f38:	1800a226 	beq	r3,zero,88a1c4 <___vfiprintf_internal_r+0x968>
  889f3c:	0039883a 	mov	fp,zero
  889f40:	dd401a04 	addi	r21,sp,104
  889f44:	9006d0fa 	srli	r3,r18,3
  889f48:	9808977a 	slli	r4,r19,29
  889f4c:	9826d0fa 	srli	r19,r19,3
  889f50:	948001cc 	andi	r18,r18,7
  889f54:	90800c04 	addi	r2,r18,48
  889f58:	ad7fffc4 	addi	r21,r21,-1
  889f5c:	20e4b03a 	or	r18,r4,r3
  889f60:	a8800005 	stb	r2,0(r21)
  889f64:	94c6b03a 	or	r3,r18,r19
  889f68:	183ff61e 	bne	r3,zero,889f44 <___vfiprintf_internal_r+0x6e8>
  889f6c:	a0c0004c 	andi	r3,r20,1
  889f70:	18005926 	beq	r3,zero,88a0d8 <___vfiprintf_internal_r+0x87c>
  889f74:	10803fcc 	andi	r2,r2,255
  889f78:	1080201c 	xori	r2,r2,128
  889f7c:	10bfe004 	addi	r2,r2,-128
  889f80:	00c00c04 	movi	r3,48
  889f84:	10c05426 	beq	r2,r3,88a0d8 <___vfiprintf_internal_r+0x87c>
  889f88:	da801e17 	ldw	r10,120(sp)
  889f8c:	a8bfffc4 	addi	r2,r21,-1
  889f90:	a8ffffc5 	stb	r3,-1(r21)
  889f94:	50a7c83a 	sub	r19,r10,r2
  889f98:	102b883a 	mov	r21,r2
  889f9c:	003f2f06 	br	889c5c <___vfiprintf_internal_r+0x400>
  889fa0:	21003fcc 	andi	r4,r4,255
  889fa4:	2003421e 	bne	r4,zero,88acb0 <___vfiprintf_internal_r+0x1454>
  889fa8:	00802274 	movhi	r2,137
  889fac:	10894004 	addi	r2,r2,9472
  889fb0:	d8802615 	stw	r2,152(sp)
  889fb4:	a080080c 	andi	r2,r20,32
  889fb8:	1000aa26 	beq	r2,zero,88a264 <___vfiprintf_internal_r+0xa08>
  889fbc:	da802217 	ldw	r10,136(sp)
  889fc0:	54800017 	ldw	r18,0(r10)
  889fc4:	54c00117 	ldw	r19,4(r10)
  889fc8:	52800204 	addi	r10,r10,8
  889fcc:	da802215 	stw	r10,136(sp)
  889fd0:	a080004c 	andi	r2,r20,1
  889fd4:	1001d226 	beq	r2,zero,88a720 <___vfiprintf_internal_r+0xec4>
  889fd8:	94c4b03a 	or	r2,r18,r19
  889fdc:	1002351e 	bne	r2,zero,88a8b4 <___vfiprintf_internal_r+0x1058>
  889fe0:	d8001d85 	stb	zero,118(sp)
  889fe4:	48022216 	blt	r9,zero,88a870 <___vfiprintf_internal_r+0x1014>
  889fe8:	00bfdfc4 	movi	r2,-129
  889fec:	a0a8703a 	and	r20,r20,r2
  889ff0:	003f1506 	br	889c48 <___vfiprintf_internal_r+0x3ec>
  889ff4:	da802217 	ldw	r10,136(sp)
  889ff8:	04800044 	movi	r18,1
  889ffc:	d8001d85 	stb	zero,118(sp)
  88a000:	50800017 	ldw	r2,0(r10)
  88a004:	52800104 	addi	r10,r10,4
  88a008:	da802215 	stw	r10,136(sp)
  88a00c:	d8801005 	stb	r2,64(sp)
  88a010:	9027883a 	mov	r19,r18
  88a014:	dd401004 	addi	r21,sp,64
  88a018:	0013883a 	mov	r9,zero
  88a01c:	003f1706 	br	889c7c <___vfiprintf_internal_r+0x420>
  88a020:	21003fcc 	andi	r4,r4,255
  88a024:	2003201e 	bne	r4,zero,88aca8 <___vfiprintf_internal_r+0x144c>
  88a028:	a080080c 	andi	r2,r20,32
  88a02c:	10004b26 	beq	r2,zero,88a15c <___vfiprintf_internal_r+0x900>
  88a030:	da802217 	ldw	r10,136(sp)
  88a034:	50800117 	ldw	r2,4(r10)
  88a038:	54800017 	ldw	r18,0(r10)
  88a03c:	52800204 	addi	r10,r10,8
  88a040:	da802215 	stw	r10,136(sp)
  88a044:	1027883a 	mov	r19,r2
  88a048:	10022c16 	blt	r2,zero,88a8fc <___vfiprintf_internal_r+0x10a0>
  88a04c:	df001d83 	ldbu	fp,118(sp)
  88a050:	48007216 	blt	r9,zero,88a21c <___vfiprintf_internal_r+0x9c0>
  88a054:	00ffdfc4 	movi	r3,-129
  88a058:	94c4b03a 	or	r2,r18,r19
  88a05c:	a0e8703a 	and	r20,r20,r3
  88a060:	1000cc26 	beq	r2,zero,88a394 <___vfiprintf_internal_r+0xb38>
  88a064:	98021026 	beq	r19,zero,88a8a8 <___vfiprintf_internal_r+0x104c>
  88a068:	dc402415 	stw	r17,144(sp)
  88a06c:	dc002515 	stw	r16,148(sp)
  88a070:	9823883a 	mov	r17,r19
  88a074:	9021883a 	mov	r16,r18
  88a078:	dd401a04 	addi	r21,sp,104
  88a07c:	4825883a 	mov	r18,r9
  88a080:	4027883a 	mov	r19,r8
  88a084:	8009883a 	mov	r4,r16
  88a088:	880b883a 	mov	r5,r17
  88a08c:	01800284 	movi	r6,10
  88a090:	000f883a 	mov	r7,zero
  88a094:	088c7b80 	call	88c7b8 <__umoddi3>
  88a098:	10800c04 	addi	r2,r2,48
  88a09c:	ad7fffc4 	addi	r21,r21,-1
  88a0a0:	8009883a 	mov	r4,r16
  88a0a4:	880b883a 	mov	r5,r17
  88a0a8:	a8800005 	stb	r2,0(r21)
  88a0ac:	01800284 	movi	r6,10
  88a0b0:	000f883a 	mov	r7,zero
  88a0b4:	088c2400 	call	88c240 <__udivdi3>
  88a0b8:	1021883a 	mov	r16,r2
  88a0bc:	10c4b03a 	or	r2,r2,r3
  88a0c0:	1823883a 	mov	r17,r3
  88a0c4:	103fef1e 	bne	r2,zero,88a084 <___vfiprintf_internal_r+0x828>
  88a0c8:	dc402417 	ldw	r17,144(sp)
  88a0cc:	dc002517 	ldw	r16,148(sp)
  88a0d0:	9013883a 	mov	r9,r18
  88a0d4:	9811883a 	mov	r8,r19
  88a0d8:	da801e17 	ldw	r10,120(sp)
  88a0dc:	5567c83a 	sub	r19,r10,r21
  88a0e0:	003ede06 	br	889c5c <___vfiprintf_internal_r+0x400>
  88a0e4:	38803fcc 	andi	r2,r7,255
  88a0e8:	1080201c 	xori	r2,r2,128
  88a0ec:	10bfe004 	addi	r2,r2,-128
  88a0f0:	1002371e 	bne	r2,zero,88a9d0 <___vfiprintf_internal_r+0x1174>
  88a0f4:	01000044 	movi	r4,1
  88a0f8:	01c00804 	movi	r7,32
  88a0fc:	80c00007 	ldb	r3,0(r16)
  88a100:	003e3506 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a104:	a5000054 	ori	r20,r20,1
  88a108:	80c00007 	ldb	r3,0(r16)
  88a10c:	003e3206 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a110:	a5002014 	ori	r20,r20,128
  88a114:	80c00007 	ldb	r3,0(r16)
  88a118:	003e2f06 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a11c:	8015883a 	mov	r10,r16
  88a120:	0023883a 	mov	r17,zero
  88a124:	18bff404 	addi	r2,r3,-48
  88a128:	50c00007 	ldb	r3,0(r10)
  88a12c:	8c4002a4 	muli	r17,r17,10
  88a130:	84000044 	addi	r16,r16,1
  88a134:	8015883a 	mov	r10,r16
  88a138:	1463883a 	add	r17,r2,r17
  88a13c:	18bff404 	addi	r2,r3,-48
  88a140:	30bff92e 	bgeu	r6,r2,88a128 <___vfiprintf_internal_r+0x8cc>
  88a144:	003e2506 	br	8899dc <___vfiprintf_internal_r+0x180>
  88a148:	21003fcc 	andi	r4,r4,255
  88a14c:	2002d41e 	bne	r4,zero,88aca0 <___vfiprintf_internal_r+0x1444>
  88a150:	a5000414 	ori	r20,r20,16
  88a154:	a080080c 	andi	r2,r20,32
  88a158:	103fb51e 	bne	r2,zero,88a030 <___vfiprintf_internal_r+0x7d4>
  88a15c:	a080040c 	andi	r2,r20,16
  88a160:	1001f826 	beq	r2,zero,88a944 <___vfiprintf_internal_r+0x10e8>
  88a164:	da802217 	ldw	r10,136(sp)
  88a168:	54800017 	ldw	r18,0(r10)
  88a16c:	52800104 	addi	r10,r10,4
  88a170:	da802215 	stw	r10,136(sp)
  88a174:	9027d7fa 	srai	r19,r18,31
  88a178:	9805883a 	mov	r2,r19
  88a17c:	003fb206 	br	88a048 <___vfiprintf_internal_r+0x7ec>
  88a180:	21003fcc 	andi	r4,r4,255
  88a184:	2002c41e 	bne	r4,zero,88ac98 <___vfiprintf_internal_r+0x143c>
  88a188:	a5000414 	ori	r20,r20,16
  88a18c:	a080080c 	andi	r2,r20,32
  88a190:	103f5f1e 	bne	r2,zero,889f10 <___vfiprintf_internal_r+0x6b4>
  88a194:	a080040c 	andi	r2,r20,16
  88a198:	10020f26 	beq	r2,zero,88a9d8 <___vfiprintf_internal_r+0x117c>
  88a19c:	da802217 	ldw	r10,136(sp)
  88a1a0:	d8001d85 	stb	zero,118(sp)
  88a1a4:	0027883a 	mov	r19,zero
  88a1a8:	50800104 	addi	r2,r10,4
  88a1ac:	54800017 	ldw	r18,0(r10)
  88a1b0:	48021116 	blt	r9,zero,88a9f8 <___vfiprintf_internal_r+0x119c>
  88a1b4:	00ffdfc4 	movi	r3,-129
  88a1b8:	d8802215 	stw	r2,136(sp)
  88a1bc:	a0e8703a 	and	r20,r20,r3
  88a1c0:	903f5e1e 	bne	r18,zero,889f3c <___vfiprintf_internal_r+0x6e0>
  88a1c4:	0039883a 	mov	fp,zero
  88a1c8:	4802a626 	beq	r9,zero,88ac64 <___vfiprintf_internal_r+0x1408>
  88a1cc:	0025883a 	mov	r18,zero
  88a1d0:	0027883a 	mov	r19,zero
  88a1d4:	003f5a06 	br	889f40 <___vfiprintf_internal_r+0x6e4>
  88a1d8:	21003fcc 	andi	r4,r4,255
  88a1dc:	20029f1e 	bne	r4,zero,88ac5c <___vfiprintf_internal_r+0x1400>
  88a1e0:	a5000414 	ori	r20,r20,16
  88a1e4:	a080080c 	andi	r2,r20,32
  88a1e8:	10005e1e 	bne	r2,zero,88a364 <___vfiprintf_internal_r+0xb08>
  88a1ec:	a080040c 	andi	r2,r20,16
  88a1f0:	1001a21e 	bne	r2,zero,88a87c <___vfiprintf_internal_r+0x1020>
  88a1f4:	a080100c 	andi	r2,r20,64
  88a1f8:	d8001d85 	stb	zero,118(sp)
  88a1fc:	da802217 	ldw	r10,136(sp)
  88a200:	1002231e 	bne	r2,zero,88aa90 <___vfiprintf_internal_r+0x1234>
  88a204:	50800104 	addi	r2,r10,4
  88a208:	54800017 	ldw	r18,0(r10)
  88a20c:	0027883a 	mov	r19,zero
  88a210:	4801a00e 	bge	r9,zero,88a894 <___vfiprintf_internal_r+0x1038>
  88a214:	d8802215 	stw	r2,136(sp)
  88a218:	0039883a 	mov	fp,zero
  88a21c:	94c4b03a 	or	r2,r18,r19
  88a220:	103f901e 	bne	r2,zero,88a064 <___vfiprintf_internal_r+0x808>
  88a224:	00800044 	movi	r2,1
  88a228:	10803fcc 	andi	r2,r2,255
  88a22c:	00c00044 	movi	r3,1
  88a230:	10c05926 	beq	r2,r3,88a398 <___vfiprintf_internal_r+0xb3c>
  88a234:	00c00084 	movi	r3,2
  88a238:	10ffe41e 	bne	r2,r3,88a1cc <___vfiprintf_internal_r+0x970>
  88a23c:	0025883a 	mov	r18,zero
  88a240:	0027883a 	mov	r19,zero
  88a244:	00013d06 	br	88a73c <___vfiprintf_internal_r+0xee0>
  88a248:	21003fcc 	andi	r4,r4,255
  88a24c:	2002811e 	bne	r4,zero,88ac54 <___vfiprintf_internal_r+0x13f8>
  88a250:	00802274 	movhi	r2,137
  88a254:	10893b04 	addi	r2,r2,9452
  88a258:	d8802615 	stw	r2,152(sp)
  88a25c:	a080080c 	andi	r2,r20,32
  88a260:	103f561e 	bne	r2,zero,889fbc <___vfiprintf_internal_r+0x760>
  88a264:	a080040c 	andi	r2,r20,16
  88a268:	1001d126 	beq	r2,zero,88a9b0 <___vfiprintf_internal_r+0x1154>
  88a26c:	da802217 	ldw	r10,136(sp)
  88a270:	0027883a 	mov	r19,zero
  88a274:	54800017 	ldw	r18,0(r10)
  88a278:	52800104 	addi	r10,r10,4
  88a27c:	da802215 	stw	r10,136(sp)
  88a280:	003f5306 	br	889fd0 <___vfiprintf_internal_r+0x774>
  88a284:	da802217 	ldw	r10,136(sp)
  88a288:	d8001d85 	stb	zero,118(sp)
  88a28c:	55400017 	ldw	r21,0(r10)
  88a290:	50c00104 	addi	r3,r10,4
  88a294:	a8024226 	beq	r21,zero,88aba0 <___vfiprintf_internal_r+0x1344>
  88a298:	48021816 	blt	r9,zero,88aafc <___vfiprintf_internal_r+0x12a0>
  88a29c:	480d883a 	mov	r6,r9
  88a2a0:	000b883a 	mov	r5,zero
  88a2a4:	a809883a 	mov	r4,r21
  88a2a8:	d8c02a15 	stw	r3,168(sp)
  88a2ac:	da002b15 	stw	r8,172(sp)
  88a2b0:	da402c15 	stw	r9,176(sp)
  88a2b4:	08882d80 	call	8882d8 <memchr>
  88a2b8:	d8c02a17 	ldw	r3,168(sp)
  88a2bc:	da002b17 	ldw	r8,172(sp)
  88a2c0:	da402c17 	ldw	r9,176(sp)
  88a2c4:	10024826 	beq	r2,zero,88abe8 <___vfiprintf_internal_r+0x138c>
  88a2c8:	1567c83a 	sub	r19,r2,r21
  88a2cc:	df001d83 	ldbu	fp,118(sp)
  88a2d0:	d8c02215 	stw	r3,136(sp)
  88a2d4:	0013883a 	mov	r9,zero
  88a2d8:	003e6006 	br	889c5c <___vfiprintf_internal_r+0x400>
  88a2dc:	21003fcc 	andi	r4,r4,255
  88a2e0:	203fc026 	beq	r4,zero,88a1e4 <___vfiprintf_internal_r+0x988>
  88a2e4:	d9c01d85 	stb	r7,118(sp)
  88a2e8:	003fbe06 	br	88a1e4 <___vfiprintf_internal_r+0x988>
  88a2ec:	da802217 	ldw	r10,136(sp)
  88a2f0:	54400017 	ldw	r17,0(r10)
  88a2f4:	50800104 	addi	r2,r10,4
  88a2f8:	883e3b16 	blt	r17,zero,889be8 <___vfiprintf_internal_r+0x38c>
  88a2fc:	d8802215 	stw	r2,136(sp)
  88a300:	80c00007 	ldb	r3,0(r16)
  88a304:	003db406 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a308:	01000044 	movi	r4,1
  88a30c:	01c00ac4 	movi	r7,43
  88a310:	80c00007 	ldb	r3,0(r16)
  88a314:	003db006 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a318:	80c00007 	ldb	r3,0(r16)
  88a31c:	82800044 	addi	r10,r16,1
  88a320:	1b423c26 	beq	r3,r13,88ac14 <___vfiprintf_internal_r+0x13b8>
  88a324:	18bff404 	addi	r2,r3,-48
  88a328:	0013883a 	mov	r9,zero
  88a32c:	30822b36 	bltu	r6,r2,88abdc <___vfiprintf_internal_r+0x1380>
  88a330:	50c00007 	ldb	r3,0(r10)
  88a334:	4a4002a4 	muli	r9,r9,10
  88a338:	54000044 	addi	r16,r10,1
  88a33c:	8015883a 	mov	r10,r16
  88a340:	4893883a 	add	r9,r9,r2
  88a344:	18bff404 	addi	r2,r3,-48
  88a348:	30bff92e 	bgeu	r6,r2,88a330 <___vfiprintf_internal_r+0xad4>
  88a34c:	483da30e 	bge	r9,zero,8899dc <___vfiprintf_internal_r+0x180>
  88a350:	027fffc4 	movi	r9,-1
  88a354:	003da106 	br	8899dc <___vfiprintf_internal_r+0x180>
  88a358:	a5001014 	ori	r20,r20,64
  88a35c:	80c00007 	ldb	r3,0(r16)
  88a360:	003d9d06 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a364:	da802217 	ldw	r10,136(sp)
  88a368:	d8001d85 	stb	zero,118(sp)
  88a36c:	50c00204 	addi	r3,r10,8
  88a370:	54800017 	ldw	r18,0(r10)
  88a374:	54c00117 	ldw	r19,4(r10)
  88a378:	4801ca16 	blt	r9,zero,88aaa4 <___vfiprintf_internal_r+0x1248>
  88a37c:	013fdfc4 	movi	r4,-129
  88a380:	94c4b03a 	or	r2,r18,r19
  88a384:	d8c02215 	stw	r3,136(sp)
  88a388:	a128703a 	and	r20,r20,r4
  88a38c:	0039883a 	mov	fp,zero
  88a390:	103f341e 	bne	r2,zero,88a064 <___vfiprintf_internal_r+0x808>
  88a394:	483e2e26 	beq	r9,zero,889c50 <___vfiprintf_internal_r+0x3f4>
  88a398:	0025883a 	mov	r18,zero
  88a39c:	94800c04 	addi	r18,r18,48
  88a3a0:	dc8019c5 	stb	r18,103(sp)
  88a3a4:	dcc02717 	ldw	r19,156(sp)
  88a3a8:	dd4019c4 	addi	r21,sp,103
  88a3ac:	003e2b06 	br	889c5c <___vfiprintf_internal_r+0x400>
  88a3b0:	21003fcc 	andi	r4,r4,255
  88a3b4:	2002361e 	bne	r4,zero,88ac90 <___vfiprintf_internal_r+0x1434>
  88a3b8:	1801c126 	beq	r3,zero,88aac0 <___vfiprintf_internal_r+0x1264>
  88a3bc:	04800044 	movi	r18,1
  88a3c0:	d8c01005 	stb	r3,64(sp)
  88a3c4:	d8001d85 	stb	zero,118(sp)
  88a3c8:	9027883a 	mov	r19,r18
  88a3cc:	dd401004 	addi	r21,sp,64
  88a3d0:	003f1106 	br	88a018 <___vfiprintf_internal_r+0x7bc>
  88a3d4:	d9402117 	ldw	r5,132(sp)
  88a3d8:	d9002017 	ldw	r4,128(sp)
  88a3dc:	d9801a04 	addi	r6,sp,104
  88a3e0:	d9c02b15 	stw	r7,172(sp)
  88a3e4:	dbc02a15 	stw	r15,168(sp)
  88a3e8:	08897480 	call	889748 <__sprint_r.part.0>
  88a3ec:	d9c02b17 	ldw	r7,172(sp)
  88a3f0:	dbc02a17 	ldw	r15,168(sp)
  88a3f4:	10006d1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a3f8:	d9801b17 	ldw	r6,108(sp)
  88a3fc:	d8801c17 	ldw	r2,112(sp)
  88a400:	d811883a 	mov	r8,sp
  88a404:	31400044 	addi	r5,r6,1
  88a408:	003e3306 	br	889cd8 <___vfiprintf_internal_r+0x47c>
  88a40c:	d9401b17 	ldw	r5,108(sp)
  88a410:	d8801c17 	ldw	r2,112(sp)
  88a414:	29000044 	addi	r4,r5,1
  88a418:	d8c01d87 	ldb	r3,118(sp)
  88a41c:	183e4d26 	beq	r3,zero,889d54 <___vfiprintf_internal_r+0x4f8>
  88a420:	00c00044 	movi	r3,1
  88a424:	d9401d84 	addi	r5,sp,118
  88a428:	10c5883a 	add	r2,r2,r3
  88a42c:	41400015 	stw	r5,0(r8)
  88a430:	40c00115 	stw	r3,4(r8)
  88a434:	d8801c15 	stw	r2,112(sp)
  88a438:	d9001b15 	stw	r4,108(sp)
  88a43c:	014001c4 	movi	r5,7
  88a440:	2900a90e 	bge	r5,r4,88a6e8 <___vfiprintf_internal_r+0xe8c>
  88a444:	1000da1e 	bne	r2,zero,88a7b0 <___vfiprintf_internal_r+0xf54>
  88a448:	7000ab1e 	bne	r14,zero,88a6f8 <___vfiprintf_internal_r+0xe9c>
  88a44c:	000b883a 	mov	r5,zero
  88a450:	1809883a 	mov	r4,r3
  88a454:	d811883a 	mov	r8,sp
  88a458:	00c02004 	movi	r3,128
  88a45c:	e0fe4d26 	beq	fp,r3,889d94 <___vfiprintf_internal_r+0x538>
  88a460:	4cf9c83a 	sub	fp,r9,r19
  88a464:	073e7b0e 	bge	zero,fp,889e54 <___vfiprintf_internal_r+0x5f8>
  88a468:	01c00404 	movi	r7,16
  88a46c:	3f01900e 	bge	r7,fp,88aab0 <___vfiprintf_internal_r+0x1254>
  88a470:	00c02274 	movhi	r3,137
  88a474:	18c9a004 	addi	r3,r3,9856
  88a478:	d8c02415 	stw	r3,144(sp)
  88a47c:	034001c4 	movi	r13,7
  88a480:	00000506 	br	88a498 <___vfiprintf_internal_r+0xc3c>
  88a484:	29000084 	addi	r4,r5,2
  88a488:	42000204 	addi	r8,r8,8
  88a48c:	180b883a 	mov	r5,r3
  88a490:	e73ffc04 	addi	fp,fp,-16
  88a494:	3f000d0e 	bge	r7,fp,88a4cc <___vfiprintf_internal_r+0xc70>
  88a498:	10800404 	addi	r2,r2,16
  88a49c:	28c00044 	addi	r3,r5,1
  88a4a0:	45c00015 	stw	r23,0(r8)
  88a4a4:	41c00115 	stw	r7,4(r8)
  88a4a8:	d8801c15 	stw	r2,112(sp)
  88a4ac:	d8c01b15 	stw	r3,108(sp)
  88a4b0:	68fff40e 	bge	r13,r3,88a484 <___vfiprintf_internal_r+0xc28>
  88a4b4:	1000101e 	bne	r2,zero,88a4f8 <___vfiprintf_internal_r+0xc9c>
  88a4b8:	e73ffc04 	addi	fp,fp,-16
  88a4bc:	01000044 	movi	r4,1
  88a4c0:	000b883a 	mov	r5,zero
  88a4c4:	d811883a 	mov	r8,sp
  88a4c8:	3f3ff316 	blt	r7,fp,88a498 <___vfiprintf_internal_r+0xc3c>
  88a4cc:	da802417 	ldw	r10,144(sp)
  88a4d0:	1705883a 	add	r2,r2,fp
  88a4d4:	47000115 	stw	fp,4(r8)
  88a4d8:	42800015 	stw	r10,0(r8)
  88a4dc:	d8801c15 	stw	r2,112(sp)
  88a4e0:	d9001b15 	stw	r4,108(sp)
  88a4e4:	00c001c4 	movi	r3,7
  88a4e8:	19003616 	blt	r3,r4,88a5c4 <___vfiprintf_internal_r+0xd68>
  88a4ec:	42000204 	addi	r8,r8,8
  88a4f0:	21000044 	addi	r4,r4,1
  88a4f4:	003e5706 	br	889e54 <___vfiprintf_internal_r+0x5f8>
  88a4f8:	d9402117 	ldw	r5,132(sp)
  88a4fc:	d9002017 	ldw	r4,128(sp)
  88a500:	d9801a04 	addi	r6,sp,104
  88a504:	d9c02b15 	stw	r7,172(sp)
  88a508:	db402a15 	stw	r13,168(sp)
  88a50c:	08897480 	call	889748 <__sprint_r.part.0>
  88a510:	d9c02b17 	ldw	r7,172(sp)
  88a514:	db402a17 	ldw	r13,168(sp)
  88a518:	1000241e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a51c:	d9401b17 	ldw	r5,108(sp)
  88a520:	d8801c17 	ldw	r2,112(sp)
  88a524:	d811883a 	mov	r8,sp
  88a528:	29000044 	addi	r4,r5,1
  88a52c:	003fd806 	br	88a490 <___vfiprintf_internal_r+0xc34>
  88a530:	d9401b17 	ldw	r5,108(sp)
  88a534:	00c02274 	movhi	r3,137
  88a538:	18c9a404 	addi	r3,r3,9872
  88a53c:	d8c02415 	stw	r3,144(sp)
  88a540:	29400044 	addi	r5,r5,1
  88a544:	d8c02417 	ldw	r3,144(sp)
  88a548:	14c5883a 	add	r2,r2,r19
  88a54c:	44c00115 	stw	r19,4(r8)
  88a550:	40c00015 	stw	r3,0(r8)
  88a554:	d8801c15 	stw	r2,112(sp)
  88a558:	d9401b15 	stw	r5,108(sp)
  88a55c:	00c001c4 	movi	r3,7
  88a560:	1940070e 	bge	r3,r5,88a580 <___vfiprintf_internal_r+0xd24>
  88a564:	103e4826 	beq	r2,zero,889e88 <___vfiprintf_internal_r+0x62c>
  88a568:	d9402117 	ldw	r5,132(sp)
  88a56c:	d9002017 	ldw	r4,128(sp)
  88a570:	d9801a04 	addi	r6,sp,104
  88a574:	08897480 	call	889748 <__sprint_r.part.0>
  88a578:	10000c1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a57c:	d8801c17 	ldw	r2,112(sp)
  88a580:	8c80010e 	bge	r17,r18,88a588 <___vfiprintf_internal_r+0xd2c>
  88a584:	9023883a 	mov	r17,r18
  88a588:	da802317 	ldw	r10,140(sp)
  88a58c:	5455883a 	add	r10,r10,r17
  88a590:	da802315 	stw	r10,140(sp)
  88a594:	103e4126 	beq	r2,zero,889e9c <___vfiprintf_internal_r+0x640>
  88a598:	d9402117 	ldw	r5,132(sp)
  88a59c:	d9002017 	ldw	r4,128(sp)
  88a5a0:	d9801a04 	addi	r6,sp,104
  88a5a4:	08897480 	call	889748 <__sprint_r.part.0>
  88a5a8:	103e3c26 	beq	r2,zero,889e9c <___vfiprintf_internal_r+0x640>
  88a5ac:	dd002117 	ldw	r20,132(sp)
  88a5b0:	a080030b 	ldhu	r2,12(r20)
  88a5b4:	1080100c 	andi	r2,r2,64
  88a5b8:	1001231e 	bne	r2,zero,88aa48 <___vfiprintf_internal_r+0x11ec>
  88a5bc:	d8802317 	ldw	r2,140(sp)
  88a5c0:	003d7b06 	br	889bb0 <___vfiprintf_internal_r+0x354>
  88a5c4:	1000991e 	bne	r2,zero,88a82c <___vfiprintf_internal_r+0xfd0>
  88a5c8:	00c00044 	movi	r3,1
  88a5cc:	9805883a 	mov	r2,r19
  88a5d0:	dd400015 	stw	r21,0(sp)
  88a5d4:	dcc00115 	stw	r19,4(sp)
  88a5d8:	dcc01c15 	stw	r19,112(sp)
  88a5dc:	d8c01b15 	stw	r3,108(sp)
  88a5e0:	d811883a 	mov	r8,sp
  88a5e4:	42000204 	addi	r8,r8,8
  88a5e8:	a2c0010c 	andi	r11,r20,4
  88a5ec:	583fe426 	beq	r11,zero,88a580 <___vfiprintf_internal_r+0xd24>
  88a5f0:	8ca7c83a 	sub	r19,r17,r18
  88a5f4:	04ffe20e 	bge	zero,r19,88a580 <___vfiprintf_internal_r+0xd24>
  88a5f8:	01c00404 	movi	r7,16
  88a5fc:	3cffcc0e 	bge	r7,r19,88a530 <___vfiprintf_internal_r+0xcd4>
  88a600:	02802274 	movhi	r10,137
  88a604:	5289a404 	addi	r10,r10,9872
  88a608:	d9001b17 	ldw	r4,108(sp)
  88a60c:	da802415 	stw	r10,144(sp)
  88a610:	382b883a 	mov	r21,r7
  88a614:	050001c4 	movi	r20,7
  88a618:	df002017 	ldw	fp,128(sp)
  88a61c:	00000506 	br	88a634 <___vfiprintf_internal_r+0xdd8>
  88a620:	21400084 	addi	r5,r4,2
  88a624:	42000204 	addi	r8,r8,8
  88a628:	1809883a 	mov	r4,r3
  88a62c:	9cfffc04 	addi	r19,r19,-16
  88a630:	acffc40e 	bge	r21,r19,88a544 <___vfiprintf_internal_r+0xce8>
  88a634:	10800404 	addi	r2,r2,16
  88a638:	20c00044 	addi	r3,r4,1
  88a63c:	45800015 	stw	r22,0(r8)
  88a640:	45400115 	stw	r21,4(r8)
  88a644:	d8801c15 	stw	r2,112(sp)
  88a648:	d8c01b15 	stw	r3,108(sp)
  88a64c:	a0fff40e 	bge	r20,r3,88a620 <___vfiprintf_internal_r+0xdc4>
  88a650:	1000041e 	bne	r2,zero,88a664 <___vfiprintf_internal_r+0xe08>
  88a654:	01400044 	movi	r5,1
  88a658:	0009883a 	mov	r4,zero
  88a65c:	d811883a 	mov	r8,sp
  88a660:	003ff206 	br	88a62c <___vfiprintf_internal_r+0xdd0>
  88a664:	d9402117 	ldw	r5,132(sp)
  88a668:	d9801a04 	addi	r6,sp,104
  88a66c:	e009883a 	mov	r4,fp
  88a670:	08897480 	call	889748 <__sprint_r.part.0>
  88a674:	103fcd1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a678:	d9001b17 	ldw	r4,108(sp)
  88a67c:	d8801c17 	ldw	r2,112(sp)
  88a680:	d811883a 	mov	r8,sp
  88a684:	21400044 	addi	r5,r4,1
  88a688:	003fe806 	br	88a62c <___vfiprintf_internal_r+0xdd0>
  88a68c:	d9402117 	ldw	r5,132(sp)
  88a690:	d9002017 	ldw	r4,128(sp)
  88a694:	d9801a04 	addi	r6,sp,104
  88a698:	d9c02b15 	stw	r7,172(sp)
  88a69c:	db402a15 	stw	r13,168(sp)
  88a6a0:	08897480 	call	889748 <__sprint_r.part.0>
  88a6a4:	d9c02b17 	ldw	r7,172(sp)
  88a6a8:	db402a17 	ldw	r13,168(sp)
  88a6ac:	103fbf1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a6b0:	d9401b17 	ldw	r5,108(sp)
  88a6b4:	d8801c17 	ldw	r2,112(sp)
  88a6b8:	d811883a 	mov	r8,sp
  88a6bc:	29800044 	addi	r6,r5,1
  88a6c0:	003dc406 	br	889dd4 <___vfiprintf_internal_r+0x578>
  88a6c4:	1000d21e 	bne	r2,zero,88aa10 <___vfiprintf_internal_r+0x11b4>
  88a6c8:	d8c01d87 	ldb	r3,118(sp)
  88a6cc:	18009526 	beq	r3,zero,88a924 <___vfiprintf_internal_r+0x10c8>
  88a6d0:	00800044 	movi	r2,1
  88a6d4:	d8c01d84 	addi	r3,sp,118
  88a6d8:	1009883a 	mov	r4,r2
  88a6dc:	d8c00015 	stw	r3,0(sp)
  88a6e0:	d8800115 	stw	r2,4(sp)
  88a6e4:	d811883a 	mov	r8,sp
  88a6e8:	200b883a 	mov	r5,r4
  88a6ec:	42000204 	addi	r8,r8,8
  88a6f0:	21000044 	addi	r4,r4,1
  88a6f4:	003d9706 	br	889d54 <___vfiprintf_internal_r+0x4f8>
  88a6f8:	d9001d04 	addi	r4,sp,116
  88a6fc:	00800084 	movi	r2,2
  88a700:	d9000015 	stw	r4,0(sp)
  88a704:	d8800115 	stw	r2,4(sp)
  88a708:	1809883a 	mov	r4,r3
  88a70c:	d811883a 	mov	r8,sp
  88a710:	200b883a 	mov	r5,r4
  88a714:	42000204 	addi	r8,r8,8
  88a718:	21000044 	addi	r4,r4,1
  88a71c:	003f4e06 	br	88a458 <___vfiprintf_internal_r+0xbfc>
  88a720:	d8001d85 	stb	zero,118(sp)
  88a724:	48005016 	blt	r9,zero,88a868 <___vfiprintf_internal_r+0x100c>
  88a728:	00ffdfc4 	movi	r3,-129
  88a72c:	94c4b03a 	or	r2,r18,r19
  88a730:	a0e8703a 	and	r20,r20,r3
  88a734:	103d4426 	beq	r2,zero,889c48 <___vfiprintf_internal_r+0x3ec>
  88a738:	0039883a 	mov	fp,zero
  88a73c:	d9002617 	ldw	r4,152(sp)
  88a740:	dd401a04 	addi	r21,sp,104
  88a744:	908003cc 	andi	r2,r18,15
  88a748:	9806973a 	slli	r3,r19,28
  88a74c:	2085883a 	add	r2,r4,r2
  88a750:	9024d13a 	srli	r18,r18,4
  88a754:	10800003 	ldbu	r2,0(r2)
  88a758:	9826d13a 	srli	r19,r19,4
  88a75c:	ad7fffc4 	addi	r21,r21,-1
  88a760:	1ca4b03a 	or	r18,r3,r18
  88a764:	a8800005 	stb	r2,0(r21)
  88a768:	94c4b03a 	or	r2,r18,r19
  88a76c:	103ff51e 	bne	r2,zero,88a744 <___vfiprintf_internal_r+0xee8>
  88a770:	003e5906 	br	88a0d8 <___vfiprintf_internal_r+0x87c>
  88a774:	d9402117 	ldw	r5,132(sp)
  88a778:	d9002017 	ldw	r4,128(sp)
  88a77c:	d9801a04 	addi	r6,sp,104
  88a780:	08897480 	call	889748 <__sprint_r.part.0>
  88a784:	103f891e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a788:	d8801c17 	ldw	r2,112(sp)
  88a78c:	d811883a 	mov	r8,sp
  88a790:	003f9506 	br	88a5e8 <___vfiprintf_internal_r+0xd8c>
  88a794:	d9402117 	ldw	r5,132(sp)
  88a798:	d9002017 	ldw	r4,128(sp)
  88a79c:	d9801a04 	addi	r6,sp,104
  88a7a0:	08897480 	call	889748 <__sprint_r.part.0>
  88a7a4:	103f811e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a7a8:	d811883a 	mov	r8,sp
  88a7ac:	003ced06 	br	889b64 <___vfiprintf_internal_r+0x308>
  88a7b0:	d9402117 	ldw	r5,132(sp)
  88a7b4:	d9002017 	ldw	r4,128(sp)
  88a7b8:	d9801a04 	addi	r6,sp,104
  88a7bc:	da402c15 	stw	r9,176(sp)
  88a7c0:	db802a15 	stw	r14,168(sp)
  88a7c4:	08897480 	call	889748 <__sprint_r.part.0>
  88a7c8:	da402c17 	ldw	r9,176(sp)
  88a7cc:	db802a17 	ldw	r14,168(sp)
  88a7d0:	103f761e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a7d4:	d9401b17 	ldw	r5,108(sp)
  88a7d8:	d8801c17 	ldw	r2,112(sp)
  88a7dc:	d811883a 	mov	r8,sp
  88a7e0:	29000044 	addi	r4,r5,1
  88a7e4:	003d5b06 	br	889d54 <___vfiprintf_internal_r+0x4f8>
  88a7e8:	d9402117 	ldw	r5,132(sp)
  88a7ec:	d9002017 	ldw	r4,128(sp)
  88a7f0:	d9801a04 	addi	r6,sp,104
  88a7f4:	da402c15 	stw	r9,176(sp)
  88a7f8:	08897480 	call	889748 <__sprint_r.part.0>
  88a7fc:	da402c17 	ldw	r9,176(sp)
  88a800:	103f6a1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a804:	d9401b17 	ldw	r5,108(sp)
  88a808:	d8801c17 	ldw	r2,112(sp)
  88a80c:	d811883a 	mov	r8,sp
  88a810:	29000044 	addi	r4,r5,1
  88a814:	003f1006 	br	88a458 <___vfiprintf_internal_r+0xbfc>
  88a818:	1000c31e 	bne	r2,zero,88ab28 <___vfiprintf_internal_r+0x12cc>
  88a81c:	01000044 	movi	r4,1
  88a820:	000b883a 	mov	r5,zero
  88a824:	d811883a 	mov	r8,sp
  88a828:	003f0d06 	br	88a460 <___vfiprintf_internal_r+0xc04>
  88a82c:	d9402117 	ldw	r5,132(sp)
  88a830:	d9002017 	ldw	r4,128(sp)
  88a834:	d9801a04 	addi	r6,sp,104
  88a838:	08897480 	call	889748 <__sprint_r.part.0>
  88a83c:	103f5b1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88a840:	d9001b17 	ldw	r4,108(sp)
  88a844:	d8801c17 	ldw	r2,112(sp)
  88a848:	d811883a 	mov	r8,sp
  88a84c:	21000044 	addi	r4,r4,1
  88a850:	003d8006 	br	889e54 <___vfiprintf_internal_r+0x5f8>
  88a854:	01002274 	movhi	r4,137
  88a858:	21094004 	addi	r4,r4,9472
  88a85c:	d9002615 	stw	r4,152(sp)
  88a860:	d8c02215 	stw	r3,136(sp)
  88a864:	1029883a 	mov	r20,r2
  88a868:	94c4b03a 	or	r2,r18,r19
  88a86c:	103fb21e 	bne	r2,zero,88a738 <___vfiprintf_internal_r+0xedc>
  88a870:	0039883a 	mov	fp,zero
  88a874:	00800084 	movi	r2,2
  88a878:	003e6b06 	br	88a228 <___vfiprintf_internal_r+0x9cc>
  88a87c:	da802217 	ldw	r10,136(sp)
  88a880:	d8001d85 	stb	zero,118(sp)
  88a884:	0027883a 	mov	r19,zero
  88a888:	50800104 	addi	r2,r10,4
  88a88c:	54800017 	ldw	r18,0(r10)
  88a890:	483e6016 	blt	r9,zero,88a214 <___vfiprintf_internal_r+0x9b8>
  88a894:	00ffdfc4 	movi	r3,-129
  88a898:	d8802215 	stw	r2,136(sp)
  88a89c:	a0e8703a 	and	r20,r20,r3
  88a8a0:	0039883a 	mov	fp,zero
  88a8a4:	903ebb26 	beq	r18,zero,88a394 <___vfiprintf_internal_r+0xb38>
  88a8a8:	00800244 	movi	r2,9
  88a8ac:	14bdee36 	bltu	r2,r18,88a068 <___vfiprintf_internal_r+0x80c>
  88a8b0:	003eba06 	br	88a39c <___vfiprintf_internal_r+0xb40>
  88a8b4:	00800c04 	movi	r2,48
  88a8b8:	d8c01d45 	stb	r3,117(sp)
  88a8bc:	d8801d05 	stb	r2,116(sp)
  88a8c0:	d8001d85 	stb	zero,118(sp)
  88a8c4:	a0c00094 	ori	r3,r20,2
  88a8c8:	4800a916 	blt	r9,zero,88ab70 <___vfiprintf_internal_r+0x1314>
  88a8cc:	00bfdfc4 	movi	r2,-129
  88a8d0:	a096703a 	and	r11,r20,r2
  88a8d4:	5d000094 	ori	r20,r11,2
  88a8d8:	0039883a 	mov	fp,zero
  88a8dc:	003f9706 	br	88a73c <___vfiprintf_internal_r+0xee0>
  88a8e0:	8025883a 	mov	r18,r16
  88a8e4:	003c2e06 	br	8899a0 <___vfiprintf_internal_r+0x144>
  88a8e8:	00802274 	movhi	r2,137
  88a8ec:	10894004 	addi	r2,r2,9472
  88a8f0:	0039883a 	mov	fp,zero
  88a8f4:	d8802615 	stw	r2,152(sp)
  88a8f8:	003f9006 	br	88a73c <___vfiprintf_internal_r+0xee0>
  88a8fc:	04a5c83a 	sub	r18,zero,r18
  88a900:	07000b44 	movi	fp,45
  88a904:	9004c03a 	cmpne	r2,r18,zero
  88a908:	04e7c83a 	sub	r19,zero,r19
  88a90c:	df001d85 	stb	fp,118(sp)
  88a910:	98a7c83a 	sub	r19,r19,r2
  88a914:	48009f16 	blt	r9,zero,88ab94 <___vfiprintf_internal_r+0x1338>
  88a918:	00bfdfc4 	movi	r2,-129
  88a91c:	a0a8703a 	and	r20,r20,r2
  88a920:	003dd006 	br	88a064 <___vfiprintf_internal_r+0x808>
  88a924:	70004c26 	beq	r14,zero,88aa58 <___vfiprintf_internal_r+0x11fc>
  88a928:	00800084 	movi	r2,2
  88a92c:	d8c01d04 	addi	r3,sp,116
  88a930:	d8c00015 	stw	r3,0(sp)
  88a934:	d8800115 	stw	r2,4(sp)
  88a938:	01000044 	movi	r4,1
  88a93c:	d811883a 	mov	r8,sp
  88a940:	003f7306 	br	88a710 <___vfiprintf_internal_r+0xeb4>
  88a944:	a080100c 	andi	r2,r20,64
  88a948:	da802217 	ldw	r10,136(sp)
  88a94c:	103e0626 	beq	r2,zero,88a168 <___vfiprintf_internal_r+0x90c>
  88a950:	5480000f 	ldh	r18,0(r10)
  88a954:	52800104 	addi	r10,r10,4
  88a958:	da802215 	stw	r10,136(sp)
  88a95c:	9027d7fa 	srai	r19,r18,31
  88a960:	9805883a 	mov	r2,r19
  88a964:	003db806 	br	88a048 <___vfiprintf_internal_r+0x7ec>
  88a968:	a080040c 	andi	r2,r20,16
  88a96c:	1000091e 	bne	r2,zero,88a994 <___vfiprintf_internal_r+0x1138>
  88a970:	a2c0100c 	andi	r11,r20,64
  88a974:	58000726 	beq	r11,zero,88a994 <___vfiprintf_internal_r+0x1138>
  88a978:	da802217 	ldw	r10,136(sp)
  88a97c:	50800017 	ldw	r2,0(r10)
  88a980:	52800104 	addi	r10,r10,4
  88a984:	da802215 	stw	r10,136(sp)
  88a988:	da802317 	ldw	r10,140(sp)
  88a98c:	1280000d 	sth	r10,0(r2)
  88a990:	003be706 	br	889930 <___vfiprintf_internal_r+0xd4>
  88a994:	da802217 	ldw	r10,136(sp)
  88a998:	50800017 	ldw	r2,0(r10)
  88a99c:	52800104 	addi	r10,r10,4
  88a9a0:	da802215 	stw	r10,136(sp)
  88a9a4:	da802317 	ldw	r10,140(sp)
  88a9a8:	12800015 	stw	r10,0(r2)
  88a9ac:	003be006 	br	889930 <___vfiprintf_internal_r+0xd4>
  88a9b0:	a080100c 	andi	r2,r20,64
  88a9b4:	da802217 	ldw	r10,136(sp)
  88a9b8:	10003026 	beq	r2,zero,88aa7c <___vfiprintf_internal_r+0x1220>
  88a9bc:	5480000b 	ldhu	r18,0(r10)
  88a9c0:	52800104 	addi	r10,r10,4
  88a9c4:	0027883a 	mov	r19,zero
  88a9c8:	da802215 	stw	r10,136(sp)
  88a9cc:	003d8006 	br	889fd0 <___vfiprintf_internal_r+0x774>
  88a9d0:	80c00007 	ldb	r3,0(r16)
  88a9d4:	003c0006 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88a9d8:	a080100c 	andi	r2,r20,64
  88a9dc:	d8001d85 	stb	zero,118(sp)
  88a9e0:	da802217 	ldw	r10,136(sp)
  88a9e4:	1000201e 	bne	r2,zero,88aa68 <___vfiprintf_internal_r+0x120c>
  88a9e8:	50800104 	addi	r2,r10,4
  88a9ec:	54800017 	ldw	r18,0(r10)
  88a9f0:	0027883a 	mov	r19,zero
  88a9f4:	483def0e 	bge	r9,zero,88a1b4 <___vfiprintf_internal_r+0x958>
  88a9f8:	94c6b03a 	or	r3,r18,r19
  88a9fc:	d8802215 	stw	r2,136(sp)
  88aa00:	183d4e1e 	bne	r3,zero,889f3c <___vfiprintf_internal_r+0x6e0>
  88aa04:	0039883a 	mov	fp,zero
  88aa08:	0005883a 	mov	r2,zero
  88aa0c:	003e0606 	br	88a228 <___vfiprintf_internal_r+0x9cc>
  88aa10:	d9402117 	ldw	r5,132(sp)
  88aa14:	d9002017 	ldw	r4,128(sp)
  88aa18:	d9801a04 	addi	r6,sp,104
  88aa1c:	da402c15 	stw	r9,176(sp)
  88aa20:	db802a15 	stw	r14,168(sp)
  88aa24:	08897480 	call	889748 <__sprint_r.part.0>
  88aa28:	da402c17 	ldw	r9,176(sp)
  88aa2c:	db802a17 	ldw	r14,168(sp)
  88aa30:	103ede1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88aa34:	d9401b17 	ldw	r5,108(sp)
  88aa38:	d8801c17 	ldw	r2,112(sp)
  88aa3c:	d811883a 	mov	r8,sp
  88aa40:	29000044 	addi	r4,r5,1
  88aa44:	003e7406 	br	88a418 <___vfiprintf_internal_r+0xbbc>
  88aa48:	00bfffc4 	movi	r2,-1
  88aa4c:	003c5806 	br	889bb0 <___vfiprintf_internal_r+0x354>
  88aa50:	d811883a 	mov	r8,sp
  88aa54:	003ee806 	br	88a5f8 <___vfiprintf_internal_r+0xd9c>
  88aa58:	000b883a 	mov	r5,zero
  88aa5c:	01000044 	movi	r4,1
  88aa60:	d811883a 	mov	r8,sp
  88aa64:	003e7c06 	br	88a458 <___vfiprintf_internal_r+0xbfc>
  88aa68:	50800104 	addi	r2,r10,4
  88aa6c:	5480000b 	ldhu	r18,0(r10)
  88aa70:	0027883a 	mov	r19,zero
  88aa74:	483dcf0e 	bge	r9,zero,88a1b4 <___vfiprintf_internal_r+0x958>
  88aa78:	003fdf06 	br	88a9f8 <___vfiprintf_internal_r+0x119c>
  88aa7c:	54800017 	ldw	r18,0(r10)
  88aa80:	52800104 	addi	r10,r10,4
  88aa84:	0027883a 	mov	r19,zero
  88aa88:	da802215 	stw	r10,136(sp)
  88aa8c:	003d5006 	br	889fd0 <___vfiprintf_internal_r+0x774>
  88aa90:	50800104 	addi	r2,r10,4
  88aa94:	5480000b 	ldhu	r18,0(r10)
  88aa98:	0027883a 	mov	r19,zero
  88aa9c:	483f7d0e 	bge	r9,zero,88a894 <___vfiprintf_internal_r+0x1038>
  88aaa0:	003ddc06 	br	88a214 <___vfiprintf_internal_r+0x9b8>
  88aaa4:	d8c02215 	stw	r3,136(sp)
  88aaa8:	0039883a 	mov	fp,zero
  88aaac:	003ddb06 	br	88a21c <___vfiprintf_internal_r+0x9c0>
  88aab0:	02802274 	movhi	r10,137
  88aab4:	5289a004 	addi	r10,r10,9856
  88aab8:	da802415 	stw	r10,144(sp)
  88aabc:	003e8306 	br	88a4cc <___vfiprintf_internal_r+0xc70>
  88aac0:	d8801c17 	ldw	r2,112(sp)
  88aac4:	dd002117 	ldw	r20,132(sp)
  88aac8:	103eb926 	beq	r2,zero,88a5b0 <___vfiprintf_internal_r+0xd54>
  88aacc:	d9002017 	ldw	r4,128(sp)
  88aad0:	d9801a04 	addi	r6,sp,104
  88aad4:	a00b883a 	mov	r5,r20
  88aad8:	08897480 	call	889748 <__sprint_r.part.0>
  88aadc:	003eb406 	br	88a5b0 <___vfiprintf_internal_r+0xd54>
  88aae0:	80c00043 	ldbu	r3,1(r16)
  88aae4:	a5000814 	ori	r20,r20,32
  88aae8:	84000044 	addi	r16,r16,1
  88aaec:	18c03fcc 	andi	r3,r3,255
  88aaf0:	18c0201c 	xori	r3,r3,128
  88aaf4:	18ffe004 	addi	r3,r3,-128
  88aaf8:	003bb706 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88aafc:	a809883a 	mov	r4,r21
  88ab00:	d8c02a15 	stw	r3,168(sp)
  88ab04:	da002b15 	stw	r8,172(sp)
  88ab08:	08896b00 	call	8896b0 <strlen>
  88ab0c:	d8c02a17 	ldw	r3,168(sp)
  88ab10:	1027883a 	mov	r19,r2
  88ab14:	df001d83 	ldbu	fp,118(sp)
  88ab18:	d8c02215 	stw	r3,136(sp)
  88ab1c:	0013883a 	mov	r9,zero
  88ab20:	da002b17 	ldw	r8,172(sp)
  88ab24:	003c4d06 	br	889c5c <___vfiprintf_internal_r+0x400>
  88ab28:	d9402117 	ldw	r5,132(sp)
  88ab2c:	d9002017 	ldw	r4,128(sp)
  88ab30:	d9801a04 	addi	r6,sp,104
  88ab34:	da402c15 	stw	r9,176(sp)
  88ab38:	08897480 	call	889748 <__sprint_r.part.0>
  88ab3c:	da402c17 	ldw	r9,176(sp)
  88ab40:	103e9a1e 	bne	r2,zero,88a5ac <___vfiprintf_internal_r+0xd50>
  88ab44:	d9401b17 	ldw	r5,108(sp)
  88ab48:	d8801c17 	ldw	r2,112(sp)
  88ab4c:	d811883a 	mov	r8,sp
  88ab50:	29000044 	addi	r4,r5,1
  88ab54:	003e4206 	br	88a460 <___vfiprintf_internal_r+0xc04>
  88ab58:	d9401b17 	ldw	r5,108(sp)
  88ab5c:	01002274 	movhi	r4,137
  88ab60:	2109a404 	addi	r4,r4,9872
  88ab64:	d9002415 	stw	r4,144(sp)
  88ab68:	29400044 	addi	r5,r5,1
  88ab6c:	003c6d06 	br	889d24 <___vfiprintf_internal_r+0x4c8>
  88ab70:	0039883a 	mov	fp,zero
  88ab74:	00800084 	movi	r2,2
  88ab78:	10803fcc 	andi	r2,r2,255
  88ab7c:	01000044 	movi	r4,1
  88ab80:	11001e26 	beq	r2,r4,88abfc <___vfiprintf_internal_r+0x13a0>
  88ab84:	01000084 	movi	r4,2
  88ab88:	11001e1e 	bne	r2,r4,88ac04 <___vfiprintf_internal_r+0x13a8>
  88ab8c:	1829883a 	mov	r20,r3
  88ab90:	003eea06 	br	88a73c <___vfiprintf_internal_r+0xee0>
  88ab94:	a007883a 	mov	r3,r20
  88ab98:	00800044 	movi	r2,1
  88ab9c:	003ff606 	br	88ab78 <___vfiprintf_internal_r+0x131c>
  88aba0:	00800184 	movi	r2,6
  88aba4:	1240012e 	bgeu	r2,r9,88abac <___vfiprintf_internal_r+0x1350>
  88aba8:	1013883a 	mov	r9,r2
  88abac:	4827883a 	mov	r19,r9
  88abb0:	4825883a 	mov	r18,r9
  88abb4:	48001516 	blt	r9,zero,88ac0c <___vfiprintf_internal_r+0x13b0>
  88abb8:	05402274 	movhi	r21,137
  88abbc:	d8c02215 	stw	r3,136(sp)
  88abc0:	ad494504 	addi	r21,r21,9492
  88abc4:	003d1406 	br	88a018 <___vfiprintf_internal_r+0x7bc>
  88abc8:	02802274 	movhi	r10,137
  88abcc:	5289a004 	addi	r10,r10,9856
  88abd0:	da802415 	stw	r10,144(sp)
  88abd4:	200d883a 	mov	r6,r4
  88abd8:	003c9106 	br	889e20 <___vfiprintf_internal_r+0x5c4>
  88abdc:	5021883a 	mov	r16,r10
  88abe0:	0013883a 	mov	r9,zero
  88abe4:	003b7d06 	br	8899dc <___vfiprintf_internal_r+0x180>
  88abe8:	4827883a 	mov	r19,r9
  88abec:	df001d83 	ldbu	fp,118(sp)
  88abf0:	d8c02215 	stw	r3,136(sp)
  88abf4:	0013883a 	mov	r9,zero
  88abf8:	003c1806 	br	889c5c <___vfiprintf_internal_r+0x400>
  88abfc:	1829883a 	mov	r20,r3
  88ac00:	003d1806 	br	88a064 <___vfiprintf_internal_r+0x808>
  88ac04:	1829883a 	mov	r20,r3
  88ac08:	003ccd06 	br	889f40 <___vfiprintf_internal_r+0x6e4>
  88ac0c:	0025883a 	mov	r18,zero
  88ac10:	003fe906 	br	88abb8 <___vfiprintf_internal_r+0x135c>
  88ac14:	d8802217 	ldw	r2,136(sp)
  88ac18:	80c00043 	ldbu	r3,1(r16)
  88ac1c:	5021883a 	mov	r16,r10
  88ac20:	12400017 	ldw	r9,0(r2)
  88ac24:	10800104 	addi	r2,r2,4
  88ac28:	d8802215 	stw	r2,136(sp)
  88ac2c:	483faf0e 	bge	r9,zero,88aaec <___vfiprintf_internal_r+0x1290>
  88ac30:	18c03fcc 	andi	r3,r3,255
  88ac34:	18c0201c 	xori	r3,r3,128
  88ac38:	027fffc4 	movi	r9,-1
  88ac3c:	18ffe004 	addi	r3,r3,-128
  88ac40:	003b6506 	br	8899d8 <___vfiprintf_internal_r+0x17c>
  88ac44:	d9c01d85 	stb	r7,118(sp)
  88ac48:	003ca006 	br	889ecc <___vfiprintf_internal_r+0x670>
  88ac4c:	d9c01d85 	stb	r7,118(sp)
  88ac50:	003cad06 	br	889f08 <___vfiprintf_internal_r+0x6ac>
  88ac54:	d9c01d85 	stb	r7,118(sp)
  88ac58:	003d7d06 	br	88a250 <___vfiprintf_internal_r+0x9f4>
  88ac5c:	d9c01d85 	stb	r7,118(sp)
  88ac60:	003d5f06 	br	88a1e0 <___vfiprintf_internal_r+0x984>
  88ac64:	a080004c 	andi	r2,r20,1
  88ac68:	0039883a 	mov	fp,zero
  88ac6c:	10000526 	beq	r2,zero,88ac84 <___vfiprintf_internal_r+0x1428>
  88ac70:	00800c04 	movi	r2,48
  88ac74:	d88019c5 	stb	r2,103(sp)
  88ac78:	dcc02717 	ldw	r19,156(sp)
  88ac7c:	dd4019c4 	addi	r21,sp,103
  88ac80:	003bf606 	br	889c5c <___vfiprintf_internal_r+0x400>
  88ac84:	0027883a 	mov	r19,zero
  88ac88:	dd401a04 	addi	r21,sp,104
  88ac8c:	003bf306 	br	889c5c <___vfiprintf_internal_r+0x400>
  88ac90:	d9c01d85 	stb	r7,118(sp)
  88ac94:	003dc806 	br	88a3b8 <___vfiprintf_internal_r+0xb5c>
  88ac98:	d9c01d85 	stb	r7,118(sp)
  88ac9c:	003d3a06 	br	88a188 <___vfiprintf_internal_r+0x92c>
  88aca0:	d9c01d85 	stb	r7,118(sp)
  88aca4:	003d2a06 	br	88a150 <___vfiprintf_internal_r+0x8f4>
  88aca8:	d9c01d85 	stb	r7,118(sp)
  88acac:	003cde06 	br	88a028 <___vfiprintf_internal_r+0x7cc>
  88acb0:	d9c01d85 	stb	r7,118(sp)
  88acb4:	003cbc06 	br	889fa8 <___vfiprintf_internal_r+0x74c>

0088acb8 <__vfiprintf_internal>:
  88acb8:	00802274 	movhi	r2,137
  88acbc:	10912004 	addi	r2,r2,17536
  88acc0:	300f883a 	mov	r7,r6
  88acc4:	280d883a 	mov	r6,r5
  88acc8:	200b883a 	mov	r5,r4
  88accc:	11000017 	ldw	r4,0(r2)
  88acd0:	088985c1 	jmpi	88985c <___vfiprintf_internal_r>

0088acd4 <__sbprintf>:
  88acd4:	2880030b 	ldhu	r2,12(r5)
  88acd8:	2ac01917 	ldw	r11,100(r5)
  88acdc:	2a80038b 	ldhu	r10,14(r5)
  88ace0:	2a400717 	ldw	r9,28(r5)
  88ace4:	2a000917 	ldw	r8,36(r5)
  88ace8:	defee204 	addi	sp,sp,-1144
  88acec:	00c10004 	movi	r3,1024
  88acf0:	dc011a15 	stw	r16,1128(sp)
  88acf4:	10bfff4c 	andi	r2,r2,65533
  88acf8:	2821883a 	mov	r16,r5
  88acfc:	d8cb883a 	add	r5,sp,r3
  88ad00:	dc811c15 	stw	r18,1136(sp)
  88ad04:	dc411b15 	stw	r17,1132(sp)
  88ad08:	dfc11d15 	stw	ra,1140(sp)
  88ad0c:	2025883a 	mov	r18,r4
  88ad10:	d881030d 	sth	r2,1036(sp)
  88ad14:	dac11915 	stw	r11,1124(sp)
  88ad18:	da81038d 	sth	r10,1038(sp)
  88ad1c:	da410715 	stw	r9,1052(sp)
  88ad20:	da010915 	stw	r8,1060(sp)
  88ad24:	dec10015 	stw	sp,1024(sp)
  88ad28:	dec10415 	stw	sp,1040(sp)
  88ad2c:	d8c10215 	stw	r3,1032(sp)
  88ad30:	d8c10515 	stw	r3,1044(sp)
  88ad34:	d8010615 	stw	zero,1048(sp)
  88ad38:	088985c0 	call	88985c <___vfiprintf_internal_r>
  88ad3c:	1023883a 	mov	r17,r2
  88ad40:	10000416 	blt	r2,zero,88ad54 <__sbprintf+0x80>
  88ad44:	d9410004 	addi	r5,sp,1024
  88ad48:	9009883a 	mov	r4,r18
  88ad4c:	08876580 	call	887658 <_fflush_r>
  88ad50:	10000d1e 	bne	r2,zero,88ad88 <__sbprintf+0xb4>
  88ad54:	d881030b 	ldhu	r2,1036(sp)
  88ad58:	1080100c 	andi	r2,r2,64
  88ad5c:	10000326 	beq	r2,zero,88ad6c <__sbprintf+0x98>
  88ad60:	8080030b 	ldhu	r2,12(r16)
  88ad64:	10801014 	ori	r2,r2,64
  88ad68:	8080030d 	sth	r2,12(r16)
  88ad6c:	8805883a 	mov	r2,r17
  88ad70:	dfc11d17 	ldw	ra,1140(sp)
  88ad74:	dc811c17 	ldw	r18,1136(sp)
  88ad78:	dc411b17 	ldw	r17,1132(sp)
  88ad7c:	dc011a17 	ldw	r16,1128(sp)
  88ad80:	dec11e04 	addi	sp,sp,1144
  88ad84:	f800283a 	ret
  88ad88:	047fffc4 	movi	r17,-1
  88ad8c:	003ff106 	br	88ad54 <__sbprintf+0x80>

0088ad90 <_write_r>:
  88ad90:	defffd04 	addi	sp,sp,-12
  88ad94:	2805883a 	mov	r2,r5
  88ad98:	dc000015 	stw	r16,0(sp)
  88ad9c:	04002274 	movhi	r16,137
  88ada0:	dc400115 	stw	r17,4(sp)
  88ada4:	300b883a 	mov	r5,r6
  88ada8:	84180604 	addi	r16,r16,24600
  88adac:	2023883a 	mov	r17,r4
  88adb0:	380d883a 	mov	r6,r7
  88adb4:	1009883a 	mov	r4,r2
  88adb8:	dfc00215 	stw	ra,8(sp)
  88adbc:	80000015 	stw	zero,0(r16)
  88adc0:	088ff180 	call	88ff18 <write>
  88adc4:	00ffffc4 	movi	r3,-1
  88adc8:	10c00526 	beq	r2,r3,88ade0 <_write_r+0x50>
  88adcc:	dfc00217 	ldw	ra,8(sp)
  88add0:	dc400117 	ldw	r17,4(sp)
  88add4:	dc000017 	ldw	r16,0(sp)
  88add8:	dec00304 	addi	sp,sp,12
  88addc:	f800283a 	ret
  88ade0:	80c00017 	ldw	r3,0(r16)
  88ade4:	183ff926 	beq	r3,zero,88adcc <_write_r+0x3c>
  88ade8:	88c00015 	stw	r3,0(r17)
  88adec:	003ff706 	br	88adcc <_write_r+0x3c>

0088adf0 <_close_r>:
  88adf0:	defffd04 	addi	sp,sp,-12
  88adf4:	dc000015 	stw	r16,0(sp)
  88adf8:	04002274 	movhi	r16,137
  88adfc:	dc400115 	stw	r17,4(sp)
  88ae00:	84180604 	addi	r16,r16,24600
  88ae04:	2023883a 	mov	r17,r4
  88ae08:	2809883a 	mov	r4,r5
  88ae0c:	dfc00215 	stw	ra,8(sp)
  88ae10:	80000015 	stw	zero,0(r16)
  88ae14:	088f5480 	call	88f548 <close>
  88ae18:	00ffffc4 	movi	r3,-1
  88ae1c:	10c00526 	beq	r2,r3,88ae34 <_close_r+0x44>
  88ae20:	dfc00217 	ldw	ra,8(sp)
  88ae24:	dc400117 	ldw	r17,4(sp)
  88ae28:	dc000017 	ldw	r16,0(sp)
  88ae2c:	dec00304 	addi	sp,sp,12
  88ae30:	f800283a 	ret
  88ae34:	80c00017 	ldw	r3,0(r16)
  88ae38:	183ff926 	beq	r3,zero,88ae20 <_close_r+0x30>
  88ae3c:	88c00015 	stw	r3,0(r17)
  88ae40:	003ff706 	br	88ae20 <_close_r+0x30>

0088ae44 <_calloc_r>:
  88ae44:	298b383a 	mul	r5,r5,r6
  88ae48:	defffe04 	addi	sp,sp,-8
  88ae4c:	dfc00115 	stw	ra,4(sp)
  88ae50:	dc000015 	stw	r16,0(sp)
  88ae54:	08829a40 	call	8829a4 <_malloc_r>
  88ae58:	10002926 	beq	r2,zero,88af00 <_calloc_r+0xbc>
  88ae5c:	11bfff17 	ldw	r6,-4(r2)
  88ae60:	1021883a 	mov	r16,r2
  88ae64:	00bfff04 	movi	r2,-4
  88ae68:	308c703a 	and	r6,r6,r2
  88ae6c:	00c00904 	movi	r3,36
  88ae70:	308d883a 	add	r6,r6,r2
  88ae74:	19801636 	bltu	r3,r6,88aed0 <_calloc_r+0x8c>
  88ae78:	008004c4 	movi	r2,19
  88ae7c:	11800b2e 	bgeu	r2,r6,88aeac <_calloc_r+0x68>
  88ae80:	80000015 	stw	zero,0(r16)
  88ae84:	80000115 	stw	zero,4(r16)
  88ae88:	008006c4 	movi	r2,27
  88ae8c:	11801a2e 	bgeu	r2,r6,88aef8 <_calloc_r+0xb4>
  88ae90:	80000215 	stw	zero,8(r16)
  88ae94:	80000315 	stw	zero,12(r16)
  88ae98:	30c0151e 	bne	r6,r3,88aef0 <_calloc_r+0xac>
  88ae9c:	80000415 	stw	zero,16(r16)
  88aea0:	80800604 	addi	r2,r16,24
  88aea4:	80000515 	stw	zero,20(r16)
  88aea8:	00000106 	br	88aeb0 <_calloc_r+0x6c>
  88aeac:	8005883a 	mov	r2,r16
  88aeb0:	10000015 	stw	zero,0(r2)
  88aeb4:	10000115 	stw	zero,4(r2)
  88aeb8:	10000215 	stw	zero,8(r2)
  88aebc:	8005883a 	mov	r2,r16
  88aec0:	dfc00117 	ldw	ra,4(sp)
  88aec4:	dc000017 	ldw	r16,0(sp)
  88aec8:	dec00204 	addi	sp,sp,8
  88aecc:	f800283a 	ret
  88aed0:	000b883a 	mov	r5,zero
  88aed4:	8009883a 	mov	r4,r16
  88aed8:	08831b00 	call	8831b0 <memset>
  88aedc:	8005883a 	mov	r2,r16
  88aee0:	dfc00117 	ldw	ra,4(sp)
  88aee4:	dc000017 	ldw	r16,0(sp)
  88aee8:	dec00204 	addi	sp,sp,8
  88aeec:	f800283a 	ret
  88aef0:	80800404 	addi	r2,r16,16
  88aef4:	003fee06 	br	88aeb0 <_calloc_r+0x6c>
  88aef8:	80800204 	addi	r2,r16,8
  88aefc:	003fec06 	br	88aeb0 <_calloc_r+0x6c>
  88af00:	0005883a 	mov	r2,zero
  88af04:	003fee06 	br	88aec0 <_calloc_r+0x7c>

0088af08 <_fclose_r>:
  88af08:	28003926 	beq	r5,zero,88aff0 <_fclose_r+0xe8>
  88af0c:	defffc04 	addi	sp,sp,-16
  88af10:	dc400115 	stw	r17,4(sp)
  88af14:	dc000015 	stw	r16,0(sp)
  88af18:	dfc00315 	stw	ra,12(sp)
  88af1c:	dc800215 	stw	r18,8(sp)
  88af20:	2023883a 	mov	r17,r4
  88af24:	2821883a 	mov	r16,r5
  88af28:	20000226 	beq	r4,zero,88af34 <_fclose_r+0x2c>
  88af2c:	20800e17 	ldw	r2,56(r4)
  88af30:	10002726 	beq	r2,zero,88afd0 <_fclose_r+0xc8>
  88af34:	8080030f 	ldh	r2,12(r16)
  88af38:	1000071e 	bne	r2,zero,88af58 <_fclose_r+0x50>
  88af3c:	0005883a 	mov	r2,zero
  88af40:	dfc00317 	ldw	ra,12(sp)
  88af44:	dc800217 	ldw	r18,8(sp)
  88af48:	dc400117 	ldw	r17,4(sp)
  88af4c:	dc000017 	ldw	r16,0(sp)
  88af50:	dec00404 	addi	sp,sp,16
  88af54:	f800283a 	ret
  88af58:	800b883a 	mov	r5,r16
  88af5c:	8809883a 	mov	r4,r17
  88af60:	088743c0 	call	88743c <__sflush_r>
  88af64:	1025883a 	mov	r18,r2
  88af68:	80800b17 	ldw	r2,44(r16)
  88af6c:	10000426 	beq	r2,zero,88af80 <_fclose_r+0x78>
  88af70:	81400717 	ldw	r5,28(r16)
  88af74:	8809883a 	mov	r4,r17
  88af78:	103ee83a 	callr	r2
  88af7c:	10001616 	blt	r2,zero,88afd8 <_fclose_r+0xd0>
  88af80:	8080030b 	ldhu	r2,12(r16)
  88af84:	1080200c 	andi	r2,r2,128
  88af88:	1000151e 	bne	r2,zero,88afe0 <_fclose_r+0xd8>
  88af8c:	81400c17 	ldw	r5,48(r16)
  88af90:	28000526 	beq	r5,zero,88afa8 <_fclose_r+0xa0>
  88af94:	80801004 	addi	r2,r16,64
  88af98:	28800226 	beq	r5,r2,88afa4 <_fclose_r+0x9c>
  88af9c:	8809883a 	mov	r4,r17
  88afa0:	0887ba80 	call	887ba8 <_free_r>
  88afa4:	80000c15 	stw	zero,48(r16)
  88afa8:	81401117 	ldw	r5,68(r16)
  88afac:	28000326 	beq	r5,zero,88afbc <_fclose_r+0xb4>
  88afb0:	8809883a 	mov	r4,r17
  88afb4:	0887ba80 	call	887ba8 <_free_r>
  88afb8:	80001115 	stw	zero,68(r16)
  88afbc:	0887a440 	call	887a44 <__sfp_lock_acquire>
  88afc0:	8000030d 	sth	zero,12(r16)
  88afc4:	0887a480 	call	887a48 <__sfp_lock_release>
  88afc8:	9005883a 	mov	r2,r18
  88afcc:	003fdc06 	br	88af40 <_fclose_r+0x38>
  88afd0:	0887a340 	call	887a34 <__sinit>
  88afd4:	003fd706 	br	88af34 <_fclose_r+0x2c>
  88afd8:	04bfffc4 	movi	r18,-1
  88afdc:	003fe806 	br	88af80 <_fclose_r+0x78>
  88afe0:	81400417 	ldw	r5,16(r16)
  88afe4:	8809883a 	mov	r4,r17
  88afe8:	0887ba80 	call	887ba8 <_free_r>
  88afec:	003fe706 	br	88af8c <_fclose_r+0x84>
  88aff0:	0005883a 	mov	r2,zero
  88aff4:	f800283a 	ret

0088aff8 <fclose>:
  88aff8:	00802274 	movhi	r2,137
  88affc:	10912004 	addi	r2,r2,17536
  88b000:	200b883a 	mov	r5,r4
  88b004:	11000017 	ldw	r4,0(r2)
  88b008:	088af081 	jmpi	88af08 <_fclose_r>

0088b00c <__fputwc>:
  88b00c:	defff804 	addi	sp,sp,-32
  88b010:	dcc00415 	stw	r19,16(sp)
  88b014:	dc800315 	stw	r18,12(sp)
  88b018:	dc000115 	stw	r16,4(sp)
  88b01c:	dfc00715 	stw	ra,28(sp)
  88b020:	dd400615 	stw	r21,24(sp)
  88b024:	dd000515 	stw	r20,20(sp)
  88b028:	dc400215 	stw	r17,8(sp)
  88b02c:	2027883a 	mov	r19,r4
  88b030:	2825883a 	mov	r18,r5
  88b034:	3021883a 	mov	r16,r6
  88b038:	08880c80 	call	8880c8 <__locale_mb_cur_max>
  88b03c:	00c00044 	movi	r3,1
  88b040:	10c03e26 	beq	r2,r3,88b13c <__fputwc+0x130>
  88b044:	81c01704 	addi	r7,r16,92
  88b048:	900d883a 	mov	r6,r18
  88b04c:	d80b883a 	mov	r5,sp
  88b050:	9809883a 	mov	r4,r19
  88b054:	088c0580 	call	88c058 <_wcrtomb_r>
  88b058:	1029883a 	mov	r20,r2
  88b05c:	00bfffc4 	movi	r2,-1
  88b060:	a0802026 	beq	r20,r2,88b0e4 <__fputwc+0xd8>
  88b064:	d9400003 	ldbu	r5,0(sp)
  88b068:	a0001c26 	beq	r20,zero,88b0dc <__fputwc+0xd0>
  88b06c:	0023883a 	mov	r17,zero
  88b070:	05400284 	movi	r21,10
  88b074:	00000906 	br	88b09c <__fputwc+0x90>
  88b078:	80800017 	ldw	r2,0(r16)
  88b07c:	11400005 	stb	r5,0(r2)
  88b080:	80c00017 	ldw	r3,0(r16)
  88b084:	18c00044 	addi	r3,r3,1
  88b088:	80c00015 	stw	r3,0(r16)
  88b08c:	8c400044 	addi	r17,r17,1
  88b090:	dc45883a 	add	r2,sp,r17
  88b094:	8d00112e 	bgeu	r17,r20,88b0dc <__fputwc+0xd0>
  88b098:	11400003 	ldbu	r5,0(r2)
  88b09c:	80c00217 	ldw	r3,8(r16)
  88b0a0:	18ffffc4 	addi	r3,r3,-1
  88b0a4:	80c00215 	stw	r3,8(r16)
  88b0a8:	183ff30e 	bge	r3,zero,88b078 <__fputwc+0x6c>
  88b0ac:	80800617 	ldw	r2,24(r16)
  88b0b0:	18801916 	blt	r3,r2,88b118 <__fputwc+0x10c>
  88b0b4:	80800017 	ldw	r2,0(r16)
  88b0b8:	11400005 	stb	r5,0(r2)
  88b0bc:	80800017 	ldw	r2,0(r16)
  88b0c0:	10c00003 	ldbu	r3,0(r2)
  88b0c4:	10800044 	addi	r2,r2,1
  88b0c8:	1d402326 	beq	r3,r21,88b158 <__fputwc+0x14c>
  88b0cc:	80800015 	stw	r2,0(r16)
  88b0d0:	8c400044 	addi	r17,r17,1
  88b0d4:	dc45883a 	add	r2,sp,r17
  88b0d8:	8d3fef36 	bltu	r17,r20,88b098 <__fputwc+0x8c>
  88b0dc:	9005883a 	mov	r2,r18
  88b0e0:	00000406 	br	88b0f4 <__fputwc+0xe8>
  88b0e4:	80c0030b 	ldhu	r3,12(r16)
  88b0e8:	a005883a 	mov	r2,r20
  88b0ec:	18c01014 	ori	r3,r3,64
  88b0f0:	80c0030d 	sth	r3,12(r16)
  88b0f4:	dfc00717 	ldw	ra,28(sp)
  88b0f8:	dd400617 	ldw	r21,24(sp)
  88b0fc:	dd000517 	ldw	r20,20(sp)
  88b100:	dcc00417 	ldw	r19,16(sp)
  88b104:	dc800317 	ldw	r18,12(sp)
  88b108:	dc400217 	ldw	r17,8(sp)
  88b10c:	dc000117 	ldw	r16,4(sp)
  88b110:	dec00804 	addi	sp,sp,32
  88b114:	f800283a 	ret
  88b118:	800d883a 	mov	r6,r16
  88b11c:	29403fcc 	andi	r5,r5,255
  88b120:	9809883a 	mov	r4,r19
  88b124:	088bf000 	call	88bf00 <__swbuf_r>
  88b128:	10bfffe0 	cmpeqi	r2,r2,-1
  88b12c:	10803fcc 	andi	r2,r2,255
  88b130:	103fd626 	beq	r2,zero,88b08c <__fputwc+0x80>
  88b134:	00bfffc4 	movi	r2,-1
  88b138:	003fee06 	br	88b0f4 <__fputwc+0xe8>
  88b13c:	90ffffc4 	addi	r3,r18,-1
  88b140:	01003f84 	movi	r4,254
  88b144:	20ffbf36 	bltu	r4,r3,88b044 <__fputwc+0x38>
  88b148:	900b883a 	mov	r5,r18
  88b14c:	dc800005 	stb	r18,0(sp)
  88b150:	1029883a 	mov	r20,r2
  88b154:	003fc506 	br	88b06c <__fputwc+0x60>
  88b158:	800d883a 	mov	r6,r16
  88b15c:	a80b883a 	mov	r5,r21
  88b160:	9809883a 	mov	r4,r19
  88b164:	088bf000 	call	88bf00 <__swbuf_r>
  88b168:	10bfffe0 	cmpeqi	r2,r2,-1
  88b16c:	003fef06 	br	88b12c <__fputwc+0x120>

0088b170 <_fputwc_r>:
  88b170:	3080030b 	ldhu	r2,12(r6)
  88b174:	10c8000c 	andi	r3,r2,8192
  88b178:	1800051e 	bne	r3,zero,88b190 <_fputwc_r+0x20>
  88b17c:	30c01917 	ldw	r3,100(r6)
  88b180:	10880014 	ori	r2,r2,8192
  88b184:	3080030d 	sth	r2,12(r6)
  88b188:	18880014 	ori	r2,r3,8192
  88b18c:	30801915 	stw	r2,100(r6)
  88b190:	088b00c1 	jmpi	88b00c <__fputwc>

0088b194 <fputwc>:
  88b194:	00802274 	movhi	r2,137
  88b198:	defffc04 	addi	sp,sp,-16
  88b19c:	10912004 	addi	r2,r2,17536
  88b1a0:	dc000115 	stw	r16,4(sp)
  88b1a4:	14000017 	ldw	r16,0(r2)
  88b1a8:	dc400215 	stw	r17,8(sp)
  88b1ac:	dfc00315 	stw	ra,12(sp)
  88b1b0:	2023883a 	mov	r17,r4
  88b1b4:	80000226 	beq	r16,zero,88b1c0 <fputwc+0x2c>
  88b1b8:	80800e17 	ldw	r2,56(r16)
  88b1bc:	10001026 	beq	r2,zero,88b200 <fputwc+0x6c>
  88b1c0:	2880030b 	ldhu	r2,12(r5)
  88b1c4:	10c8000c 	andi	r3,r2,8192
  88b1c8:	1800051e 	bne	r3,zero,88b1e0 <fputwc+0x4c>
  88b1cc:	28c01917 	ldw	r3,100(r5)
  88b1d0:	10880014 	ori	r2,r2,8192
  88b1d4:	2880030d 	sth	r2,12(r5)
  88b1d8:	18880014 	ori	r2,r3,8192
  88b1dc:	28801915 	stw	r2,100(r5)
  88b1e0:	280d883a 	mov	r6,r5
  88b1e4:	8009883a 	mov	r4,r16
  88b1e8:	880b883a 	mov	r5,r17
  88b1ec:	dfc00317 	ldw	ra,12(sp)
  88b1f0:	dc400217 	ldw	r17,8(sp)
  88b1f4:	dc000117 	ldw	r16,4(sp)
  88b1f8:	dec00404 	addi	sp,sp,16
  88b1fc:	088b00c1 	jmpi	88b00c <__fputwc>
  88b200:	8009883a 	mov	r4,r16
  88b204:	d9400015 	stw	r5,0(sp)
  88b208:	0887a340 	call	887a34 <__sinit>
  88b20c:	d9400017 	ldw	r5,0(sp)
  88b210:	003feb06 	br	88b1c0 <fputwc+0x2c>

0088b214 <_fstat_r>:
  88b214:	defffd04 	addi	sp,sp,-12
  88b218:	2805883a 	mov	r2,r5
  88b21c:	dc000015 	stw	r16,0(sp)
  88b220:	04002274 	movhi	r16,137
  88b224:	dc400115 	stw	r17,4(sp)
  88b228:	84180604 	addi	r16,r16,24600
  88b22c:	2023883a 	mov	r17,r4
  88b230:	300b883a 	mov	r5,r6
  88b234:	1009883a 	mov	r4,r2
  88b238:	dfc00215 	stw	ra,8(sp)
  88b23c:	80000015 	stw	zero,0(r16)
  88b240:	088f6b40 	call	88f6b4 <fstat>
  88b244:	00ffffc4 	movi	r3,-1
  88b248:	10c00526 	beq	r2,r3,88b260 <_fstat_r+0x4c>
  88b24c:	dfc00217 	ldw	ra,8(sp)
  88b250:	dc400117 	ldw	r17,4(sp)
  88b254:	dc000017 	ldw	r16,0(sp)
  88b258:	dec00304 	addi	sp,sp,12
  88b25c:	f800283a 	ret
  88b260:	80c00017 	ldw	r3,0(r16)
  88b264:	183ff926 	beq	r3,zero,88b24c <_fstat_r+0x38>
  88b268:	88c00015 	stw	r3,0(r17)
  88b26c:	003ff706 	br	88b24c <_fstat_r+0x38>

0088b270 <__sfvwrite_r>:
  88b270:	30800217 	ldw	r2,8(r6)
  88b274:	10006726 	beq	r2,zero,88b414 <__sfvwrite_r+0x1a4>
  88b278:	28c0030b 	ldhu	r3,12(r5)
  88b27c:	defff404 	addi	sp,sp,-48
  88b280:	dd400715 	stw	r21,28(sp)
  88b284:	dd000615 	stw	r20,24(sp)
  88b288:	dc000215 	stw	r16,8(sp)
  88b28c:	dfc00b15 	stw	ra,44(sp)
  88b290:	df000a15 	stw	fp,40(sp)
  88b294:	ddc00915 	stw	r23,36(sp)
  88b298:	dd800815 	stw	r22,32(sp)
  88b29c:	dcc00515 	stw	r19,20(sp)
  88b2a0:	dc800415 	stw	r18,16(sp)
  88b2a4:	dc400315 	stw	r17,12(sp)
  88b2a8:	1880020c 	andi	r2,r3,8
  88b2ac:	2821883a 	mov	r16,r5
  88b2b0:	202b883a 	mov	r21,r4
  88b2b4:	3029883a 	mov	r20,r6
  88b2b8:	10002726 	beq	r2,zero,88b358 <__sfvwrite_r+0xe8>
  88b2bc:	28800417 	ldw	r2,16(r5)
  88b2c0:	10002526 	beq	r2,zero,88b358 <__sfvwrite_r+0xe8>
  88b2c4:	1880008c 	andi	r2,r3,2
  88b2c8:	a4400017 	ldw	r17,0(r20)
  88b2cc:	10002a26 	beq	r2,zero,88b378 <__sfvwrite_r+0x108>
  88b2d0:	05a00034 	movhi	r22,32768
  88b2d4:	0027883a 	mov	r19,zero
  88b2d8:	0025883a 	mov	r18,zero
  88b2dc:	b5bf0004 	addi	r22,r22,-1024
  88b2e0:	980d883a 	mov	r6,r19
  88b2e4:	a809883a 	mov	r4,r21
  88b2e8:	90004626 	beq	r18,zero,88b404 <__sfvwrite_r+0x194>
  88b2ec:	900f883a 	mov	r7,r18
  88b2f0:	b480022e 	bgeu	r22,r18,88b2fc <__sfvwrite_r+0x8c>
  88b2f4:	01e00034 	movhi	r7,32768
  88b2f8:	39ff0004 	addi	r7,r7,-1024
  88b2fc:	80800917 	ldw	r2,36(r16)
  88b300:	81400717 	ldw	r5,28(r16)
  88b304:	103ee83a 	callr	r2
  88b308:	0080570e 	bge	zero,r2,88b468 <__sfvwrite_r+0x1f8>
  88b30c:	a0c00217 	ldw	r3,8(r20)
  88b310:	98a7883a 	add	r19,r19,r2
  88b314:	90a5c83a 	sub	r18,r18,r2
  88b318:	1885c83a 	sub	r2,r3,r2
  88b31c:	a0800215 	stw	r2,8(r20)
  88b320:	103fef1e 	bne	r2,zero,88b2e0 <__sfvwrite_r+0x70>
  88b324:	0005883a 	mov	r2,zero
  88b328:	dfc00b17 	ldw	ra,44(sp)
  88b32c:	df000a17 	ldw	fp,40(sp)
  88b330:	ddc00917 	ldw	r23,36(sp)
  88b334:	dd800817 	ldw	r22,32(sp)
  88b338:	dd400717 	ldw	r21,28(sp)
  88b33c:	dd000617 	ldw	r20,24(sp)
  88b340:	dcc00517 	ldw	r19,20(sp)
  88b344:	dc800417 	ldw	r18,16(sp)
  88b348:	dc400317 	ldw	r17,12(sp)
  88b34c:	dc000217 	ldw	r16,8(sp)
  88b350:	dec00c04 	addi	sp,sp,48
  88b354:	f800283a 	ret
  88b358:	800b883a 	mov	r5,r16
  88b35c:	a809883a 	mov	r4,r21
  88b360:	0885a600 	call	885a60 <__swsetup_r>
  88b364:	1000eb1e 	bne	r2,zero,88b714 <__sfvwrite_r+0x4a4>
  88b368:	80c0030b 	ldhu	r3,12(r16)
  88b36c:	a4400017 	ldw	r17,0(r20)
  88b370:	1880008c 	andi	r2,r3,2
  88b374:	103fd61e 	bne	r2,zero,88b2d0 <__sfvwrite_r+0x60>
  88b378:	1880004c 	andi	r2,r3,1
  88b37c:	10003f1e 	bne	r2,zero,88b47c <__sfvwrite_r+0x20c>
  88b380:	0039883a 	mov	fp,zero
  88b384:	0025883a 	mov	r18,zero
  88b388:	90001a26 	beq	r18,zero,88b3f4 <__sfvwrite_r+0x184>
  88b38c:	1880800c 	andi	r2,r3,512
  88b390:	84c00217 	ldw	r19,8(r16)
  88b394:	10002126 	beq	r2,zero,88b41c <__sfvwrite_r+0x1ac>
  88b398:	982f883a 	mov	r23,r19
  88b39c:	94c09336 	bltu	r18,r19,88b5ec <__sfvwrite_r+0x37c>
  88b3a0:	1881200c 	andi	r2,r3,1152
  88b3a4:	10009e1e 	bne	r2,zero,88b620 <__sfvwrite_r+0x3b0>
  88b3a8:	81000017 	ldw	r4,0(r16)
  88b3ac:	b80d883a 	mov	r6,r23
  88b3b0:	e00b883a 	mov	r5,fp
  88b3b4:	088b7e00 	call	88b7e0 <memmove>
  88b3b8:	80c00217 	ldw	r3,8(r16)
  88b3bc:	81000017 	ldw	r4,0(r16)
  88b3c0:	9005883a 	mov	r2,r18
  88b3c4:	1ce7c83a 	sub	r19,r3,r19
  88b3c8:	25cf883a 	add	r7,r4,r23
  88b3cc:	84c00215 	stw	r19,8(r16)
  88b3d0:	81c00015 	stw	r7,0(r16)
  88b3d4:	a0c00217 	ldw	r3,8(r20)
  88b3d8:	e0b9883a 	add	fp,fp,r2
  88b3dc:	90a5c83a 	sub	r18,r18,r2
  88b3e0:	18a7c83a 	sub	r19,r3,r2
  88b3e4:	a4c00215 	stw	r19,8(r20)
  88b3e8:	983fce26 	beq	r19,zero,88b324 <__sfvwrite_r+0xb4>
  88b3ec:	80c0030b 	ldhu	r3,12(r16)
  88b3f0:	903fe61e 	bne	r18,zero,88b38c <__sfvwrite_r+0x11c>
  88b3f4:	8f000017 	ldw	fp,0(r17)
  88b3f8:	8c800117 	ldw	r18,4(r17)
  88b3fc:	8c400204 	addi	r17,r17,8
  88b400:	003fe106 	br	88b388 <__sfvwrite_r+0x118>
  88b404:	8cc00017 	ldw	r19,0(r17)
  88b408:	8c800117 	ldw	r18,4(r17)
  88b40c:	8c400204 	addi	r17,r17,8
  88b410:	003fb306 	br	88b2e0 <__sfvwrite_r+0x70>
  88b414:	0005883a 	mov	r2,zero
  88b418:	f800283a 	ret
  88b41c:	81000017 	ldw	r4,0(r16)
  88b420:	80800417 	ldw	r2,16(r16)
  88b424:	11005736 	bltu	r2,r4,88b584 <__sfvwrite_r+0x314>
  88b428:	85c00517 	ldw	r23,20(r16)
  88b42c:	95c05536 	bltu	r18,r23,88b584 <__sfvwrite_r+0x314>
  88b430:	00a00034 	movhi	r2,32768
  88b434:	10bfffc4 	addi	r2,r2,-1
  88b438:	9009883a 	mov	r4,r18
  88b43c:	1480012e 	bgeu	r2,r18,88b444 <__sfvwrite_r+0x1d4>
  88b440:	1009883a 	mov	r4,r2
  88b444:	b80b883a 	mov	r5,r23
  88b448:	088ccf00 	call	88ccf0 <__divsi3>
  88b44c:	15cf383a 	mul	r7,r2,r23
  88b450:	81400717 	ldw	r5,28(r16)
  88b454:	80800917 	ldw	r2,36(r16)
  88b458:	e00d883a 	mov	r6,fp
  88b45c:	a809883a 	mov	r4,r21
  88b460:	103ee83a 	callr	r2
  88b464:	00bfdb16 	blt	zero,r2,88b3d4 <__sfvwrite_r+0x164>
  88b468:	8080030b 	ldhu	r2,12(r16)
  88b46c:	10801014 	ori	r2,r2,64
  88b470:	8080030d 	sth	r2,12(r16)
  88b474:	00bfffc4 	movi	r2,-1
  88b478:	003fab06 	br	88b328 <__sfvwrite_r+0xb8>
  88b47c:	0027883a 	mov	r19,zero
  88b480:	0011883a 	mov	r8,zero
  88b484:	0039883a 	mov	fp,zero
  88b488:	0025883a 	mov	r18,zero
  88b48c:	90001f26 	beq	r18,zero,88b50c <__sfvwrite_r+0x29c>
  88b490:	40005a26 	beq	r8,zero,88b5fc <__sfvwrite_r+0x38c>
  88b494:	982d883a 	mov	r22,r19
  88b498:	94c0012e 	bgeu	r18,r19,88b4a0 <__sfvwrite_r+0x230>
  88b49c:	902d883a 	mov	r22,r18
  88b4a0:	81000017 	ldw	r4,0(r16)
  88b4a4:	80800417 	ldw	r2,16(r16)
  88b4a8:	b02f883a 	mov	r23,r22
  88b4ac:	81c00517 	ldw	r7,20(r16)
  88b4b0:	1100032e 	bgeu	r2,r4,88b4c0 <__sfvwrite_r+0x250>
  88b4b4:	80c00217 	ldw	r3,8(r16)
  88b4b8:	38c7883a 	add	r3,r7,r3
  88b4bc:	1d801816 	blt	r3,r22,88b520 <__sfvwrite_r+0x2b0>
  88b4c0:	b1c03e16 	blt	r22,r7,88b5bc <__sfvwrite_r+0x34c>
  88b4c4:	80800917 	ldw	r2,36(r16)
  88b4c8:	81400717 	ldw	r5,28(r16)
  88b4cc:	e00d883a 	mov	r6,fp
  88b4d0:	da000115 	stw	r8,4(sp)
  88b4d4:	a809883a 	mov	r4,r21
  88b4d8:	103ee83a 	callr	r2
  88b4dc:	102f883a 	mov	r23,r2
  88b4e0:	da000117 	ldw	r8,4(sp)
  88b4e4:	00bfe00e 	bge	zero,r2,88b468 <__sfvwrite_r+0x1f8>
  88b4e8:	9de7c83a 	sub	r19,r19,r23
  88b4ec:	98001f26 	beq	r19,zero,88b56c <__sfvwrite_r+0x2fc>
  88b4f0:	a0800217 	ldw	r2,8(r20)
  88b4f4:	e5f9883a 	add	fp,fp,r23
  88b4f8:	95e5c83a 	sub	r18,r18,r23
  88b4fc:	15efc83a 	sub	r23,r2,r23
  88b500:	a5c00215 	stw	r23,8(r20)
  88b504:	b83f8726 	beq	r23,zero,88b324 <__sfvwrite_r+0xb4>
  88b508:	903fe11e 	bne	r18,zero,88b490 <__sfvwrite_r+0x220>
  88b50c:	8f000017 	ldw	fp,0(r17)
  88b510:	8c800117 	ldw	r18,4(r17)
  88b514:	0011883a 	mov	r8,zero
  88b518:	8c400204 	addi	r17,r17,8
  88b51c:	003fdb06 	br	88b48c <__sfvwrite_r+0x21c>
  88b520:	180d883a 	mov	r6,r3
  88b524:	e00b883a 	mov	r5,fp
  88b528:	da000115 	stw	r8,4(sp)
  88b52c:	d8c00015 	stw	r3,0(sp)
  88b530:	088b7e00 	call	88b7e0 <memmove>
  88b534:	d8c00017 	ldw	r3,0(sp)
  88b538:	80800017 	ldw	r2,0(r16)
  88b53c:	800b883a 	mov	r5,r16
  88b540:	a809883a 	mov	r4,r21
  88b544:	10c5883a 	add	r2,r2,r3
  88b548:	80800015 	stw	r2,0(r16)
  88b54c:	d8c00015 	stw	r3,0(sp)
  88b550:	08876580 	call	887658 <_fflush_r>
  88b554:	d8c00017 	ldw	r3,0(sp)
  88b558:	da000117 	ldw	r8,4(sp)
  88b55c:	103fc21e 	bne	r2,zero,88b468 <__sfvwrite_r+0x1f8>
  88b560:	182f883a 	mov	r23,r3
  88b564:	9de7c83a 	sub	r19,r19,r23
  88b568:	983fe11e 	bne	r19,zero,88b4f0 <__sfvwrite_r+0x280>
  88b56c:	800b883a 	mov	r5,r16
  88b570:	a809883a 	mov	r4,r21
  88b574:	08876580 	call	887658 <_fflush_r>
  88b578:	103fbb1e 	bne	r2,zero,88b468 <__sfvwrite_r+0x1f8>
  88b57c:	0011883a 	mov	r8,zero
  88b580:	003fdb06 	br	88b4f0 <__sfvwrite_r+0x280>
  88b584:	94c0012e 	bgeu	r18,r19,88b58c <__sfvwrite_r+0x31c>
  88b588:	9027883a 	mov	r19,r18
  88b58c:	980d883a 	mov	r6,r19
  88b590:	e00b883a 	mov	r5,fp
  88b594:	088b7e00 	call	88b7e0 <memmove>
  88b598:	80800217 	ldw	r2,8(r16)
  88b59c:	80c00017 	ldw	r3,0(r16)
  88b5a0:	14c5c83a 	sub	r2,r2,r19
  88b5a4:	1cc7883a 	add	r3,r3,r19
  88b5a8:	80800215 	stw	r2,8(r16)
  88b5ac:	80c00015 	stw	r3,0(r16)
  88b5b0:	10004326 	beq	r2,zero,88b6c0 <__sfvwrite_r+0x450>
  88b5b4:	9805883a 	mov	r2,r19
  88b5b8:	003f8606 	br	88b3d4 <__sfvwrite_r+0x164>
  88b5bc:	b00d883a 	mov	r6,r22
  88b5c0:	e00b883a 	mov	r5,fp
  88b5c4:	da000115 	stw	r8,4(sp)
  88b5c8:	088b7e00 	call	88b7e0 <memmove>
  88b5cc:	80800217 	ldw	r2,8(r16)
  88b5d0:	80c00017 	ldw	r3,0(r16)
  88b5d4:	da000117 	ldw	r8,4(sp)
  88b5d8:	1585c83a 	sub	r2,r2,r22
  88b5dc:	1dad883a 	add	r22,r3,r22
  88b5e0:	80800215 	stw	r2,8(r16)
  88b5e4:	85800015 	stw	r22,0(r16)
  88b5e8:	003fbf06 	br	88b4e8 <__sfvwrite_r+0x278>
  88b5ec:	81000017 	ldw	r4,0(r16)
  88b5f0:	9027883a 	mov	r19,r18
  88b5f4:	902f883a 	mov	r23,r18
  88b5f8:	003f6c06 	br	88b3ac <__sfvwrite_r+0x13c>
  88b5fc:	900d883a 	mov	r6,r18
  88b600:	01400284 	movi	r5,10
  88b604:	e009883a 	mov	r4,fp
  88b608:	08882d80 	call	8882d8 <memchr>
  88b60c:	10003e26 	beq	r2,zero,88b708 <__sfvwrite_r+0x498>
  88b610:	10800044 	addi	r2,r2,1
  88b614:	1727c83a 	sub	r19,r2,fp
  88b618:	02000044 	movi	r8,1
  88b61c:	003f9d06 	br	88b494 <__sfvwrite_r+0x224>
  88b620:	80800517 	ldw	r2,20(r16)
  88b624:	81400417 	ldw	r5,16(r16)
  88b628:	81c00017 	ldw	r7,0(r16)
  88b62c:	10a7883a 	add	r19,r2,r2
  88b630:	9885883a 	add	r2,r19,r2
  88b634:	1026d7fa 	srli	r19,r2,31
  88b638:	396dc83a 	sub	r22,r7,r5
  88b63c:	b1000044 	addi	r4,r22,1
  88b640:	9885883a 	add	r2,r19,r2
  88b644:	1027d07a 	srai	r19,r2,1
  88b648:	2485883a 	add	r2,r4,r18
  88b64c:	980d883a 	mov	r6,r19
  88b650:	9880022e 	bgeu	r19,r2,88b65c <__sfvwrite_r+0x3ec>
  88b654:	1027883a 	mov	r19,r2
  88b658:	100d883a 	mov	r6,r2
  88b65c:	18c1000c 	andi	r3,r3,1024
  88b660:	18001c26 	beq	r3,zero,88b6d4 <__sfvwrite_r+0x464>
  88b664:	300b883a 	mov	r5,r6
  88b668:	a809883a 	mov	r4,r21
  88b66c:	08829a40 	call	8829a4 <_malloc_r>
  88b670:	102f883a 	mov	r23,r2
  88b674:	10002926 	beq	r2,zero,88b71c <__sfvwrite_r+0x4ac>
  88b678:	81400417 	ldw	r5,16(r16)
  88b67c:	b00d883a 	mov	r6,r22
  88b680:	1009883a 	mov	r4,r2
  88b684:	08883bc0 	call	8883bc <memcpy>
  88b688:	8080030b 	ldhu	r2,12(r16)
  88b68c:	00fedfc4 	movi	r3,-1153
  88b690:	10c4703a 	and	r2,r2,r3
  88b694:	10802014 	ori	r2,r2,128
  88b698:	8080030d 	sth	r2,12(r16)
  88b69c:	bd89883a 	add	r4,r23,r22
  88b6a0:	9d8fc83a 	sub	r7,r19,r22
  88b6a4:	85c00415 	stw	r23,16(r16)
  88b6a8:	84c00515 	stw	r19,20(r16)
  88b6ac:	81000015 	stw	r4,0(r16)
  88b6b0:	9027883a 	mov	r19,r18
  88b6b4:	81c00215 	stw	r7,8(r16)
  88b6b8:	902f883a 	mov	r23,r18
  88b6bc:	003f3b06 	br	88b3ac <__sfvwrite_r+0x13c>
  88b6c0:	800b883a 	mov	r5,r16
  88b6c4:	a809883a 	mov	r4,r21
  88b6c8:	08876580 	call	887658 <_fflush_r>
  88b6cc:	103fb926 	beq	r2,zero,88b5b4 <__sfvwrite_r+0x344>
  88b6d0:	003f6506 	br	88b468 <__sfvwrite_r+0x1f8>
  88b6d4:	a809883a 	mov	r4,r21
  88b6d8:	088b99c0 	call	88b99c <_realloc_r>
  88b6dc:	102f883a 	mov	r23,r2
  88b6e0:	103fee1e 	bne	r2,zero,88b69c <__sfvwrite_r+0x42c>
  88b6e4:	81400417 	ldw	r5,16(r16)
  88b6e8:	a809883a 	mov	r4,r21
  88b6ec:	0887ba80 	call	887ba8 <_free_r>
  88b6f0:	8080030b 	ldhu	r2,12(r16)
  88b6f4:	00ffdfc4 	movi	r3,-129
  88b6f8:	1884703a 	and	r2,r3,r2
  88b6fc:	00c00304 	movi	r3,12
  88b700:	a8c00015 	stw	r3,0(r21)
  88b704:	003f5906 	br	88b46c <__sfvwrite_r+0x1fc>
  88b708:	94c00044 	addi	r19,r18,1
  88b70c:	02000044 	movi	r8,1
  88b710:	003f6006 	br	88b494 <__sfvwrite_r+0x224>
  88b714:	00bfffc4 	movi	r2,-1
  88b718:	003f0306 	br	88b328 <__sfvwrite_r+0xb8>
  88b71c:	00800304 	movi	r2,12
  88b720:	a8800015 	stw	r2,0(r21)
  88b724:	8080030b 	ldhu	r2,12(r16)
  88b728:	003f5006 	br	88b46c <__sfvwrite_r+0x1fc>

0088b72c <_isatty_r>:
  88b72c:	defffd04 	addi	sp,sp,-12
  88b730:	dc000015 	stw	r16,0(sp)
  88b734:	04002274 	movhi	r16,137
  88b738:	dc400115 	stw	r17,4(sp)
  88b73c:	84180604 	addi	r16,r16,24600
  88b740:	2023883a 	mov	r17,r4
  88b744:	2809883a 	mov	r4,r5
  88b748:	dfc00215 	stw	ra,8(sp)
  88b74c:	80000015 	stw	zero,0(r16)
  88b750:	088f7c00 	call	88f7c0 <isatty>
  88b754:	00ffffc4 	movi	r3,-1
  88b758:	10c00526 	beq	r2,r3,88b770 <_isatty_r+0x44>
  88b75c:	dfc00217 	ldw	ra,8(sp)
  88b760:	dc400117 	ldw	r17,4(sp)
  88b764:	dc000017 	ldw	r16,0(sp)
  88b768:	dec00304 	addi	sp,sp,12
  88b76c:	f800283a 	ret
  88b770:	80c00017 	ldw	r3,0(r16)
  88b774:	183ff926 	beq	r3,zero,88b75c <_isatty_r+0x30>
  88b778:	88c00015 	stw	r3,0(r17)
  88b77c:	003ff706 	br	88b75c <_isatty_r+0x30>

0088b780 <_lseek_r>:
  88b780:	defffd04 	addi	sp,sp,-12
  88b784:	2805883a 	mov	r2,r5
  88b788:	dc000015 	stw	r16,0(sp)
  88b78c:	04002274 	movhi	r16,137
  88b790:	dc400115 	stw	r17,4(sp)
  88b794:	300b883a 	mov	r5,r6
  88b798:	84180604 	addi	r16,r16,24600
  88b79c:	2023883a 	mov	r17,r4
  88b7a0:	380d883a 	mov	r6,r7
  88b7a4:	1009883a 	mov	r4,r2
  88b7a8:	dfc00215 	stw	ra,8(sp)
  88b7ac:	80000015 	stw	zero,0(r16)
  88b7b0:	088faf80 	call	88faf8 <lseek>
  88b7b4:	00ffffc4 	movi	r3,-1
  88b7b8:	10c00526 	beq	r2,r3,88b7d0 <_lseek_r+0x50>
  88b7bc:	dfc00217 	ldw	ra,8(sp)
  88b7c0:	dc400117 	ldw	r17,4(sp)
  88b7c4:	dc000017 	ldw	r16,0(sp)
  88b7c8:	dec00304 	addi	sp,sp,12
  88b7cc:	f800283a 	ret
  88b7d0:	80c00017 	ldw	r3,0(r16)
  88b7d4:	183ff926 	beq	r3,zero,88b7bc <_lseek_r+0x3c>
  88b7d8:	88c00015 	stw	r3,0(r17)
  88b7dc:	003ff706 	br	88b7bc <_lseek_r+0x3c>

0088b7e0 <memmove>:
  88b7e0:	2005883a 	mov	r2,r4
  88b7e4:	29000b2e 	bgeu	r5,r4,88b814 <memmove+0x34>
  88b7e8:	298f883a 	add	r7,r5,r6
  88b7ec:	21c0092e 	bgeu	r4,r7,88b814 <memmove+0x34>
  88b7f0:	2187883a 	add	r3,r4,r6
  88b7f4:	198bc83a 	sub	r5,r3,r6
  88b7f8:	30004826 	beq	r6,zero,88b91c <memmove+0x13c>
  88b7fc:	39ffffc4 	addi	r7,r7,-1
  88b800:	39000003 	ldbu	r4,0(r7)
  88b804:	18ffffc4 	addi	r3,r3,-1
  88b808:	19000005 	stb	r4,0(r3)
  88b80c:	28fffb1e 	bne	r5,r3,88b7fc <memmove+0x1c>
  88b810:	f800283a 	ret
  88b814:	00c003c4 	movi	r3,15
  88b818:	1980412e 	bgeu	r3,r6,88b920 <memmove+0x140>
  88b81c:	2886b03a 	or	r3,r5,r2
  88b820:	18c000cc 	andi	r3,r3,3
  88b824:	1800401e 	bne	r3,zero,88b928 <memmove+0x148>
  88b828:	33fffc04 	addi	r15,r6,-16
  88b82c:	781ed13a 	srli	r15,r15,4
  88b830:	28c00104 	addi	r3,r5,4
  88b834:	13400104 	addi	r13,r2,4
  88b838:	781c913a 	slli	r14,r15,4
  88b83c:	2b000204 	addi	r12,r5,8
  88b840:	12c00204 	addi	r11,r2,8
  88b844:	73800504 	addi	r14,r14,20
  88b848:	2a800304 	addi	r10,r5,12
  88b84c:	12400304 	addi	r9,r2,12
  88b850:	2b9d883a 	add	r14,r5,r14
  88b854:	2811883a 	mov	r8,r5
  88b858:	100f883a 	mov	r7,r2
  88b85c:	41000017 	ldw	r4,0(r8)
  88b860:	39c00404 	addi	r7,r7,16
  88b864:	18c00404 	addi	r3,r3,16
  88b868:	393ffc15 	stw	r4,-16(r7)
  88b86c:	193ffc17 	ldw	r4,-16(r3)
  88b870:	6b400404 	addi	r13,r13,16
  88b874:	5ac00404 	addi	r11,r11,16
  88b878:	693ffc15 	stw	r4,-16(r13)
  88b87c:	61000017 	ldw	r4,0(r12)
  88b880:	4a400404 	addi	r9,r9,16
  88b884:	42000404 	addi	r8,r8,16
  88b888:	593ffc15 	stw	r4,-16(r11)
  88b88c:	51000017 	ldw	r4,0(r10)
  88b890:	63000404 	addi	r12,r12,16
  88b894:	52800404 	addi	r10,r10,16
  88b898:	493ffc15 	stw	r4,-16(r9)
  88b89c:	1bbfef1e 	bne	r3,r14,88b85c <memmove+0x7c>
  88b8a0:	79000044 	addi	r4,r15,1
  88b8a4:	2008913a 	slli	r4,r4,4
  88b8a8:	328003cc 	andi	r10,r6,15
  88b8ac:	02c000c4 	movi	r11,3
  88b8b0:	1107883a 	add	r3,r2,r4
  88b8b4:	290b883a 	add	r5,r5,r4
  88b8b8:	5a801e2e 	bgeu	r11,r10,88b934 <memmove+0x154>
  88b8bc:	1813883a 	mov	r9,r3
  88b8c0:	2811883a 	mov	r8,r5
  88b8c4:	500f883a 	mov	r7,r10
  88b8c8:	41000017 	ldw	r4,0(r8)
  88b8cc:	4a400104 	addi	r9,r9,4
  88b8d0:	39ffff04 	addi	r7,r7,-4
  88b8d4:	493fff15 	stw	r4,-4(r9)
  88b8d8:	42000104 	addi	r8,r8,4
  88b8dc:	59fffa36 	bltu	r11,r7,88b8c8 <memmove+0xe8>
  88b8e0:	513fff04 	addi	r4,r10,-4
  88b8e4:	2008d0ba 	srli	r4,r4,2
  88b8e8:	318000cc 	andi	r6,r6,3
  88b8ec:	21000044 	addi	r4,r4,1
  88b8f0:	2109883a 	add	r4,r4,r4
  88b8f4:	2109883a 	add	r4,r4,r4
  88b8f8:	1907883a 	add	r3,r3,r4
  88b8fc:	290b883a 	add	r5,r5,r4
  88b900:	30000b26 	beq	r6,zero,88b930 <memmove+0x150>
  88b904:	198d883a 	add	r6,r3,r6
  88b908:	29c00003 	ldbu	r7,0(r5)
  88b90c:	18c00044 	addi	r3,r3,1
  88b910:	29400044 	addi	r5,r5,1
  88b914:	19ffffc5 	stb	r7,-1(r3)
  88b918:	19bffb1e 	bne	r3,r6,88b908 <memmove+0x128>
  88b91c:	f800283a 	ret
  88b920:	1007883a 	mov	r3,r2
  88b924:	003ff606 	br	88b900 <memmove+0x120>
  88b928:	1007883a 	mov	r3,r2
  88b92c:	003ff506 	br	88b904 <memmove+0x124>
  88b930:	f800283a 	ret
  88b934:	500d883a 	mov	r6,r10
  88b938:	003ff106 	br	88b900 <memmove+0x120>

0088b93c <_read_r>:
  88b93c:	defffd04 	addi	sp,sp,-12
  88b940:	2805883a 	mov	r2,r5
  88b944:	dc000015 	stw	r16,0(sp)
  88b948:	04002274 	movhi	r16,137
  88b94c:	dc400115 	stw	r17,4(sp)
  88b950:	300b883a 	mov	r5,r6
  88b954:	84180604 	addi	r16,r16,24600
  88b958:	2023883a 	mov	r17,r4
  88b95c:	380d883a 	mov	r6,r7
  88b960:	1009883a 	mov	r4,r2
  88b964:	dfc00215 	stw	ra,8(sp)
  88b968:	80000015 	stw	zero,0(r16)
  88b96c:	088fccc0 	call	88fccc <read>
  88b970:	00ffffc4 	movi	r3,-1
  88b974:	10c00526 	beq	r2,r3,88b98c <_read_r+0x50>
  88b978:	dfc00217 	ldw	ra,8(sp)
  88b97c:	dc400117 	ldw	r17,4(sp)
  88b980:	dc000017 	ldw	r16,0(sp)
  88b984:	dec00304 	addi	sp,sp,12
  88b988:	f800283a 	ret
  88b98c:	80c00017 	ldw	r3,0(r16)
  88b990:	183ff926 	beq	r3,zero,88b978 <_read_r+0x3c>
  88b994:	88c00015 	stw	r3,0(r17)
  88b998:	003ff706 	br	88b978 <_read_r+0x3c>

0088b99c <_realloc_r>:
  88b99c:	defff604 	addi	sp,sp,-40
  88b9a0:	dc800215 	stw	r18,8(sp)
  88b9a4:	dfc00915 	stw	ra,36(sp)
  88b9a8:	df000815 	stw	fp,32(sp)
  88b9ac:	ddc00715 	stw	r23,28(sp)
  88b9b0:	dd800615 	stw	r22,24(sp)
  88b9b4:	dd400515 	stw	r21,20(sp)
  88b9b8:	dd000415 	stw	r20,16(sp)
  88b9bc:	dcc00315 	stw	r19,12(sp)
  88b9c0:	dc400115 	stw	r17,4(sp)
  88b9c4:	dc000015 	stw	r16,0(sp)
  88b9c8:	3025883a 	mov	r18,r6
  88b9cc:	2800b726 	beq	r5,zero,88bcac <_realloc_r+0x310>
  88b9d0:	282b883a 	mov	r21,r5
  88b9d4:	2029883a 	mov	r20,r4
  88b9d8:	088fc480 	call	88fc48 <__malloc_lock>
  88b9dc:	a8bfff17 	ldw	r2,-4(r21)
  88b9e0:	043fff04 	movi	r16,-4
  88b9e4:	90c002c4 	addi	r3,r18,11
  88b9e8:	01000584 	movi	r4,22
  88b9ec:	acfffe04 	addi	r19,r21,-8
  88b9f0:	1420703a 	and	r16,r2,r16
  88b9f4:	20c0332e 	bgeu	r4,r3,88bac4 <_realloc_r+0x128>
  88b9f8:	047ffe04 	movi	r17,-8
  88b9fc:	1c62703a 	and	r17,r3,r17
  88ba00:	8807883a 	mov	r3,r17
  88ba04:	88005816 	blt	r17,zero,88bb68 <_realloc_r+0x1cc>
  88ba08:	8c805736 	bltu	r17,r18,88bb68 <_realloc_r+0x1cc>
  88ba0c:	80c0300e 	bge	r16,r3,88bad0 <_realloc_r+0x134>
  88ba10:	07002274 	movhi	fp,137
  88ba14:	e70b6704 	addi	fp,fp,11676
  88ba18:	e1c00217 	ldw	r7,8(fp)
  88ba1c:	9c09883a 	add	r4,r19,r16
  88ba20:	22000117 	ldw	r8,4(r4)
  88ba24:	21c06326 	beq	r4,r7,88bbb4 <_realloc_r+0x218>
  88ba28:	017fff84 	movi	r5,-2
  88ba2c:	414a703a 	and	r5,r8,r5
  88ba30:	214b883a 	add	r5,r4,r5
  88ba34:	29800117 	ldw	r6,4(r5)
  88ba38:	3180004c 	andi	r6,r6,1
  88ba3c:	30003f26 	beq	r6,zero,88bb3c <_realloc_r+0x1a0>
  88ba40:	1080004c 	andi	r2,r2,1
  88ba44:	10008326 	beq	r2,zero,88bc54 <_realloc_r+0x2b8>
  88ba48:	900b883a 	mov	r5,r18
  88ba4c:	a009883a 	mov	r4,r20
  88ba50:	08829a40 	call	8829a4 <_malloc_r>
  88ba54:	1025883a 	mov	r18,r2
  88ba58:	10011e26 	beq	r2,zero,88bed4 <_realloc_r+0x538>
  88ba5c:	a93fff17 	ldw	r4,-4(r21)
  88ba60:	10fffe04 	addi	r3,r2,-8
  88ba64:	00bfff84 	movi	r2,-2
  88ba68:	2084703a 	and	r2,r4,r2
  88ba6c:	9885883a 	add	r2,r19,r2
  88ba70:	1880ee26 	beq	r3,r2,88be2c <_realloc_r+0x490>
  88ba74:	81bfff04 	addi	r6,r16,-4
  88ba78:	00800904 	movi	r2,36
  88ba7c:	1180b836 	bltu	r2,r6,88bd60 <_realloc_r+0x3c4>
  88ba80:	00c004c4 	movi	r3,19
  88ba84:	19809636 	bltu	r3,r6,88bce0 <_realloc_r+0x344>
  88ba88:	9005883a 	mov	r2,r18
  88ba8c:	a807883a 	mov	r3,r21
  88ba90:	19000017 	ldw	r4,0(r3)
  88ba94:	11000015 	stw	r4,0(r2)
  88ba98:	19000117 	ldw	r4,4(r3)
  88ba9c:	11000115 	stw	r4,4(r2)
  88baa0:	18c00217 	ldw	r3,8(r3)
  88baa4:	10c00215 	stw	r3,8(r2)
  88baa8:	a80b883a 	mov	r5,r21
  88baac:	a009883a 	mov	r4,r20
  88bab0:	0887ba80 	call	887ba8 <_free_r>
  88bab4:	a009883a 	mov	r4,r20
  88bab8:	088fc6c0 	call	88fc6c <__malloc_unlock>
  88babc:	9005883a 	mov	r2,r18
  88bac0:	00001206 	br	88bb0c <_realloc_r+0x170>
  88bac4:	00c00404 	movi	r3,16
  88bac8:	1823883a 	mov	r17,r3
  88bacc:	003fce06 	br	88ba08 <_realloc_r+0x6c>
  88bad0:	a825883a 	mov	r18,r21
  88bad4:	8445c83a 	sub	r2,r16,r17
  88bad8:	00c003c4 	movi	r3,15
  88badc:	18802636 	bltu	r3,r2,88bb78 <_realloc_r+0x1dc>
  88bae0:	99800117 	ldw	r6,4(r19)
  88bae4:	9c07883a 	add	r3,r19,r16
  88bae8:	3180004c 	andi	r6,r6,1
  88baec:	3420b03a 	or	r16,r6,r16
  88baf0:	9c000115 	stw	r16,4(r19)
  88baf4:	18800117 	ldw	r2,4(r3)
  88baf8:	10800054 	ori	r2,r2,1
  88bafc:	18800115 	stw	r2,4(r3)
  88bb00:	a009883a 	mov	r4,r20
  88bb04:	088fc6c0 	call	88fc6c <__malloc_unlock>
  88bb08:	9005883a 	mov	r2,r18
  88bb0c:	dfc00917 	ldw	ra,36(sp)
  88bb10:	df000817 	ldw	fp,32(sp)
  88bb14:	ddc00717 	ldw	r23,28(sp)
  88bb18:	dd800617 	ldw	r22,24(sp)
  88bb1c:	dd400517 	ldw	r21,20(sp)
  88bb20:	dd000417 	ldw	r20,16(sp)
  88bb24:	dcc00317 	ldw	r19,12(sp)
  88bb28:	dc800217 	ldw	r18,8(sp)
  88bb2c:	dc400117 	ldw	r17,4(sp)
  88bb30:	dc000017 	ldw	r16,0(sp)
  88bb34:	dec00a04 	addi	sp,sp,40
  88bb38:	f800283a 	ret
  88bb3c:	017fff04 	movi	r5,-4
  88bb40:	414a703a 	and	r5,r8,r5
  88bb44:	814d883a 	add	r6,r16,r5
  88bb48:	30c01f16 	blt	r6,r3,88bbc8 <_realloc_r+0x22c>
  88bb4c:	20800317 	ldw	r2,12(r4)
  88bb50:	20c00217 	ldw	r3,8(r4)
  88bb54:	a825883a 	mov	r18,r21
  88bb58:	3021883a 	mov	r16,r6
  88bb5c:	18800315 	stw	r2,12(r3)
  88bb60:	10c00215 	stw	r3,8(r2)
  88bb64:	003fdb06 	br	88bad4 <_realloc_r+0x138>
  88bb68:	00800304 	movi	r2,12
  88bb6c:	a0800015 	stw	r2,0(r20)
  88bb70:	0005883a 	mov	r2,zero
  88bb74:	003fe506 	br	88bb0c <_realloc_r+0x170>
  88bb78:	98c00117 	ldw	r3,4(r19)
  88bb7c:	9c4b883a 	add	r5,r19,r17
  88bb80:	11000054 	ori	r4,r2,1
  88bb84:	18c0004c 	andi	r3,r3,1
  88bb88:	1c62b03a 	or	r17,r3,r17
  88bb8c:	9c400115 	stw	r17,4(r19)
  88bb90:	29000115 	stw	r4,4(r5)
  88bb94:	2885883a 	add	r2,r5,r2
  88bb98:	10c00117 	ldw	r3,4(r2)
  88bb9c:	29400204 	addi	r5,r5,8
  88bba0:	a009883a 	mov	r4,r20
  88bba4:	18c00054 	ori	r3,r3,1
  88bba8:	10c00115 	stw	r3,4(r2)
  88bbac:	0887ba80 	call	887ba8 <_free_r>
  88bbb0:	003fd306 	br	88bb00 <_realloc_r+0x164>
  88bbb4:	017fff04 	movi	r5,-4
  88bbb8:	414a703a 	and	r5,r8,r5
  88bbbc:	89800404 	addi	r6,r17,16
  88bbc0:	8151883a 	add	r8,r16,r5
  88bbc4:	4180590e 	bge	r8,r6,88bd2c <_realloc_r+0x390>
  88bbc8:	1080004c 	andi	r2,r2,1
  88bbcc:	103f9e1e 	bne	r2,zero,88ba48 <_realloc_r+0xac>
  88bbd0:	adbffe17 	ldw	r22,-8(r21)
  88bbd4:	00bfff04 	movi	r2,-4
  88bbd8:	9dadc83a 	sub	r22,r19,r22
  88bbdc:	b1800117 	ldw	r6,4(r22)
  88bbe0:	3084703a 	and	r2,r6,r2
  88bbe4:	20002026 	beq	r4,zero,88bc68 <_realloc_r+0x2cc>
  88bbe8:	80af883a 	add	r23,r16,r2
  88bbec:	b96f883a 	add	r23,r23,r5
  88bbf0:	21c05f26 	beq	r4,r7,88bd70 <_realloc_r+0x3d4>
  88bbf4:	b8c01c16 	blt	r23,r3,88bc68 <_realloc_r+0x2cc>
  88bbf8:	20800317 	ldw	r2,12(r4)
  88bbfc:	20c00217 	ldw	r3,8(r4)
  88bc00:	81bfff04 	addi	r6,r16,-4
  88bc04:	01000904 	movi	r4,36
  88bc08:	18800315 	stw	r2,12(r3)
  88bc0c:	10c00215 	stw	r3,8(r2)
  88bc10:	b0c00217 	ldw	r3,8(r22)
  88bc14:	b0800317 	ldw	r2,12(r22)
  88bc18:	b4800204 	addi	r18,r22,8
  88bc1c:	18800315 	stw	r2,12(r3)
  88bc20:	10c00215 	stw	r3,8(r2)
  88bc24:	21801b36 	bltu	r4,r6,88bc94 <_realloc_r+0x2f8>
  88bc28:	008004c4 	movi	r2,19
  88bc2c:	1180352e 	bgeu	r2,r6,88bd04 <_realloc_r+0x368>
  88bc30:	a8800017 	ldw	r2,0(r21)
  88bc34:	b0800215 	stw	r2,8(r22)
  88bc38:	a8800117 	ldw	r2,4(r21)
  88bc3c:	b0800315 	stw	r2,12(r22)
  88bc40:	008006c4 	movi	r2,27
  88bc44:	11807f36 	bltu	r2,r6,88be44 <_realloc_r+0x4a8>
  88bc48:	b0800404 	addi	r2,r22,16
  88bc4c:	ad400204 	addi	r21,r21,8
  88bc50:	00002d06 	br	88bd08 <_realloc_r+0x36c>
  88bc54:	adbffe17 	ldw	r22,-8(r21)
  88bc58:	00bfff04 	movi	r2,-4
  88bc5c:	9dadc83a 	sub	r22,r19,r22
  88bc60:	b1000117 	ldw	r4,4(r22)
  88bc64:	2084703a 	and	r2,r4,r2
  88bc68:	b03f7726 	beq	r22,zero,88ba48 <_realloc_r+0xac>
  88bc6c:	80af883a 	add	r23,r16,r2
  88bc70:	b8ff7516 	blt	r23,r3,88ba48 <_realloc_r+0xac>
  88bc74:	b0800317 	ldw	r2,12(r22)
  88bc78:	b0c00217 	ldw	r3,8(r22)
  88bc7c:	81bfff04 	addi	r6,r16,-4
  88bc80:	01000904 	movi	r4,36
  88bc84:	18800315 	stw	r2,12(r3)
  88bc88:	10c00215 	stw	r3,8(r2)
  88bc8c:	b4800204 	addi	r18,r22,8
  88bc90:	21bfe52e 	bgeu	r4,r6,88bc28 <_realloc_r+0x28c>
  88bc94:	a80b883a 	mov	r5,r21
  88bc98:	9009883a 	mov	r4,r18
  88bc9c:	088b7e00 	call	88b7e0 <memmove>
  88bca0:	b821883a 	mov	r16,r23
  88bca4:	b027883a 	mov	r19,r22
  88bca8:	003f8a06 	br	88bad4 <_realloc_r+0x138>
  88bcac:	300b883a 	mov	r5,r6
  88bcb0:	dfc00917 	ldw	ra,36(sp)
  88bcb4:	df000817 	ldw	fp,32(sp)
  88bcb8:	ddc00717 	ldw	r23,28(sp)
  88bcbc:	dd800617 	ldw	r22,24(sp)
  88bcc0:	dd400517 	ldw	r21,20(sp)
  88bcc4:	dd000417 	ldw	r20,16(sp)
  88bcc8:	dcc00317 	ldw	r19,12(sp)
  88bccc:	dc800217 	ldw	r18,8(sp)
  88bcd0:	dc400117 	ldw	r17,4(sp)
  88bcd4:	dc000017 	ldw	r16,0(sp)
  88bcd8:	dec00a04 	addi	sp,sp,40
  88bcdc:	08829a41 	jmpi	8829a4 <_malloc_r>
  88bce0:	a8c00017 	ldw	r3,0(r21)
  88bce4:	90c00015 	stw	r3,0(r18)
  88bce8:	a8c00117 	ldw	r3,4(r21)
  88bcec:	90c00115 	stw	r3,4(r18)
  88bcf0:	00c006c4 	movi	r3,27
  88bcf4:	19804536 	bltu	r3,r6,88be0c <_realloc_r+0x470>
  88bcf8:	90800204 	addi	r2,r18,8
  88bcfc:	a8c00204 	addi	r3,r21,8
  88bd00:	003f6306 	br	88ba90 <_realloc_r+0xf4>
  88bd04:	9005883a 	mov	r2,r18
  88bd08:	a8c00017 	ldw	r3,0(r21)
  88bd0c:	b821883a 	mov	r16,r23
  88bd10:	b027883a 	mov	r19,r22
  88bd14:	10c00015 	stw	r3,0(r2)
  88bd18:	a8c00117 	ldw	r3,4(r21)
  88bd1c:	10c00115 	stw	r3,4(r2)
  88bd20:	a8c00217 	ldw	r3,8(r21)
  88bd24:	10c00215 	stw	r3,8(r2)
  88bd28:	003f6a06 	br	88bad4 <_realloc_r+0x138>
  88bd2c:	9c67883a 	add	r19,r19,r17
  88bd30:	4445c83a 	sub	r2,r8,r17
  88bd34:	e4c00215 	stw	r19,8(fp)
  88bd38:	10800054 	ori	r2,r2,1
  88bd3c:	98800115 	stw	r2,4(r19)
  88bd40:	a8bfff17 	ldw	r2,-4(r21)
  88bd44:	a009883a 	mov	r4,r20
  88bd48:	1080004c 	andi	r2,r2,1
  88bd4c:	1462b03a 	or	r17,r2,r17
  88bd50:	ac7fff15 	stw	r17,-4(r21)
  88bd54:	088fc6c0 	call	88fc6c <__malloc_unlock>
  88bd58:	a805883a 	mov	r2,r21
  88bd5c:	003f6b06 	br	88bb0c <_realloc_r+0x170>
  88bd60:	a80b883a 	mov	r5,r21
  88bd64:	9009883a 	mov	r4,r18
  88bd68:	088b7e00 	call	88b7e0 <memmove>
  88bd6c:	003f4e06 	br	88baa8 <_realloc_r+0x10c>
  88bd70:	89000404 	addi	r4,r17,16
  88bd74:	b93fbc16 	blt	r23,r4,88bc68 <_realloc_r+0x2cc>
  88bd78:	b0800317 	ldw	r2,12(r22)
  88bd7c:	b0c00217 	ldw	r3,8(r22)
  88bd80:	81bfff04 	addi	r6,r16,-4
  88bd84:	01000904 	movi	r4,36
  88bd88:	18800315 	stw	r2,12(r3)
  88bd8c:	10c00215 	stw	r3,8(r2)
  88bd90:	b4800204 	addi	r18,r22,8
  88bd94:	21804336 	bltu	r4,r6,88bea4 <_realloc_r+0x508>
  88bd98:	008004c4 	movi	r2,19
  88bd9c:	11803f2e 	bgeu	r2,r6,88be9c <_realloc_r+0x500>
  88bda0:	a8800017 	ldw	r2,0(r21)
  88bda4:	b0800215 	stw	r2,8(r22)
  88bda8:	a8800117 	ldw	r2,4(r21)
  88bdac:	b0800315 	stw	r2,12(r22)
  88bdb0:	008006c4 	movi	r2,27
  88bdb4:	11803f36 	bltu	r2,r6,88beb4 <_realloc_r+0x518>
  88bdb8:	b0800404 	addi	r2,r22,16
  88bdbc:	ad400204 	addi	r21,r21,8
  88bdc0:	a8c00017 	ldw	r3,0(r21)
  88bdc4:	10c00015 	stw	r3,0(r2)
  88bdc8:	a8c00117 	ldw	r3,4(r21)
  88bdcc:	10c00115 	stw	r3,4(r2)
  88bdd0:	a8c00217 	ldw	r3,8(r21)
  88bdd4:	10c00215 	stw	r3,8(r2)
  88bdd8:	b447883a 	add	r3,r22,r17
  88bddc:	bc45c83a 	sub	r2,r23,r17
  88bde0:	e0c00215 	stw	r3,8(fp)
  88bde4:	10800054 	ori	r2,r2,1
  88bde8:	18800115 	stw	r2,4(r3)
  88bdec:	b0800117 	ldw	r2,4(r22)
  88bdf0:	a009883a 	mov	r4,r20
  88bdf4:	1080004c 	andi	r2,r2,1
  88bdf8:	1462b03a 	or	r17,r2,r17
  88bdfc:	b4400115 	stw	r17,4(r22)
  88be00:	088fc6c0 	call	88fc6c <__malloc_unlock>
  88be04:	9005883a 	mov	r2,r18
  88be08:	003f4006 	br	88bb0c <_realloc_r+0x170>
  88be0c:	a8c00217 	ldw	r3,8(r21)
  88be10:	90c00215 	stw	r3,8(r18)
  88be14:	a8c00317 	ldw	r3,12(r21)
  88be18:	90c00315 	stw	r3,12(r18)
  88be1c:	30801126 	beq	r6,r2,88be64 <_realloc_r+0x4c8>
  88be20:	90800404 	addi	r2,r18,16
  88be24:	a8c00404 	addi	r3,r21,16
  88be28:	003f1906 	br	88ba90 <_realloc_r+0xf4>
  88be2c:	90ffff17 	ldw	r3,-4(r18)
  88be30:	00bfff04 	movi	r2,-4
  88be34:	a825883a 	mov	r18,r21
  88be38:	1884703a 	and	r2,r3,r2
  88be3c:	80a1883a 	add	r16,r16,r2
  88be40:	003f2406 	br	88bad4 <_realloc_r+0x138>
  88be44:	a8800217 	ldw	r2,8(r21)
  88be48:	b0800415 	stw	r2,16(r22)
  88be4c:	a8800317 	ldw	r2,12(r21)
  88be50:	b0800515 	stw	r2,20(r22)
  88be54:	31000a26 	beq	r6,r4,88be80 <_realloc_r+0x4e4>
  88be58:	b0800604 	addi	r2,r22,24
  88be5c:	ad400404 	addi	r21,r21,16
  88be60:	003fa906 	br	88bd08 <_realloc_r+0x36c>
  88be64:	a9000417 	ldw	r4,16(r21)
  88be68:	90800604 	addi	r2,r18,24
  88be6c:	a8c00604 	addi	r3,r21,24
  88be70:	91000415 	stw	r4,16(r18)
  88be74:	a9000517 	ldw	r4,20(r21)
  88be78:	91000515 	stw	r4,20(r18)
  88be7c:	003f0406 	br	88ba90 <_realloc_r+0xf4>
  88be80:	a8c00417 	ldw	r3,16(r21)
  88be84:	ad400604 	addi	r21,r21,24
  88be88:	b0800804 	addi	r2,r22,32
  88be8c:	b0c00615 	stw	r3,24(r22)
  88be90:	a8ffff17 	ldw	r3,-4(r21)
  88be94:	b0c00715 	stw	r3,28(r22)
  88be98:	003f9b06 	br	88bd08 <_realloc_r+0x36c>
  88be9c:	9005883a 	mov	r2,r18
  88bea0:	003fc706 	br	88bdc0 <_realloc_r+0x424>
  88bea4:	a80b883a 	mov	r5,r21
  88bea8:	9009883a 	mov	r4,r18
  88beac:	088b7e00 	call	88b7e0 <memmove>
  88beb0:	003fc906 	br	88bdd8 <_realloc_r+0x43c>
  88beb4:	a8800217 	ldw	r2,8(r21)
  88beb8:	b0800415 	stw	r2,16(r22)
  88bebc:	a8800317 	ldw	r2,12(r21)
  88bec0:	b0800515 	stw	r2,20(r22)
  88bec4:	31000726 	beq	r6,r4,88bee4 <_realloc_r+0x548>
  88bec8:	b0800604 	addi	r2,r22,24
  88becc:	ad400404 	addi	r21,r21,16
  88bed0:	003fbb06 	br	88bdc0 <_realloc_r+0x424>
  88bed4:	a009883a 	mov	r4,r20
  88bed8:	088fc6c0 	call	88fc6c <__malloc_unlock>
  88bedc:	0005883a 	mov	r2,zero
  88bee0:	003f0a06 	br	88bb0c <_realloc_r+0x170>
  88bee4:	a8c00417 	ldw	r3,16(r21)
  88bee8:	ad400604 	addi	r21,r21,24
  88beec:	b0800804 	addi	r2,r22,32
  88bef0:	b0c00615 	stw	r3,24(r22)
  88bef4:	a8ffff17 	ldw	r3,-4(r21)
  88bef8:	b0c00715 	stw	r3,28(r22)
  88befc:	003fb006 	br	88bdc0 <_realloc_r+0x424>

0088bf00 <__swbuf_r>:
  88bf00:	defffb04 	addi	sp,sp,-20
  88bf04:	dcc00315 	stw	r19,12(sp)
  88bf08:	dc800215 	stw	r18,8(sp)
  88bf0c:	dc000015 	stw	r16,0(sp)
  88bf10:	dfc00415 	stw	ra,16(sp)
  88bf14:	dc400115 	stw	r17,4(sp)
  88bf18:	2025883a 	mov	r18,r4
  88bf1c:	2827883a 	mov	r19,r5
  88bf20:	3021883a 	mov	r16,r6
  88bf24:	20000226 	beq	r4,zero,88bf30 <__swbuf_r+0x30>
  88bf28:	20800e17 	ldw	r2,56(r4)
  88bf2c:	10004226 	beq	r2,zero,88c038 <__swbuf_r+0x138>
  88bf30:	80800617 	ldw	r2,24(r16)
  88bf34:	8100030b 	ldhu	r4,12(r16)
  88bf38:	80800215 	stw	r2,8(r16)
  88bf3c:	2080020c 	andi	r2,r4,8
  88bf40:	10003626 	beq	r2,zero,88c01c <__swbuf_r+0x11c>
  88bf44:	80c00417 	ldw	r3,16(r16)
  88bf48:	18003426 	beq	r3,zero,88c01c <__swbuf_r+0x11c>
  88bf4c:	2088000c 	andi	r2,r4,8192
  88bf50:	9c403fcc 	andi	r17,r19,255
  88bf54:	10001a26 	beq	r2,zero,88bfc0 <__swbuf_r+0xc0>
  88bf58:	80800017 	ldw	r2,0(r16)
  88bf5c:	81000517 	ldw	r4,20(r16)
  88bf60:	10c7c83a 	sub	r3,r2,r3
  88bf64:	1900200e 	bge	r3,r4,88bfe8 <__swbuf_r+0xe8>
  88bf68:	18c00044 	addi	r3,r3,1
  88bf6c:	81000217 	ldw	r4,8(r16)
  88bf70:	11400044 	addi	r5,r2,1
  88bf74:	81400015 	stw	r5,0(r16)
  88bf78:	213fffc4 	addi	r4,r4,-1
  88bf7c:	81000215 	stw	r4,8(r16)
  88bf80:	14c00005 	stb	r19,0(r2)
  88bf84:	80800517 	ldw	r2,20(r16)
  88bf88:	10c01e26 	beq	r2,r3,88c004 <__swbuf_r+0x104>
  88bf8c:	8080030b 	ldhu	r2,12(r16)
  88bf90:	1080004c 	andi	r2,r2,1
  88bf94:	10000226 	beq	r2,zero,88bfa0 <__swbuf_r+0xa0>
  88bf98:	00800284 	movi	r2,10
  88bf9c:	88801926 	beq	r17,r2,88c004 <__swbuf_r+0x104>
  88bfa0:	8805883a 	mov	r2,r17
  88bfa4:	dfc00417 	ldw	ra,16(sp)
  88bfa8:	dcc00317 	ldw	r19,12(sp)
  88bfac:	dc800217 	ldw	r18,8(sp)
  88bfb0:	dc400117 	ldw	r17,4(sp)
  88bfb4:	dc000017 	ldw	r16,0(sp)
  88bfb8:	dec00504 	addi	sp,sp,20
  88bfbc:	f800283a 	ret
  88bfc0:	81401917 	ldw	r5,100(r16)
  88bfc4:	00b7ffc4 	movi	r2,-8193
  88bfc8:	21080014 	ori	r4,r4,8192
  88bfcc:	2884703a 	and	r2,r5,r2
  88bfd0:	80801915 	stw	r2,100(r16)
  88bfd4:	80800017 	ldw	r2,0(r16)
  88bfd8:	8100030d 	sth	r4,12(r16)
  88bfdc:	81000517 	ldw	r4,20(r16)
  88bfe0:	10c7c83a 	sub	r3,r2,r3
  88bfe4:	193fe016 	blt	r3,r4,88bf68 <__swbuf_r+0x68>
  88bfe8:	800b883a 	mov	r5,r16
  88bfec:	9009883a 	mov	r4,r18
  88bff0:	08876580 	call	887658 <_fflush_r>
  88bff4:	1000071e 	bne	r2,zero,88c014 <__swbuf_r+0x114>
  88bff8:	80800017 	ldw	r2,0(r16)
  88bffc:	00c00044 	movi	r3,1
  88c000:	003fda06 	br	88bf6c <__swbuf_r+0x6c>
  88c004:	800b883a 	mov	r5,r16
  88c008:	9009883a 	mov	r4,r18
  88c00c:	08876580 	call	887658 <_fflush_r>
  88c010:	103fe326 	beq	r2,zero,88bfa0 <__swbuf_r+0xa0>
  88c014:	00bfffc4 	movi	r2,-1
  88c018:	003fe206 	br	88bfa4 <__swbuf_r+0xa4>
  88c01c:	800b883a 	mov	r5,r16
  88c020:	9009883a 	mov	r4,r18
  88c024:	0885a600 	call	885a60 <__swsetup_r>
  88c028:	103ffa1e 	bne	r2,zero,88c014 <__swbuf_r+0x114>
  88c02c:	8100030b 	ldhu	r4,12(r16)
  88c030:	80c00417 	ldw	r3,16(r16)
  88c034:	003fc506 	br	88bf4c <__swbuf_r+0x4c>
  88c038:	0887a340 	call	887a34 <__sinit>
  88c03c:	003fbc06 	br	88bf30 <__swbuf_r+0x30>

0088c040 <__swbuf>:
  88c040:	00802274 	movhi	r2,137
  88c044:	10912004 	addi	r2,r2,17536
  88c048:	280d883a 	mov	r6,r5
  88c04c:	200b883a 	mov	r5,r4
  88c050:	11000017 	ldw	r4,0(r2)
  88c054:	088bf001 	jmpi	88bf00 <__swbuf_r>

0088c058 <_wcrtomb_r>:
  88c058:	defff604 	addi	sp,sp,-40
  88c05c:	00802274 	movhi	r2,137
  88c060:	dc800815 	stw	r18,32(sp)
  88c064:	dc400715 	stw	r17,28(sp)
  88c068:	dc000615 	stw	r16,24(sp)
  88c06c:	10912404 	addi	r2,r2,17552
  88c070:	dfc00915 	stw	ra,36(sp)
  88c074:	2021883a 	mov	r16,r4
  88c078:	3823883a 	mov	r17,r7
  88c07c:	14800017 	ldw	r18,0(r2)
  88c080:	28001426 	beq	r5,zero,88c0d4 <_wcrtomb_r+0x7c>
  88c084:	d9400415 	stw	r5,16(sp)
  88c088:	d9800515 	stw	r6,20(sp)
  88c08c:	08880bc0 	call	8880bc <__locale_charset>
  88c090:	d9800517 	ldw	r6,20(sp)
  88c094:	d9400417 	ldw	r5,16(sp)
  88c098:	100f883a 	mov	r7,r2
  88c09c:	dc400015 	stw	r17,0(sp)
  88c0a0:	8009883a 	mov	r4,r16
  88c0a4:	903ee83a 	callr	r18
  88c0a8:	00ffffc4 	movi	r3,-1
  88c0ac:	10c0031e 	bne	r2,r3,88c0bc <_wcrtomb_r+0x64>
  88c0b0:	88000015 	stw	zero,0(r17)
  88c0b4:	00c02284 	movi	r3,138
  88c0b8:	80c00015 	stw	r3,0(r16)
  88c0bc:	dfc00917 	ldw	ra,36(sp)
  88c0c0:	dc800817 	ldw	r18,32(sp)
  88c0c4:	dc400717 	ldw	r17,28(sp)
  88c0c8:	dc000617 	ldw	r16,24(sp)
  88c0cc:	dec00a04 	addi	sp,sp,40
  88c0d0:	f800283a 	ret
  88c0d4:	08880bc0 	call	8880bc <__locale_charset>
  88c0d8:	100f883a 	mov	r7,r2
  88c0dc:	dc400015 	stw	r17,0(sp)
  88c0e0:	000d883a 	mov	r6,zero
  88c0e4:	d9400104 	addi	r5,sp,4
  88c0e8:	8009883a 	mov	r4,r16
  88c0ec:	903ee83a 	callr	r18
  88c0f0:	003fed06 	br	88c0a8 <_wcrtomb_r+0x50>

0088c0f4 <wcrtomb>:
  88c0f4:	defff604 	addi	sp,sp,-40
  88c0f8:	00802274 	movhi	r2,137
  88c0fc:	dc800615 	stw	r18,24(sp)
  88c100:	dc400515 	stw	r17,20(sp)
  88c104:	10912004 	addi	r2,r2,17536
  88c108:	dfc00915 	stw	ra,36(sp)
  88c10c:	dd000815 	stw	r20,32(sp)
  88c110:	dcc00715 	stw	r19,28(sp)
  88c114:	dc000415 	stw	r16,16(sp)
  88c118:	3025883a 	mov	r18,r6
  88c11c:	14400017 	ldw	r17,0(r2)
  88c120:	20001926 	beq	r4,zero,88c188 <wcrtomb+0x94>
  88c124:	00802274 	movhi	r2,137
  88c128:	10912404 	addi	r2,r2,17552
  88c12c:	15000017 	ldw	r20,0(r2)
  88c130:	2021883a 	mov	r16,r4
  88c134:	2827883a 	mov	r19,r5
  88c138:	08880bc0 	call	8880bc <__locale_charset>
  88c13c:	100f883a 	mov	r7,r2
  88c140:	dc800015 	stw	r18,0(sp)
  88c144:	980d883a 	mov	r6,r19
  88c148:	800b883a 	mov	r5,r16
  88c14c:	8809883a 	mov	r4,r17
  88c150:	a03ee83a 	callr	r20
  88c154:	00ffffc4 	movi	r3,-1
  88c158:	10c0031e 	bne	r2,r3,88c168 <wcrtomb+0x74>
  88c15c:	90000015 	stw	zero,0(r18)
  88c160:	00c02284 	movi	r3,138
  88c164:	88c00015 	stw	r3,0(r17)
  88c168:	dfc00917 	ldw	ra,36(sp)
  88c16c:	dd000817 	ldw	r20,32(sp)
  88c170:	dcc00717 	ldw	r19,28(sp)
  88c174:	dc800617 	ldw	r18,24(sp)
  88c178:	dc400517 	ldw	r17,20(sp)
  88c17c:	dc000417 	ldw	r16,16(sp)
  88c180:	dec00a04 	addi	sp,sp,40
  88c184:	f800283a 	ret
  88c188:	00802274 	movhi	r2,137
  88c18c:	10912404 	addi	r2,r2,17552
  88c190:	14000017 	ldw	r16,0(r2)
  88c194:	08880bc0 	call	8880bc <__locale_charset>
  88c198:	100f883a 	mov	r7,r2
  88c19c:	dc800015 	stw	r18,0(sp)
  88c1a0:	000d883a 	mov	r6,zero
  88c1a4:	d9400104 	addi	r5,sp,4
  88c1a8:	8809883a 	mov	r4,r17
  88c1ac:	803ee83a 	callr	r16
  88c1b0:	003fe806 	br	88c154 <wcrtomb+0x60>

0088c1b4 <__ascii_wctomb>:
  88c1b4:	28000526 	beq	r5,zero,88c1cc <__ascii_wctomb+0x18>
  88c1b8:	00803fc4 	movi	r2,255
  88c1bc:	11800536 	bltu	r2,r6,88c1d4 <__ascii_wctomb+0x20>
  88c1c0:	29800005 	stb	r6,0(r5)
  88c1c4:	00800044 	movi	r2,1
  88c1c8:	f800283a 	ret
  88c1cc:	0005883a 	mov	r2,zero
  88c1d0:	f800283a 	ret
  88c1d4:	00802284 	movi	r2,138
  88c1d8:	20800015 	stw	r2,0(r4)
  88c1dc:	00bfffc4 	movi	r2,-1
  88c1e0:	f800283a 	ret

0088c1e4 <_wctomb_r>:
  88c1e4:	00802274 	movhi	r2,137
  88c1e8:	defff904 	addi	sp,sp,-28
  88c1ec:	10912404 	addi	r2,r2,17552
  88c1f0:	dfc00615 	stw	ra,24(sp)
  88c1f4:	dc400515 	stw	r17,20(sp)
  88c1f8:	dc000415 	stw	r16,16(sp)
  88c1fc:	3823883a 	mov	r17,r7
  88c200:	14000017 	ldw	r16,0(r2)
  88c204:	d9000115 	stw	r4,4(sp)
  88c208:	d9400215 	stw	r5,8(sp)
  88c20c:	d9800315 	stw	r6,12(sp)
  88c210:	08880bc0 	call	8880bc <__locale_charset>
  88c214:	d9800317 	ldw	r6,12(sp)
  88c218:	d9400217 	ldw	r5,8(sp)
  88c21c:	d9000117 	ldw	r4,4(sp)
  88c220:	100f883a 	mov	r7,r2
  88c224:	dc400015 	stw	r17,0(sp)
  88c228:	803ee83a 	callr	r16
  88c22c:	dfc00617 	ldw	ra,24(sp)
  88c230:	dc400517 	ldw	r17,20(sp)
  88c234:	dc000417 	ldw	r16,16(sp)
  88c238:	dec00704 	addi	sp,sp,28
  88c23c:	f800283a 	ret

0088c240 <__udivdi3>:
  88c240:	defff504 	addi	sp,sp,-44
  88c244:	dcc00415 	stw	r19,16(sp)
  88c248:	dc000115 	stw	r16,4(sp)
  88c24c:	dfc00a15 	stw	ra,40(sp)
  88c250:	df000915 	stw	fp,36(sp)
  88c254:	ddc00815 	stw	r23,32(sp)
  88c258:	dd800715 	stw	r22,28(sp)
  88c25c:	dd400615 	stw	r21,24(sp)
  88c260:	dd000515 	stw	r20,20(sp)
  88c264:	dc800315 	stw	r18,12(sp)
  88c268:	dc400215 	stw	r17,8(sp)
  88c26c:	2027883a 	mov	r19,r4
  88c270:	2821883a 	mov	r16,r5
  88c274:	3800411e 	bne	r7,zero,88c37c <__udivdi3+0x13c>
  88c278:	3023883a 	mov	r17,r6
  88c27c:	2025883a 	mov	r18,r4
  88c280:	2980522e 	bgeu	r5,r6,88c3cc <__udivdi3+0x18c>
  88c284:	00bfffd4 	movui	r2,65535
  88c288:	282d883a 	mov	r22,r5
  88c28c:	1180a836 	bltu	r2,r6,88c530 <__udivdi3+0x2f0>
  88c290:	00803fc4 	movi	r2,255
  88c294:	1185803a 	cmpltu	r2,r2,r6
  88c298:	100490fa 	slli	r2,r2,3
  88c29c:	3086d83a 	srl	r3,r6,r2
  88c2a0:	01002274 	movhi	r4,137
  88c2a4:	2109a804 	addi	r4,r4,9888
  88c2a8:	20c7883a 	add	r3,r4,r3
  88c2ac:	18c00003 	ldbu	r3,0(r3)
  88c2b0:	1885883a 	add	r2,r3,r2
  88c2b4:	00c00804 	movi	r3,32
  88c2b8:	1887c83a 	sub	r3,r3,r2
  88c2bc:	18000526 	beq	r3,zero,88c2d4 <__udivdi3+0x94>
  88c2c0:	80e0983a 	sll	r16,r16,r3
  88c2c4:	9884d83a 	srl	r2,r19,r2
  88c2c8:	30e2983a 	sll	r17,r6,r3
  88c2cc:	98e4983a 	sll	r18,r19,r3
  88c2d0:	142cb03a 	or	r22,r2,r16
  88c2d4:	882ad43a 	srli	r21,r17,16
  88c2d8:	b009883a 	mov	r4,r22
  88c2dc:	8d3fffcc 	andi	r20,r17,65535
  88c2e0:	a80b883a 	mov	r5,r21
  88c2e4:	088ce4c0 	call	88ce4c <__umodsi3>
  88c2e8:	b009883a 	mov	r4,r22
  88c2ec:	a80b883a 	mov	r5,r21
  88c2f0:	1027883a 	mov	r19,r2
  88c2f4:	088cde80 	call	88cde8 <__udivsi3>
  88c2f8:	102d883a 	mov	r22,r2
  88c2fc:	9826943a 	slli	r19,r19,16
  88c300:	9004d43a 	srli	r2,r18,16
  88c304:	a5a1383a 	mul	r16,r20,r22
  88c308:	14c4b03a 	or	r2,r2,r19
  88c30c:	1400052e 	bgeu	r2,r16,88c324 <__udivdi3+0xe4>
  88c310:	1445883a 	add	r2,r2,r17
  88c314:	b0ffffc4 	addi	r3,r22,-1
  88c318:	14400136 	bltu	r2,r17,88c320 <__udivdi3+0xe0>
  88c31c:	14012336 	bltu	r2,r16,88c7ac <__udivdi3+0x56c>
  88c320:	182d883a 	mov	r22,r3
  88c324:	1421c83a 	sub	r16,r2,r16
  88c328:	a80b883a 	mov	r5,r21
  88c32c:	8009883a 	mov	r4,r16
  88c330:	088ce4c0 	call	88ce4c <__umodsi3>
  88c334:	1027883a 	mov	r19,r2
  88c338:	a80b883a 	mov	r5,r21
  88c33c:	8009883a 	mov	r4,r16
  88c340:	088cde80 	call	88cde8 <__udivsi3>
  88c344:	9826943a 	slli	r19,r19,16
  88c348:	a0a9383a 	mul	r20,r20,r2
  88c34c:	94bfffcc 	andi	r18,r18,65535
  88c350:	94e4b03a 	or	r18,r18,r19
  88c354:	9500052e 	bgeu	r18,r20,88c36c <__udivdi3+0x12c>
  88c358:	8ca5883a 	add	r18,r17,r18
  88c35c:	10ffffc4 	addi	r3,r2,-1
  88c360:	9440f136 	bltu	r18,r17,88c728 <__udivdi3+0x4e8>
  88c364:	9500f02e 	bgeu	r18,r20,88c728 <__udivdi3+0x4e8>
  88c368:	10bfff84 	addi	r2,r2,-2
  88c36c:	b00c943a 	slli	r6,r22,16
  88c370:	0007883a 	mov	r3,zero
  88c374:	3084b03a 	or	r2,r6,r2
  88c378:	00005906 	br	88c4e0 <__udivdi3+0x2a0>
  88c37c:	29c05636 	bltu	r5,r7,88c4d8 <__udivdi3+0x298>
  88c380:	00bfffd4 	movui	r2,65535
  88c384:	11c0622e 	bgeu	r2,r7,88c510 <__udivdi3+0x2d0>
  88c388:	00804034 	movhi	r2,256
  88c38c:	10bfffc4 	addi	r2,r2,-1
  88c390:	11c0ee36 	bltu	r2,r7,88c74c <__udivdi3+0x50c>
  88c394:	00800404 	movi	r2,16
  88c398:	3886d83a 	srl	r3,r7,r2
  88c39c:	01002274 	movhi	r4,137
  88c3a0:	2109a804 	addi	r4,r4,9888
  88c3a4:	20c7883a 	add	r3,r4,r3
  88c3a8:	18c00003 	ldbu	r3,0(r3)
  88c3ac:	05400804 	movi	r21,32
  88c3b0:	1885883a 	add	r2,r3,r2
  88c3b4:	a8abc83a 	sub	r21,r21,r2
  88c3b8:	a800621e 	bne	r21,zero,88c544 <__udivdi3+0x304>
  88c3bc:	3c00e936 	bltu	r7,r16,88c764 <__udivdi3+0x524>
  88c3c0:	9985403a 	cmpgeu	r2,r19,r6
  88c3c4:	0007883a 	mov	r3,zero
  88c3c8:	00004506 	br	88c4e0 <__udivdi3+0x2a0>
  88c3cc:	3000041e 	bne	r6,zero,88c3e0 <__udivdi3+0x1a0>
  88c3d0:	000b883a 	mov	r5,zero
  88c3d4:	01000044 	movi	r4,1
  88c3d8:	088cde80 	call	88cde8 <__udivsi3>
  88c3dc:	1023883a 	mov	r17,r2
  88c3e0:	00bfffd4 	movui	r2,65535
  88c3e4:	14404e2e 	bgeu	r2,r17,88c520 <__udivdi3+0x2e0>
  88c3e8:	00804034 	movhi	r2,256
  88c3ec:	10bfffc4 	addi	r2,r2,-1
  88c3f0:	1440d836 	bltu	r2,r17,88c754 <__udivdi3+0x514>
  88c3f4:	00800404 	movi	r2,16
  88c3f8:	8886d83a 	srl	r3,r17,r2
  88c3fc:	01002274 	movhi	r4,137
  88c400:	2109a804 	addi	r4,r4,9888
  88c404:	20c7883a 	add	r3,r4,r3
  88c408:	18c00003 	ldbu	r3,0(r3)
  88c40c:	1885883a 	add	r2,r3,r2
  88c410:	00c00804 	movi	r3,32
  88c414:	1887c83a 	sub	r3,r3,r2
  88c418:	18008f1e 	bne	r3,zero,88c658 <__udivdi3+0x418>
  88c41c:	882ad43a 	srli	r21,r17,16
  88c420:	8461c83a 	sub	r16,r16,r17
  88c424:	8d3fffcc 	andi	r20,r17,65535
  88c428:	00c00044 	movi	r3,1
  88c42c:	8009883a 	mov	r4,r16
  88c430:	a80b883a 	mov	r5,r21
  88c434:	d8c00015 	stw	r3,0(sp)
  88c438:	088ce4c0 	call	88ce4c <__umodsi3>
  88c43c:	8009883a 	mov	r4,r16
  88c440:	a80b883a 	mov	r5,r21
  88c444:	1027883a 	mov	r19,r2
  88c448:	088cde80 	call	88cde8 <__udivsi3>
  88c44c:	9826943a 	slli	r19,r19,16
  88c450:	9008d43a 	srli	r4,r18,16
  88c454:	1521383a 	mul	r16,r2,r20
  88c458:	102d883a 	mov	r22,r2
  88c45c:	24c8b03a 	or	r4,r4,r19
  88c460:	d8c00017 	ldw	r3,0(sp)
  88c464:	2400052e 	bgeu	r4,r16,88c47c <__udivdi3+0x23c>
  88c468:	2449883a 	add	r4,r4,r17
  88c46c:	b0bfffc4 	addi	r2,r22,-1
  88c470:	24400136 	bltu	r4,r17,88c478 <__udivdi3+0x238>
  88c474:	2400ca36 	bltu	r4,r16,88c7a0 <__udivdi3+0x560>
  88c478:	102d883a 	mov	r22,r2
  88c47c:	2421c83a 	sub	r16,r4,r16
  88c480:	a80b883a 	mov	r5,r21
  88c484:	8009883a 	mov	r4,r16
  88c488:	d8c00015 	stw	r3,0(sp)
  88c48c:	088ce4c0 	call	88ce4c <__umodsi3>
  88c490:	1027883a 	mov	r19,r2
  88c494:	a80b883a 	mov	r5,r21
  88c498:	8009883a 	mov	r4,r16
  88c49c:	088cde80 	call	88cde8 <__udivsi3>
  88c4a0:	9826943a 	slli	r19,r19,16
  88c4a4:	1529383a 	mul	r20,r2,r20
  88c4a8:	94bfffcc 	andi	r18,r18,65535
  88c4ac:	94e4b03a 	or	r18,r18,r19
  88c4b0:	d8c00017 	ldw	r3,0(sp)
  88c4b4:	9500052e 	bgeu	r18,r20,88c4cc <__udivdi3+0x28c>
  88c4b8:	8ca5883a 	add	r18,r17,r18
  88c4bc:	113fffc4 	addi	r4,r2,-1
  88c4c0:	94409736 	bltu	r18,r17,88c720 <__udivdi3+0x4e0>
  88c4c4:	9500962e 	bgeu	r18,r20,88c720 <__udivdi3+0x4e0>
  88c4c8:	10bfff84 	addi	r2,r2,-2
  88c4cc:	b00c943a 	slli	r6,r22,16
  88c4d0:	3084b03a 	or	r2,r6,r2
  88c4d4:	00000206 	br	88c4e0 <__udivdi3+0x2a0>
  88c4d8:	0007883a 	mov	r3,zero
  88c4dc:	0005883a 	mov	r2,zero
  88c4e0:	dfc00a17 	ldw	ra,40(sp)
  88c4e4:	df000917 	ldw	fp,36(sp)
  88c4e8:	ddc00817 	ldw	r23,32(sp)
  88c4ec:	dd800717 	ldw	r22,28(sp)
  88c4f0:	dd400617 	ldw	r21,24(sp)
  88c4f4:	dd000517 	ldw	r20,20(sp)
  88c4f8:	dcc00417 	ldw	r19,16(sp)
  88c4fc:	dc800317 	ldw	r18,12(sp)
  88c500:	dc400217 	ldw	r17,8(sp)
  88c504:	dc000117 	ldw	r16,4(sp)
  88c508:	dec00b04 	addi	sp,sp,44
  88c50c:	f800283a 	ret
  88c510:	00803fc4 	movi	r2,255
  88c514:	11c5803a 	cmpltu	r2,r2,r7
  88c518:	100490fa 	slli	r2,r2,3
  88c51c:	003f9e06 	br	88c398 <__udivdi3+0x158>
  88c520:	00803fc4 	movi	r2,255
  88c524:	1445803a 	cmpltu	r2,r2,r17
  88c528:	100490fa 	slli	r2,r2,3
  88c52c:	003fb206 	br	88c3f8 <__udivdi3+0x1b8>
  88c530:	00804034 	movhi	r2,256
  88c534:	10bfffc4 	addi	r2,r2,-1
  88c538:	11808836 	bltu	r2,r6,88c75c <__udivdi3+0x51c>
  88c53c:	00800404 	movi	r2,16
  88c540:	003f5606 	br	88c29c <__udivdi3+0x5c>
  88c544:	30aed83a 	srl	r23,r6,r2
  88c548:	3d4e983a 	sll	r7,r7,r21
  88c54c:	80acd83a 	srl	r22,r16,r2
  88c550:	9884d83a 	srl	r2,r19,r2
  88c554:	3deeb03a 	or	r23,r7,r23
  88c558:	b824d43a 	srli	r18,r23,16
  88c55c:	8560983a 	sll	r16,r16,r21
  88c560:	b009883a 	mov	r4,r22
  88c564:	900b883a 	mov	r5,r18
  88c568:	3568983a 	sll	r20,r6,r21
  88c56c:	1420b03a 	or	r16,r2,r16
  88c570:	088ce4c0 	call	88ce4c <__umodsi3>
  88c574:	b009883a 	mov	r4,r22
  88c578:	900b883a 	mov	r5,r18
  88c57c:	1023883a 	mov	r17,r2
  88c580:	088cde80 	call	88cde8 <__udivsi3>
  88c584:	8808943a 	slli	r4,r17,16
  88c588:	bf3fffcc 	andi	fp,r23,65535
  88c58c:	8006d43a 	srli	r3,r16,16
  88c590:	e0a3383a 	mul	r17,fp,r2
  88c594:	100d883a 	mov	r6,r2
  88c598:	1906b03a 	or	r3,r3,r4
  88c59c:	1c40042e 	bgeu	r3,r17,88c5b0 <__udivdi3+0x370>
  88c5a0:	1dc7883a 	add	r3,r3,r23
  88c5a4:	10bfffc4 	addi	r2,r2,-1
  88c5a8:	1dc0752e 	bgeu	r3,r23,88c780 <__udivdi3+0x540>
  88c5ac:	100d883a 	mov	r6,r2
  88c5b0:	1c63c83a 	sub	r17,r3,r17
  88c5b4:	900b883a 	mov	r5,r18
  88c5b8:	8809883a 	mov	r4,r17
  88c5bc:	d9800015 	stw	r6,0(sp)
  88c5c0:	088ce4c0 	call	88ce4c <__umodsi3>
  88c5c4:	102d883a 	mov	r22,r2
  88c5c8:	8809883a 	mov	r4,r17
  88c5cc:	900b883a 	mov	r5,r18
  88c5d0:	088cde80 	call	88cde8 <__udivsi3>
  88c5d4:	b02c943a 	slli	r22,r22,16
  88c5d8:	e089383a 	mul	r4,fp,r2
  88c5dc:	843fffcc 	andi	r16,r16,65535
  88c5e0:	85a0b03a 	or	r16,r16,r22
  88c5e4:	d9800017 	ldw	r6,0(sp)
  88c5e8:	8100042e 	bgeu	r16,r4,88c5fc <__udivdi3+0x3bc>
  88c5ec:	85e1883a 	add	r16,r16,r23
  88c5f0:	10ffffc4 	addi	r3,r2,-1
  88c5f4:	85c05e2e 	bgeu	r16,r23,88c770 <__udivdi3+0x530>
  88c5f8:	1805883a 	mov	r2,r3
  88c5fc:	300c943a 	slli	r6,r6,16
  88c600:	a17fffcc 	andi	r5,r20,65535
  88c604:	a028d43a 	srli	r20,r20,16
  88c608:	3084b03a 	or	r2,r6,r2
  88c60c:	10ffffcc 	andi	r3,r2,65535
  88c610:	100cd43a 	srli	r6,r2,16
  88c614:	194f383a 	mul	r7,r3,r5
  88c618:	1d07383a 	mul	r3,r3,r20
  88c61c:	314b383a 	mul	r5,r6,r5
  88c620:	3810d43a 	srli	r8,r7,16
  88c624:	8121c83a 	sub	r16,r16,r4
  88c628:	1947883a 	add	r3,r3,r5
  88c62c:	40c7883a 	add	r3,r8,r3
  88c630:	350d383a 	mul	r6,r6,r20
  88c634:	1940022e 	bgeu	r3,r5,88c640 <__udivdi3+0x400>
  88c638:	01000074 	movhi	r4,1
  88c63c:	310d883a 	add	r6,r6,r4
  88c640:	1828d43a 	srli	r20,r3,16
  88c644:	a18d883a 	add	r6,r20,r6
  88c648:	81803e36 	bltu	r16,r6,88c744 <__udivdi3+0x504>
  88c64c:	81803826 	beq	r16,r6,88c730 <__udivdi3+0x4f0>
  88c650:	0007883a 	mov	r3,zero
  88c654:	003fa206 	br	88c4e0 <__udivdi3+0x2a0>
  88c658:	88e2983a 	sll	r17,r17,r3
  88c65c:	80a8d83a 	srl	r20,r16,r2
  88c660:	80e0983a 	sll	r16,r16,r3
  88c664:	882ad43a 	srli	r21,r17,16
  88c668:	9884d83a 	srl	r2,r19,r2
  88c66c:	a009883a 	mov	r4,r20
  88c670:	a80b883a 	mov	r5,r21
  88c674:	142eb03a 	or	r23,r2,r16
  88c678:	98e4983a 	sll	r18,r19,r3
  88c67c:	088ce4c0 	call	88ce4c <__umodsi3>
  88c680:	a009883a 	mov	r4,r20
  88c684:	a80b883a 	mov	r5,r21
  88c688:	1021883a 	mov	r16,r2
  88c68c:	088cde80 	call	88cde8 <__udivsi3>
  88c690:	1039883a 	mov	fp,r2
  88c694:	8d3fffcc 	andi	r20,r17,65535
  88c698:	8020943a 	slli	r16,r16,16
  88c69c:	b804d43a 	srli	r2,r23,16
  88c6a0:	a72d383a 	mul	r22,r20,fp
  88c6a4:	1404b03a 	or	r2,r2,r16
  88c6a8:	1580062e 	bgeu	r2,r22,88c6c4 <__udivdi3+0x484>
  88c6ac:	1445883a 	add	r2,r2,r17
  88c6b0:	e0ffffc4 	addi	r3,fp,-1
  88c6b4:	14403836 	bltu	r2,r17,88c798 <__udivdi3+0x558>
  88c6b8:	1580372e 	bgeu	r2,r22,88c798 <__udivdi3+0x558>
  88c6bc:	e73fff84 	addi	fp,fp,-2
  88c6c0:	1445883a 	add	r2,r2,r17
  88c6c4:	15adc83a 	sub	r22,r2,r22
  88c6c8:	a80b883a 	mov	r5,r21
  88c6cc:	b009883a 	mov	r4,r22
  88c6d0:	088ce4c0 	call	88ce4c <__umodsi3>
  88c6d4:	1027883a 	mov	r19,r2
  88c6d8:	b009883a 	mov	r4,r22
  88c6dc:	a80b883a 	mov	r5,r21
  88c6e0:	088cde80 	call	88cde8 <__udivsi3>
  88c6e4:	9826943a 	slli	r19,r19,16
  88c6e8:	a0a1383a 	mul	r16,r20,r2
  88c6ec:	b93fffcc 	andi	r4,r23,65535
  88c6f0:	24c8b03a 	or	r4,r4,r19
  88c6f4:	2400062e 	bgeu	r4,r16,88c710 <__udivdi3+0x4d0>
  88c6f8:	2449883a 	add	r4,r4,r17
  88c6fc:	10ffffc4 	addi	r3,r2,-1
  88c700:	24402336 	bltu	r4,r17,88c790 <__udivdi3+0x550>
  88c704:	2400222e 	bgeu	r4,r16,88c790 <__udivdi3+0x550>
  88c708:	10bfff84 	addi	r2,r2,-2
  88c70c:	2449883a 	add	r4,r4,r17
  88c710:	e038943a 	slli	fp,fp,16
  88c714:	2421c83a 	sub	r16,r4,r16
  88c718:	e086b03a 	or	r3,fp,r2
  88c71c:	003f4306 	br	88c42c <__udivdi3+0x1ec>
  88c720:	2005883a 	mov	r2,r4
  88c724:	003f6906 	br	88c4cc <__udivdi3+0x28c>
  88c728:	1805883a 	mov	r2,r3
  88c72c:	003f0f06 	br	88c36c <__udivdi3+0x12c>
  88c730:	1806943a 	slli	r3,r3,16
  88c734:	9d66983a 	sll	r19,r19,r21
  88c738:	39ffffcc 	andi	r7,r7,65535
  88c73c:	19c7883a 	add	r3,r3,r7
  88c740:	98ffc32e 	bgeu	r19,r3,88c650 <__udivdi3+0x410>
  88c744:	10bfffc4 	addi	r2,r2,-1
  88c748:	003fc106 	br	88c650 <__udivdi3+0x410>
  88c74c:	00800604 	movi	r2,24
  88c750:	003f1106 	br	88c398 <__udivdi3+0x158>
  88c754:	00800604 	movi	r2,24
  88c758:	003f2706 	br	88c3f8 <__udivdi3+0x1b8>
  88c75c:	00800604 	movi	r2,24
  88c760:	003ece06 	br	88c29c <__udivdi3+0x5c>
  88c764:	0007883a 	mov	r3,zero
  88c768:	00800044 	movi	r2,1
  88c76c:	003f5c06 	br	88c4e0 <__udivdi3+0x2a0>
  88c770:	813fa12e 	bgeu	r16,r4,88c5f8 <__udivdi3+0x3b8>
  88c774:	10bfff84 	addi	r2,r2,-2
  88c778:	85e1883a 	add	r16,r16,r23
  88c77c:	003f9f06 	br	88c5fc <__udivdi3+0x3bc>
  88c780:	1c7f8a2e 	bgeu	r3,r17,88c5ac <__udivdi3+0x36c>
  88c784:	31bfff84 	addi	r6,r6,-2
  88c788:	1dc7883a 	add	r3,r3,r23
  88c78c:	003f8806 	br	88c5b0 <__udivdi3+0x370>
  88c790:	1805883a 	mov	r2,r3
  88c794:	003fde06 	br	88c710 <__udivdi3+0x4d0>
  88c798:	1839883a 	mov	fp,r3
  88c79c:	003fc906 	br	88c6c4 <__udivdi3+0x484>
  88c7a0:	b5bfff84 	addi	r22,r22,-2
  88c7a4:	2449883a 	add	r4,r4,r17
  88c7a8:	003f3406 	br	88c47c <__udivdi3+0x23c>
  88c7ac:	b5bfff84 	addi	r22,r22,-2
  88c7b0:	1445883a 	add	r2,r2,r17
  88c7b4:	003edb06 	br	88c324 <__udivdi3+0xe4>

0088c7b8 <__umoddi3>:
  88c7b8:	defff404 	addi	sp,sp,-48
  88c7bc:	df000a15 	stw	fp,40(sp)
  88c7c0:	dc400315 	stw	r17,12(sp)
  88c7c4:	dc000215 	stw	r16,8(sp)
  88c7c8:	dfc00b15 	stw	ra,44(sp)
  88c7cc:	ddc00915 	stw	r23,36(sp)
  88c7d0:	dd800815 	stw	r22,32(sp)
  88c7d4:	dd400715 	stw	r21,28(sp)
  88c7d8:	dd000615 	stw	r20,24(sp)
  88c7dc:	dcc00515 	stw	r19,20(sp)
  88c7e0:	dc800415 	stw	r18,16(sp)
  88c7e4:	2021883a 	mov	r16,r4
  88c7e8:	2823883a 	mov	r17,r5
  88c7ec:	2839883a 	mov	fp,r5
  88c7f0:	38003c1e 	bne	r7,zero,88c8e4 <__umoddi3+0x12c>
  88c7f4:	3027883a 	mov	r19,r6
  88c7f8:	2029883a 	mov	r20,r4
  88c7fc:	2980512e 	bgeu	r5,r6,88c944 <__umoddi3+0x18c>
  88c800:	00bfffd4 	movui	r2,65535
  88c804:	11809a36 	bltu	r2,r6,88ca70 <__umoddi3+0x2b8>
  88c808:	01003fc4 	movi	r4,255
  88c80c:	2189803a 	cmpltu	r4,r4,r6
  88c810:	200890fa 	slli	r4,r4,3
  88c814:	3104d83a 	srl	r2,r6,r4
  88c818:	00c02274 	movhi	r3,137
  88c81c:	18c9a804 	addi	r3,r3,9888
  88c820:	1885883a 	add	r2,r3,r2
  88c824:	10c00003 	ldbu	r3,0(r2)
  88c828:	00800804 	movi	r2,32
  88c82c:	1909883a 	add	r4,r3,r4
  88c830:	1125c83a 	sub	r18,r2,r4
  88c834:	90000526 	beq	r18,zero,88c84c <__umoddi3+0x94>
  88c838:	8ca2983a 	sll	r17,r17,r18
  88c83c:	8108d83a 	srl	r4,r16,r4
  88c840:	34a6983a 	sll	r19,r6,r18
  88c844:	84a8983a 	sll	r20,r16,r18
  88c848:	2478b03a 	or	fp,r4,r17
  88c84c:	982ed43a 	srli	r23,r19,16
  88c850:	e009883a 	mov	r4,fp
  88c854:	9dbfffcc 	andi	r22,r19,65535
  88c858:	b80b883a 	mov	r5,r23
  88c85c:	088ce4c0 	call	88ce4c <__umodsi3>
  88c860:	e009883a 	mov	r4,fp
  88c864:	b80b883a 	mov	r5,r23
  88c868:	102b883a 	mov	r21,r2
  88c86c:	088cde80 	call	88cde8 <__udivsi3>
  88c870:	a806943a 	slli	r3,r21,16
  88c874:	a008d43a 	srli	r4,r20,16
  88c878:	b085383a 	mul	r2,r22,r2
  88c87c:	20c8b03a 	or	r4,r4,r3
  88c880:	2080032e 	bgeu	r4,r2,88c890 <__umoddi3+0xd8>
  88c884:	24c9883a 	add	r4,r4,r19
  88c888:	24c00136 	bltu	r4,r19,88c890 <__umoddi3+0xd8>
  88c88c:	20811036 	bltu	r4,r2,88ccd0 <__umoddi3+0x518>
  88c890:	20abc83a 	sub	r21,r4,r2
  88c894:	b80b883a 	mov	r5,r23
  88c898:	a809883a 	mov	r4,r21
  88c89c:	088ce4c0 	call	88ce4c <__umodsi3>
  88c8a0:	1023883a 	mov	r17,r2
  88c8a4:	b80b883a 	mov	r5,r23
  88c8a8:	a809883a 	mov	r4,r21
  88c8ac:	088cde80 	call	88cde8 <__udivsi3>
  88c8b0:	8822943a 	slli	r17,r17,16
  88c8b4:	b085383a 	mul	r2,r22,r2
  88c8b8:	a0ffffcc 	andi	r3,r20,65535
  88c8bc:	1c46b03a 	or	r3,r3,r17
  88c8c0:	1880042e 	bgeu	r3,r2,88c8d4 <__umoddi3+0x11c>
  88c8c4:	1cc7883a 	add	r3,r3,r19
  88c8c8:	1cc00236 	bltu	r3,r19,88c8d4 <__umoddi3+0x11c>
  88c8cc:	1880012e 	bgeu	r3,r2,88c8d4 <__umoddi3+0x11c>
  88c8d0:	1cc7883a 	add	r3,r3,r19
  88c8d4:	1885c83a 	sub	r2,r3,r2
  88c8d8:	1484d83a 	srl	r2,r2,r18
  88c8dc:	0007883a 	mov	r3,zero
  88c8e0:	00004f06 	br	88ca20 <__umoddi3+0x268>
  88c8e4:	29c04c36 	bltu	r5,r7,88ca18 <__umoddi3+0x260>
  88c8e8:	00bfffd4 	movui	r2,65535
  88c8ec:	11c0582e 	bgeu	r2,r7,88ca50 <__umoddi3+0x298>
  88c8f0:	00804034 	movhi	r2,256
  88c8f4:	10bfffc4 	addi	r2,r2,-1
  88c8f8:	11c0e736 	bltu	r2,r7,88cc98 <__umoddi3+0x4e0>
  88c8fc:	01000404 	movi	r4,16
  88c900:	3904d83a 	srl	r2,r7,r4
  88c904:	00c02274 	movhi	r3,137
  88c908:	18c9a804 	addi	r3,r3,9888
  88c90c:	1885883a 	add	r2,r3,r2
  88c910:	14c00003 	ldbu	r19,0(r2)
  88c914:	00c00804 	movi	r3,32
  88c918:	9927883a 	add	r19,r19,r4
  88c91c:	1ce9c83a 	sub	r20,r3,r19
  88c920:	a000581e 	bne	r20,zero,88ca84 <__umoddi3+0x2cc>
  88c924:	3c400136 	bltu	r7,r17,88c92c <__umoddi3+0x174>
  88c928:	8180eb36 	bltu	r16,r6,88ccd8 <__umoddi3+0x520>
  88c92c:	8185c83a 	sub	r2,r16,r6
  88c930:	89e3c83a 	sub	r17,r17,r7
  88c934:	8089803a 	cmpltu	r4,r16,r2
  88c938:	8939c83a 	sub	fp,r17,r4
  88c93c:	e007883a 	mov	r3,fp
  88c940:	00003706 	br	88ca20 <__umoddi3+0x268>
  88c944:	3000041e 	bne	r6,zero,88c958 <__umoddi3+0x1a0>
  88c948:	000b883a 	mov	r5,zero
  88c94c:	01000044 	movi	r4,1
  88c950:	088cde80 	call	88cde8 <__udivsi3>
  88c954:	1027883a 	mov	r19,r2
  88c958:	00bfffd4 	movui	r2,65535
  88c95c:	14c0402e 	bgeu	r2,r19,88ca60 <__umoddi3+0x2a8>
  88c960:	00804034 	movhi	r2,256
  88c964:	10bfffc4 	addi	r2,r2,-1
  88c968:	14c0cd36 	bltu	r2,r19,88cca0 <__umoddi3+0x4e8>
  88c96c:	00800404 	movi	r2,16
  88c970:	9886d83a 	srl	r3,r19,r2
  88c974:	01002274 	movhi	r4,137
  88c978:	2109a804 	addi	r4,r4,9888
  88c97c:	20c7883a 	add	r3,r4,r3
  88c980:	18c00003 	ldbu	r3,0(r3)
  88c984:	1887883a 	add	r3,r3,r2
  88c988:	00800804 	movi	r2,32
  88c98c:	10e5c83a 	sub	r18,r2,r3
  88c990:	9000901e 	bne	r18,zero,88cbd4 <__umoddi3+0x41c>
  88c994:	982cd43a 	srli	r22,r19,16
  88c998:	8ce3c83a 	sub	r17,r17,r19
  88c99c:	9d7fffcc 	andi	r21,r19,65535
  88c9a0:	b00b883a 	mov	r5,r22
  88c9a4:	8809883a 	mov	r4,r17
  88c9a8:	088ce4c0 	call	88ce4c <__umodsi3>
  88c9ac:	8809883a 	mov	r4,r17
  88c9b0:	b00b883a 	mov	r5,r22
  88c9b4:	1021883a 	mov	r16,r2
  88c9b8:	088cde80 	call	88cde8 <__udivsi3>
  88c9bc:	8006943a 	slli	r3,r16,16
  88c9c0:	a008d43a 	srli	r4,r20,16
  88c9c4:	1545383a 	mul	r2,r2,r21
  88c9c8:	20c8b03a 	or	r4,r4,r3
  88c9cc:	2080042e 	bgeu	r4,r2,88c9e0 <__umoddi3+0x228>
  88c9d0:	24c9883a 	add	r4,r4,r19
  88c9d4:	24c00236 	bltu	r4,r19,88c9e0 <__umoddi3+0x228>
  88c9d8:	2080012e 	bgeu	r4,r2,88c9e0 <__umoddi3+0x228>
  88c9dc:	24c9883a 	add	r4,r4,r19
  88c9e0:	20a1c83a 	sub	r16,r4,r2
  88c9e4:	b00b883a 	mov	r5,r22
  88c9e8:	8009883a 	mov	r4,r16
  88c9ec:	088ce4c0 	call	88ce4c <__umodsi3>
  88c9f0:	1023883a 	mov	r17,r2
  88c9f4:	b00b883a 	mov	r5,r22
  88c9f8:	8009883a 	mov	r4,r16
  88c9fc:	088cde80 	call	88cde8 <__udivsi3>
  88ca00:	8822943a 	slli	r17,r17,16
  88ca04:	1545383a 	mul	r2,r2,r21
  88ca08:	a53fffcc 	andi	r20,r20,65535
  88ca0c:	a446b03a 	or	r3,r20,r17
  88ca10:	18bfb02e 	bgeu	r3,r2,88c8d4 <__umoddi3+0x11c>
  88ca14:	003fab06 	br	88c8c4 <__umoddi3+0x10c>
  88ca18:	2005883a 	mov	r2,r4
  88ca1c:	2807883a 	mov	r3,r5
  88ca20:	dfc00b17 	ldw	ra,44(sp)
  88ca24:	df000a17 	ldw	fp,40(sp)
  88ca28:	ddc00917 	ldw	r23,36(sp)
  88ca2c:	dd800817 	ldw	r22,32(sp)
  88ca30:	dd400717 	ldw	r21,28(sp)
  88ca34:	dd000617 	ldw	r20,24(sp)
  88ca38:	dcc00517 	ldw	r19,20(sp)
  88ca3c:	dc800417 	ldw	r18,16(sp)
  88ca40:	dc400317 	ldw	r17,12(sp)
  88ca44:	dc000217 	ldw	r16,8(sp)
  88ca48:	dec00c04 	addi	sp,sp,48
  88ca4c:	f800283a 	ret
  88ca50:	04c03fc4 	movi	r19,255
  88ca54:	99c9803a 	cmpltu	r4,r19,r7
  88ca58:	200890fa 	slli	r4,r4,3
  88ca5c:	003fa806 	br	88c900 <__umoddi3+0x148>
  88ca60:	00803fc4 	movi	r2,255
  88ca64:	14c5803a 	cmpltu	r2,r2,r19
  88ca68:	100490fa 	slli	r2,r2,3
  88ca6c:	003fc006 	br	88c970 <__umoddi3+0x1b8>
  88ca70:	00804034 	movhi	r2,256
  88ca74:	10bfffc4 	addi	r2,r2,-1
  88ca78:	11808b36 	bltu	r2,r6,88cca8 <__umoddi3+0x4f0>
  88ca7c:	01000404 	movi	r4,16
  88ca80:	003f6406 	br	88c814 <__umoddi3+0x5c>
  88ca84:	34c4d83a 	srl	r2,r6,r19
  88ca88:	3d0e983a 	sll	r7,r7,r20
  88ca8c:	8cf8d83a 	srl	fp,r17,r19
  88ca90:	8d10983a 	sll	r8,r17,r20
  88ca94:	38aab03a 	or	r21,r7,r2
  88ca98:	a82cd43a 	srli	r22,r21,16
  88ca9c:	84e2d83a 	srl	r17,r16,r19
  88caa0:	e009883a 	mov	r4,fp
  88caa4:	b00b883a 	mov	r5,r22
  88caa8:	8a22b03a 	or	r17,r17,r8
  88caac:	3524983a 	sll	r18,r6,r20
  88cab0:	088ce4c0 	call	88ce4c <__umodsi3>
  88cab4:	e009883a 	mov	r4,fp
  88cab8:	b00b883a 	mov	r5,r22
  88cabc:	102f883a 	mov	r23,r2
  88cac0:	088cde80 	call	88cde8 <__udivsi3>
  88cac4:	100d883a 	mov	r6,r2
  88cac8:	b808943a 	slli	r4,r23,16
  88cacc:	aa3fffcc 	andi	r8,r21,65535
  88cad0:	8804d43a 	srli	r2,r17,16
  88cad4:	41af383a 	mul	r23,r8,r6
  88cad8:	8520983a 	sll	r16,r16,r20
  88cadc:	1104b03a 	or	r2,r2,r4
  88cae0:	15c0042e 	bgeu	r2,r23,88caf4 <__umoddi3+0x33c>
  88cae4:	1545883a 	add	r2,r2,r21
  88cae8:	30ffffc4 	addi	r3,r6,-1
  88caec:	1540742e 	bgeu	r2,r21,88ccc0 <__umoddi3+0x508>
  88caf0:	180d883a 	mov	r6,r3
  88caf4:	15efc83a 	sub	r23,r2,r23
  88caf8:	b00b883a 	mov	r5,r22
  88cafc:	b809883a 	mov	r4,r23
  88cb00:	d9800115 	stw	r6,4(sp)
  88cb04:	da000015 	stw	r8,0(sp)
  88cb08:	088ce4c0 	call	88ce4c <__umodsi3>
  88cb0c:	b00b883a 	mov	r5,r22
  88cb10:	b809883a 	mov	r4,r23
  88cb14:	1039883a 	mov	fp,r2
  88cb18:	088cde80 	call	88cde8 <__udivsi3>
  88cb1c:	da000017 	ldw	r8,0(sp)
  88cb20:	e038943a 	slli	fp,fp,16
  88cb24:	100b883a 	mov	r5,r2
  88cb28:	4089383a 	mul	r4,r8,r2
  88cb2c:	8a3fffcc 	andi	r8,r17,65535
  88cb30:	4710b03a 	or	r8,r8,fp
  88cb34:	d9800117 	ldw	r6,4(sp)
  88cb38:	4100042e 	bgeu	r8,r4,88cb4c <__umoddi3+0x394>
  88cb3c:	4551883a 	add	r8,r8,r21
  88cb40:	10bfffc4 	addi	r2,r2,-1
  88cb44:	45405a2e 	bgeu	r8,r21,88ccb0 <__umoddi3+0x4f8>
  88cb48:	100b883a 	mov	r5,r2
  88cb4c:	300c943a 	slli	r6,r6,16
  88cb50:	91ffffcc 	andi	r7,r18,65535
  88cb54:	9004d43a 	srli	r2,r18,16
  88cb58:	314cb03a 	or	r6,r6,r5
  88cb5c:	317fffcc 	andi	r5,r6,65535
  88cb60:	300cd43a 	srli	r6,r6,16
  88cb64:	29d3383a 	mul	r9,r5,r7
  88cb68:	288b383a 	mul	r5,r5,r2
  88cb6c:	31cf383a 	mul	r7,r6,r7
  88cb70:	4806d43a 	srli	r3,r9,16
  88cb74:	4111c83a 	sub	r8,r8,r4
  88cb78:	29cb883a 	add	r5,r5,r7
  88cb7c:	194b883a 	add	r5,r3,r5
  88cb80:	3085383a 	mul	r2,r6,r2
  88cb84:	29c0022e 	bgeu	r5,r7,88cb90 <__umoddi3+0x3d8>
  88cb88:	00c00074 	movhi	r3,1
  88cb8c:	10c5883a 	add	r2,r2,r3
  88cb90:	2808d43a 	srli	r4,r5,16
  88cb94:	280a943a 	slli	r5,r5,16
  88cb98:	4a7fffcc 	andi	r9,r9,65535
  88cb9c:	2085883a 	add	r2,r4,r2
  88cba0:	2a4b883a 	add	r5,r5,r9
  88cba4:	40803636 	bltu	r8,r2,88cc80 <__umoddi3+0x4c8>
  88cba8:	40804d26 	beq	r8,r2,88cce0 <__umoddi3+0x528>
  88cbac:	4089c83a 	sub	r4,r8,r2
  88cbb0:	280f883a 	mov	r7,r5
  88cbb4:	81cfc83a 	sub	r7,r16,r7
  88cbb8:	81c7803a 	cmpltu	r3,r16,r7
  88cbbc:	20c7c83a 	sub	r3,r4,r3
  88cbc0:	1cc4983a 	sll	r2,r3,r19
  88cbc4:	3d0ed83a 	srl	r7,r7,r20
  88cbc8:	1d06d83a 	srl	r3,r3,r20
  88cbcc:	11c4b03a 	or	r2,r2,r7
  88cbd0:	003f9306 	br	88ca20 <__umoddi3+0x268>
  88cbd4:	9ca6983a 	sll	r19,r19,r18
  88cbd8:	88e8d83a 	srl	r20,r17,r3
  88cbdc:	80c4d83a 	srl	r2,r16,r3
  88cbe0:	982cd43a 	srli	r22,r19,16
  88cbe4:	8ca2983a 	sll	r17,r17,r18
  88cbe8:	a009883a 	mov	r4,r20
  88cbec:	b00b883a 	mov	r5,r22
  88cbf0:	1478b03a 	or	fp,r2,r17
  88cbf4:	088ce4c0 	call	88ce4c <__umodsi3>
  88cbf8:	a009883a 	mov	r4,r20
  88cbfc:	b00b883a 	mov	r5,r22
  88cc00:	1023883a 	mov	r17,r2
  88cc04:	088cde80 	call	88cde8 <__udivsi3>
  88cc08:	9d7fffcc 	andi	r21,r19,65535
  88cc0c:	880a943a 	slli	r5,r17,16
  88cc10:	e008d43a 	srli	r4,fp,16
  88cc14:	a885383a 	mul	r2,r21,r2
  88cc18:	84a8983a 	sll	r20,r16,r18
  88cc1c:	2148b03a 	or	r4,r4,r5
  88cc20:	2080042e 	bgeu	r4,r2,88cc34 <__umoddi3+0x47c>
  88cc24:	24c9883a 	add	r4,r4,r19
  88cc28:	24c00236 	bltu	r4,r19,88cc34 <__umoddi3+0x47c>
  88cc2c:	2080012e 	bgeu	r4,r2,88cc34 <__umoddi3+0x47c>
  88cc30:	24c9883a 	add	r4,r4,r19
  88cc34:	20a3c83a 	sub	r17,r4,r2
  88cc38:	b00b883a 	mov	r5,r22
  88cc3c:	8809883a 	mov	r4,r17
  88cc40:	088ce4c0 	call	88ce4c <__umodsi3>
  88cc44:	102f883a 	mov	r23,r2
  88cc48:	8809883a 	mov	r4,r17
  88cc4c:	b00b883a 	mov	r5,r22
  88cc50:	088cde80 	call	88cde8 <__udivsi3>
  88cc54:	b82e943a 	slli	r23,r23,16
  88cc58:	a885383a 	mul	r2,r21,r2
  88cc5c:	e13fffcc 	andi	r4,fp,65535
  88cc60:	25c8b03a 	or	r4,r4,r23
  88cc64:	2080042e 	bgeu	r4,r2,88cc78 <__umoddi3+0x4c0>
  88cc68:	24c9883a 	add	r4,r4,r19
  88cc6c:	24c00236 	bltu	r4,r19,88cc78 <__umoddi3+0x4c0>
  88cc70:	2080012e 	bgeu	r4,r2,88cc78 <__umoddi3+0x4c0>
  88cc74:	24c9883a 	add	r4,r4,r19
  88cc78:	20a3c83a 	sub	r17,r4,r2
  88cc7c:	003f4806 	br	88c9a0 <__umoddi3+0x1e8>
  88cc80:	2c8fc83a 	sub	r7,r5,r18
  88cc84:	1545c83a 	sub	r2,r2,r21
  88cc88:	29cb803a 	cmpltu	r5,r5,r7
  88cc8c:	1145c83a 	sub	r2,r2,r5
  88cc90:	4089c83a 	sub	r4,r8,r2
  88cc94:	003fc706 	br	88cbb4 <__umoddi3+0x3fc>
  88cc98:	01000604 	movi	r4,24
  88cc9c:	003f1806 	br	88c900 <__umoddi3+0x148>
  88cca0:	00800604 	movi	r2,24
  88cca4:	003f3206 	br	88c970 <__umoddi3+0x1b8>
  88cca8:	01000604 	movi	r4,24
  88ccac:	003ed906 	br	88c814 <__umoddi3+0x5c>
  88ccb0:	413fa52e 	bgeu	r8,r4,88cb48 <__umoddi3+0x390>
  88ccb4:	297fff84 	addi	r5,r5,-2
  88ccb8:	4551883a 	add	r8,r8,r21
  88ccbc:	003fa306 	br	88cb4c <__umoddi3+0x394>
  88ccc0:	15ff8b2e 	bgeu	r2,r23,88caf0 <__umoddi3+0x338>
  88ccc4:	31bfff84 	addi	r6,r6,-2
  88ccc8:	1545883a 	add	r2,r2,r21
  88cccc:	003f8906 	br	88caf4 <__umoddi3+0x33c>
  88ccd0:	24c9883a 	add	r4,r4,r19
  88ccd4:	003eee06 	br	88c890 <__umoddi3+0xd8>
  88ccd8:	8005883a 	mov	r2,r16
  88ccdc:	003f1706 	br	88c93c <__umoddi3+0x184>
  88cce0:	817fe736 	bltu	r16,r5,88cc80 <__umoddi3+0x4c8>
  88cce4:	280f883a 	mov	r7,r5
  88cce8:	0009883a 	mov	r4,zero
  88ccec:	003fb106 	br	88cbb4 <__umoddi3+0x3fc>

0088ccf0 <__divsi3>:
  88ccf0:	20001b16 	blt	r4,zero,88cd60 <__divsi3+0x70>
  88ccf4:	000f883a 	mov	r7,zero
  88ccf8:	28001616 	blt	r5,zero,88cd54 <__divsi3+0x64>
  88ccfc:	200d883a 	mov	r6,r4
  88cd00:	29001a2e 	bgeu	r5,r4,88cd6c <__divsi3+0x7c>
  88cd04:	00800804 	movi	r2,32
  88cd08:	00c00044 	movi	r3,1
  88cd0c:	00000106 	br	88cd14 <__divsi3+0x24>
  88cd10:	10000d26 	beq	r2,zero,88cd48 <__divsi3+0x58>
  88cd14:	294b883a 	add	r5,r5,r5
  88cd18:	10bfffc4 	addi	r2,r2,-1
  88cd1c:	18c7883a 	add	r3,r3,r3
  88cd20:	293ffb36 	bltu	r5,r4,88cd10 <__divsi3+0x20>
  88cd24:	0005883a 	mov	r2,zero
  88cd28:	18000726 	beq	r3,zero,88cd48 <__divsi3+0x58>
  88cd2c:	0005883a 	mov	r2,zero
  88cd30:	31400236 	bltu	r6,r5,88cd3c <__divsi3+0x4c>
  88cd34:	314dc83a 	sub	r6,r6,r5
  88cd38:	10c4b03a 	or	r2,r2,r3
  88cd3c:	1806d07a 	srli	r3,r3,1
  88cd40:	280ad07a 	srli	r5,r5,1
  88cd44:	183ffa1e 	bne	r3,zero,88cd30 <__divsi3+0x40>
  88cd48:	38000126 	beq	r7,zero,88cd50 <__divsi3+0x60>
  88cd4c:	0085c83a 	sub	r2,zero,r2
  88cd50:	f800283a 	ret
  88cd54:	014bc83a 	sub	r5,zero,r5
  88cd58:	39c0005c 	xori	r7,r7,1
  88cd5c:	003fe706 	br	88ccfc <__divsi3+0xc>
  88cd60:	0109c83a 	sub	r4,zero,r4
  88cd64:	01c00044 	movi	r7,1
  88cd68:	003fe306 	br	88ccf8 <__divsi3+0x8>
  88cd6c:	00c00044 	movi	r3,1
  88cd70:	003fee06 	br	88cd2c <__divsi3+0x3c>

0088cd74 <__modsi3>:
  88cd74:	20001716 	blt	r4,zero,88cdd4 <__modsi3+0x60>
  88cd78:	000f883a 	mov	r7,zero
  88cd7c:	2005883a 	mov	r2,r4
  88cd80:	28001216 	blt	r5,zero,88cdcc <__modsi3+0x58>
  88cd84:	2900162e 	bgeu	r5,r4,88cde0 <__modsi3+0x6c>
  88cd88:	01800804 	movi	r6,32
  88cd8c:	00c00044 	movi	r3,1
  88cd90:	00000106 	br	88cd98 <__modsi3+0x24>
  88cd94:	30000a26 	beq	r6,zero,88cdc0 <__modsi3+0x4c>
  88cd98:	294b883a 	add	r5,r5,r5
  88cd9c:	31bfffc4 	addi	r6,r6,-1
  88cda0:	18c7883a 	add	r3,r3,r3
  88cda4:	293ffb36 	bltu	r5,r4,88cd94 <__modsi3+0x20>
  88cda8:	18000526 	beq	r3,zero,88cdc0 <__modsi3+0x4c>
  88cdac:	1806d07a 	srli	r3,r3,1
  88cdb0:	11400136 	bltu	r2,r5,88cdb8 <__modsi3+0x44>
  88cdb4:	1145c83a 	sub	r2,r2,r5
  88cdb8:	280ad07a 	srli	r5,r5,1
  88cdbc:	183ffb1e 	bne	r3,zero,88cdac <__modsi3+0x38>
  88cdc0:	38000126 	beq	r7,zero,88cdc8 <__modsi3+0x54>
  88cdc4:	0085c83a 	sub	r2,zero,r2
  88cdc8:	f800283a 	ret
  88cdcc:	014bc83a 	sub	r5,zero,r5
  88cdd0:	003fec06 	br	88cd84 <__modsi3+0x10>
  88cdd4:	0109c83a 	sub	r4,zero,r4
  88cdd8:	01c00044 	movi	r7,1
  88cddc:	003fe706 	br	88cd7c <__modsi3+0x8>
  88cde0:	00c00044 	movi	r3,1
  88cde4:	003ff106 	br	88cdac <__modsi3+0x38>

0088cde8 <__udivsi3>:
  88cde8:	200d883a 	mov	r6,r4
  88cdec:	2900152e 	bgeu	r5,r4,88ce44 <__udivsi3+0x5c>
  88cdf0:	28001416 	blt	r5,zero,88ce44 <__udivsi3+0x5c>
  88cdf4:	00800804 	movi	r2,32
  88cdf8:	00c00044 	movi	r3,1
  88cdfc:	00000206 	br	88ce08 <__udivsi3+0x20>
  88ce00:	10000e26 	beq	r2,zero,88ce3c <__udivsi3+0x54>
  88ce04:	28000516 	blt	r5,zero,88ce1c <__udivsi3+0x34>
  88ce08:	294b883a 	add	r5,r5,r5
  88ce0c:	10bfffc4 	addi	r2,r2,-1
  88ce10:	18c7883a 	add	r3,r3,r3
  88ce14:	293ffa36 	bltu	r5,r4,88ce00 <__udivsi3+0x18>
  88ce18:	18000826 	beq	r3,zero,88ce3c <__udivsi3+0x54>
  88ce1c:	0005883a 	mov	r2,zero
  88ce20:	31400236 	bltu	r6,r5,88ce2c <__udivsi3+0x44>
  88ce24:	314dc83a 	sub	r6,r6,r5
  88ce28:	10c4b03a 	or	r2,r2,r3
  88ce2c:	1806d07a 	srli	r3,r3,1
  88ce30:	280ad07a 	srli	r5,r5,1
  88ce34:	183ffa1e 	bne	r3,zero,88ce20 <__udivsi3+0x38>
  88ce38:	f800283a 	ret
  88ce3c:	0005883a 	mov	r2,zero
  88ce40:	f800283a 	ret
  88ce44:	00c00044 	movi	r3,1
  88ce48:	003ff406 	br	88ce1c <__udivsi3+0x34>

0088ce4c <__umodsi3>:
  88ce4c:	2005883a 	mov	r2,r4
  88ce50:	2900122e 	bgeu	r5,r4,88ce9c <__umodsi3+0x50>
  88ce54:	28001116 	blt	r5,zero,88ce9c <__umodsi3+0x50>
  88ce58:	01800804 	movi	r6,32
  88ce5c:	00c00044 	movi	r3,1
  88ce60:	00000206 	br	88ce6c <__umodsi3+0x20>
  88ce64:	30000c26 	beq	r6,zero,88ce98 <__umodsi3+0x4c>
  88ce68:	28000516 	blt	r5,zero,88ce80 <__umodsi3+0x34>
  88ce6c:	294b883a 	add	r5,r5,r5
  88ce70:	31bfffc4 	addi	r6,r6,-1
  88ce74:	18c7883a 	add	r3,r3,r3
  88ce78:	293ffa36 	bltu	r5,r4,88ce64 <__umodsi3+0x18>
  88ce7c:	18000626 	beq	r3,zero,88ce98 <__umodsi3+0x4c>
  88ce80:	1806d07a 	srli	r3,r3,1
  88ce84:	11400136 	bltu	r2,r5,88ce8c <__umodsi3+0x40>
  88ce88:	1145c83a 	sub	r2,r2,r5
  88ce8c:	280ad07a 	srli	r5,r5,1
  88ce90:	183ffb1e 	bne	r3,zero,88ce80 <__umodsi3+0x34>
  88ce94:	f800283a 	ret
  88ce98:	f800283a 	ret
  88ce9c:	00c00044 	movi	r3,1
  88cea0:	003ff706 	br	88ce80 <__umodsi3+0x34>

0088cea4 <__adddf3>:
  88cea4:	02c00434 	movhi	r11,16
  88cea8:	5affffc4 	addi	r11,r11,-1
  88ceac:	2806d7fa 	srli	r3,r5,31
  88ceb0:	2ad4703a 	and	r10,r5,r11
  88ceb4:	3ad2703a 	and	r9,r7,r11
  88ceb8:	3804d53a 	srli	r2,r7,20
  88cebc:	3018d77a 	srli	r12,r6,29
  88cec0:	280ad53a 	srli	r5,r5,20
  88cec4:	501490fa 	slli	r10,r10,3
  88cec8:	2010d77a 	srli	r8,r4,29
  88cecc:	481290fa 	slli	r9,r9,3
  88ced0:	380ed7fa 	srli	r7,r7,31
  88ced4:	defffb04 	addi	sp,sp,-20
  88ced8:	dc800215 	stw	r18,8(sp)
  88cedc:	dc400115 	stw	r17,4(sp)
  88cee0:	dc000015 	stw	r16,0(sp)
  88cee4:	dfc00415 	stw	ra,16(sp)
  88cee8:	dcc00315 	stw	r19,12(sp)
  88ceec:	1c803fcc 	andi	r18,r3,255
  88cef0:	2c01ffcc 	andi	r16,r5,2047
  88cef4:	5210b03a 	or	r8,r10,r8
  88cef8:	202290fa 	slli	r17,r4,3
  88cefc:	1081ffcc 	andi	r2,r2,2047
  88cf00:	4b12b03a 	or	r9,r9,r12
  88cf04:	300c90fa 	slli	r6,r6,3
  88cf08:	91c07526 	beq	r18,r7,88d0e0 <__adddf3+0x23c>
  88cf0c:	8087c83a 	sub	r3,r16,r2
  88cf10:	00c0ab0e 	bge	zero,r3,88d1c0 <__adddf3+0x31c>
  88cf14:	10002a1e 	bne	r2,zero,88cfc0 <__adddf3+0x11c>
  88cf18:	4984b03a 	or	r2,r9,r6
  88cf1c:	1000961e 	bne	r2,zero,88d178 <__adddf3+0x2d4>
  88cf20:	888001cc 	andi	r2,r17,7
  88cf24:	10000726 	beq	r2,zero,88cf44 <__adddf3+0xa0>
  88cf28:	888003cc 	andi	r2,r17,15
  88cf2c:	00c00104 	movi	r3,4
  88cf30:	10c00426 	beq	r2,r3,88cf44 <__adddf3+0xa0>
  88cf34:	88c7883a 	add	r3,r17,r3
  88cf38:	1c63803a 	cmpltu	r17,r3,r17
  88cf3c:	4451883a 	add	r8,r8,r17
  88cf40:	1823883a 	mov	r17,r3
  88cf44:	4080202c 	andhi	r2,r8,128
  88cf48:	10005926 	beq	r2,zero,88d0b0 <__adddf3+0x20c>
  88cf4c:	84000044 	addi	r16,r16,1
  88cf50:	0081ffc4 	movi	r2,2047
  88cf54:	8080ba26 	beq	r16,r2,88d240 <__adddf3+0x39c>
  88cf58:	00bfe034 	movhi	r2,65408
  88cf5c:	10bfffc4 	addi	r2,r2,-1
  88cf60:	4090703a 	and	r8,r8,r2
  88cf64:	4004977a 	slli	r2,r8,29
  88cf68:	4010927a 	slli	r8,r8,9
  88cf6c:	8822d0fa 	srli	r17,r17,3
  88cf70:	8401ffcc 	andi	r16,r16,2047
  88cf74:	4010d33a 	srli	r8,r8,12
  88cf78:	9007883a 	mov	r3,r18
  88cf7c:	1444b03a 	or	r2,r2,r17
  88cf80:	8401ffcc 	andi	r16,r16,2047
  88cf84:	8020953a 	slli	r16,r16,20
  88cf88:	18c03fcc 	andi	r3,r3,255
  88cf8c:	01000434 	movhi	r4,16
  88cf90:	213fffc4 	addi	r4,r4,-1
  88cf94:	180697fa 	slli	r3,r3,31
  88cf98:	4110703a 	and	r8,r8,r4
  88cf9c:	4410b03a 	or	r8,r8,r16
  88cfa0:	40c6b03a 	or	r3,r8,r3
  88cfa4:	dfc00417 	ldw	ra,16(sp)
  88cfa8:	dcc00317 	ldw	r19,12(sp)
  88cfac:	dc800217 	ldw	r18,8(sp)
  88cfb0:	dc400117 	ldw	r17,4(sp)
  88cfb4:	dc000017 	ldw	r16,0(sp)
  88cfb8:	dec00504 	addi	sp,sp,20
  88cfbc:	f800283a 	ret
  88cfc0:	0081ffc4 	movi	r2,2047
  88cfc4:	80bfd626 	beq	r16,r2,88cf20 <__adddf3+0x7c>
  88cfc8:	4a402034 	orhi	r9,r9,128
  88cfcc:	00800e04 	movi	r2,56
  88cfd0:	10c09f16 	blt	r2,r3,88d250 <__adddf3+0x3ac>
  88cfd4:	008007c4 	movi	r2,31
  88cfd8:	10c0c216 	blt	r2,r3,88d2e4 <__adddf3+0x440>
  88cfdc:	00800804 	movi	r2,32
  88cfe0:	10c5c83a 	sub	r2,r2,r3
  88cfe4:	488a983a 	sll	r5,r9,r2
  88cfe8:	30c8d83a 	srl	r4,r6,r3
  88cfec:	3084983a 	sll	r2,r6,r2
  88cff0:	48c6d83a 	srl	r3,r9,r3
  88cff4:	290cb03a 	or	r6,r5,r4
  88cff8:	1004c03a 	cmpne	r2,r2,zero
  88cffc:	308cb03a 	or	r6,r6,r2
  88d000:	898dc83a 	sub	r6,r17,r6
  88d004:	89a3803a 	cmpltu	r17,r17,r6
  88d008:	40d1c83a 	sub	r8,r8,r3
  88d00c:	4451c83a 	sub	r8,r8,r17
  88d010:	3023883a 	mov	r17,r6
  88d014:	4080202c 	andhi	r2,r8,128
  88d018:	10002326 	beq	r2,zero,88d0a8 <__adddf3+0x204>
  88d01c:	04c02034 	movhi	r19,128
  88d020:	9cffffc4 	addi	r19,r19,-1
  88d024:	44e6703a 	and	r19,r8,r19
  88d028:	98007626 	beq	r19,zero,88d204 <__adddf3+0x360>
  88d02c:	9809883a 	mov	r4,r19
  88d030:	088f4a80 	call	88f4a8 <__clzsi2>
  88d034:	10fffe04 	addi	r3,r2,-8
  88d038:	010007c4 	movi	r4,31
  88d03c:	20c07716 	blt	r4,r3,88d21c <__adddf3+0x378>
  88d040:	00800804 	movi	r2,32
  88d044:	10c5c83a 	sub	r2,r2,r3
  88d048:	8884d83a 	srl	r2,r17,r2
  88d04c:	98d0983a 	sll	r8,r19,r3
  88d050:	88e2983a 	sll	r17,r17,r3
  88d054:	1204b03a 	or	r2,r2,r8
  88d058:	1c007416 	blt	r3,r16,88d22c <__adddf3+0x388>
  88d05c:	1c21c83a 	sub	r16,r3,r16
  88d060:	82000044 	addi	r8,r16,1
  88d064:	00c007c4 	movi	r3,31
  88d068:	1a009116 	blt	r3,r8,88d2b0 <__adddf3+0x40c>
  88d06c:	00c00804 	movi	r3,32
  88d070:	1a07c83a 	sub	r3,r3,r8
  88d074:	8a08d83a 	srl	r4,r17,r8
  88d078:	88e2983a 	sll	r17,r17,r3
  88d07c:	10c6983a 	sll	r3,r2,r3
  88d080:	1210d83a 	srl	r8,r2,r8
  88d084:	8804c03a 	cmpne	r2,r17,zero
  88d088:	1906b03a 	or	r3,r3,r4
  88d08c:	18a2b03a 	or	r17,r3,r2
  88d090:	0021883a 	mov	r16,zero
  88d094:	003fa206 	br	88cf20 <__adddf3+0x7c>
  88d098:	1890b03a 	or	r8,r3,r2
  88d09c:	40017d26 	beq	r8,zero,88d694 <__adddf3+0x7f0>
  88d0a0:	1011883a 	mov	r8,r2
  88d0a4:	1823883a 	mov	r17,r3
  88d0a8:	888001cc 	andi	r2,r17,7
  88d0ac:	103f9e1e 	bne	r2,zero,88cf28 <__adddf3+0x84>
  88d0b0:	4004977a 	slli	r2,r8,29
  88d0b4:	8822d0fa 	srli	r17,r17,3
  88d0b8:	4010d0fa 	srli	r8,r8,3
  88d0bc:	9007883a 	mov	r3,r18
  88d0c0:	1444b03a 	or	r2,r2,r17
  88d0c4:	0101ffc4 	movi	r4,2047
  88d0c8:	81002426 	beq	r16,r4,88d15c <__adddf3+0x2b8>
  88d0cc:	8120703a 	and	r16,r16,r4
  88d0d0:	01000434 	movhi	r4,16
  88d0d4:	213fffc4 	addi	r4,r4,-1
  88d0d8:	4110703a 	and	r8,r8,r4
  88d0dc:	003fa806 	br	88cf80 <__adddf3+0xdc>
  88d0e0:	8089c83a 	sub	r4,r16,r2
  88d0e4:	01005e0e 	bge	zero,r4,88d260 <__adddf3+0x3bc>
  88d0e8:	10002b26 	beq	r2,zero,88d198 <__adddf3+0x2f4>
  88d0ec:	0081ffc4 	movi	r2,2047
  88d0f0:	80bf8b26 	beq	r16,r2,88cf20 <__adddf3+0x7c>
  88d0f4:	4a402034 	orhi	r9,r9,128
  88d0f8:	00800e04 	movi	r2,56
  88d0fc:	1100a40e 	bge	r2,r4,88d390 <__adddf3+0x4ec>
  88d100:	498cb03a 	or	r6,r9,r6
  88d104:	300ac03a 	cmpne	r5,r6,zero
  88d108:	0013883a 	mov	r9,zero
  88d10c:	2c4b883a 	add	r5,r5,r17
  88d110:	2c63803a 	cmpltu	r17,r5,r17
  88d114:	4a11883a 	add	r8,r9,r8
  88d118:	8a11883a 	add	r8,r17,r8
  88d11c:	2823883a 	mov	r17,r5
  88d120:	4080202c 	andhi	r2,r8,128
  88d124:	103fe026 	beq	r2,zero,88d0a8 <__adddf3+0x204>
  88d128:	84000044 	addi	r16,r16,1
  88d12c:	0081ffc4 	movi	r2,2047
  88d130:	8080d226 	beq	r16,r2,88d47c <__adddf3+0x5d8>
  88d134:	00bfe034 	movhi	r2,65408
  88d138:	10bfffc4 	addi	r2,r2,-1
  88d13c:	4090703a 	and	r8,r8,r2
  88d140:	880ad07a 	srli	r5,r17,1
  88d144:	400897fa 	slli	r4,r8,31
  88d148:	88c0004c 	andi	r3,r17,1
  88d14c:	28e2b03a 	or	r17,r5,r3
  88d150:	4010d07a 	srli	r8,r8,1
  88d154:	2462b03a 	or	r17,r4,r17
  88d158:	003f7106 	br	88cf20 <__adddf3+0x7c>
  88d15c:	4088b03a 	or	r4,r8,r2
  88d160:	20014526 	beq	r4,zero,88d678 <__adddf3+0x7d4>
  88d164:	01000434 	movhi	r4,16
  88d168:	42000234 	orhi	r8,r8,8
  88d16c:	213fffc4 	addi	r4,r4,-1
  88d170:	4110703a 	and	r8,r8,r4
  88d174:	003f8206 	br	88cf80 <__adddf3+0xdc>
  88d178:	18ffffc4 	addi	r3,r3,-1
  88d17c:	1800491e 	bne	r3,zero,88d2a4 <__adddf3+0x400>
  88d180:	898bc83a 	sub	r5,r17,r6
  88d184:	8963803a 	cmpltu	r17,r17,r5
  88d188:	4251c83a 	sub	r8,r8,r9
  88d18c:	4451c83a 	sub	r8,r8,r17
  88d190:	2823883a 	mov	r17,r5
  88d194:	003f9f06 	br	88d014 <__adddf3+0x170>
  88d198:	4984b03a 	or	r2,r9,r6
  88d19c:	103f6026 	beq	r2,zero,88cf20 <__adddf3+0x7c>
  88d1a0:	213fffc4 	addi	r4,r4,-1
  88d1a4:	2000931e 	bne	r4,zero,88d3f4 <__adddf3+0x550>
  88d1a8:	898d883a 	add	r6,r17,r6
  88d1ac:	3463803a 	cmpltu	r17,r6,r17
  88d1b0:	4251883a 	add	r8,r8,r9
  88d1b4:	8a11883a 	add	r8,r17,r8
  88d1b8:	3023883a 	mov	r17,r6
  88d1bc:	003fd806 	br	88d120 <__adddf3+0x27c>
  88d1c0:	1800541e 	bne	r3,zero,88d314 <__adddf3+0x470>
  88d1c4:	80800044 	addi	r2,r16,1
  88d1c8:	1081ffcc 	andi	r2,r2,2047
  88d1cc:	00c00044 	movi	r3,1
  88d1d0:	1880a00e 	bge	r3,r2,88d454 <__adddf3+0x5b0>
  88d1d4:	8989c83a 	sub	r4,r17,r6
  88d1d8:	8905803a 	cmpltu	r2,r17,r4
  88d1dc:	4267c83a 	sub	r19,r8,r9
  88d1e0:	98a7c83a 	sub	r19,r19,r2
  88d1e4:	9880202c 	andhi	r2,r19,128
  88d1e8:	10006326 	beq	r2,zero,88d378 <__adddf3+0x4d4>
  88d1ec:	3463c83a 	sub	r17,r6,r17
  88d1f0:	4a07c83a 	sub	r3,r9,r8
  88d1f4:	344d803a 	cmpltu	r6,r6,r17
  88d1f8:	19a7c83a 	sub	r19,r3,r6
  88d1fc:	3825883a 	mov	r18,r7
  88d200:	983f8a1e 	bne	r19,zero,88d02c <__adddf3+0x188>
  88d204:	8809883a 	mov	r4,r17
  88d208:	088f4a80 	call	88f4a8 <__clzsi2>
  88d20c:	10800804 	addi	r2,r2,32
  88d210:	10fffe04 	addi	r3,r2,-8
  88d214:	010007c4 	movi	r4,31
  88d218:	20ff890e 	bge	r4,r3,88d040 <__adddf3+0x19c>
  88d21c:	10bff604 	addi	r2,r2,-40
  88d220:	8884983a 	sll	r2,r17,r2
  88d224:	0023883a 	mov	r17,zero
  88d228:	1c3f8c0e 	bge	r3,r16,88d05c <__adddf3+0x1b8>
  88d22c:	023fe034 	movhi	r8,65408
  88d230:	423fffc4 	addi	r8,r8,-1
  88d234:	80e1c83a 	sub	r16,r16,r3
  88d238:	1210703a 	and	r8,r2,r8
  88d23c:	003f3806 	br	88cf20 <__adddf3+0x7c>
  88d240:	9007883a 	mov	r3,r18
  88d244:	0011883a 	mov	r8,zero
  88d248:	0005883a 	mov	r2,zero
  88d24c:	003f4c06 	br	88cf80 <__adddf3+0xdc>
  88d250:	498cb03a 	or	r6,r9,r6
  88d254:	300cc03a 	cmpne	r6,r6,zero
  88d258:	0007883a 	mov	r3,zero
  88d25c:	003f6806 	br	88d000 <__adddf3+0x15c>
  88d260:	20009c1e 	bne	r4,zero,88d4d4 <__adddf3+0x630>
  88d264:	80800044 	addi	r2,r16,1
  88d268:	1141ffcc 	andi	r5,r2,2047
  88d26c:	01000044 	movi	r4,1
  88d270:	2140670e 	bge	r4,r5,88d410 <__adddf3+0x56c>
  88d274:	0101ffc4 	movi	r4,2047
  88d278:	11007f26 	beq	r2,r4,88d478 <__adddf3+0x5d4>
  88d27c:	898d883a 	add	r6,r17,r6
  88d280:	4247883a 	add	r3,r8,r9
  88d284:	3451803a 	cmpltu	r8,r6,r17
  88d288:	40d1883a 	add	r8,r8,r3
  88d28c:	402297fa 	slli	r17,r8,31
  88d290:	300cd07a 	srli	r6,r6,1
  88d294:	4010d07a 	srli	r8,r8,1
  88d298:	1021883a 	mov	r16,r2
  88d29c:	89a2b03a 	or	r17,r17,r6
  88d2a0:	003f1f06 	br	88cf20 <__adddf3+0x7c>
  88d2a4:	0081ffc4 	movi	r2,2047
  88d2a8:	80bf481e 	bne	r16,r2,88cfcc <__adddf3+0x128>
  88d2ac:	003f1c06 	br	88cf20 <__adddf3+0x7c>
  88d2b0:	843ff844 	addi	r16,r16,-31
  88d2b4:	01000804 	movi	r4,32
  88d2b8:	1406d83a 	srl	r3,r2,r16
  88d2bc:	41005026 	beq	r8,r4,88d400 <__adddf3+0x55c>
  88d2c0:	01001004 	movi	r4,64
  88d2c4:	2211c83a 	sub	r8,r4,r8
  88d2c8:	1204983a 	sll	r2,r2,r8
  88d2cc:	88a2b03a 	or	r17,r17,r2
  88d2d0:	8822c03a 	cmpne	r17,r17,zero
  88d2d4:	1c62b03a 	or	r17,r3,r17
  88d2d8:	0011883a 	mov	r8,zero
  88d2dc:	0021883a 	mov	r16,zero
  88d2e0:	003f7106 	br	88d0a8 <__adddf3+0x204>
  88d2e4:	193ff804 	addi	r4,r3,-32
  88d2e8:	00800804 	movi	r2,32
  88d2ec:	4908d83a 	srl	r4,r9,r4
  88d2f0:	18804526 	beq	r3,r2,88d408 <__adddf3+0x564>
  88d2f4:	00801004 	movi	r2,64
  88d2f8:	10c5c83a 	sub	r2,r2,r3
  88d2fc:	4886983a 	sll	r3,r9,r2
  88d300:	198cb03a 	or	r6,r3,r6
  88d304:	300cc03a 	cmpne	r6,r6,zero
  88d308:	218cb03a 	or	r6,r4,r6
  88d30c:	0007883a 	mov	r3,zero
  88d310:	003f3b06 	br	88d000 <__adddf3+0x15c>
  88d314:	80002a26 	beq	r16,zero,88d3c0 <__adddf3+0x51c>
  88d318:	0101ffc4 	movi	r4,2047
  88d31c:	11006826 	beq	r2,r4,88d4c0 <__adddf3+0x61c>
  88d320:	00c7c83a 	sub	r3,zero,r3
  88d324:	42002034 	orhi	r8,r8,128
  88d328:	01000e04 	movi	r4,56
  88d32c:	20c07c16 	blt	r4,r3,88d520 <__adddf3+0x67c>
  88d330:	010007c4 	movi	r4,31
  88d334:	20c0da16 	blt	r4,r3,88d6a0 <__adddf3+0x7fc>
  88d338:	01000804 	movi	r4,32
  88d33c:	20c9c83a 	sub	r4,r4,r3
  88d340:	4114983a 	sll	r10,r8,r4
  88d344:	88cad83a 	srl	r5,r17,r3
  88d348:	8908983a 	sll	r4,r17,r4
  88d34c:	40c6d83a 	srl	r3,r8,r3
  88d350:	5162b03a 	or	r17,r10,r5
  88d354:	2008c03a 	cmpne	r4,r4,zero
  88d358:	8922b03a 	or	r17,r17,r4
  88d35c:	3463c83a 	sub	r17,r6,r17
  88d360:	48c7c83a 	sub	r3,r9,r3
  88d364:	344d803a 	cmpltu	r6,r6,r17
  88d368:	1991c83a 	sub	r8,r3,r6
  88d36c:	1021883a 	mov	r16,r2
  88d370:	3825883a 	mov	r18,r7
  88d374:	003f2706 	br	88d014 <__adddf3+0x170>
  88d378:	24d0b03a 	or	r8,r4,r19
  88d37c:	40001b1e 	bne	r8,zero,88d3ec <__adddf3+0x548>
  88d380:	0005883a 	mov	r2,zero
  88d384:	0007883a 	mov	r3,zero
  88d388:	0021883a 	mov	r16,zero
  88d38c:	003f4d06 	br	88d0c4 <__adddf3+0x220>
  88d390:	008007c4 	movi	r2,31
  88d394:	11003c16 	blt	r2,r4,88d488 <__adddf3+0x5e4>
  88d398:	00800804 	movi	r2,32
  88d39c:	1105c83a 	sub	r2,r2,r4
  88d3a0:	488e983a 	sll	r7,r9,r2
  88d3a4:	310ad83a 	srl	r5,r6,r4
  88d3a8:	3084983a 	sll	r2,r6,r2
  88d3ac:	4912d83a 	srl	r9,r9,r4
  88d3b0:	394ab03a 	or	r5,r7,r5
  88d3b4:	1004c03a 	cmpne	r2,r2,zero
  88d3b8:	288ab03a 	or	r5,r5,r2
  88d3bc:	003f5306 	br	88d10c <__adddf3+0x268>
  88d3c0:	4448b03a 	or	r4,r8,r17
  88d3c4:	20003e26 	beq	r4,zero,88d4c0 <__adddf3+0x61c>
  88d3c8:	00c6303a 	nor	r3,zero,r3
  88d3cc:	18003a1e 	bne	r3,zero,88d4b8 <__adddf3+0x614>
  88d3d0:	3463c83a 	sub	r17,r6,r17
  88d3d4:	4a07c83a 	sub	r3,r9,r8
  88d3d8:	344d803a 	cmpltu	r6,r6,r17
  88d3dc:	1991c83a 	sub	r8,r3,r6
  88d3e0:	1021883a 	mov	r16,r2
  88d3e4:	3825883a 	mov	r18,r7
  88d3e8:	003f0a06 	br	88d014 <__adddf3+0x170>
  88d3ec:	2023883a 	mov	r17,r4
  88d3f0:	003f0d06 	br	88d028 <__adddf3+0x184>
  88d3f4:	0081ffc4 	movi	r2,2047
  88d3f8:	80bf3f1e 	bne	r16,r2,88d0f8 <__adddf3+0x254>
  88d3fc:	003ec806 	br	88cf20 <__adddf3+0x7c>
  88d400:	0005883a 	mov	r2,zero
  88d404:	003fb106 	br	88d2cc <__adddf3+0x428>
  88d408:	0007883a 	mov	r3,zero
  88d40c:	003fbc06 	br	88d300 <__adddf3+0x45c>
  88d410:	4444b03a 	or	r2,r8,r17
  88d414:	8000871e 	bne	r16,zero,88d634 <__adddf3+0x790>
  88d418:	1000ba26 	beq	r2,zero,88d704 <__adddf3+0x860>
  88d41c:	4984b03a 	or	r2,r9,r6
  88d420:	103ebf26 	beq	r2,zero,88cf20 <__adddf3+0x7c>
  88d424:	8985883a 	add	r2,r17,r6
  88d428:	4247883a 	add	r3,r8,r9
  88d42c:	1451803a 	cmpltu	r8,r2,r17
  88d430:	40d1883a 	add	r8,r8,r3
  88d434:	40c0202c 	andhi	r3,r8,128
  88d438:	1023883a 	mov	r17,r2
  88d43c:	183f1a26 	beq	r3,zero,88d0a8 <__adddf3+0x204>
  88d440:	00bfe034 	movhi	r2,65408
  88d444:	10bfffc4 	addi	r2,r2,-1
  88d448:	2021883a 	mov	r16,r4
  88d44c:	4090703a 	and	r8,r8,r2
  88d450:	003eb306 	br	88cf20 <__adddf3+0x7c>
  88d454:	4444b03a 	or	r2,r8,r17
  88d458:	8000291e 	bne	r16,zero,88d500 <__adddf3+0x65c>
  88d45c:	10004b1e 	bne	r2,zero,88d58c <__adddf3+0x6e8>
  88d460:	4990b03a 	or	r8,r9,r6
  88d464:	40008b26 	beq	r8,zero,88d694 <__adddf3+0x7f0>
  88d468:	4811883a 	mov	r8,r9
  88d46c:	3023883a 	mov	r17,r6
  88d470:	3825883a 	mov	r18,r7
  88d474:	003eaa06 	br	88cf20 <__adddf3+0x7c>
  88d478:	1021883a 	mov	r16,r2
  88d47c:	0011883a 	mov	r8,zero
  88d480:	0005883a 	mov	r2,zero
  88d484:	003f0f06 	br	88d0c4 <__adddf3+0x220>
  88d488:	217ff804 	addi	r5,r4,-32
  88d48c:	00800804 	movi	r2,32
  88d490:	494ad83a 	srl	r5,r9,r5
  88d494:	20807d26 	beq	r4,r2,88d68c <__adddf3+0x7e8>
  88d498:	00801004 	movi	r2,64
  88d49c:	1109c83a 	sub	r4,r2,r4
  88d4a0:	4912983a 	sll	r9,r9,r4
  88d4a4:	498cb03a 	or	r6,r9,r6
  88d4a8:	300cc03a 	cmpne	r6,r6,zero
  88d4ac:	298ab03a 	or	r5,r5,r6
  88d4b0:	0013883a 	mov	r9,zero
  88d4b4:	003f1506 	br	88d10c <__adddf3+0x268>
  88d4b8:	0101ffc4 	movi	r4,2047
  88d4bc:	113f9a1e 	bne	r2,r4,88d328 <__adddf3+0x484>
  88d4c0:	4811883a 	mov	r8,r9
  88d4c4:	3023883a 	mov	r17,r6
  88d4c8:	1021883a 	mov	r16,r2
  88d4cc:	3825883a 	mov	r18,r7
  88d4d0:	003e9306 	br	88cf20 <__adddf3+0x7c>
  88d4d4:	8000161e 	bne	r16,zero,88d530 <__adddf3+0x68c>
  88d4d8:	444ab03a 	or	r5,r8,r17
  88d4dc:	28005126 	beq	r5,zero,88d624 <__adddf3+0x780>
  88d4e0:	0108303a 	nor	r4,zero,r4
  88d4e4:	20004d1e 	bne	r4,zero,88d61c <__adddf3+0x778>
  88d4e8:	89a3883a 	add	r17,r17,r6
  88d4ec:	4253883a 	add	r9,r8,r9
  88d4f0:	898d803a 	cmpltu	r6,r17,r6
  88d4f4:	3251883a 	add	r8,r6,r9
  88d4f8:	1021883a 	mov	r16,r2
  88d4fc:	003f0806 	br	88d120 <__adddf3+0x27c>
  88d500:	1000301e 	bne	r2,zero,88d5c4 <__adddf3+0x720>
  88d504:	4984b03a 	or	r2,r9,r6
  88d508:	10007126 	beq	r2,zero,88d6d0 <__adddf3+0x82c>
  88d50c:	4811883a 	mov	r8,r9
  88d510:	3023883a 	mov	r17,r6
  88d514:	3825883a 	mov	r18,r7
  88d518:	0401ffc4 	movi	r16,2047
  88d51c:	003e8006 	br	88cf20 <__adddf3+0x7c>
  88d520:	4462b03a 	or	r17,r8,r17
  88d524:	8822c03a 	cmpne	r17,r17,zero
  88d528:	0007883a 	mov	r3,zero
  88d52c:	003f8b06 	br	88d35c <__adddf3+0x4b8>
  88d530:	0141ffc4 	movi	r5,2047
  88d534:	11403b26 	beq	r2,r5,88d624 <__adddf3+0x780>
  88d538:	0109c83a 	sub	r4,zero,r4
  88d53c:	42002034 	orhi	r8,r8,128
  88d540:	01400e04 	movi	r5,56
  88d544:	29006716 	blt	r5,r4,88d6e4 <__adddf3+0x840>
  88d548:	014007c4 	movi	r5,31
  88d54c:	29007016 	blt	r5,r4,88d710 <__adddf3+0x86c>
  88d550:	01400804 	movi	r5,32
  88d554:	290bc83a 	sub	r5,r5,r4
  88d558:	4154983a 	sll	r10,r8,r5
  88d55c:	890ed83a 	srl	r7,r17,r4
  88d560:	894a983a 	sll	r5,r17,r5
  88d564:	4108d83a 	srl	r4,r8,r4
  88d568:	51e2b03a 	or	r17,r10,r7
  88d56c:	280ac03a 	cmpne	r5,r5,zero
  88d570:	8962b03a 	or	r17,r17,r5
  88d574:	89a3883a 	add	r17,r17,r6
  88d578:	2253883a 	add	r9,r4,r9
  88d57c:	898d803a 	cmpltu	r6,r17,r6
  88d580:	3251883a 	add	r8,r6,r9
  88d584:	1021883a 	mov	r16,r2
  88d588:	003ee506 	br	88d120 <__adddf3+0x27c>
  88d58c:	4984b03a 	or	r2,r9,r6
  88d590:	103e6326 	beq	r2,zero,88cf20 <__adddf3+0x7c>
  88d594:	8987c83a 	sub	r3,r17,r6
  88d598:	88c9803a 	cmpltu	r4,r17,r3
  88d59c:	4245c83a 	sub	r2,r8,r9
  88d5a0:	1105c83a 	sub	r2,r2,r4
  88d5a4:	1100202c 	andhi	r4,r2,128
  88d5a8:	203ebb26 	beq	r4,zero,88d098 <__adddf3+0x1f4>
  88d5ac:	3463c83a 	sub	r17,r6,r17
  88d5b0:	4a07c83a 	sub	r3,r9,r8
  88d5b4:	344d803a 	cmpltu	r6,r6,r17
  88d5b8:	1991c83a 	sub	r8,r3,r6
  88d5bc:	3825883a 	mov	r18,r7
  88d5c0:	003e5706 	br	88cf20 <__adddf3+0x7c>
  88d5c4:	4984b03a 	or	r2,r9,r6
  88d5c8:	10002e26 	beq	r2,zero,88d684 <__adddf3+0x7e0>
  88d5cc:	4004d0fa 	srli	r2,r8,3
  88d5d0:	8822d0fa 	srli	r17,r17,3
  88d5d4:	4010977a 	slli	r8,r8,29
  88d5d8:	10c0022c 	andhi	r3,r2,8
  88d5dc:	4462b03a 	or	r17,r8,r17
  88d5e0:	18000826 	beq	r3,zero,88d604 <__adddf3+0x760>
  88d5e4:	4808d0fa 	srli	r4,r9,3
  88d5e8:	20c0022c 	andhi	r3,r4,8
  88d5ec:	1800051e 	bne	r3,zero,88d604 <__adddf3+0x760>
  88d5f0:	300cd0fa 	srli	r6,r6,3
  88d5f4:	4806977a 	slli	r3,r9,29
  88d5f8:	2005883a 	mov	r2,r4
  88d5fc:	3825883a 	mov	r18,r7
  88d600:	19a2b03a 	or	r17,r3,r6
  88d604:	8810d77a 	srli	r8,r17,29
  88d608:	100490fa 	slli	r2,r2,3
  88d60c:	882290fa 	slli	r17,r17,3
  88d610:	0401ffc4 	movi	r16,2047
  88d614:	4090b03a 	or	r8,r8,r2
  88d618:	003e4106 	br	88cf20 <__adddf3+0x7c>
  88d61c:	0141ffc4 	movi	r5,2047
  88d620:	117fc71e 	bne	r2,r5,88d540 <__adddf3+0x69c>
  88d624:	4811883a 	mov	r8,r9
  88d628:	3023883a 	mov	r17,r6
  88d62c:	1021883a 	mov	r16,r2
  88d630:	003e3b06 	br	88cf20 <__adddf3+0x7c>
  88d634:	10002f26 	beq	r2,zero,88d6f4 <__adddf3+0x850>
  88d638:	4984b03a 	or	r2,r9,r6
  88d63c:	10001126 	beq	r2,zero,88d684 <__adddf3+0x7e0>
  88d640:	4004d0fa 	srli	r2,r8,3
  88d644:	8822d0fa 	srli	r17,r17,3
  88d648:	4010977a 	slli	r8,r8,29
  88d64c:	10c0022c 	andhi	r3,r2,8
  88d650:	4462b03a 	or	r17,r8,r17
  88d654:	183feb26 	beq	r3,zero,88d604 <__adddf3+0x760>
  88d658:	4808d0fa 	srli	r4,r9,3
  88d65c:	20c0022c 	andhi	r3,r4,8
  88d660:	183fe81e 	bne	r3,zero,88d604 <__adddf3+0x760>
  88d664:	300cd0fa 	srli	r6,r6,3
  88d668:	4806977a 	slli	r3,r9,29
  88d66c:	2005883a 	mov	r2,r4
  88d670:	19a2b03a 	or	r17,r3,r6
  88d674:	003fe306 	br	88d604 <__adddf3+0x760>
  88d678:	0011883a 	mov	r8,zero
  88d67c:	0005883a 	mov	r2,zero
  88d680:	003e3f06 	br	88cf80 <__adddf3+0xdc>
  88d684:	0401ffc4 	movi	r16,2047
  88d688:	003e2506 	br	88cf20 <__adddf3+0x7c>
  88d68c:	0013883a 	mov	r9,zero
  88d690:	003f8406 	br	88d4a4 <__adddf3+0x600>
  88d694:	0005883a 	mov	r2,zero
  88d698:	0007883a 	mov	r3,zero
  88d69c:	003e8906 	br	88d0c4 <__adddf3+0x220>
  88d6a0:	197ff804 	addi	r5,r3,-32
  88d6a4:	01000804 	movi	r4,32
  88d6a8:	414ad83a 	srl	r5,r8,r5
  88d6ac:	19002426 	beq	r3,r4,88d740 <__adddf3+0x89c>
  88d6b0:	01001004 	movi	r4,64
  88d6b4:	20c7c83a 	sub	r3,r4,r3
  88d6b8:	40c6983a 	sll	r3,r8,r3
  88d6bc:	1c46b03a 	or	r3,r3,r17
  88d6c0:	1806c03a 	cmpne	r3,r3,zero
  88d6c4:	28e2b03a 	or	r17,r5,r3
  88d6c8:	0007883a 	mov	r3,zero
  88d6cc:	003f2306 	br	88d35c <__adddf3+0x4b8>
  88d6d0:	0007883a 	mov	r3,zero
  88d6d4:	5811883a 	mov	r8,r11
  88d6d8:	00bfffc4 	movi	r2,-1
  88d6dc:	0401ffc4 	movi	r16,2047
  88d6e0:	003e7806 	br	88d0c4 <__adddf3+0x220>
  88d6e4:	4462b03a 	or	r17,r8,r17
  88d6e8:	8822c03a 	cmpne	r17,r17,zero
  88d6ec:	0009883a 	mov	r4,zero
  88d6f0:	003fa006 	br	88d574 <__adddf3+0x6d0>
  88d6f4:	4811883a 	mov	r8,r9
  88d6f8:	3023883a 	mov	r17,r6
  88d6fc:	0401ffc4 	movi	r16,2047
  88d700:	003e0706 	br	88cf20 <__adddf3+0x7c>
  88d704:	4811883a 	mov	r8,r9
  88d708:	3023883a 	mov	r17,r6
  88d70c:	003e0406 	br	88cf20 <__adddf3+0x7c>
  88d710:	21fff804 	addi	r7,r4,-32
  88d714:	01400804 	movi	r5,32
  88d718:	41ced83a 	srl	r7,r8,r7
  88d71c:	21400a26 	beq	r4,r5,88d748 <__adddf3+0x8a4>
  88d720:	01401004 	movi	r5,64
  88d724:	2909c83a 	sub	r4,r5,r4
  88d728:	4108983a 	sll	r4,r8,r4
  88d72c:	2448b03a 	or	r4,r4,r17
  88d730:	2008c03a 	cmpne	r4,r4,zero
  88d734:	3922b03a 	or	r17,r7,r4
  88d738:	0009883a 	mov	r4,zero
  88d73c:	003f8d06 	br	88d574 <__adddf3+0x6d0>
  88d740:	0007883a 	mov	r3,zero
  88d744:	003fdd06 	br	88d6bc <__adddf3+0x818>
  88d748:	0009883a 	mov	r4,zero
  88d74c:	003ff706 	br	88d72c <__adddf3+0x888>

0088d750 <__divdf3>:
  88d750:	defff204 	addi	sp,sp,-56
  88d754:	dd400915 	stw	r21,36(sp)
  88d758:	282ad53a 	srli	r21,r5,20
  88d75c:	dd000815 	stw	r20,32(sp)
  88d760:	2828d7fa 	srli	r20,r5,31
  88d764:	dc000415 	stw	r16,16(sp)
  88d768:	04000434 	movhi	r16,16
  88d76c:	df000c15 	stw	fp,48(sp)
  88d770:	843fffc4 	addi	r16,r16,-1
  88d774:	dfc00d15 	stw	ra,52(sp)
  88d778:	ddc00b15 	stw	r23,44(sp)
  88d77c:	dd800a15 	stw	r22,40(sp)
  88d780:	dcc00715 	stw	r19,28(sp)
  88d784:	dc800615 	stw	r18,24(sp)
  88d788:	dc400515 	stw	r17,20(sp)
  88d78c:	ad41ffcc 	andi	r21,r21,2047
  88d790:	2c20703a 	and	r16,r5,r16
  88d794:	a7003fcc 	andi	fp,r20,255
  88d798:	a8006126 	beq	r21,zero,88d920 <__divdf3+0x1d0>
  88d79c:	0081ffc4 	movi	r2,2047
  88d7a0:	2025883a 	mov	r18,r4
  88d7a4:	a8803726 	beq	r21,r2,88d884 <__divdf3+0x134>
  88d7a8:	80800434 	orhi	r2,r16,16
  88d7ac:	100490fa 	slli	r2,r2,3
  88d7b0:	2020d77a 	srli	r16,r4,29
  88d7b4:	202490fa 	slli	r18,r4,3
  88d7b8:	ad7f0044 	addi	r21,r21,-1023
  88d7bc:	80a0b03a 	or	r16,r16,r2
  88d7c0:	0027883a 	mov	r19,zero
  88d7c4:	0013883a 	mov	r9,zero
  88d7c8:	3804d53a 	srli	r2,r7,20
  88d7cc:	382cd7fa 	srli	r22,r7,31
  88d7d0:	04400434 	movhi	r17,16
  88d7d4:	8c7fffc4 	addi	r17,r17,-1
  88d7d8:	1081ffcc 	andi	r2,r2,2047
  88d7dc:	3011883a 	mov	r8,r6
  88d7e0:	3c62703a 	and	r17,r7,r17
  88d7e4:	b5c03fcc 	andi	r23,r22,255
  88d7e8:	10006c26 	beq	r2,zero,88d99c <__divdf3+0x24c>
  88d7ec:	00c1ffc4 	movi	r3,2047
  88d7f0:	10c06426 	beq	r2,r3,88d984 <__divdf3+0x234>
  88d7f4:	88c00434 	orhi	r3,r17,16
  88d7f8:	180690fa 	slli	r3,r3,3
  88d7fc:	3022d77a 	srli	r17,r6,29
  88d800:	301090fa 	slli	r8,r6,3
  88d804:	10bf0044 	addi	r2,r2,-1023
  88d808:	88e2b03a 	or	r17,r17,r3
  88d80c:	000f883a 	mov	r7,zero
  88d810:	a58cf03a 	xor	r6,r20,r22
  88d814:	3cc8b03a 	or	r4,r7,r19
  88d818:	a8abc83a 	sub	r21,r21,r2
  88d81c:	008003c4 	movi	r2,15
  88d820:	3007883a 	mov	r3,r6
  88d824:	34c03fcc 	andi	r19,r6,255
  88d828:	11009036 	bltu	r2,r4,88da6c <__divdf3+0x31c>
  88d82c:	200890ba 	slli	r4,r4,2
  88d830:	00802274 	movhi	r2,137
  88d834:	10b61104 	addi	r2,r2,-10172
  88d838:	2089883a 	add	r4,r4,r2
  88d83c:	20800017 	ldw	r2,0(r4)
  88d840:	1000683a 	jmp	r2
  88d844:	0088da6c 	andhi	r2,zero,9065
  88d848:	0088d8bc 	xorhi	r2,zero,9058
  88d84c:	0088da5c 	xori	r2,zero,9065
  88d850:	0088d8b0 	cmpltui	r2,zero,9058
  88d854:	0088da5c 	xori	r2,zero,9065
  88d858:	0088da30 	cmpltui	r2,zero,9064
  88d85c:	0088da5c 	xori	r2,zero,9065
  88d860:	0088d8b0 	cmpltui	r2,zero,9058
  88d864:	0088d8bc 	xorhi	r2,zero,9058
  88d868:	0088d8bc 	xorhi	r2,zero,9058
  88d86c:	0088da30 	cmpltui	r2,zero,9064
  88d870:	0088d8b0 	cmpltui	r2,zero,9058
  88d874:	0088d8a0 	cmpeqi	r2,zero,9058
  88d878:	0088d8a0 	cmpeqi	r2,zero,9058
  88d87c:	0088d8a0 	cmpeqi	r2,zero,9058
  88d880:	0088dd50 	cmplti	r2,zero,9077
  88d884:	2404b03a 	or	r2,r4,r16
  88d888:	1000661e 	bne	r2,zero,88da24 <__divdf3+0x2d4>
  88d88c:	04c00204 	movi	r19,8
  88d890:	0021883a 	mov	r16,zero
  88d894:	0025883a 	mov	r18,zero
  88d898:	02400084 	movi	r9,2
  88d89c:	003fca06 	br	88d7c8 <__divdf3+0x78>
  88d8a0:	8023883a 	mov	r17,r16
  88d8a4:	9011883a 	mov	r8,r18
  88d8a8:	e02f883a 	mov	r23,fp
  88d8ac:	480f883a 	mov	r7,r9
  88d8b0:	00800084 	movi	r2,2
  88d8b4:	3881311e 	bne	r7,r2,88dd7c <__divdf3+0x62c>
  88d8b8:	b827883a 	mov	r19,r23
  88d8bc:	98c0004c 	andi	r3,r19,1
  88d8c0:	0081ffc4 	movi	r2,2047
  88d8c4:	000b883a 	mov	r5,zero
  88d8c8:	0025883a 	mov	r18,zero
  88d8cc:	1004953a 	slli	r2,r2,20
  88d8d0:	18c03fcc 	andi	r3,r3,255
  88d8d4:	04400434 	movhi	r17,16
  88d8d8:	8c7fffc4 	addi	r17,r17,-1
  88d8dc:	180697fa 	slli	r3,r3,31
  88d8e0:	2c4a703a 	and	r5,r5,r17
  88d8e4:	288ab03a 	or	r5,r5,r2
  88d8e8:	28c6b03a 	or	r3,r5,r3
  88d8ec:	9005883a 	mov	r2,r18
  88d8f0:	dfc00d17 	ldw	ra,52(sp)
  88d8f4:	df000c17 	ldw	fp,48(sp)
  88d8f8:	ddc00b17 	ldw	r23,44(sp)
  88d8fc:	dd800a17 	ldw	r22,40(sp)
  88d900:	dd400917 	ldw	r21,36(sp)
  88d904:	dd000817 	ldw	r20,32(sp)
  88d908:	dcc00717 	ldw	r19,28(sp)
  88d90c:	dc800617 	ldw	r18,24(sp)
  88d910:	dc400517 	ldw	r17,20(sp)
  88d914:	dc000417 	ldw	r16,16(sp)
  88d918:	dec00e04 	addi	sp,sp,56
  88d91c:	f800283a 	ret
  88d920:	2404b03a 	or	r2,r4,r16
  88d924:	2027883a 	mov	r19,r4
  88d928:	10003926 	beq	r2,zero,88da10 <__divdf3+0x2c0>
  88d92c:	80012e26 	beq	r16,zero,88dde8 <__divdf3+0x698>
  88d930:	8009883a 	mov	r4,r16
  88d934:	d9800315 	stw	r6,12(sp)
  88d938:	d9c00215 	stw	r7,8(sp)
  88d93c:	088f4a80 	call	88f4a8 <__clzsi2>
  88d940:	d9800317 	ldw	r6,12(sp)
  88d944:	d9c00217 	ldw	r7,8(sp)
  88d948:	113ffd44 	addi	r4,r2,-11
  88d94c:	00c00704 	movi	r3,28
  88d950:	19012116 	blt	r3,r4,88ddd8 <__divdf3+0x688>
  88d954:	00c00744 	movi	r3,29
  88d958:	147ffe04 	addi	r17,r2,-8
  88d95c:	1907c83a 	sub	r3,r3,r4
  88d960:	8460983a 	sll	r16,r16,r17
  88d964:	98c6d83a 	srl	r3,r19,r3
  88d968:	9c64983a 	sll	r18,r19,r17
  88d96c:	1c20b03a 	or	r16,r3,r16
  88d970:	1080fcc4 	addi	r2,r2,1011
  88d974:	00abc83a 	sub	r21,zero,r2
  88d978:	0027883a 	mov	r19,zero
  88d97c:	0013883a 	mov	r9,zero
  88d980:	003f9106 	br	88d7c8 <__divdf3+0x78>
  88d984:	3446b03a 	or	r3,r6,r17
  88d988:	18001f1e 	bne	r3,zero,88da08 <__divdf3+0x2b8>
  88d98c:	0023883a 	mov	r17,zero
  88d990:	0011883a 	mov	r8,zero
  88d994:	01c00084 	movi	r7,2
  88d998:	003f9d06 	br	88d810 <__divdf3+0xc0>
  88d99c:	3446b03a 	or	r3,r6,r17
  88d9a0:	18001526 	beq	r3,zero,88d9f8 <__divdf3+0x2a8>
  88d9a4:	88011b26 	beq	r17,zero,88de14 <__divdf3+0x6c4>
  88d9a8:	8809883a 	mov	r4,r17
  88d9ac:	d9800315 	stw	r6,12(sp)
  88d9b0:	da400115 	stw	r9,4(sp)
  88d9b4:	088f4a80 	call	88f4a8 <__clzsi2>
  88d9b8:	d9800317 	ldw	r6,12(sp)
  88d9bc:	da400117 	ldw	r9,4(sp)
  88d9c0:	113ffd44 	addi	r4,r2,-11
  88d9c4:	00c00704 	movi	r3,28
  88d9c8:	19010e16 	blt	r3,r4,88de04 <__divdf3+0x6b4>
  88d9cc:	00c00744 	movi	r3,29
  88d9d0:	123ffe04 	addi	r8,r2,-8
  88d9d4:	1907c83a 	sub	r3,r3,r4
  88d9d8:	8a22983a 	sll	r17,r17,r8
  88d9dc:	30c6d83a 	srl	r3,r6,r3
  88d9e0:	3210983a 	sll	r8,r6,r8
  88d9e4:	1c62b03a 	or	r17,r3,r17
  88d9e8:	1080fcc4 	addi	r2,r2,1011
  88d9ec:	0085c83a 	sub	r2,zero,r2
  88d9f0:	000f883a 	mov	r7,zero
  88d9f4:	003f8606 	br	88d810 <__divdf3+0xc0>
  88d9f8:	0023883a 	mov	r17,zero
  88d9fc:	0011883a 	mov	r8,zero
  88da00:	01c00044 	movi	r7,1
  88da04:	003f8206 	br	88d810 <__divdf3+0xc0>
  88da08:	01c000c4 	movi	r7,3
  88da0c:	003f8006 	br	88d810 <__divdf3+0xc0>
  88da10:	04c00104 	movi	r19,4
  88da14:	0021883a 	mov	r16,zero
  88da18:	0025883a 	mov	r18,zero
  88da1c:	02400044 	movi	r9,1
  88da20:	003f6906 	br	88d7c8 <__divdf3+0x78>
  88da24:	04c00304 	movi	r19,12
  88da28:	024000c4 	movi	r9,3
  88da2c:	003f6606 	br	88d7c8 <__divdf3+0x78>
  88da30:	01400434 	movhi	r5,16
  88da34:	0007883a 	mov	r3,zero
  88da38:	297fffc4 	addi	r5,r5,-1
  88da3c:	04bfffc4 	movi	r18,-1
  88da40:	0081ffc4 	movi	r2,2047
  88da44:	003fa106 	br	88d8cc <__divdf3+0x17c>
  88da48:	00c00044 	movi	r3,1
  88da4c:	1887c83a 	sub	r3,r3,r2
  88da50:	01000e04 	movi	r4,56
  88da54:	20c1210e 	bge	r4,r3,88dedc <__divdf3+0x78c>
  88da58:	98c0004c 	andi	r3,r19,1
  88da5c:	0005883a 	mov	r2,zero
  88da60:	000b883a 	mov	r5,zero
  88da64:	0025883a 	mov	r18,zero
  88da68:	003f9806 	br	88d8cc <__divdf3+0x17c>
  88da6c:	8c00fd36 	bltu	r17,r16,88de64 <__divdf3+0x714>
  88da70:	8440fb26 	beq	r16,r17,88de60 <__divdf3+0x710>
  88da74:	8007883a 	mov	r3,r16
  88da78:	ad7fffc4 	addi	r21,r21,-1
  88da7c:	0021883a 	mov	r16,zero
  88da80:	4004d63a 	srli	r2,r8,24
  88da84:	8822923a 	slli	r17,r17,8
  88da88:	1809883a 	mov	r4,r3
  88da8c:	402c923a 	slli	r22,r8,8
  88da90:	88b8b03a 	or	fp,r17,r2
  88da94:	e028d43a 	srli	r20,fp,16
  88da98:	d8c00015 	stw	r3,0(sp)
  88da9c:	e5ffffcc 	andi	r23,fp,65535
  88daa0:	a00b883a 	mov	r5,r20
  88daa4:	088cde80 	call	88cde8 <__udivsi3>
  88daa8:	d8c00017 	ldw	r3,0(sp)
  88daac:	a00b883a 	mov	r5,r20
  88dab0:	d8800315 	stw	r2,12(sp)
  88dab4:	1809883a 	mov	r4,r3
  88dab8:	088ce4c0 	call	88ce4c <__umodsi3>
  88dabc:	d9800317 	ldw	r6,12(sp)
  88dac0:	1006943a 	slli	r3,r2,16
  88dac4:	9004d43a 	srli	r2,r18,16
  88dac8:	b9a3383a 	mul	r17,r23,r6
  88dacc:	10c4b03a 	or	r2,r2,r3
  88dad0:	1440062e 	bgeu	r2,r17,88daec <__divdf3+0x39c>
  88dad4:	1705883a 	add	r2,r2,fp
  88dad8:	30ffffc4 	addi	r3,r6,-1
  88dadc:	1700ee36 	bltu	r2,fp,88de98 <__divdf3+0x748>
  88dae0:	1440ed2e 	bgeu	r2,r17,88de98 <__divdf3+0x748>
  88dae4:	31bfff84 	addi	r6,r6,-2
  88dae8:	1705883a 	add	r2,r2,fp
  88daec:	1463c83a 	sub	r17,r2,r17
  88daf0:	a00b883a 	mov	r5,r20
  88daf4:	8809883a 	mov	r4,r17
  88daf8:	d9800315 	stw	r6,12(sp)
  88dafc:	088cde80 	call	88cde8 <__udivsi3>
  88db00:	a00b883a 	mov	r5,r20
  88db04:	8809883a 	mov	r4,r17
  88db08:	d8800215 	stw	r2,8(sp)
  88db0c:	088ce4c0 	call	88ce4c <__umodsi3>
  88db10:	d9c00217 	ldw	r7,8(sp)
  88db14:	1004943a 	slli	r2,r2,16
  88db18:	94bfffcc 	andi	r18,r18,65535
  88db1c:	b9d1383a 	mul	r8,r23,r7
  88db20:	90a4b03a 	or	r18,r18,r2
  88db24:	d9800317 	ldw	r6,12(sp)
  88db28:	9200062e 	bgeu	r18,r8,88db44 <__divdf3+0x3f4>
  88db2c:	9725883a 	add	r18,r18,fp
  88db30:	38bfffc4 	addi	r2,r7,-1
  88db34:	9700d636 	bltu	r18,fp,88de90 <__divdf3+0x740>
  88db38:	9200d52e 	bgeu	r18,r8,88de90 <__divdf3+0x740>
  88db3c:	39ffff84 	addi	r7,r7,-2
  88db40:	9725883a 	add	r18,r18,fp
  88db44:	3004943a 	slli	r2,r6,16
  88db48:	b012d43a 	srli	r9,r22,16
  88db4c:	b1bfffcc 	andi	r6,r22,65535
  88db50:	11e2b03a 	or	r17,r2,r7
  88db54:	8806d43a 	srli	r3,r17,16
  88db58:	893fffcc 	andi	r4,r17,65535
  88db5c:	218b383a 	mul	r5,r4,r6
  88db60:	30c5383a 	mul	r2,r6,r3
  88db64:	2249383a 	mul	r4,r4,r9
  88db68:	280ed43a 	srli	r7,r5,16
  88db6c:	9225c83a 	sub	r18,r18,r8
  88db70:	2089883a 	add	r4,r4,r2
  88db74:	3909883a 	add	r4,r7,r4
  88db78:	1a47383a 	mul	r3,r3,r9
  88db7c:	2080022e 	bgeu	r4,r2,88db88 <__divdf3+0x438>
  88db80:	00800074 	movhi	r2,1
  88db84:	1887883a 	add	r3,r3,r2
  88db88:	2004d43a 	srli	r2,r4,16
  88db8c:	2008943a 	slli	r4,r4,16
  88db90:	297fffcc 	andi	r5,r5,65535
  88db94:	10c7883a 	add	r3,r2,r3
  88db98:	2149883a 	add	r4,r4,r5
  88db9c:	90c0a536 	bltu	r18,r3,88de34 <__divdf3+0x6e4>
  88dba0:	90c0bf26 	beq	r18,r3,88dea0 <__divdf3+0x750>
  88dba4:	90c7c83a 	sub	r3,r18,r3
  88dba8:	810fc83a 	sub	r7,r16,r4
  88dbac:	81e5803a 	cmpltu	r18,r16,r7
  88dbb0:	1ca5c83a 	sub	r18,r3,r18
  88dbb4:	e480c126 	beq	fp,r18,88debc <__divdf3+0x76c>
  88dbb8:	a00b883a 	mov	r5,r20
  88dbbc:	9009883a 	mov	r4,r18
  88dbc0:	d9800315 	stw	r6,12(sp)
  88dbc4:	d9c00215 	stw	r7,8(sp)
  88dbc8:	da400115 	stw	r9,4(sp)
  88dbcc:	088cde80 	call	88cde8 <__udivsi3>
  88dbd0:	a00b883a 	mov	r5,r20
  88dbd4:	9009883a 	mov	r4,r18
  88dbd8:	d8800015 	stw	r2,0(sp)
  88dbdc:	088ce4c0 	call	88ce4c <__umodsi3>
  88dbe0:	d9c00217 	ldw	r7,8(sp)
  88dbe4:	da000017 	ldw	r8,0(sp)
  88dbe8:	1006943a 	slli	r3,r2,16
  88dbec:	3804d43a 	srli	r2,r7,16
  88dbf0:	ba21383a 	mul	r16,r23,r8
  88dbf4:	d9800317 	ldw	r6,12(sp)
  88dbf8:	10c4b03a 	or	r2,r2,r3
  88dbfc:	da400117 	ldw	r9,4(sp)
  88dc00:	1400062e 	bgeu	r2,r16,88dc1c <__divdf3+0x4cc>
  88dc04:	1705883a 	add	r2,r2,fp
  88dc08:	40ffffc4 	addi	r3,r8,-1
  88dc0c:	1700ad36 	bltu	r2,fp,88dec4 <__divdf3+0x774>
  88dc10:	1400ac2e 	bgeu	r2,r16,88dec4 <__divdf3+0x774>
  88dc14:	423fff84 	addi	r8,r8,-2
  88dc18:	1705883a 	add	r2,r2,fp
  88dc1c:	1421c83a 	sub	r16,r2,r16
  88dc20:	a00b883a 	mov	r5,r20
  88dc24:	8009883a 	mov	r4,r16
  88dc28:	d9800315 	stw	r6,12(sp)
  88dc2c:	d9c00215 	stw	r7,8(sp)
  88dc30:	da000015 	stw	r8,0(sp)
  88dc34:	da400115 	stw	r9,4(sp)
  88dc38:	088cde80 	call	88cde8 <__udivsi3>
  88dc3c:	8009883a 	mov	r4,r16
  88dc40:	a00b883a 	mov	r5,r20
  88dc44:	1025883a 	mov	r18,r2
  88dc48:	088ce4c0 	call	88ce4c <__umodsi3>
  88dc4c:	d9c00217 	ldw	r7,8(sp)
  88dc50:	1004943a 	slli	r2,r2,16
  88dc54:	bcaf383a 	mul	r23,r23,r18
  88dc58:	393fffcc 	andi	r4,r7,65535
  88dc5c:	2088b03a 	or	r4,r4,r2
  88dc60:	d9800317 	ldw	r6,12(sp)
  88dc64:	da000017 	ldw	r8,0(sp)
  88dc68:	da400117 	ldw	r9,4(sp)
  88dc6c:	25c0062e 	bgeu	r4,r23,88dc88 <__divdf3+0x538>
  88dc70:	2709883a 	add	r4,r4,fp
  88dc74:	90bfffc4 	addi	r2,r18,-1
  88dc78:	27009436 	bltu	r4,fp,88decc <__divdf3+0x77c>
  88dc7c:	25c0932e 	bgeu	r4,r23,88decc <__divdf3+0x77c>
  88dc80:	94bfff84 	addi	r18,r18,-2
  88dc84:	2709883a 	add	r4,r4,fp
  88dc88:	4004943a 	slli	r2,r8,16
  88dc8c:	25efc83a 	sub	r23,r4,r23
  88dc90:	1490b03a 	or	r8,r2,r18
  88dc94:	4008d43a 	srli	r4,r8,16
  88dc98:	40ffffcc 	andi	r3,r8,65535
  88dc9c:	30c5383a 	mul	r2,r6,r3
  88dca0:	1a47383a 	mul	r3,r3,r9
  88dca4:	310d383a 	mul	r6,r6,r4
  88dca8:	100ad43a 	srli	r5,r2,16
  88dcac:	4913383a 	mul	r9,r9,r4
  88dcb0:	1987883a 	add	r3,r3,r6
  88dcb4:	28c7883a 	add	r3,r5,r3
  88dcb8:	1980022e 	bgeu	r3,r6,88dcc4 <__divdf3+0x574>
  88dcbc:	01000074 	movhi	r4,1
  88dcc0:	4913883a 	add	r9,r9,r4
  88dcc4:	1808d43a 	srli	r4,r3,16
  88dcc8:	1806943a 	slli	r3,r3,16
  88dccc:	10bfffcc 	andi	r2,r2,65535
  88dcd0:	2253883a 	add	r9,r4,r9
  88dcd4:	1887883a 	add	r3,r3,r2
  88dcd8:	ba403836 	bltu	r23,r9,88ddbc <__divdf3+0x66c>
  88dcdc:	ba403626 	beq	r23,r9,88ddb8 <__divdf3+0x668>
  88dce0:	42000054 	ori	r8,r8,1
  88dce4:	a880ffc4 	addi	r2,r21,1023
  88dce8:	00bf570e 	bge	zero,r2,88da48 <__divdf3+0x2f8>
  88dcec:	40c001cc 	andi	r3,r8,7
  88dcf0:	18000726 	beq	r3,zero,88dd10 <__divdf3+0x5c0>
  88dcf4:	40c003cc 	andi	r3,r8,15
  88dcf8:	01000104 	movi	r4,4
  88dcfc:	19000426 	beq	r3,r4,88dd10 <__divdf3+0x5c0>
  88dd00:	4107883a 	add	r3,r8,r4
  88dd04:	1a11803a 	cmpltu	r8,r3,r8
  88dd08:	8a23883a 	add	r17,r17,r8
  88dd0c:	1811883a 	mov	r8,r3
  88dd10:	88c0402c 	andhi	r3,r17,256
  88dd14:	18000426 	beq	r3,zero,88dd28 <__divdf3+0x5d8>
  88dd18:	00ffc034 	movhi	r3,65280
  88dd1c:	18ffffc4 	addi	r3,r3,-1
  88dd20:	a8810004 	addi	r2,r21,1024
  88dd24:	88e2703a 	and	r17,r17,r3
  88dd28:	00c1ff84 	movi	r3,2046
  88dd2c:	18bee316 	blt	r3,r2,88d8bc <__divdf3+0x16c>
  88dd30:	8824977a 	slli	r18,r17,29
  88dd34:	4010d0fa 	srli	r8,r8,3
  88dd38:	8822927a 	slli	r17,r17,9
  88dd3c:	1081ffcc 	andi	r2,r2,2047
  88dd40:	9224b03a 	or	r18,r18,r8
  88dd44:	880ad33a 	srli	r5,r17,12
  88dd48:	98c0004c 	andi	r3,r19,1
  88dd4c:	003edf06 	br	88d8cc <__divdf3+0x17c>
  88dd50:	8080022c 	andhi	r2,r16,8
  88dd54:	10001226 	beq	r2,zero,88dda0 <__divdf3+0x650>
  88dd58:	8880022c 	andhi	r2,r17,8
  88dd5c:	1000101e 	bne	r2,zero,88dda0 <__divdf3+0x650>
  88dd60:	00800434 	movhi	r2,16
  88dd64:	89400234 	orhi	r5,r17,8
  88dd68:	10bfffc4 	addi	r2,r2,-1
  88dd6c:	b007883a 	mov	r3,r22
  88dd70:	288a703a 	and	r5,r5,r2
  88dd74:	4025883a 	mov	r18,r8
  88dd78:	003f3106 	br	88da40 <__divdf3+0x2f0>
  88dd7c:	008000c4 	movi	r2,3
  88dd80:	3880a626 	beq	r7,r2,88e01c <__divdf3+0x8cc>
  88dd84:	00800044 	movi	r2,1
  88dd88:	3880521e 	bne	r7,r2,88ded4 <__divdf3+0x784>
  88dd8c:	b807883a 	mov	r3,r23
  88dd90:	0005883a 	mov	r2,zero
  88dd94:	000b883a 	mov	r5,zero
  88dd98:	0025883a 	mov	r18,zero
  88dd9c:	003ecb06 	br	88d8cc <__divdf3+0x17c>
  88dda0:	00800434 	movhi	r2,16
  88dda4:	81400234 	orhi	r5,r16,8
  88dda8:	10bfffc4 	addi	r2,r2,-1
  88ddac:	a007883a 	mov	r3,r20
  88ddb0:	288a703a 	and	r5,r5,r2
  88ddb4:	003f2206 	br	88da40 <__divdf3+0x2f0>
  88ddb8:	183fca26 	beq	r3,zero,88dce4 <__divdf3+0x594>
  88ddbc:	e5ef883a 	add	r23,fp,r23
  88ddc0:	40bfffc4 	addi	r2,r8,-1
  88ddc4:	bf00392e 	bgeu	r23,fp,88deac <__divdf3+0x75c>
  88ddc8:	1011883a 	mov	r8,r2
  88ddcc:	ba7fc41e 	bne	r23,r9,88dce0 <__divdf3+0x590>
  88ddd0:	b0ffc31e 	bne	r22,r3,88dce0 <__divdf3+0x590>
  88ddd4:	003fc306 	br	88dce4 <__divdf3+0x594>
  88ddd8:	143ff604 	addi	r16,r2,-40
  88dddc:	9c20983a 	sll	r16,r19,r16
  88dde0:	0025883a 	mov	r18,zero
  88dde4:	003ee206 	br	88d970 <__divdf3+0x220>
  88dde8:	d9800315 	stw	r6,12(sp)
  88ddec:	d9c00215 	stw	r7,8(sp)
  88ddf0:	088f4a80 	call	88f4a8 <__clzsi2>
  88ddf4:	10800804 	addi	r2,r2,32
  88ddf8:	d9c00217 	ldw	r7,8(sp)
  88ddfc:	d9800317 	ldw	r6,12(sp)
  88de00:	003ed106 	br	88d948 <__divdf3+0x1f8>
  88de04:	147ff604 	addi	r17,r2,-40
  88de08:	3462983a 	sll	r17,r6,r17
  88de0c:	0011883a 	mov	r8,zero
  88de10:	003ef506 	br	88d9e8 <__divdf3+0x298>
  88de14:	3009883a 	mov	r4,r6
  88de18:	d9800315 	stw	r6,12(sp)
  88de1c:	da400115 	stw	r9,4(sp)
  88de20:	088f4a80 	call	88f4a8 <__clzsi2>
  88de24:	10800804 	addi	r2,r2,32
  88de28:	da400117 	ldw	r9,4(sp)
  88de2c:	d9800317 	ldw	r6,12(sp)
  88de30:	003ee306 	br	88d9c0 <__divdf3+0x270>
  88de34:	85a1883a 	add	r16,r16,r22
  88de38:	8585803a 	cmpltu	r2,r16,r22
  88de3c:	1705883a 	add	r2,r2,fp
  88de40:	14a5883a 	add	r18,r2,r18
  88de44:	88bfffc4 	addi	r2,r17,-1
  88de48:	e4800c2e 	bgeu	fp,r18,88de7c <__divdf3+0x72c>
  88de4c:	90c03e36 	bltu	r18,r3,88df48 <__divdf3+0x7f8>
  88de50:	1c806926 	beq	r3,r18,88dff8 <__divdf3+0x8a8>
  88de54:	90c7c83a 	sub	r3,r18,r3
  88de58:	1023883a 	mov	r17,r2
  88de5c:	003f5206 	br	88dba8 <__divdf3+0x458>
  88de60:	923f0436 	bltu	r18,r8,88da74 <__divdf3+0x324>
  88de64:	800897fa 	slli	r4,r16,31
  88de68:	9004d07a 	srli	r2,r18,1
  88de6c:	8006d07a 	srli	r3,r16,1
  88de70:	902097fa 	slli	r16,r18,31
  88de74:	20a4b03a 	or	r18,r4,r2
  88de78:	003f0106 	br	88da80 <__divdf3+0x330>
  88de7c:	e4bff51e 	bne	fp,r18,88de54 <__divdf3+0x704>
  88de80:	85bff22e 	bgeu	r16,r22,88de4c <__divdf3+0x6fc>
  88de84:	e0c7c83a 	sub	r3,fp,r3
  88de88:	1023883a 	mov	r17,r2
  88de8c:	003f4606 	br	88dba8 <__divdf3+0x458>
  88de90:	100f883a 	mov	r7,r2
  88de94:	003f2b06 	br	88db44 <__divdf3+0x3f4>
  88de98:	180d883a 	mov	r6,r3
  88de9c:	003f1306 	br	88daec <__divdf3+0x39c>
  88dea0:	813fe436 	bltu	r16,r4,88de34 <__divdf3+0x6e4>
  88dea4:	0007883a 	mov	r3,zero
  88dea8:	003f3f06 	br	88dba8 <__divdf3+0x458>
  88deac:	ba402c36 	bltu	r23,r9,88df60 <__divdf3+0x810>
  88deb0:	4dc05426 	beq	r9,r23,88e004 <__divdf3+0x8b4>
  88deb4:	1011883a 	mov	r8,r2
  88deb8:	003f8906 	br	88dce0 <__divdf3+0x590>
  88debc:	023fffc4 	movi	r8,-1
  88dec0:	003f8806 	br	88dce4 <__divdf3+0x594>
  88dec4:	1811883a 	mov	r8,r3
  88dec8:	003f5406 	br	88dc1c <__divdf3+0x4cc>
  88decc:	1025883a 	mov	r18,r2
  88ded0:	003f6d06 	br	88dc88 <__divdf3+0x538>
  88ded4:	b827883a 	mov	r19,r23
  88ded8:	003f8206 	br	88dce4 <__divdf3+0x594>
  88dedc:	010007c4 	movi	r4,31
  88dee0:	20c02616 	blt	r4,r3,88df7c <__divdf3+0x82c>
  88dee4:	00800804 	movi	r2,32
  88dee8:	10c5c83a 	sub	r2,r2,r3
  88deec:	888a983a 	sll	r5,r17,r2
  88def0:	40c8d83a 	srl	r4,r8,r3
  88def4:	4084983a 	sll	r2,r8,r2
  88def8:	88e2d83a 	srl	r17,r17,r3
  88defc:	2906b03a 	or	r3,r5,r4
  88df00:	1004c03a 	cmpne	r2,r2,zero
  88df04:	1886b03a 	or	r3,r3,r2
  88df08:	188001cc 	andi	r2,r3,7
  88df0c:	10000726 	beq	r2,zero,88df2c <__divdf3+0x7dc>
  88df10:	188003cc 	andi	r2,r3,15
  88df14:	01000104 	movi	r4,4
  88df18:	11000426 	beq	r2,r4,88df2c <__divdf3+0x7dc>
  88df1c:	1805883a 	mov	r2,r3
  88df20:	10c00104 	addi	r3,r2,4
  88df24:	1885803a 	cmpltu	r2,r3,r2
  88df28:	88a3883a 	add	r17,r17,r2
  88df2c:	8880202c 	andhi	r2,r17,128
  88df30:	10002726 	beq	r2,zero,88dfd0 <__divdf3+0x880>
  88df34:	98c0004c 	andi	r3,r19,1
  88df38:	00800044 	movi	r2,1
  88df3c:	000b883a 	mov	r5,zero
  88df40:	0025883a 	mov	r18,zero
  88df44:	003e6106 	br	88d8cc <__divdf3+0x17c>
  88df48:	85a1883a 	add	r16,r16,r22
  88df4c:	8585803a 	cmpltu	r2,r16,r22
  88df50:	1705883a 	add	r2,r2,fp
  88df54:	14a5883a 	add	r18,r2,r18
  88df58:	8c7fff84 	addi	r17,r17,-2
  88df5c:	003f1106 	br	88dba4 <__divdf3+0x454>
  88df60:	b589883a 	add	r4,r22,r22
  88df64:	25ad803a 	cmpltu	r22,r4,r22
  88df68:	b739883a 	add	fp,r22,fp
  88df6c:	40bfff84 	addi	r2,r8,-2
  88df70:	bf2f883a 	add	r23,r23,fp
  88df74:	202d883a 	mov	r22,r4
  88df78:	003f9306 	br	88ddc8 <__divdf3+0x678>
  88df7c:	013ff844 	movi	r4,-31
  88df80:	2085c83a 	sub	r2,r4,r2
  88df84:	8888d83a 	srl	r4,r17,r2
  88df88:	00800804 	movi	r2,32
  88df8c:	18802126 	beq	r3,r2,88e014 <__divdf3+0x8c4>
  88df90:	00801004 	movi	r2,64
  88df94:	10c5c83a 	sub	r2,r2,r3
  88df98:	8884983a 	sll	r2,r17,r2
  88df9c:	1204b03a 	or	r2,r2,r8
  88dfa0:	1004c03a 	cmpne	r2,r2,zero
  88dfa4:	2084b03a 	or	r2,r4,r2
  88dfa8:	144001cc 	andi	r17,r2,7
  88dfac:	88000d1e 	bne	r17,zero,88dfe4 <__divdf3+0x894>
  88dfb0:	000b883a 	mov	r5,zero
  88dfb4:	1024d0fa 	srli	r18,r2,3
  88dfb8:	98c0004c 	andi	r3,r19,1
  88dfbc:	0005883a 	mov	r2,zero
  88dfc0:	9464b03a 	or	r18,r18,r17
  88dfc4:	003e4106 	br	88d8cc <__divdf3+0x17c>
  88dfc8:	1007883a 	mov	r3,r2
  88dfcc:	0023883a 	mov	r17,zero
  88dfd0:	880a927a 	slli	r5,r17,9
  88dfd4:	1805883a 	mov	r2,r3
  88dfd8:	8822977a 	slli	r17,r17,29
  88dfdc:	280ad33a 	srli	r5,r5,12
  88dfe0:	003ff406 	br	88dfb4 <__divdf3+0x864>
  88dfe4:	10c003cc 	andi	r3,r2,15
  88dfe8:	01000104 	movi	r4,4
  88dfec:	193ff626 	beq	r3,r4,88dfc8 <__divdf3+0x878>
  88dff0:	0023883a 	mov	r17,zero
  88dff4:	003fca06 	br	88df20 <__divdf3+0x7d0>
  88dff8:	813fd336 	bltu	r16,r4,88df48 <__divdf3+0x7f8>
  88dffc:	1023883a 	mov	r17,r2
  88e000:	003fa806 	br	88dea4 <__divdf3+0x754>
  88e004:	b0ffd636 	bltu	r22,r3,88df60 <__divdf3+0x810>
  88e008:	1011883a 	mov	r8,r2
  88e00c:	b0ff341e 	bne	r22,r3,88dce0 <__divdf3+0x590>
  88e010:	003f3406 	br	88dce4 <__divdf3+0x594>
  88e014:	0005883a 	mov	r2,zero
  88e018:	003fe006 	br	88df9c <__divdf3+0x84c>
  88e01c:	00800434 	movhi	r2,16
  88e020:	89400234 	orhi	r5,r17,8
  88e024:	10bfffc4 	addi	r2,r2,-1
  88e028:	b807883a 	mov	r3,r23
  88e02c:	288a703a 	and	r5,r5,r2
  88e030:	4025883a 	mov	r18,r8
  88e034:	003e8206 	br	88da40 <__divdf3+0x2f0>

0088e038 <__eqdf2>:
  88e038:	2804d53a 	srli	r2,r5,20
  88e03c:	3806d53a 	srli	r3,r7,20
  88e040:	02000434 	movhi	r8,16
  88e044:	423fffc4 	addi	r8,r8,-1
  88e048:	1081ffcc 	andi	r2,r2,2047
  88e04c:	0281ffc4 	movi	r10,2047
  88e050:	2a12703a 	and	r9,r5,r8
  88e054:	18c1ffcc 	andi	r3,r3,2047
  88e058:	3a10703a 	and	r8,r7,r8
  88e05c:	280ad7fa 	srli	r5,r5,31
  88e060:	380ed7fa 	srli	r7,r7,31
  88e064:	12801026 	beq	r2,r10,88e0a8 <__eqdf2+0x70>
  88e068:	0281ffc4 	movi	r10,2047
  88e06c:	1a800a26 	beq	r3,r10,88e098 <__eqdf2+0x60>
  88e070:	10c00226 	beq	r2,r3,88e07c <__eqdf2+0x44>
  88e074:	00800044 	movi	r2,1
  88e078:	f800283a 	ret
  88e07c:	4a3ffd1e 	bne	r9,r8,88e074 <__eqdf2+0x3c>
  88e080:	21bffc1e 	bne	r4,r6,88e074 <__eqdf2+0x3c>
  88e084:	29c00c26 	beq	r5,r7,88e0b8 <__eqdf2+0x80>
  88e088:	103ffa1e 	bne	r2,zero,88e074 <__eqdf2+0x3c>
  88e08c:	2244b03a 	or	r2,r4,r9
  88e090:	1004c03a 	cmpne	r2,r2,zero
  88e094:	f800283a 	ret
  88e098:	3214b03a 	or	r10,r6,r8
  88e09c:	503ff426 	beq	r10,zero,88e070 <__eqdf2+0x38>
  88e0a0:	00800044 	movi	r2,1
  88e0a4:	f800283a 	ret
  88e0a8:	2254b03a 	or	r10,r4,r9
  88e0ac:	503fee26 	beq	r10,zero,88e068 <__eqdf2+0x30>
  88e0b0:	00800044 	movi	r2,1
  88e0b4:	f800283a 	ret
  88e0b8:	0005883a 	mov	r2,zero
  88e0bc:	f800283a 	ret

0088e0c0 <__gedf2>:
  88e0c0:	2804d53a 	srli	r2,r5,20
  88e0c4:	3806d53a 	srli	r3,r7,20
  88e0c8:	02000434 	movhi	r8,16
  88e0cc:	423fffc4 	addi	r8,r8,-1
  88e0d0:	1081ffcc 	andi	r2,r2,2047
  88e0d4:	0241ffc4 	movi	r9,2047
  88e0d8:	2a14703a 	and	r10,r5,r8
  88e0dc:	18c1ffcc 	andi	r3,r3,2047
  88e0e0:	3a10703a 	and	r8,r7,r8
  88e0e4:	280ad7fa 	srli	r5,r5,31
  88e0e8:	380ed7fa 	srli	r7,r7,31
  88e0ec:	12401d26 	beq	r2,r9,88e164 <__gedf2+0xa4>
  88e0f0:	0241ffc4 	movi	r9,2047
  88e0f4:	1a401226 	beq	r3,r9,88e140 <__gedf2+0x80>
  88e0f8:	1000081e 	bne	r2,zero,88e11c <__gedf2+0x5c>
  88e0fc:	2296b03a 	or	r11,r4,r10
  88e100:	5813003a 	cmpeq	r9,r11,zero
  88e104:	1800091e 	bne	r3,zero,88e12c <__gedf2+0x6c>
  88e108:	3218b03a 	or	r12,r6,r8
  88e10c:	6000071e 	bne	r12,zero,88e12c <__gedf2+0x6c>
  88e110:	0005883a 	mov	r2,zero
  88e114:	5800101e 	bne	r11,zero,88e158 <__gedf2+0x98>
  88e118:	f800283a 	ret
  88e11c:	18000c1e 	bne	r3,zero,88e150 <__gedf2+0x90>
  88e120:	3212b03a 	or	r9,r6,r8
  88e124:	48000c26 	beq	r9,zero,88e158 <__gedf2+0x98>
  88e128:	0013883a 	mov	r9,zero
  88e12c:	39c03fcc 	andi	r7,r7,255
  88e130:	48000826 	beq	r9,zero,88e154 <__gedf2+0x94>
  88e134:	38000926 	beq	r7,zero,88e15c <__gedf2+0x9c>
  88e138:	00800044 	movi	r2,1
  88e13c:	f800283a 	ret
  88e140:	3212b03a 	or	r9,r6,r8
  88e144:	483fec26 	beq	r9,zero,88e0f8 <__gedf2+0x38>
  88e148:	00bfff84 	movi	r2,-2
  88e14c:	f800283a 	ret
  88e150:	39c03fcc 	andi	r7,r7,255
  88e154:	29c00626 	beq	r5,r7,88e170 <__gedf2+0xb0>
  88e158:	283ff726 	beq	r5,zero,88e138 <__gedf2+0x78>
  88e15c:	00bfffc4 	movi	r2,-1
  88e160:	f800283a 	ret
  88e164:	2292b03a 	or	r9,r4,r10
  88e168:	483fe126 	beq	r9,zero,88e0f0 <__gedf2+0x30>
  88e16c:	003ff606 	br	88e148 <__gedf2+0x88>
  88e170:	18bff916 	blt	r3,r2,88e158 <__gedf2+0x98>
  88e174:	10c00316 	blt	r2,r3,88e184 <__gedf2+0xc4>
  88e178:	42bff736 	bltu	r8,r10,88e158 <__gedf2+0x98>
  88e17c:	52000326 	beq	r10,r8,88e18c <__gedf2+0xcc>
  88e180:	5200042e 	bgeu	r10,r8,88e194 <__gedf2+0xd4>
  88e184:	283fec1e 	bne	r5,zero,88e138 <__gedf2+0x78>
  88e188:	003ff406 	br	88e15c <__gedf2+0x9c>
  88e18c:	313ff236 	bltu	r6,r4,88e158 <__gedf2+0x98>
  88e190:	21bffc36 	bltu	r4,r6,88e184 <__gedf2+0xc4>
  88e194:	0005883a 	mov	r2,zero
  88e198:	f800283a 	ret

0088e19c <__ledf2>:
  88e19c:	2804d53a 	srli	r2,r5,20
  88e1a0:	3810d53a 	srli	r8,r7,20
  88e1a4:	00c00434 	movhi	r3,16
  88e1a8:	18ffffc4 	addi	r3,r3,-1
  88e1ac:	1081ffcc 	andi	r2,r2,2047
  88e1b0:	0241ffc4 	movi	r9,2047
  88e1b4:	28d4703a 	and	r10,r5,r3
  88e1b8:	4201ffcc 	andi	r8,r8,2047
  88e1bc:	38c6703a 	and	r3,r7,r3
  88e1c0:	280ad7fa 	srli	r5,r5,31
  88e1c4:	380ed7fa 	srli	r7,r7,31
  88e1c8:	12401f26 	beq	r2,r9,88e248 <__ledf2+0xac>
  88e1cc:	0241ffc4 	movi	r9,2047
  88e1d0:	42401426 	beq	r8,r9,88e224 <__ledf2+0x88>
  88e1d4:	1000091e 	bne	r2,zero,88e1fc <__ledf2+0x60>
  88e1d8:	2296b03a 	or	r11,r4,r10
  88e1dc:	5813003a 	cmpeq	r9,r11,zero
  88e1e0:	29403fcc 	andi	r5,r5,255
  88e1e4:	40000a1e 	bne	r8,zero,88e210 <__ledf2+0x74>
  88e1e8:	30d8b03a 	or	r12,r6,r3
  88e1ec:	6000081e 	bne	r12,zero,88e210 <__ledf2+0x74>
  88e1f0:	0005883a 	mov	r2,zero
  88e1f4:	5800111e 	bne	r11,zero,88e23c <__ledf2+0xa0>
  88e1f8:	f800283a 	ret
  88e1fc:	29403fcc 	andi	r5,r5,255
  88e200:	40000c1e 	bne	r8,zero,88e234 <__ledf2+0x98>
  88e204:	30d2b03a 	or	r9,r6,r3
  88e208:	48000c26 	beq	r9,zero,88e23c <__ledf2+0xa0>
  88e20c:	0013883a 	mov	r9,zero
  88e210:	39c03fcc 	andi	r7,r7,255
  88e214:	48000826 	beq	r9,zero,88e238 <__ledf2+0x9c>
  88e218:	38001126 	beq	r7,zero,88e260 <__ledf2+0xc4>
  88e21c:	00800044 	movi	r2,1
  88e220:	f800283a 	ret
  88e224:	30d2b03a 	or	r9,r6,r3
  88e228:	483fea26 	beq	r9,zero,88e1d4 <__ledf2+0x38>
  88e22c:	00800084 	movi	r2,2
  88e230:	f800283a 	ret
  88e234:	39c03fcc 	andi	r7,r7,255
  88e238:	39400726 	beq	r7,r5,88e258 <__ledf2+0xbc>
  88e23c:	2800081e 	bne	r5,zero,88e260 <__ledf2+0xc4>
  88e240:	00800044 	movi	r2,1
  88e244:	f800283a 	ret
  88e248:	2292b03a 	or	r9,r4,r10
  88e24c:	483fdf26 	beq	r9,zero,88e1cc <__ledf2+0x30>
  88e250:	00800084 	movi	r2,2
  88e254:	f800283a 	ret
  88e258:	4080030e 	bge	r8,r2,88e268 <__ledf2+0xcc>
  88e25c:	383fef26 	beq	r7,zero,88e21c <__ledf2+0x80>
  88e260:	00bfffc4 	movi	r2,-1
  88e264:	f800283a 	ret
  88e268:	123feb16 	blt	r2,r8,88e218 <__ledf2+0x7c>
  88e26c:	1abff336 	bltu	r3,r10,88e23c <__ledf2+0xa0>
  88e270:	50c00326 	beq	r10,r3,88e280 <__ledf2+0xe4>
  88e274:	50c0042e 	bgeu	r10,r3,88e288 <__ledf2+0xec>
  88e278:	283fe81e 	bne	r5,zero,88e21c <__ledf2+0x80>
  88e27c:	003ff806 	br	88e260 <__ledf2+0xc4>
  88e280:	313fee36 	bltu	r6,r4,88e23c <__ledf2+0xa0>
  88e284:	21bffc36 	bltu	r4,r6,88e278 <__ledf2+0xdc>
  88e288:	0005883a 	mov	r2,zero
  88e28c:	f800283a 	ret

0088e290 <__muldf3>:
  88e290:	defff304 	addi	sp,sp,-52
  88e294:	2804d53a 	srli	r2,r5,20
  88e298:	dd800915 	stw	r22,36(sp)
  88e29c:	282cd7fa 	srli	r22,r5,31
  88e2a0:	dc000315 	stw	r16,12(sp)
  88e2a4:	04000434 	movhi	r16,16
  88e2a8:	dd400815 	stw	r21,32(sp)
  88e2ac:	dc800515 	stw	r18,20(sp)
  88e2b0:	843fffc4 	addi	r16,r16,-1
  88e2b4:	dfc00c15 	stw	ra,48(sp)
  88e2b8:	df000b15 	stw	fp,44(sp)
  88e2bc:	ddc00a15 	stw	r23,40(sp)
  88e2c0:	dd000715 	stw	r20,28(sp)
  88e2c4:	dcc00615 	stw	r19,24(sp)
  88e2c8:	dc400415 	stw	r17,16(sp)
  88e2cc:	1481ffcc 	andi	r18,r2,2047
  88e2d0:	2c20703a 	and	r16,r5,r16
  88e2d4:	b02b883a 	mov	r21,r22
  88e2d8:	b2403fcc 	andi	r9,r22,255
  88e2dc:	90006026 	beq	r18,zero,88e460 <__muldf3+0x1d0>
  88e2e0:	0081ffc4 	movi	r2,2047
  88e2e4:	2029883a 	mov	r20,r4
  88e2e8:	90803626 	beq	r18,r2,88e3c4 <__muldf3+0x134>
  88e2ec:	80800434 	orhi	r2,r16,16
  88e2f0:	100490fa 	slli	r2,r2,3
  88e2f4:	2020d77a 	srli	r16,r4,29
  88e2f8:	202890fa 	slli	r20,r4,3
  88e2fc:	94bf0044 	addi	r18,r18,-1023
  88e300:	80a0b03a 	or	r16,r16,r2
  88e304:	0027883a 	mov	r19,zero
  88e308:	0039883a 	mov	fp,zero
  88e30c:	3804d53a 	srli	r2,r7,20
  88e310:	382ed7fa 	srli	r23,r7,31
  88e314:	04400434 	movhi	r17,16
  88e318:	8c7fffc4 	addi	r17,r17,-1
  88e31c:	1081ffcc 	andi	r2,r2,2047
  88e320:	3011883a 	mov	r8,r6
  88e324:	3c62703a 	and	r17,r7,r17
  88e328:	ba803fcc 	andi	r10,r23,255
  88e32c:	10006d26 	beq	r2,zero,88e4e4 <__muldf3+0x254>
  88e330:	00c1ffc4 	movi	r3,2047
  88e334:	10c06526 	beq	r2,r3,88e4cc <__muldf3+0x23c>
  88e338:	88c00434 	orhi	r3,r17,16
  88e33c:	180690fa 	slli	r3,r3,3
  88e340:	3022d77a 	srli	r17,r6,29
  88e344:	301090fa 	slli	r8,r6,3
  88e348:	10bf0044 	addi	r2,r2,-1023
  88e34c:	88e2b03a 	or	r17,r17,r3
  88e350:	000b883a 	mov	r5,zero
  88e354:	9085883a 	add	r2,r18,r2
  88e358:	2cc8b03a 	or	r4,r5,r19
  88e35c:	00c003c4 	movi	r3,15
  88e360:	bdacf03a 	xor	r22,r23,r22
  88e364:	12c00044 	addi	r11,r2,1
  88e368:	19009936 	bltu	r3,r4,88e5d0 <__muldf3+0x340>
  88e36c:	200890ba 	slli	r4,r4,2
  88e370:	00c02274 	movhi	r3,137
  88e374:	18f8e104 	addi	r3,r3,-7292
  88e378:	20c9883a 	add	r4,r4,r3
  88e37c:	20c00017 	ldw	r3,0(r4)
  88e380:	1800683a 	jmp	r3
  88e384:	0088e5d0 	cmplti	r2,zero,9111
  88e388:	0088e3e4 	muli	r2,zero,9103
  88e38c:	0088e3e4 	muli	r2,zero,9103
  88e390:	0088e3e0 	cmpeqi	r2,zero,9103
  88e394:	0088e5ac 	andhi	r2,zero,9110
  88e398:	0088e5ac 	andhi	r2,zero,9110
  88e39c:	0088e594 	movui	r2,9110
  88e3a0:	0088e3e0 	cmpeqi	r2,zero,9103
  88e3a4:	0088e5ac 	andhi	r2,zero,9110
  88e3a8:	0088e594 	movui	r2,9110
  88e3ac:	0088e5ac 	andhi	r2,zero,9110
  88e3b0:	0088e3e0 	cmpeqi	r2,zero,9103
  88e3b4:	0088e5bc 	xorhi	r2,zero,9110
  88e3b8:	0088e5bc 	xorhi	r2,zero,9110
  88e3bc:	0088e5bc 	xorhi	r2,zero,9110
  88e3c0:	0088e7d8 	cmpnei	r2,zero,9119
  88e3c4:	2404b03a 	or	r2,r4,r16
  88e3c8:	10006f1e 	bne	r2,zero,88e588 <__muldf3+0x2f8>
  88e3cc:	04c00204 	movi	r19,8
  88e3d0:	0021883a 	mov	r16,zero
  88e3d4:	0029883a 	mov	r20,zero
  88e3d8:	07000084 	movi	fp,2
  88e3dc:	003fcb06 	br	88e30c <__muldf3+0x7c>
  88e3e0:	502d883a 	mov	r22,r10
  88e3e4:	00800084 	movi	r2,2
  88e3e8:	28805726 	beq	r5,r2,88e548 <__muldf3+0x2b8>
  88e3ec:	008000c4 	movi	r2,3
  88e3f0:	28816626 	beq	r5,r2,88e98c <__muldf3+0x6fc>
  88e3f4:	00800044 	movi	r2,1
  88e3f8:	2881411e 	bne	r5,r2,88e900 <__muldf3+0x670>
  88e3fc:	b02b883a 	mov	r21,r22
  88e400:	0005883a 	mov	r2,zero
  88e404:	000b883a 	mov	r5,zero
  88e408:	0029883a 	mov	r20,zero
  88e40c:	1004953a 	slli	r2,r2,20
  88e410:	a8c03fcc 	andi	r3,r21,255
  88e414:	04400434 	movhi	r17,16
  88e418:	8c7fffc4 	addi	r17,r17,-1
  88e41c:	180697fa 	slli	r3,r3,31
  88e420:	2c4a703a 	and	r5,r5,r17
  88e424:	288ab03a 	or	r5,r5,r2
  88e428:	28c6b03a 	or	r3,r5,r3
  88e42c:	a005883a 	mov	r2,r20
  88e430:	dfc00c17 	ldw	ra,48(sp)
  88e434:	df000b17 	ldw	fp,44(sp)
  88e438:	ddc00a17 	ldw	r23,40(sp)
  88e43c:	dd800917 	ldw	r22,36(sp)
  88e440:	dd400817 	ldw	r21,32(sp)
  88e444:	dd000717 	ldw	r20,28(sp)
  88e448:	dcc00617 	ldw	r19,24(sp)
  88e44c:	dc800517 	ldw	r18,20(sp)
  88e450:	dc400417 	ldw	r17,16(sp)
  88e454:	dc000317 	ldw	r16,12(sp)
  88e458:	dec00d04 	addi	sp,sp,52
  88e45c:	f800283a 	ret
  88e460:	2404b03a 	or	r2,r4,r16
  88e464:	2027883a 	mov	r19,r4
  88e468:	10004226 	beq	r2,zero,88e574 <__muldf3+0x2e4>
  88e46c:	8000fc26 	beq	r16,zero,88e860 <__muldf3+0x5d0>
  88e470:	8009883a 	mov	r4,r16
  88e474:	d9800215 	stw	r6,8(sp)
  88e478:	d9c00015 	stw	r7,0(sp)
  88e47c:	da400115 	stw	r9,4(sp)
  88e480:	088f4a80 	call	88f4a8 <__clzsi2>
  88e484:	d9800217 	ldw	r6,8(sp)
  88e488:	d9c00017 	ldw	r7,0(sp)
  88e48c:	da400117 	ldw	r9,4(sp)
  88e490:	113ffd44 	addi	r4,r2,-11
  88e494:	00c00704 	movi	r3,28
  88e498:	1900ed16 	blt	r3,r4,88e850 <__muldf3+0x5c0>
  88e49c:	00c00744 	movi	r3,29
  88e4a0:	147ffe04 	addi	r17,r2,-8
  88e4a4:	1907c83a 	sub	r3,r3,r4
  88e4a8:	8460983a 	sll	r16,r16,r17
  88e4ac:	98c6d83a 	srl	r3,r19,r3
  88e4b0:	9c68983a 	sll	r20,r19,r17
  88e4b4:	1c20b03a 	or	r16,r3,r16
  88e4b8:	1080fcc4 	addi	r2,r2,1011
  88e4bc:	00a5c83a 	sub	r18,zero,r2
  88e4c0:	0027883a 	mov	r19,zero
  88e4c4:	0039883a 	mov	fp,zero
  88e4c8:	003f9006 	br	88e30c <__muldf3+0x7c>
  88e4cc:	3446b03a 	or	r3,r6,r17
  88e4d0:	1800261e 	bne	r3,zero,88e56c <__muldf3+0x2dc>
  88e4d4:	0023883a 	mov	r17,zero
  88e4d8:	0011883a 	mov	r8,zero
  88e4dc:	01400084 	movi	r5,2
  88e4e0:	003f9c06 	br	88e354 <__muldf3+0xc4>
  88e4e4:	3446b03a 	or	r3,r6,r17
  88e4e8:	18001c26 	beq	r3,zero,88e55c <__muldf3+0x2cc>
  88e4ec:	8800ce26 	beq	r17,zero,88e828 <__muldf3+0x598>
  88e4f0:	8809883a 	mov	r4,r17
  88e4f4:	d9800215 	stw	r6,8(sp)
  88e4f8:	da400115 	stw	r9,4(sp)
  88e4fc:	da800015 	stw	r10,0(sp)
  88e500:	088f4a80 	call	88f4a8 <__clzsi2>
  88e504:	d9800217 	ldw	r6,8(sp)
  88e508:	da400117 	ldw	r9,4(sp)
  88e50c:	da800017 	ldw	r10,0(sp)
  88e510:	113ffd44 	addi	r4,r2,-11
  88e514:	00c00704 	movi	r3,28
  88e518:	1900bf16 	blt	r3,r4,88e818 <__muldf3+0x588>
  88e51c:	00c00744 	movi	r3,29
  88e520:	123ffe04 	addi	r8,r2,-8
  88e524:	1907c83a 	sub	r3,r3,r4
  88e528:	8a22983a 	sll	r17,r17,r8
  88e52c:	30c6d83a 	srl	r3,r6,r3
  88e530:	3210983a 	sll	r8,r6,r8
  88e534:	1c62b03a 	or	r17,r3,r17
  88e538:	1080fcc4 	addi	r2,r2,1011
  88e53c:	0085c83a 	sub	r2,zero,r2
  88e540:	000b883a 	mov	r5,zero
  88e544:	003f8306 	br	88e354 <__muldf3+0xc4>
  88e548:	b02b883a 	mov	r21,r22
  88e54c:	0081ffc4 	movi	r2,2047
  88e550:	000b883a 	mov	r5,zero
  88e554:	0029883a 	mov	r20,zero
  88e558:	003fac06 	br	88e40c <__muldf3+0x17c>
  88e55c:	0023883a 	mov	r17,zero
  88e560:	0011883a 	mov	r8,zero
  88e564:	01400044 	movi	r5,1
  88e568:	003f7a06 	br	88e354 <__muldf3+0xc4>
  88e56c:	014000c4 	movi	r5,3
  88e570:	003f7806 	br	88e354 <__muldf3+0xc4>
  88e574:	04c00104 	movi	r19,4
  88e578:	0021883a 	mov	r16,zero
  88e57c:	0029883a 	mov	r20,zero
  88e580:	07000044 	movi	fp,1
  88e584:	003f6106 	br	88e30c <__muldf3+0x7c>
  88e588:	04c00304 	movi	r19,12
  88e58c:	070000c4 	movi	fp,3
  88e590:	003f5e06 	br	88e30c <__muldf3+0x7c>
  88e594:	01400434 	movhi	r5,16
  88e598:	002b883a 	mov	r21,zero
  88e59c:	297fffc4 	addi	r5,r5,-1
  88e5a0:	053fffc4 	movi	r20,-1
  88e5a4:	0081ffc4 	movi	r2,2047
  88e5a8:	003f9806 	br	88e40c <__muldf3+0x17c>
  88e5ac:	8023883a 	mov	r17,r16
  88e5b0:	a011883a 	mov	r8,r20
  88e5b4:	e00b883a 	mov	r5,fp
  88e5b8:	003f8a06 	br	88e3e4 <__muldf3+0x154>
  88e5bc:	8023883a 	mov	r17,r16
  88e5c0:	a011883a 	mov	r8,r20
  88e5c4:	482d883a 	mov	r22,r9
  88e5c8:	e00b883a 	mov	r5,fp
  88e5cc:	003f8506 	br	88e3e4 <__muldf3+0x154>
  88e5d0:	a00ad43a 	srli	r5,r20,16
  88e5d4:	401ad43a 	srli	r13,r8,16
  88e5d8:	a53fffcc 	andi	r20,r20,65535
  88e5dc:	423fffcc 	andi	r8,r8,65535
  88e5e0:	4519383a 	mul	r12,r8,r20
  88e5e4:	4147383a 	mul	r3,r8,r5
  88e5e8:	6d09383a 	mul	r4,r13,r20
  88e5ec:	600cd43a 	srli	r6,r12,16
  88e5f0:	2b5d383a 	mul	r14,r5,r13
  88e5f4:	20c9883a 	add	r4,r4,r3
  88e5f8:	310d883a 	add	r6,r6,r4
  88e5fc:	30c0022e 	bgeu	r6,r3,88e608 <__muldf3+0x378>
  88e600:	00c00074 	movhi	r3,1
  88e604:	70dd883a 	add	r14,r14,r3
  88e608:	8826d43a 	srli	r19,r17,16
  88e60c:	8bffffcc 	andi	r15,r17,65535
  88e610:	7d23383a 	mul	r17,r15,r20
  88e614:	7949383a 	mul	r4,r15,r5
  88e618:	9d29383a 	mul	r20,r19,r20
  88e61c:	8814d43a 	srli	r10,r17,16
  88e620:	3012943a 	slli	r9,r6,16
  88e624:	a129883a 	add	r20,r20,r4
  88e628:	633fffcc 	andi	r12,r12,65535
  88e62c:	5515883a 	add	r10,r10,r20
  88e630:	3006d43a 	srli	r3,r6,16
  88e634:	4b13883a 	add	r9,r9,r12
  88e638:	2ccb383a 	mul	r5,r5,r19
  88e63c:	5100022e 	bgeu	r10,r4,88e648 <__muldf3+0x3b8>
  88e640:	01000074 	movhi	r4,1
  88e644:	290b883a 	add	r5,r5,r4
  88e648:	802ad43a 	srli	r21,r16,16
  88e64c:	843fffcc 	andi	r16,r16,65535
  88e650:	440d383a 	mul	r6,r8,r16
  88e654:	4565383a 	mul	r18,r8,r21
  88e658:	8349383a 	mul	r4,r16,r13
  88e65c:	500e943a 	slli	r7,r10,16
  88e660:	3010d43a 	srli	r8,r6,16
  88e664:	5028d43a 	srli	r20,r10,16
  88e668:	2489883a 	add	r4,r4,r18
  88e66c:	8abfffcc 	andi	r10,r17,65535
  88e670:	3a95883a 	add	r10,r7,r10
  88e674:	4119883a 	add	r12,r8,r4
  88e678:	a169883a 	add	r20,r20,r5
  88e67c:	1a87883a 	add	r3,r3,r10
  88e680:	6d5b383a 	mul	r13,r13,r21
  88e684:	6480022e 	bgeu	r12,r18,88e690 <__muldf3+0x400>
  88e688:	01000074 	movhi	r4,1
  88e68c:	691b883a 	add	r13,r13,r4
  88e690:	7c25383a 	mul	r18,r15,r16
  88e694:	7d4b383a 	mul	r5,r15,r21
  88e698:	84cf383a 	mul	r7,r16,r19
  88e69c:	901ed43a 	srli	r15,r18,16
  88e6a0:	6008d43a 	srli	r4,r12,16
  88e6a4:	6010943a 	slli	r8,r12,16
  88e6a8:	394f883a 	add	r7,r7,r5
  88e6ac:	333fffcc 	andi	r12,r6,65535
  88e6b0:	79df883a 	add	r15,r15,r7
  88e6b4:	235b883a 	add	r13,r4,r13
  88e6b8:	9d63383a 	mul	r17,r19,r21
  88e6bc:	4309883a 	add	r4,r8,r12
  88e6c0:	7940022e 	bgeu	r15,r5,88e6cc <__muldf3+0x43c>
  88e6c4:	01400074 	movhi	r5,1
  88e6c8:	8963883a 	add	r17,r17,r5
  88e6cc:	780a943a 	slli	r5,r15,16
  88e6d0:	91bfffcc 	andi	r6,r18,65535
  88e6d4:	70c7883a 	add	r3,r14,r3
  88e6d8:	298d883a 	add	r6,r5,r6
  88e6dc:	1a8f803a 	cmpltu	r7,r3,r10
  88e6e0:	350b883a 	add	r5,r6,r20
  88e6e4:	20c7883a 	add	r3,r4,r3
  88e6e8:	3955883a 	add	r10,r7,r5
  88e6ec:	1909803a 	cmpltu	r4,r3,r4
  88e6f0:	6a91883a 	add	r8,r13,r10
  88e6f4:	780cd43a 	srli	r6,r15,16
  88e6f8:	2219883a 	add	r12,r4,r8
  88e6fc:	2d0b803a 	cmpltu	r5,r5,r20
  88e700:	51cf803a 	cmpltu	r7,r10,r7
  88e704:	29ceb03a 	or	r7,r5,r7
  88e708:	4351803a 	cmpltu	r8,r8,r13
  88e70c:	610b803a 	cmpltu	r5,r12,r4
  88e710:	4148b03a 	or	r4,r8,r5
  88e714:	398f883a 	add	r7,r7,r6
  88e718:	3909883a 	add	r4,r7,r4
  88e71c:	1810927a 	slli	r8,r3,9
  88e720:	2449883a 	add	r4,r4,r17
  88e724:	2008927a 	slli	r4,r4,9
  88e728:	6022d5fa 	srli	r17,r12,23
  88e72c:	1806d5fa 	srli	r3,r3,23
  88e730:	4252b03a 	or	r9,r8,r9
  88e734:	600a927a 	slli	r5,r12,9
  88e738:	4810c03a 	cmpne	r8,r9,zero
  88e73c:	2462b03a 	or	r17,r4,r17
  88e740:	40c6b03a 	or	r3,r8,r3
  88e744:	8900402c 	andhi	r4,r17,256
  88e748:	1950b03a 	or	r8,r3,r5
  88e74c:	20000726 	beq	r4,zero,88e76c <__muldf3+0x4dc>
  88e750:	4006d07a 	srli	r3,r8,1
  88e754:	880497fa 	slli	r2,r17,31
  88e758:	4200004c 	andi	r8,r8,1
  88e75c:	8822d07a 	srli	r17,r17,1
  88e760:	1a10b03a 	or	r8,r3,r8
  88e764:	1210b03a 	or	r8,r2,r8
  88e768:	5805883a 	mov	r2,r11
  88e76c:	1140ffc4 	addi	r5,r2,1023
  88e770:	0140440e 	bge	zero,r5,88e884 <__muldf3+0x5f4>
  88e774:	40c001cc 	andi	r3,r8,7
  88e778:	18000726 	beq	r3,zero,88e798 <__muldf3+0x508>
  88e77c:	40c003cc 	andi	r3,r8,15
  88e780:	01000104 	movi	r4,4
  88e784:	19000426 	beq	r3,r4,88e798 <__muldf3+0x508>
  88e788:	4107883a 	add	r3,r8,r4
  88e78c:	1a11803a 	cmpltu	r8,r3,r8
  88e790:	8a23883a 	add	r17,r17,r8
  88e794:	1811883a 	mov	r8,r3
  88e798:	88c0402c 	andhi	r3,r17,256
  88e79c:	18000426 	beq	r3,zero,88e7b0 <__muldf3+0x520>
  88e7a0:	11410004 	addi	r5,r2,1024
  88e7a4:	00bfc034 	movhi	r2,65280
  88e7a8:	10bfffc4 	addi	r2,r2,-1
  88e7ac:	88a2703a 	and	r17,r17,r2
  88e7b0:	0081ff84 	movi	r2,2046
  88e7b4:	117f6416 	blt	r2,r5,88e548 <__muldf3+0x2b8>
  88e7b8:	8828977a 	slli	r20,r17,29
  88e7bc:	4010d0fa 	srli	r8,r8,3
  88e7c0:	8822927a 	slli	r17,r17,9
  88e7c4:	2881ffcc 	andi	r2,r5,2047
  88e7c8:	a228b03a 	or	r20,r20,r8
  88e7cc:	880ad33a 	srli	r5,r17,12
  88e7d0:	b02b883a 	mov	r21,r22
  88e7d4:	003f0d06 	br	88e40c <__muldf3+0x17c>
  88e7d8:	8080022c 	andhi	r2,r16,8
  88e7dc:	10000926 	beq	r2,zero,88e804 <__muldf3+0x574>
  88e7e0:	8880022c 	andhi	r2,r17,8
  88e7e4:	1000071e 	bne	r2,zero,88e804 <__muldf3+0x574>
  88e7e8:	00800434 	movhi	r2,16
  88e7ec:	89400234 	orhi	r5,r17,8
  88e7f0:	10bfffc4 	addi	r2,r2,-1
  88e7f4:	b82b883a 	mov	r21,r23
  88e7f8:	288a703a 	and	r5,r5,r2
  88e7fc:	4029883a 	mov	r20,r8
  88e800:	003f6806 	br	88e5a4 <__muldf3+0x314>
  88e804:	00800434 	movhi	r2,16
  88e808:	81400234 	orhi	r5,r16,8
  88e80c:	10bfffc4 	addi	r2,r2,-1
  88e810:	288a703a 	and	r5,r5,r2
  88e814:	003f6306 	br	88e5a4 <__muldf3+0x314>
  88e818:	147ff604 	addi	r17,r2,-40
  88e81c:	3462983a 	sll	r17,r6,r17
  88e820:	0011883a 	mov	r8,zero
  88e824:	003f4406 	br	88e538 <__muldf3+0x2a8>
  88e828:	3009883a 	mov	r4,r6
  88e82c:	d9800215 	stw	r6,8(sp)
  88e830:	da400115 	stw	r9,4(sp)
  88e834:	da800015 	stw	r10,0(sp)
  88e838:	088f4a80 	call	88f4a8 <__clzsi2>
  88e83c:	10800804 	addi	r2,r2,32
  88e840:	da800017 	ldw	r10,0(sp)
  88e844:	da400117 	ldw	r9,4(sp)
  88e848:	d9800217 	ldw	r6,8(sp)
  88e84c:	003f3006 	br	88e510 <__muldf3+0x280>
  88e850:	143ff604 	addi	r16,r2,-40
  88e854:	9c20983a 	sll	r16,r19,r16
  88e858:	0029883a 	mov	r20,zero
  88e85c:	003f1606 	br	88e4b8 <__muldf3+0x228>
  88e860:	d9800215 	stw	r6,8(sp)
  88e864:	d9c00015 	stw	r7,0(sp)
  88e868:	da400115 	stw	r9,4(sp)
  88e86c:	088f4a80 	call	88f4a8 <__clzsi2>
  88e870:	10800804 	addi	r2,r2,32
  88e874:	da400117 	ldw	r9,4(sp)
  88e878:	d9c00017 	ldw	r7,0(sp)
  88e87c:	d9800217 	ldw	r6,8(sp)
  88e880:	003f0306 	br	88e490 <__muldf3+0x200>
  88e884:	00c00044 	movi	r3,1
  88e888:	1947c83a 	sub	r3,r3,r5
  88e88c:	00800e04 	movi	r2,56
  88e890:	10feda16 	blt	r2,r3,88e3fc <__muldf3+0x16c>
  88e894:	008007c4 	movi	r2,31
  88e898:	10c01b16 	blt	r2,r3,88e908 <__muldf3+0x678>
  88e89c:	00800804 	movi	r2,32
  88e8a0:	10c5c83a 	sub	r2,r2,r3
  88e8a4:	888a983a 	sll	r5,r17,r2
  88e8a8:	40c8d83a 	srl	r4,r8,r3
  88e8ac:	4084983a 	sll	r2,r8,r2
  88e8b0:	88e2d83a 	srl	r17,r17,r3
  88e8b4:	2906b03a 	or	r3,r5,r4
  88e8b8:	1004c03a 	cmpne	r2,r2,zero
  88e8bc:	1886b03a 	or	r3,r3,r2
  88e8c0:	188001cc 	andi	r2,r3,7
  88e8c4:	10000726 	beq	r2,zero,88e8e4 <__muldf3+0x654>
  88e8c8:	188003cc 	andi	r2,r3,15
  88e8cc:	01000104 	movi	r4,4
  88e8d0:	11000426 	beq	r2,r4,88e8e4 <__muldf3+0x654>
  88e8d4:	1805883a 	mov	r2,r3
  88e8d8:	10c00104 	addi	r3,r2,4
  88e8dc:	1885803a 	cmpltu	r2,r3,r2
  88e8e0:	88a3883a 	add	r17,r17,r2
  88e8e4:	8880202c 	andhi	r2,r17,128
  88e8e8:	10001c26 	beq	r2,zero,88e95c <__muldf3+0x6cc>
  88e8ec:	b02b883a 	mov	r21,r22
  88e8f0:	00800044 	movi	r2,1
  88e8f4:	000b883a 	mov	r5,zero
  88e8f8:	0029883a 	mov	r20,zero
  88e8fc:	003ec306 	br	88e40c <__muldf3+0x17c>
  88e900:	5805883a 	mov	r2,r11
  88e904:	003f9906 	br	88e76c <__muldf3+0x4dc>
  88e908:	00bff844 	movi	r2,-31
  88e90c:	1145c83a 	sub	r2,r2,r5
  88e910:	8888d83a 	srl	r4,r17,r2
  88e914:	00800804 	movi	r2,32
  88e918:	18801a26 	beq	r3,r2,88e984 <__muldf3+0x6f4>
  88e91c:	00801004 	movi	r2,64
  88e920:	10c5c83a 	sub	r2,r2,r3
  88e924:	8884983a 	sll	r2,r17,r2
  88e928:	1204b03a 	or	r2,r2,r8
  88e92c:	1004c03a 	cmpne	r2,r2,zero
  88e930:	2084b03a 	or	r2,r4,r2
  88e934:	144001cc 	andi	r17,r2,7
  88e938:	88000d1e 	bne	r17,zero,88e970 <__muldf3+0x6e0>
  88e93c:	000b883a 	mov	r5,zero
  88e940:	1028d0fa 	srli	r20,r2,3
  88e944:	b02b883a 	mov	r21,r22
  88e948:	0005883a 	mov	r2,zero
  88e94c:	a468b03a 	or	r20,r20,r17
  88e950:	003eae06 	br	88e40c <__muldf3+0x17c>
  88e954:	1007883a 	mov	r3,r2
  88e958:	0023883a 	mov	r17,zero
  88e95c:	880a927a 	slli	r5,r17,9
  88e960:	1805883a 	mov	r2,r3
  88e964:	8822977a 	slli	r17,r17,29
  88e968:	280ad33a 	srli	r5,r5,12
  88e96c:	003ff406 	br	88e940 <__muldf3+0x6b0>
  88e970:	10c003cc 	andi	r3,r2,15
  88e974:	01000104 	movi	r4,4
  88e978:	193ff626 	beq	r3,r4,88e954 <__muldf3+0x6c4>
  88e97c:	0023883a 	mov	r17,zero
  88e980:	003fd506 	br	88e8d8 <__muldf3+0x648>
  88e984:	0005883a 	mov	r2,zero
  88e988:	003fe706 	br	88e928 <__muldf3+0x698>
  88e98c:	00800434 	movhi	r2,16
  88e990:	89400234 	orhi	r5,r17,8
  88e994:	10bfffc4 	addi	r2,r2,-1
  88e998:	b02b883a 	mov	r21,r22
  88e99c:	288a703a 	and	r5,r5,r2
  88e9a0:	4029883a 	mov	r20,r8
  88e9a4:	003eff06 	br	88e5a4 <__muldf3+0x314>

0088e9a8 <__subdf3>:
  88e9a8:	02000434 	movhi	r8,16
  88e9ac:	423fffc4 	addi	r8,r8,-1
  88e9b0:	defffb04 	addi	sp,sp,-20
  88e9b4:	2a14703a 	and	r10,r5,r8
  88e9b8:	3812d53a 	srli	r9,r7,20
  88e9bc:	3a10703a 	and	r8,r7,r8
  88e9c0:	2006d77a 	srli	r3,r4,29
  88e9c4:	3004d77a 	srli	r2,r6,29
  88e9c8:	dc000015 	stw	r16,0(sp)
  88e9cc:	501490fa 	slli	r10,r10,3
  88e9d0:	2820d53a 	srli	r16,r5,20
  88e9d4:	401090fa 	slli	r8,r8,3
  88e9d8:	dc800215 	stw	r18,8(sp)
  88e9dc:	dc400115 	stw	r17,4(sp)
  88e9e0:	dfc00415 	stw	ra,16(sp)
  88e9e4:	202290fa 	slli	r17,r4,3
  88e9e8:	dcc00315 	stw	r19,12(sp)
  88e9ec:	4a41ffcc 	andi	r9,r9,2047
  88e9f0:	0101ffc4 	movi	r4,2047
  88e9f4:	2824d7fa 	srli	r18,r5,31
  88e9f8:	8401ffcc 	andi	r16,r16,2047
  88e9fc:	50c6b03a 	or	r3,r10,r3
  88ea00:	380ed7fa 	srli	r7,r7,31
  88ea04:	408ab03a 	or	r5,r8,r2
  88ea08:	300c90fa 	slli	r6,r6,3
  88ea0c:	49009626 	beq	r9,r4,88ec68 <__subdf3+0x2c0>
  88ea10:	39c0005c 	xori	r7,r7,1
  88ea14:	8245c83a 	sub	r2,r16,r9
  88ea18:	3c807426 	beq	r7,r18,88ebec <__subdf3+0x244>
  88ea1c:	0080af0e 	bge	zero,r2,88ecdc <__subdf3+0x334>
  88ea20:	48002a1e 	bne	r9,zero,88eacc <__subdf3+0x124>
  88ea24:	2988b03a 	or	r4,r5,r6
  88ea28:	20009a1e 	bne	r4,zero,88ec94 <__subdf3+0x2ec>
  88ea2c:	888001cc 	andi	r2,r17,7
  88ea30:	10000726 	beq	r2,zero,88ea50 <__subdf3+0xa8>
  88ea34:	888003cc 	andi	r2,r17,15
  88ea38:	01000104 	movi	r4,4
  88ea3c:	11000426 	beq	r2,r4,88ea50 <__subdf3+0xa8>
  88ea40:	890b883a 	add	r5,r17,r4
  88ea44:	2c63803a 	cmpltu	r17,r5,r17
  88ea48:	1c47883a 	add	r3,r3,r17
  88ea4c:	2823883a 	mov	r17,r5
  88ea50:	1880202c 	andhi	r2,r3,128
  88ea54:	10005926 	beq	r2,zero,88ebbc <__subdf3+0x214>
  88ea58:	84000044 	addi	r16,r16,1
  88ea5c:	0081ffc4 	movi	r2,2047
  88ea60:	8080be26 	beq	r16,r2,88ed5c <__subdf3+0x3b4>
  88ea64:	017fe034 	movhi	r5,65408
  88ea68:	297fffc4 	addi	r5,r5,-1
  88ea6c:	1946703a 	and	r3,r3,r5
  88ea70:	1804977a 	slli	r2,r3,29
  88ea74:	1806927a 	slli	r3,r3,9
  88ea78:	8822d0fa 	srli	r17,r17,3
  88ea7c:	8401ffcc 	andi	r16,r16,2047
  88ea80:	180ad33a 	srli	r5,r3,12
  88ea84:	9100004c 	andi	r4,r18,1
  88ea88:	1444b03a 	or	r2,r2,r17
  88ea8c:	80c1ffcc 	andi	r3,r16,2047
  88ea90:	1820953a 	slli	r16,r3,20
  88ea94:	20c03fcc 	andi	r3,r4,255
  88ea98:	180897fa 	slli	r4,r3,31
  88ea9c:	00c00434 	movhi	r3,16
  88eaa0:	18ffffc4 	addi	r3,r3,-1
  88eaa4:	28c6703a 	and	r3,r5,r3
  88eaa8:	1c06b03a 	or	r3,r3,r16
  88eaac:	1906b03a 	or	r3,r3,r4
  88eab0:	dfc00417 	ldw	ra,16(sp)
  88eab4:	dcc00317 	ldw	r19,12(sp)
  88eab8:	dc800217 	ldw	r18,8(sp)
  88eabc:	dc400117 	ldw	r17,4(sp)
  88eac0:	dc000017 	ldw	r16,0(sp)
  88eac4:	dec00504 	addi	sp,sp,20
  88eac8:	f800283a 	ret
  88eacc:	0101ffc4 	movi	r4,2047
  88ead0:	813fd626 	beq	r16,r4,88ea2c <__subdf3+0x84>
  88ead4:	29402034 	orhi	r5,r5,128
  88ead8:	01000e04 	movi	r4,56
  88eadc:	2080a316 	blt	r4,r2,88ed6c <__subdf3+0x3c4>
  88eae0:	010007c4 	movi	r4,31
  88eae4:	2080c616 	blt	r4,r2,88ee00 <__subdf3+0x458>
  88eae8:	01000804 	movi	r4,32
  88eaec:	2089c83a 	sub	r4,r4,r2
  88eaf0:	2910983a 	sll	r8,r5,r4
  88eaf4:	308ed83a 	srl	r7,r6,r2
  88eaf8:	3108983a 	sll	r4,r6,r4
  88eafc:	2884d83a 	srl	r2,r5,r2
  88eb00:	41ccb03a 	or	r6,r8,r7
  88eb04:	2008c03a 	cmpne	r4,r4,zero
  88eb08:	310cb03a 	or	r6,r6,r4
  88eb0c:	898dc83a 	sub	r6,r17,r6
  88eb10:	89a3803a 	cmpltu	r17,r17,r6
  88eb14:	1887c83a 	sub	r3,r3,r2
  88eb18:	1c47c83a 	sub	r3,r3,r17
  88eb1c:	3023883a 	mov	r17,r6
  88eb20:	1880202c 	andhi	r2,r3,128
  88eb24:	10002326 	beq	r2,zero,88ebb4 <__subdf3+0x20c>
  88eb28:	04c02034 	movhi	r19,128
  88eb2c:	9cffffc4 	addi	r19,r19,-1
  88eb30:	1ce6703a 	and	r19,r3,r19
  88eb34:	98007a26 	beq	r19,zero,88ed20 <__subdf3+0x378>
  88eb38:	9809883a 	mov	r4,r19
  88eb3c:	088f4a80 	call	88f4a8 <__clzsi2>
  88eb40:	113ffe04 	addi	r4,r2,-8
  88eb44:	00c007c4 	movi	r3,31
  88eb48:	19007b16 	blt	r3,r4,88ed38 <__subdf3+0x390>
  88eb4c:	00800804 	movi	r2,32
  88eb50:	1105c83a 	sub	r2,r2,r4
  88eb54:	8884d83a 	srl	r2,r17,r2
  88eb58:	9906983a 	sll	r3,r19,r4
  88eb5c:	8922983a 	sll	r17,r17,r4
  88eb60:	10c4b03a 	or	r2,r2,r3
  88eb64:	24007816 	blt	r4,r16,88ed48 <__subdf3+0x3a0>
  88eb68:	2421c83a 	sub	r16,r4,r16
  88eb6c:	80c00044 	addi	r3,r16,1
  88eb70:	010007c4 	movi	r4,31
  88eb74:	20c09516 	blt	r4,r3,88edcc <__subdf3+0x424>
  88eb78:	01400804 	movi	r5,32
  88eb7c:	28cbc83a 	sub	r5,r5,r3
  88eb80:	88c8d83a 	srl	r4,r17,r3
  88eb84:	8962983a 	sll	r17,r17,r5
  88eb88:	114a983a 	sll	r5,r2,r5
  88eb8c:	10c6d83a 	srl	r3,r2,r3
  88eb90:	8804c03a 	cmpne	r2,r17,zero
  88eb94:	290ab03a 	or	r5,r5,r4
  88eb98:	28a2b03a 	or	r17,r5,r2
  88eb9c:	0021883a 	mov	r16,zero
  88eba0:	003fa206 	br	88ea2c <__subdf3+0x84>
  88eba4:	2090b03a 	or	r8,r4,r2
  88eba8:	40018e26 	beq	r8,zero,88f1e4 <__subdf3+0x83c>
  88ebac:	1007883a 	mov	r3,r2
  88ebb0:	2023883a 	mov	r17,r4
  88ebb4:	888001cc 	andi	r2,r17,7
  88ebb8:	103f9e1e 	bne	r2,zero,88ea34 <__subdf3+0x8c>
  88ebbc:	1804977a 	slli	r2,r3,29
  88ebc0:	8822d0fa 	srli	r17,r17,3
  88ebc4:	1810d0fa 	srli	r8,r3,3
  88ebc8:	9100004c 	andi	r4,r18,1
  88ebcc:	1444b03a 	or	r2,r2,r17
  88ebd0:	00c1ffc4 	movi	r3,2047
  88ebd4:	80c02826 	beq	r16,r3,88ec78 <__subdf3+0x2d0>
  88ebd8:	01400434 	movhi	r5,16
  88ebdc:	297fffc4 	addi	r5,r5,-1
  88ebe0:	80e0703a 	and	r16,r16,r3
  88ebe4:	414a703a 	and	r5,r8,r5
  88ebe8:	003fa806 	br	88ea8c <__subdf3+0xe4>
  88ebec:	0080630e 	bge	zero,r2,88ed7c <__subdf3+0x3d4>
  88ebf0:	48003026 	beq	r9,zero,88ecb4 <__subdf3+0x30c>
  88ebf4:	0101ffc4 	movi	r4,2047
  88ebf8:	813f8c26 	beq	r16,r4,88ea2c <__subdf3+0x84>
  88ebfc:	29402034 	orhi	r5,r5,128
  88ec00:	01000e04 	movi	r4,56
  88ec04:	2080a90e 	bge	r4,r2,88eeac <__subdf3+0x504>
  88ec08:	298cb03a 	or	r6,r5,r6
  88ec0c:	3012c03a 	cmpne	r9,r6,zero
  88ec10:	0005883a 	mov	r2,zero
  88ec14:	4c53883a 	add	r9,r9,r17
  88ec18:	4c63803a 	cmpltu	r17,r9,r17
  88ec1c:	10c7883a 	add	r3,r2,r3
  88ec20:	88c7883a 	add	r3,r17,r3
  88ec24:	4823883a 	mov	r17,r9
  88ec28:	1880202c 	andhi	r2,r3,128
  88ec2c:	1000d026 	beq	r2,zero,88ef70 <__subdf3+0x5c8>
  88ec30:	84000044 	addi	r16,r16,1
  88ec34:	0081ffc4 	movi	r2,2047
  88ec38:	8080fe26 	beq	r16,r2,88f034 <__subdf3+0x68c>
  88ec3c:	00bfe034 	movhi	r2,65408
  88ec40:	10bfffc4 	addi	r2,r2,-1
  88ec44:	1886703a 	and	r3,r3,r2
  88ec48:	880ad07a 	srli	r5,r17,1
  88ec4c:	180497fa 	slli	r2,r3,31
  88ec50:	8900004c 	andi	r4,r17,1
  88ec54:	2922b03a 	or	r17,r5,r4
  88ec58:	1806d07a 	srli	r3,r3,1
  88ec5c:	1462b03a 	or	r17,r2,r17
  88ec60:	3825883a 	mov	r18,r7
  88ec64:	003f7106 	br	88ea2c <__subdf3+0x84>
  88ec68:	2984b03a 	or	r2,r5,r6
  88ec6c:	103f6826 	beq	r2,zero,88ea10 <__subdf3+0x68>
  88ec70:	39c03fcc 	andi	r7,r7,255
  88ec74:	003f6706 	br	88ea14 <__subdf3+0x6c>
  88ec78:	4086b03a 	or	r3,r8,r2
  88ec7c:	18015226 	beq	r3,zero,88f1c8 <__subdf3+0x820>
  88ec80:	00c00434 	movhi	r3,16
  88ec84:	41400234 	orhi	r5,r8,8
  88ec88:	18ffffc4 	addi	r3,r3,-1
  88ec8c:	28ca703a 	and	r5,r5,r3
  88ec90:	003f7e06 	br	88ea8c <__subdf3+0xe4>
  88ec94:	10bfffc4 	addi	r2,r2,-1
  88ec98:	1000491e 	bne	r2,zero,88edc0 <__subdf3+0x418>
  88ec9c:	898fc83a 	sub	r7,r17,r6
  88eca0:	89e3803a 	cmpltu	r17,r17,r7
  88eca4:	1947c83a 	sub	r3,r3,r5
  88eca8:	1c47c83a 	sub	r3,r3,r17
  88ecac:	3823883a 	mov	r17,r7
  88ecb0:	003f9b06 	br	88eb20 <__subdf3+0x178>
  88ecb4:	2988b03a 	or	r4,r5,r6
  88ecb8:	203f5c26 	beq	r4,zero,88ea2c <__subdf3+0x84>
  88ecbc:	10bfffc4 	addi	r2,r2,-1
  88ecc0:	1000931e 	bne	r2,zero,88ef10 <__subdf3+0x568>
  88ecc4:	898d883a 	add	r6,r17,r6
  88ecc8:	3463803a 	cmpltu	r17,r6,r17
  88eccc:	1947883a 	add	r3,r3,r5
  88ecd0:	88c7883a 	add	r3,r17,r3
  88ecd4:	3023883a 	mov	r17,r6
  88ecd8:	003fd306 	br	88ec28 <__subdf3+0x280>
  88ecdc:	1000541e 	bne	r2,zero,88ee30 <__subdf3+0x488>
  88ece0:	80800044 	addi	r2,r16,1
  88ece4:	1081ffcc 	andi	r2,r2,2047
  88ece8:	01000044 	movi	r4,1
  88ecec:	2080a20e 	bge	r4,r2,88ef78 <__subdf3+0x5d0>
  88ecf0:	8989c83a 	sub	r4,r17,r6
  88ecf4:	8905803a 	cmpltu	r2,r17,r4
  88ecf8:	1967c83a 	sub	r19,r3,r5
  88ecfc:	98a7c83a 	sub	r19,r19,r2
  88ed00:	9880202c 	andhi	r2,r19,128
  88ed04:	10006326 	beq	r2,zero,88ee94 <__subdf3+0x4ec>
  88ed08:	3463c83a 	sub	r17,r6,r17
  88ed0c:	28c7c83a 	sub	r3,r5,r3
  88ed10:	344d803a 	cmpltu	r6,r6,r17
  88ed14:	19a7c83a 	sub	r19,r3,r6
  88ed18:	3825883a 	mov	r18,r7
  88ed1c:	983f861e 	bne	r19,zero,88eb38 <__subdf3+0x190>
  88ed20:	8809883a 	mov	r4,r17
  88ed24:	088f4a80 	call	88f4a8 <__clzsi2>
  88ed28:	10800804 	addi	r2,r2,32
  88ed2c:	113ffe04 	addi	r4,r2,-8
  88ed30:	00c007c4 	movi	r3,31
  88ed34:	193f850e 	bge	r3,r4,88eb4c <__subdf3+0x1a4>
  88ed38:	10bff604 	addi	r2,r2,-40
  88ed3c:	8884983a 	sll	r2,r17,r2
  88ed40:	0023883a 	mov	r17,zero
  88ed44:	243f880e 	bge	r4,r16,88eb68 <__subdf3+0x1c0>
  88ed48:	00ffe034 	movhi	r3,65408
  88ed4c:	18ffffc4 	addi	r3,r3,-1
  88ed50:	8121c83a 	sub	r16,r16,r4
  88ed54:	10c6703a 	and	r3,r2,r3
  88ed58:	003f3406 	br	88ea2c <__subdf3+0x84>
  88ed5c:	9100004c 	andi	r4,r18,1
  88ed60:	000b883a 	mov	r5,zero
  88ed64:	0005883a 	mov	r2,zero
  88ed68:	003f4806 	br	88ea8c <__subdf3+0xe4>
  88ed6c:	298cb03a 	or	r6,r5,r6
  88ed70:	300cc03a 	cmpne	r6,r6,zero
  88ed74:	0005883a 	mov	r2,zero
  88ed78:	003f6406 	br	88eb0c <__subdf3+0x164>
  88ed7c:	10009a1e 	bne	r2,zero,88efe8 <__subdf3+0x640>
  88ed80:	82400044 	addi	r9,r16,1
  88ed84:	4881ffcc 	andi	r2,r9,2047
  88ed88:	02800044 	movi	r10,1
  88ed8c:	5080670e 	bge	r10,r2,88ef2c <__subdf3+0x584>
  88ed90:	0081ffc4 	movi	r2,2047
  88ed94:	4880af26 	beq	r9,r2,88f054 <__subdf3+0x6ac>
  88ed98:	898d883a 	add	r6,r17,r6
  88ed9c:	1945883a 	add	r2,r3,r5
  88eda0:	3447803a 	cmpltu	r3,r6,r17
  88eda4:	1887883a 	add	r3,r3,r2
  88eda8:	182297fa 	slli	r17,r3,31
  88edac:	300cd07a 	srli	r6,r6,1
  88edb0:	1806d07a 	srli	r3,r3,1
  88edb4:	4821883a 	mov	r16,r9
  88edb8:	89a2b03a 	or	r17,r17,r6
  88edbc:	003f1b06 	br	88ea2c <__subdf3+0x84>
  88edc0:	0101ffc4 	movi	r4,2047
  88edc4:	813f441e 	bne	r16,r4,88ead8 <__subdf3+0x130>
  88edc8:	003f1806 	br	88ea2c <__subdf3+0x84>
  88edcc:	843ff844 	addi	r16,r16,-31
  88edd0:	01400804 	movi	r5,32
  88edd4:	1408d83a 	srl	r4,r2,r16
  88edd8:	19405026 	beq	r3,r5,88ef1c <__subdf3+0x574>
  88eddc:	01401004 	movi	r5,64
  88ede0:	28c7c83a 	sub	r3,r5,r3
  88ede4:	10c4983a 	sll	r2,r2,r3
  88ede8:	88a2b03a 	or	r17,r17,r2
  88edec:	8822c03a 	cmpne	r17,r17,zero
  88edf0:	2462b03a 	or	r17,r4,r17
  88edf4:	0007883a 	mov	r3,zero
  88edf8:	0021883a 	mov	r16,zero
  88edfc:	003f6d06 	br	88ebb4 <__subdf3+0x20c>
  88ee00:	11fff804 	addi	r7,r2,-32
  88ee04:	01000804 	movi	r4,32
  88ee08:	29ced83a 	srl	r7,r5,r7
  88ee0c:	11004526 	beq	r2,r4,88ef24 <__subdf3+0x57c>
  88ee10:	01001004 	movi	r4,64
  88ee14:	2089c83a 	sub	r4,r4,r2
  88ee18:	2904983a 	sll	r2,r5,r4
  88ee1c:	118cb03a 	or	r6,r2,r6
  88ee20:	300cc03a 	cmpne	r6,r6,zero
  88ee24:	398cb03a 	or	r6,r7,r6
  88ee28:	0005883a 	mov	r2,zero
  88ee2c:	003f3706 	br	88eb0c <__subdf3+0x164>
  88ee30:	80002a26 	beq	r16,zero,88eedc <__subdf3+0x534>
  88ee34:	0101ffc4 	movi	r4,2047
  88ee38:	49006626 	beq	r9,r4,88efd4 <__subdf3+0x62c>
  88ee3c:	0085c83a 	sub	r2,zero,r2
  88ee40:	18c02034 	orhi	r3,r3,128
  88ee44:	01000e04 	movi	r4,56
  88ee48:	20807e16 	blt	r4,r2,88f044 <__subdf3+0x69c>
  88ee4c:	010007c4 	movi	r4,31
  88ee50:	2080e716 	blt	r4,r2,88f1f0 <__subdf3+0x848>
  88ee54:	01000804 	movi	r4,32
  88ee58:	2089c83a 	sub	r4,r4,r2
  88ee5c:	1914983a 	sll	r10,r3,r4
  88ee60:	8890d83a 	srl	r8,r17,r2
  88ee64:	8908983a 	sll	r4,r17,r4
  88ee68:	1884d83a 	srl	r2,r3,r2
  88ee6c:	5222b03a 	or	r17,r10,r8
  88ee70:	2006c03a 	cmpne	r3,r4,zero
  88ee74:	88e2b03a 	or	r17,r17,r3
  88ee78:	3463c83a 	sub	r17,r6,r17
  88ee7c:	2885c83a 	sub	r2,r5,r2
  88ee80:	344d803a 	cmpltu	r6,r6,r17
  88ee84:	1187c83a 	sub	r3,r2,r6
  88ee88:	4821883a 	mov	r16,r9
  88ee8c:	3825883a 	mov	r18,r7
  88ee90:	003f2306 	br	88eb20 <__subdf3+0x178>
  88ee94:	24d0b03a 	or	r8,r4,r19
  88ee98:	40001b1e 	bne	r8,zero,88ef08 <__subdf3+0x560>
  88ee9c:	0005883a 	mov	r2,zero
  88eea0:	0009883a 	mov	r4,zero
  88eea4:	0021883a 	mov	r16,zero
  88eea8:	003f4906 	br	88ebd0 <__subdf3+0x228>
  88eeac:	010007c4 	movi	r4,31
  88eeb0:	20803a16 	blt	r4,r2,88ef9c <__subdf3+0x5f4>
  88eeb4:	01000804 	movi	r4,32
  88eeb8:	2089c83a 	sub	r4,r4,r2
  88eebc:	2912983a 	sll	r9,r5,r4
  88eec0:	3090d83a 	srl	r8,r6,r2
  88eec4:	3108983a 	sll	r4,r6,r4
  88eec8:	2884d83a 	srl	r2,r5,r2
  88eecc:	4a12b03a 	or	r9,r9,r8
  88eed0:	2008c03a 	cmpne	r4,r4,zero
  88eed4:	4912b03a 	or	r9,r9,r4
  88eed8:	003f4e06 	br	88ec14 <__subdf3+0x26c>
  88eedc:	1c48b03a 	or	r4,r3,r17
  88eee0:	20003c26 	beq	r4,zero,88efd4 <__subdf3+0x62c>
  88eee4:	0084303a 	nor	r2,zero,r2
  88eee8:	1000381e 	bne	r2,zero,88efcc <__subdf3+0x624>
  88eeec:	3463c83a 	sub	r17,r6,r17
  88eef0:	28c5c83a 	sub	r2,r5,r3
  88eef4:	344d803a 	cmpltu	r6,r6,r17
  88eef8:	1187c83a 	sub	r3,r2,r6
  88eefc:	4821883a 	mov	r16,r9
  88ef00:	3825883a 	mov	r18,r7
  88ef04:	003f0606 	br	88eb20 <__subdf3+0x178>
  88ef08:	2023883a 	mov	r17,r4
  88ef0c:	003f0906 	br	88eb34 <__subdf3+0x18c>
  88ef10:	0101ffc4 	movi	r4,2047
  88ef14:	813f3a1e 	bne	r16,r4,88ec00 <__subdf3+0x258>
  88ef18:	003ec406 	br	88ea2c <__subdf3+0x84>
  88ef1c:	0005883a 	mov	r2,zero
  88ef20:	003fb106 	br	88ede8 <__subdf3+0x440>
  88ef24:	0005883a 	mov	r2,zero
  88ef28:	003fbc06 	br	88ee1c <__subdf3+0x474>
  88ef2c:	1c44b03a 	or	r2,r3,r17
  88ef30:	80008e1e 	bne	r16,zero,88f16c <__subdf3+0x7c4>
  88ef34:	1000c826 	beq	r2,zero,88f258 <__subdf3+0x8b0>
  88ef38:	2984b03a 	or	r2,r5,r6
  88ef3c:	103ebb26 	beq	r2,zero,88ea2c <__subdf3+0x84>
  88ef40:	8989883a 	add	r4,r17,r6
  88ef44:	1945883a 	add	r2,r3,r5
  88ef48:	2447803a 	cmpltu	r3,r4,r17
  88ef4c:	1887883a 	add	r3,r3,r2
  88ef50:	1880202c 	andhi	r2,r3,128
  88ef54:	2023883a 	mov	r17,r4
  88ef58:	103f1626 	beq	r2,zero,88ebb4 <__subdf3+0x20c>
  88ef5c:	00bfe034 	movhi	r2,65408
  88ef60:	10bfffc4 	addi	r2,r2,-1
  88ef64:	5021883a 	mov	r16,r10
  88ef68:	1886703a 	and	r3,r3,r2
  88ef6c:	003eaf06 	br	88ea2c <__subdf3+0x84>
  88ef70:	3825883a 	mov	r18,r7
  88ef74:	003f0f06 	br	88ebb4 <__subdf3+0x20c>
  88ef78:	1c44b03a 	or	r2,r3,r17
  88ef7c:	8000251e 	bne	r16,zero,88f014 <__subdf3+0x66c>
  88ef80:	1000661e 	bne	r2,zero,88f11c <__subdf3+0x774>
  88ef84:	2990b03a 	or	r8,r5,r6
  88ef88:	40009626 	beq	r8,zero,88f1e4 <__subdf3+0x83c>
  88ef8c:	2807883a 	mov	r3,r5
  88ef90:	3023883a 	mov	r17,r6
  88ef94:	3825883a 	mov	r18,r7
  88ef98:	003ea406 	br	88ea2c <__subdf3+0x84>
  88ef9c:	127ff804 	addi	r9,r2,-32
  88efa0:	01000804 	movi	r4,32
  88efa4:	2a52d83a 	srl	r9,r5,r9
  88efa8:	11008c26 	beq	r2,r4,88f1dc <__subdf3+0x834>
  88efac:	01001004 	movi	r4,64
  88efb0:	2085c83a 	sub	r2,r4,r2
  88efb4:	2884983a 	sll	r2,r5,r2
  88efb8:	118cb03a 	or	r6,r2,r6
  88efbc:	300cc03a 	cmpne	r6,r6,zero
  88efc0:	4992b03a 	or	r9,r9,r6
  88efc4:	0005883a 	mov	r2,zero
  88efc8:	003f1206 	br	88ec14 <__subdf3+0x26c>
  88efcc:	0101ffc4 	movi	r4,2047
  88efd0:	493f9c1e 	bne	r9,r4,88ee44 <__subdf3+0x49c>
  88efd4:	2807883a 	mov	r3,r5
  88efd8:	3023883a 	mov	r17,r6
  88efdc:	4821883a 	mov	r16,r9
  88efe0:	3825883a 	mov	r18,r7
  88efe4:	003e9106 	br	88ea2c <__subdf3+0x84>
  88efe8:	80001f1e 	bne	r16,zero,88f068 <__subdf3+0x6c0>
  88efec:	1c48b03a 	or	r4,r3,r17
  88eff0:	20005a26 	beq	r4,zero,88f15c <__subdf3+0x7b4>
  88eff4:	0084303a 	nor	r2,zero,r2
  88eff8:	1000561e 	bne	r2,zero,88f154 <__subdf3+0x7ac>
  88effc:	89a3883a 	add	r17,r17,r6
  88f000:	1945883a 	add	r2,r3,r5
  88f004:	898d803a 	cmpltu	r6,r17,r6
  88f008:	3087883a 	add	r3,r6,r2
  88f00c:	4821883a 	mov	r16,r9
  88f010:	003f0506 	br	88ec28 <__subdf3+0x280>
  88f014:	10002b1e 	bne	r2,zero,88f0c4 <__subdf3+0x71c>
  88f018:	2984b03a 	or	r2,r5,r6
  88f01c:	10008026 	beq	r2,zero,88f220 <__subdf3+0x878>
  88f020:	2807883a 	mov	r3,r5
  88f024:	3023883a 	mov	r17,r6
  88f028:	3825883a 	mov	r18,r7
  88f02c:	0401ffc4 	movi	r16,2047
  88f030:	003e7e06 	br	88ea2c <__subdf3+0x84>
  88f034:	3809883a 	mov	r4,r7
  88f038:	0011883a 	mov	r8,zero
  88f03c:	0005883a 	mov	r2,zero
  88f040:	003ee306 	br	88ebd0 <__subdf3+0x228>
  88f044:	1c62b03a 	or	r17,r3,r17
  88f048:	8822c03a 	cmpne	r17,r17,zero
  88f04c:	0005883a 	mov	r2,zero
  88f050:	003f8906 	br	88ee78 <__subdf3+0x4d0>
  88f054:	3809883a 	mov	r4,r7
  88f058:	4821883a 	mov	r16,r9
  88f05c:	0011883a 	mov	r8,zero
  88f060:	0005883a 	mov	r2,zero
  88f064:	003eda06 	br	88ebd0 <__subdf3+0x228>
  88f068:	0101ffc4 	movi	r4,2047
  88f06c:	49003b26 	beq	r9,r4,88f15c <__subdf3+0x7b4>
  88f070:	0085c83a 	sub	r2,zero,r2
  88f074:	18c02034 	orhi	r3,r3,128
  88f078:	01000e04 	movi	r4,56
  88f07c:	20806e16 	blt	r4,r2,88f238 <__subdf3+0x890>
  88f080:	010007c4 	movi	r4,31
  88f084:	20807716 	blt	r4,r2,88f264 <__subdf3+0x8bc>
  88f088:	01000804 	movi	r4,32
  88f08c:	2089c83a 	sub	r4,r4,r2
  88f090:	1914983a 	sll	r10,r3,r4
  88f094:	8890d83a 	srl	r8,r17,r2
  88f098:	8908983a 	sll	r4,r17,r4
  88f09c:	1884d83a 	srl	r2,r3,r2
  88f0a0:	5222b03a 	or	r17,r10,r8
  88f0a4:	2006c03a 	cmpne	r3,r4,zero
  88f0a8:	88e2b03a 	or	r17,r17,r3
  88f0ac:	89a3883a 	add	r17,r17,r6
  88f0b0:	1145883a 	add	r2,r2,r5
  88f0b4:	898d803a 	cmpltu	r6,r17,r6
  88f0b8:	3087883a 	add	r3,r6,r2
  88f0bc:	4821883a 	mov	r16,r9
  88f0c0:	003ed906 	br	88ec28 <__subdf3+0x280>
  88f0c4:	2984b03a 	or	r2,r5,r6
  88f0c8:	10004226 	beq	r2,zero,88f1d4 <__subdf3+0x82c>
  88f0cc:	1808d0fa 	srli	r4,r3,3
  88f0d0:	8822d0fa 	srli	r17,r17,3
  88f0d4:	1806977a 	slli	r3,r3,29
  88f0d8:	2080022c 	andhi	r2,r4,8
  88f0dc:	1c62b03a 	or	r17,r3,r17
  88f0e0:	10000826 	beq	r2,zero,88f104 <__subdf3+0x75c>
  88f0e4:	2812d0fa 	srli	r9,r5,3
  88f0e8:	4880022c 	andhi	r2,r9,8
  88f0ec:	1000051e 	bne	r2,zero,88f104 <__subdf3+0x75c>
  88f0f0:	300cd0fa 	srli	r6,r6,3
  88f0f4:	2804977a 	slli	r2,r5,29
  88f0f8:	4809883a 	mov	r4,r9
  88f0fc:	3825883a 	mov	r18,r7
  88f100:	11a2b03a 	or	r17,r2,r6
  88f104:	8806d77a 	srli	r3,r17,29
  88f108:	200890fa 	slli	r4,r4,3
  88f10c:	882290fa 	slli	r17,r17,3
  88f110:	0401ffc4 	movi	r16,2047
  88f114:	1906b03a 	or	r3,r3,r4
  88f118:	003e4406 	br	88ea2c <__subdf3+0x84>
  88f11c:	2984b03a 	or	r2,r5,r6
  88f120:	103e4226 	beq	r2,zero,88ea2c <__subdf3+0x84>
  88f124:	8989c83a 	sub	r4,r17,r6
  88f128:	8911803a 	cmpltu	r8,r17,r4
  88f12c:	1945c83a 	sub	r2,r3,r5
  88f130:	1205c83a 	sub	r2,r2,r8
  88f134:	1200202c 	andhi	r8,r2,128
  88f138:	403e9a26 	beq	r8,zero,88eba4 <__subdf3+0x1fc>
  88f13c:	3463c83a 	sub	r17,r6,r17
  88f140:	28c5c83a 	sub	r2,r5,r3
  88f144:	344d803a 	cmpltu	r6,r6,r17
  88f148:	1187c83a 	sub	r3,r2,r6
  88f14c:	3825883a 	mov	r18,r7
  88f150:	003e3606 	br	88ea2c <__subdf3+0x84>
  88f154:	0101ffc4 	movi	r4,2047
  88f158:	493fc71e 	bne	r9,r4,88f078 <__subdf3+0x6d0>
  88f15c:	2807883a 	mov	r3,r5
  88f160:	3023883a 	mov	r17,r6
  88f164:	4821883a 	mov	r16,r9
  88f168:	003e3006 	br	88ea2c <__subdf3+0x84>
  88f16c:	10003626 	beq	r2,zero,88f248 <__subdf3+0x8a0>
  88f170:	2984b03a 	or	r2,r5,r6
  88f174:	10001726 	beq	r2,zero,88f1d4 <__subdf3+0x82c>
  88f178:	1808d0fa 	srli	r4,r3,3
  88f17c:	8822d0fa 	srli	r17,r17,3
  88f180:	1806977a 	slli	r3,r3,29
  88f184:	2080022c 	andhi	r2,r4,8
  88f188:	1c62b03a 	or	r17,r3,r17
  88f18c:	10000726 	beq	r2,zero,88f1ac <__subdf3+0x804>
  88f190:	2812d0fa 	srli	r9,r5,3
  88f194:	4880022c 	andhi	r2,r9,8
  88f198:	1000041e 	bne	r2,zero,88f1ac <__subdf3+0x804>
  88f19c:	300cd0fa 	srli	r6,r6,3
  88f1a0:	2804977a 	slli	r2,r5,29
  88f1a4:	4809883a 	mov	r4,r9
  88f1a8:	11a2b03a 	or	r17,r2,r6
  88f1ac:	8806d77a 	srli	r3,r17,29
  88f1b0:	200890fa 	slli	r4,r4,3
  88f1b4:	882290fa 	slli	r17,r17,3
  88f1b8:	3825883a 	mov	r18,r7
  88f1bc:	1906b03a 	or	r3,r3,r4
  88f1c0:	0401ffc4 	movi	r16,2047
  88f1c4:	003e1906 	br	88ea2c <__subdf3+0x84>
  88f1c8:	000b883a 	mov	r5,zero
  88f1cc:	0005883a 	mov	r2,zero
  88f1d0:	003e2e06 	br	88ea8c <__subdf3+0xe4>
  88f1d4:	0401ffc4 	movi	r16,2047
  88f1d8:	003e1406 	br	88ea2c <__subdf3+0x84>
  88f1dc:	0005883a 	mov	r2,zero
  88f1e0:	003f7506 	br	88efb8 <__subdf3+0x610>
  88f1e4:	0005883a 	mov	r2,zero
  88f1e8:	0009883a 	mov	r4,zero
  88f1ec:	003e7806 	br	88ebd0 <__subdf3+0x228>
  88f1f0:	123ff804 	addi	r8,r2,-32
  88f1f4:	01000804 	movi	r4,32
  88f1f8:	1a10d83a 	srl	r8,r3,r8
  88f1fc:	11002526 	beq	r2,r4,88f294 <__subdf3+0x8ec>
  88f200:	01001004 	movi	r4,64
  88f204:	2085c83a 	sub	r2,r4,r2
  88f208:	1884983a 	sll	r2,r3,r2
  88f20c:	1444b03a 	or	r2,r2,r17
  88f210:	1004c03a 	cmpne	r2,r2,zero
  88f214:	40a2b03a 	or	r17,r8,r2
  88f218:	0005883a 	mov	r2,zero
  88f21c:	003f1606 	br	88ee78 <__subdf3+0x4d0>
  88f220:	02000434 	movhi	r8,16
  88f224:	0009883a 	mov	r4,zero
  88f228:	423fffc4 	addi	r8,r8,-1
  88f22c:	00bfffc4 	movi	r2,-1
  88f230:	0401ffc4 	movi	r16,2047
  88f234:	003e6606 	br	88ebd0 <__subdf3+0x228>
  88f238:	1c62b03a 	or	r17,r3,r17
  88f23c:	8822c03a 	cmpne	r17,r17,zero
  88f240:	0005883a 	mov	r2,zero
  88f244:	003f9906 	br	88f0ac <__subdf3+0x704>
  88f248:	2807883a 	mov	r3,r5
  88f24c:	3023883a 	mov	r17,r6
  88f250:	0401ffc4 	movi	r16,2047
  88f254:	003df506 	br	88ea2c <__subdf3+0x84>
  88f258:	2807883a 	mov	r3,r5
  88f25c:	3023883a 	mov	r17,r6
  88f260:	003df206 	br	88ea2c <__subdf3+0x84>
  88f264:	123ff804 	addi	r8,r2,-32
  88f268:	01000804 	movi	r4,32
  88f26c:	1a10d83a 	srl	r8,r3,r8
  88f270:	11000a26 	beq	r2,r4,88f29c <__subdf3+0x8f4>
  88f274:	01001004 	movi	r4,64
  88f278:	2085c83a 	sub	r2,r4,r2
  88f27c:	1884983a 	sll	r2,r3,r2
  88f280:	1444b03a 	or	r2,r2,r17
  88f284:	1004c03a 	cmpne	r2,r2,zero
  88f288:	40a2b03a 	or	r17,r8,r2
  88f28c:	0005883a 	mov	r2,zero
  88f290:	003f8606 	br	88f0ac <__subdf3+0x704>
  88f294:	0005883a 	mov	r2,zero
  88f298:	003fdc06 	br	88f20c <__subdf3+0x864>
  88f29c:	0005883a 	mov	r2,zero
  88f2a0:	003ff706 	br	88f280 <__subdf3+0x8d8>

0088f2a4 <__fixdfsi>:
  88f2a4:	280cd53a 	srli	r6,r5,20
  88f2a8:	00c00434 	movhi	r3,16
  88f2ac:	18ffffc4 	addi	r3,r3,-1
  88f2b0:	3181ffcc 	andi	r6,r6,2047
  88f2b4:	01c0ff84 	movi	r7,1022
  88f2b8:	28c6703a 	and	r3,r5,r3
  88f2bc:	280ad7fa 	srli	r5,r5,31
  88f2c0:	3980120e 	bge	r7,r6,88f30c <__fixdfsi+0x68>
  88f2c4:	00810744 	movi	r2,1053
  88f2c8:	11800c16 	blt	r2,r6,88f2fc <__fixdfsi+0x58>
  88f2cc:	00810cc4 	movi	r2,1075
  88f2d0:	1185c83a 	sub	r2,r2,r6
  88f2d4:	01c007c4 	movi	r7,31
  88f2d8:	18c00434 	orhi	r3,r3,16
  88f2dc:	38800d16 	blt	r7,r2,88f314 <__fixdfsi+0x70>
  88f2e0:	31befb44 	addi	r6,r6,-1043
  88f2e4:	2084d83a 	srl	r2,r4,r2
  88f2e8:	1986983a 	sll	r3,r3,r6
  88f2ec:	1884b03a 	or	r2,r3,r2
  88f2f0:	28000726 	beq	r5,zero,88f310 <__fixdfsi+0x6c>
  88f2f4:	0085c83a 	sub	r2,zero,r2
  88f2f8:	f800283a 	ret
  88f2fc:	00a00034 	movhi	r2,32768
  88f300:	10bfffc4 	addi	r2,r2,-1
  88f304:	2885883a 	add	r2,r5,r2
  88f308:	f800283a 	ret
  88f30c:	0005883a 	mov	r2,zero
  88f310:	f800283a 	ret
  88f314:	008104c4 	movi	r2,1043
  88f318:	1185c83a 	sub	r2,r2,r6
  88f31c:	1884d83a 	srl	r2,r3,r2
  88f320:	003ff306 	br	88f2f0 <__fixdfsi+0x4c>

0088f324 <__floatsidf>:
  88f324:	defffd04 	addi	sp,sp,-12
  88f328:	dfc00215 	stw	ra,8(sp)
  88f32c:	dc400115 	stw	r17,4(sp)
  88f330:	dc000015 	stw	r16,0(sp)
  88f334:	20002b26 	beq	r4,zero,88f3e4 <__floatsidf+0xc0>
  88f338:	2023883a 	mov	r17,r4
  88f33c:	2020d7fa 	srli	r16,r4,31
  88f340:	20002d16 	blt	r4,zero,88f3f8 <__floatsidf+0xd4>
  88f344:	8809883a 	mov	r4,r17
  88f348:	088f4a80 	call	88f4a8 <__clzsi2>
  88f34c:	01410784 	movi	r5,1054
  88f350:	288bc83a 	sub	r5,r5,r2
  88f354:	01010cc4 	movi	r4,1075
  88f358:	2149c83a 	sub	r4,r4,r5
  88f35c:	00c007c4 	movi	r3,31
  88f360:	1900160e 	bge	r3,r4,88f3bc <__floatsidf+0x98>
  88f364:	00c104c4 	movi	r3,1043
  88f368:	1947c83a 	sub	r3,r3,r5
  88f36c:	88c6983a 	sll	r3,r17,r3
  88f370:	00800434 	movhi	r2,16
  88f374:	10bfffc4 	addi	r2,r2,-1
  88f378:	1886703a 	and	r3,r3,r2
  88f37c:	2941ffcc 	andi	r5,r5,2047
  88f380:	800d883a 	mov	r6,r16
  88f384:	0005883a 	mov	r2,zero
  88f388:	280a953a 	slli	r5,r5,20
  88f38c:	31803fcc 	andi	r6,r6,255
  88f390:	01000434 	movhi	r4,16
  88f394:	300c97fa 	slli	r6,r6,31
  88f398:	213fffc4 	addi	r4,r4,-1
  88f39c:	1906703a 	and	r3,r3,r4
  88f3a0:	1946b03a 	or	r3,r3,r5
  88f3a4:	1986b03a 	or	r3,r3,r6
  88f3a8:	dfc00217 	ldw	ra,8(sp)
  88f3ac:	dc400117 	ldw	r17,4(sp)
  88f3b0:	dc000017 	ldw	r16,0(sp)
  88f3b4:	dec00304 	addi	sp,sp,12
  88f3b8:	f800283a 	ret
  88f3bc:	00c002c4 	movi	r3,11
  88f3c0:	1887c83a 	sub	r3,r3,r2
  88f3c4:	88c6d83a 	srl	r3,r17,r3
  88f3c8:	8904983a 	sll	r2,r17,r4
  88f3cc:	01000434 	movhi	r4,16
  88f3d0:	213fffc4 	addi	r4,r4,-1
  88f3d4:	2941ffcc 	andi	r5,r5,2047
  88f3d8:	1906703a 	and	r3,r3,r4
  88f3dc:	800d883a 	mov	r6,r16
  88f3e0:	003fe906 	br	88f388 <__floatsidf+0x64>
  88f3e4:	000d883a 	mov	r6,zero
  88f3e8:	000b883a 	mov	r5,zero
  88f3ec:	0007883a 	mov	r3,zero
  88f3f0:	0005883a 	mov	r2,zero
  88f3f4:	003fe406 	br	88f388 <__floatsidf+0x64>
  88f3f8:	0123c83a 	sub	r17,zero,r4
  88f3fc:	003fd106 	br	88f344 <__floatsidf+0x20>

0088f400 <__floatunsidf>:
  88f400:	defffe04 	addi	sp,sp,-8
  88f404:	dc000015 	stw	r16,0(sp)
  88f408:	dfc00115 	stw	ra,4(sp)
  88f40c:	2021883a 	mov	r16,r4
  88f410:	20002226 	beq	r4,zero,88f49c <__floatunsidf+0x9c>
  88f414:	088f4a80 	call	88f4a8 <__clzsi2>
  88f418:	01010784 	movi	r4,1054
  88f41c:	2089c83a 	sub	r4,r4,r2
  88f420:	01810cc4 	movi	r6,1075
  88f424:	310dc83a 	sub	r6,r6,r4
  88f428:	00c007c4 	movi	r3,31
  88f42c:	1980120e 	bge	r3,r6,88f478 <__floatunsidf+0x78>
  88f430:	00c104c4 	movi	r3,1043
  88f434:	1907c83a 	sub	r3,r3,r4
  88f438:	80ca983a 	sll	r5,r16,r3
  88f43c:	00800434 	movhi	r2,16
  88f440:	10bfffc4 	addi	r2,r2,-1
  88f444:	2101ffcc 	andi	r4,r4,2047
  88f448:	0021883a 	mov	r16,zero
  88f44c:	288a703a 	and	r5,r5,r2
  88f450:	2008953a 	slli	r4,r4,20
  88f454:	00c00434 	movhi	r3,16
  88f458:	18ffffc4 	addi	r3,r3,-1
  88f45c:	28c6703a 	and	r3,r5,r3
  88f460:	8005883a 	mov	r2,r16
  88f464:	1906b03a 	or	r3,r3,r4
  88f468:	dfc00117 	ldw	ra,4(sp)
  88f46c:	dc000017 	ldw	r16,0(sp)
  88f470:	dec00204 	addi	sp,sp,8
  88f474:	f800283a 	ret
  88f478:	00c002c4 	movi	r3,11
  88f47c:	188bc83a 	sub	r5,r3,r2
  88f480:	814ad83a 	srl	r5,r16,r5
  88f484:	00c00434 	movhi	r3,16
  88f488:	18ffffc4 	addi	r3,r3,-1
  88f48c:	81a0983a 	sll	r16,r16,r6
  88f490:	2101ffcc 	andi	r4,r4,2047
  88f494:	28ca703a 	and	r5,r5,r3
  88f498:	003fed06 	br	88f450 <__floatunsidf+0x50>
  88f49c:	0009883a 	mov	r4,zero
  88f4a0:	000b883a 	mov	r5,zero
  88f4a4:	003fea06 	br	88f450 <__floatunsidf+0x50>

0088f4a8 <__clzsi2>:
  88f4a8:	00bfffd4 	movui	r2,65535
  88f4ac:	11000536 	bltu	r2,r4,88f4c4 <__clzsi2+0x1c>
  88f4b0:	00803fc4 	movi	r2,255
  88f4b4:	11000f36 	bltu	r2,r4,88f4f4 <__clzsi2+0x4c>
  88f4b8:	00800804 	movi	r2,32
  88f4bc:	0007883a 	mov	r3,zero
  88f4c0:	00000506 	br	88f4d8 <__clzsi2+0x30>
  88f4c4:	00804034 	movhi	r2,256
  88f4c8:	10bfffc4 	addi	r2,r2,-1
  88f4cc:	11000c2e 	bgeu	r2,r4,88f500 <__clzsi2+0x58>
  88f4d0:	00800204 	movi	r2,8
  88f4d4:	00c00604 	movi	r3,24
  88f4d8:	20c8d83a 	srl	r4,r4,r3
  88f4dc:	00c02274 	movhi	r3,137
  88f4e0:	18c9a804 	addi	r3,r3,9888
  88f4e4:	1909883a 	add	r4,r3,r4
  88f4e8:	20c00003 	ldbu	r3,0(r4)
  88f4ec:	10c5c83a 	sub	r2,r2,r3
  88f4f0:	f800283a 	ret
  88f4f4:	00800604 	movi	r2,24
  88f4f8:	00c00204 	movi	r3,8
  88f4fc:	003ff606 	br	88f4d8 <__clzsi2+0x30>
  88f500:	00800404 	movi	r2,16
  88f504:	1007883a 	mov	r3,r2
  88f508:	003ff306 	br	88f4d8 <__clzsi2+0x30>

0088f50c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88f50c:	defffe04 	addi	sp,sp,-8
  88f510:	dfc00115 	stw	ra,4(sp)
  88f514:	df000015 	stw	fp,0(sp)
  88f518:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88f51c:	d0a01517 	ldw	r2,-32684(gp)
  88f520:	10000326 	beq	r2,zero,88f530 <alt_get_errno+0x24>
  88f524:	d0a01517 	ldw	r2,-32684(gp)
  88f528:	103ee83a 	callr	r2
  88f52c:	00000106 	br	88f534 <alt_get_errno+0x28>
  88f530:	d0a6f104 	addi	r2,gp,-25660
}
  88f534:	e037883a 	mov	sp,fp
  88f538:	dfc00117 	ldw	ra,4(sp)
  88f53c:	df000017 	ldw	fp,0(sp)
  88f540:	dec00204 	addi	sp,sp,8
  88f544:	f800283a 	ret

0088f548 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  88f548:	defffb04 	addi	sp,sp,-20
  88f54c:	dfc00415 	stw	ra,16(sp)
  88f550:	df000315 	stw	fp,12(sp)
  88f554:	df000304 	addi	fp,sp,12
  88f558:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  88f55c:	e0bfff17 	ldw	r2,-4(fp)
  88f560:	10000616 	blt	r2,zero,88f57c <close+0x34>
  88f564:	e0bfff17 	ldw	r2,-4(fp)
  88f568:	10c00324 	muli	r3,r2,12
  88f56c:	00802274 	movhi	r2,137
  88f570:	108c9104 	addi	r2,r2,12868
  88f574:	1885883a 	add	r2,r3,r2
  88f578:	00000106 	br	88f580 <close+0x38>
  88f57c:	0005883a 	mov	r2,zero
  88f580:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  88f584:	e0bffd17 	ldw	r2,-12(fp)
  88f588:	10001926 	beq	r2,zero,88f5f0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  88f58c:	e0bffd17 	ldw	r2,-12(fp)
  88f590:	10800017 	ldw	r2,0(r2)
  88f594:	10800417 	ldw	r2,16(r2)
  88f598:	10000626 	beq	r2,zero,88f5b4 <close+0x6c>
  88f59c:	e0bffd17 	ldw	r2,-12(fp)
  88f5a0:	10800017 	ldw	r2,0(r2)
  88f5a4:	10800417 	ldw	r2,16(r2)
  88f5a8:	e13ffd17 	ldw	r4,-12(fp)
  88f5ac:	103ee83a 	callr	r2
  88f5b0:	00000106 	br	88f5b8 <close+0x70>
  88f5b4:	0005883a 	mov	r2,zero
  88f5b8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  88f5bc:	e13fff17 	ldw	r4,-4(fp)
  88f5c0:	088fdc80 	call	88fdc8 <alt_release_fd>
    if (rval < 0)
  88f5c4:	e0bffe17 	ldw	r2,-8(fp)
  88f5c8:	1000070e 	bge	r2,zero,88f5e8 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  88f5cc:	088f50c0 	call	88f50c <alt_get_errno>
  88f5d0:	1007883a 	mov	r3,r2
  88f5d4:	e0bffe17 	ldw	r2,-8(fp)
  88f5d8:	0085c83a 	sub	r2,zero,r2
  88f5dc:	18800015 	stw	r2,0(r3)
      return -1;
  88f5e0:	00bfffc4 	movi	r2,-1
  88f5e4:	00000706 	br	88f604 <close+0xbc>
    }
    return 0;
  88f5e8:	0005883a 	mov	r2,zero
  88f5ec:	00000506 	br	88f604 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  88f5f0:	088f50c0 	call	88f50c <alt_get_errno>
  88f5f4:	1007883a 	mov	r3,r2
  88f5f8:	00801444 	movi	r2,81
  88f5fc:	18800015 	stw	r2,0(r3)
    return -1;
  88f600:	00bfffc4 	movi	r2,-1
  }
}
  88f604:	e037883a 	mov	sp,fp
  88f608:	dfc00117 	ldw	ra,4(sp)
  88f60c:	df000017 	ldw	fp,0(sp)
  88f610:	dec00204 	addi	sp,sp,8
  88f614:	f800283a 	ret

0088f618 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  88f618:	defffc04 	addi	sp,sp,-16
  88f61c:	df000315 	stw	fp,12(sp)
  88f620:	df000304 	addi	fp,sp,12
  88f624:	e13ffd15 	stw	r4,-12(fp)
  88f628:	e17ffe15 	stw	r5,-8(fp)
  88f62c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  88f630:	e0bfff17 	ldw	r2,-4(fp)
}
  88f634:	e037883a 	mov	sp,fp
  88f638:	df000017 	ldw	fp,0(sp)
  88f63c:	dec00104 	addi	sp,sp,4
  88f640:	f800283a 	ret

0088f644 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  88f644:	defffd04 	addi	sp,sp,-12
  88f648:	df000215 	stw	fp,8(sp)
  88f64c:	df000204 	addi	fp,sp,8
  88f650:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  88f654:	0001883a 	nop
  88f658:	e0bfff17 	ldw	r2,-4(fp)
  88f65c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  88f660:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  88f664:	10000226 	beq	r2,zero,88f670 <_exit+0x2c>
    ALT_SIM_FAIL();
  88f668:	002af070 	cmpltui	zero,zero,43969
  88f66c:	00000106 	br	88f674 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  88f670:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  88f674:	003fff06 	br	88f674 <_exit+0x30>

0088f678 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88f678:	defffe04 	addi	sp,sp,-8
  88f67c:	dfc00115 	stw	ra,4(sp)
  88f680:	df000015 	stw	fp,0(sp)
  88f684:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88f688:	d0a01517 	ldw	r2,-32684(gp)
  88f68c:	10000326 	beq	r2,zero,88f69c <alt_get_errno+0x24>
  88f690:	d0a01517 	ldw	r2,-32684(gp)
  88f694:	103ee83a 	callr	r2
  88f698:	00000106 	br	88f6a0 <alt_get_errno+0x28>
  88f69c:	d0a6f104 	addi	r2,gp,-25660
}
  88f6a0:	e037883a 	mov	sp,fp
  88f6a4:	dfc00117 	ldw	ra,4(sp)
  88f6a8:	df000017 	ldw	fp,0(sp)
  88f6ac:	dec00204 	addi	sp,sp,8
  88f6b0:	f800283a 	ret

0088f6b4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  88f6b4:	defffb04 	addi	sp,sp,-20
  88f6b8:	dfc00415 	stw	ra,16(sp)
  88f6bc:	df000315 	stw	fp,12(sp)
  88f6c0:	df000304 	addi	fp,sp,12
  88f6c4:	e13ffe15 	stw	r4,-8(fp)
  88f6c8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  88f6cc:	e0bffe17 	ldw	r2,-8(fp)
  88f6d0:	10000616 	blt	r2,zero,88f6ec <fstat+0x38>
  88f6d4:	e0bffe17 	ldw	r2,-8(fp)
  88f6d8:	10c00324 	muli	r3,r2,12
  88f6dc:	00802274 	movhi	r2,137
  88f6e0:	108c9104 	addi	r2,r2,12868
  88f6e4:	1885883a 	add	r2,r3,r2
  88f6e8:	00000106 	br	88f6f0 <fstat+0x3c>
  88f6ec:	0005883a 	mov	r2,zero
  88f6f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  88f6f4:	e0bffd17 	ldw	r2,-12(fp)
  88f6f8:	10001026 	beq	r2,zero,88f73c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  88f6fc:	e0bffd17 	ldw	r2,-12(fp)
  88f700:	10800017 	ldw	r2,0(r2)
  88f704:	10800817 	ldw	r2,32(r2)
  88f708:	10000726 	beq	r2,zero,88f728 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  88f70c:	e0bffd17 	ldw	r2,-12(fp)
  88f710:	10800017 	ldw	r2,0(r2)
  88f714:	10800817 	ldw	r2,32(r2)
  88f718:	e17fff17 	ldw	r5,-4(fp)
  88f71c:	e13ffd17 	ldw	r4,-12(fp)
  88f720:	103ee83a 	callr	r2
  88f724:	00000a06 	br	88f750 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  88f728:	e0bfff17 	ldw	r2,-4(fp)
  88f72c:	00c80004 	movi	r3,8192
  88f730:	10c00115 	stw	r3,4(r2)
      return 0;
  88f734:	0005883a 	mov	r2,zero
  88f738:	00000506 	br	88f750 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  88f73c:	088f6780 	call	88f678 <alt_get_errno>
  88f740:	1007883a 	mov	r3,r2
  88f744:	00801444 	movi	r2,81
  88f748:	18800015 	stw	r2,0(r3)
    return -1;
  88f74c:	00bfffc4 	movi	r2,-1
  }
}
  88f750:	e037883a 	mov	sp,fp
  88f754:	dfc00117 	ldw	ra,4(sp)
  88f758:	df000017 	ldw	fp,0(sp)
  88f75c:	dec00204 	addi	sp,sp,8
  88f760:	f800283a 	ret

0088f764 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  88f764:	deffff04 	addi	sp,sp,-4
  88f768:	df000015 	stw	fp,0(sp)
  88f76c:	d839883a 	mov	fp,sp
  return 0;
  88f770:	0005883a 	mov	r2,zero
}
  88f774:	e037883a 	mov	sp,fp
  88f778:	df000017 	ldw	fp,0(sp)
  88f77c:	dec00104 	addi	sp,sp,4
  88f780:	f800283a 	ret

0088f784 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88f784:	defffe04 	addi	sp,sp,-8
  88f788:	dfc00115 	stw	ra,4(sp)
  88f78c:	df000015 	stw	fp,0(sp)
  88f790:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88f794:	d0a01517 	ldw	r2,-32684(gp)
  88f798:	10000326 	beq	r2,zero,88f7a8 <alt_get_errno+0x24>
  88f79c:	d0a01517 	ldw	r2,-32684(gp)
  88f7a0:	103ee83a 	callr	r2
  88f7a4:	00000106 	br	88f7ac <alt_get_errno+0x28>
  88f7a8:	d0a6f104 	addi	r2,gp,-25660
}
  88f7ac:	e037883a 	mov	sp,fp
  88f7b0:	dfc00117 	ldw	ra,4(sp)
  88f7b4:	df000017 	ldw	fp,0(sp)
  88f7b8:	dec00204 	addi	sp,sp,8
  88f7bc:	f800283a 	ret

0088f7c0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  88f7c0:	deffed04 	addi	sp,sp,-76
  88f7c4:	dfc01215 	stw	ra,72(sp)
  88f7c8:	df001115 	stw	fp,68(sp)
  88f7cc:	df001104 	addi	fp,sp,68
  88f7d0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  88f7d4:	e0bfff17 	ldw	r2,-4(fp)
  88f7d8:	10000616 	blt	r2,zero,88f7f4 <isatty+0x34>
  88f7dc:	e0bfff17 	ldw	r2,-4(fp)
  88f7e0:	10c00324 	muli	r3,r2,12
  88f7e4:	00802274 	movhi	r2,137
  88f7e8:	108c9104 	addi	r2,r2,12868
  88f7ec:	1885883a 	add	r2,r3,r2
  88f7f0:	00000106 	br	88f7f8 <isatty+0x38>
  88f7f4:	0005883a 	mov	r2,zero
  88f7f8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  88f7fc:	e0bfef17 	ldw	r2,-68(fp)
  88f800:	10000e26 	beq	r2,zero,88f83c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  88f804:	e0bfef17 	ldw	r2,-68(fp)
  88f808:	10800017 	ldw	r2,0(r2)
  88f80c:	10800817 	ldw	r2,32(r2)
  88f810:	1000021e 	bne	r2,zero,88f81c <isatty+0x5c>
    {
      return 1;
  88f814:	00800044 	movi	r2,1
  88f818:	00000d06 	br	88f850 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  88f81c:	e0bff004 	addi	r2,fp,-64
  88f820:	100b883a 	mov	r5,r2
  88f824:	e13fff17 	ldw	r4,-4(fp)
  88f828:	088f6b40 	call	88f6b4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  88f82c:	e0bff117 	ldw	r2,-60(fp)
  88f830:	10880020 	cmpeqi	r2,r2,8192
  88f834:	10803fcc 	andi	r2,r2,255
  88f838:	00000506 	br	88f850 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  88f83c:	088f7840 	call	88f784 <alt_get_errno>
  88f840:	1007883a 	mov	r3,r2
  88f844:	00801444 	movi	r2,81
  88f848:	18800015 	stw	r2,0(r3)
    return 0;
  88f84c:	0005883a 	mov	r2,zero
  }
}
  88f850:	e037883a 	mov	sp,fp
  88f854:	dfc00117 	ldw	ra,4(sp)
  88f858:	df000017 	ldw	fp,0(sp)
  88f85c:	dec00204 	addi	sp,sp,8
  88f860:	f800283a 	ret

0088f864 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88f864:	defffe04 	addi	sp,sp,-8
  88f868:	dfc00115 	stw	ra,4(sp)
  88f86c:	df000015 	stw	fp,0(sp)
  88f870:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88f874:	d0a01517 	ldw	r2,-32684(gp)
  88f878:	10000326 	beq	r2,zero,88f888 <alt_get_errno+0x24>
  88f87c:	d0a01517 	ldw	r2,-32684(gp)
  88f880:	103ee83a 	callr	r2
  88f884:	00000106 	br	88f88c <alt_get_errno+0x28>
  88f888:	d0a6f104 	addi	r2,gp,-25660
}
  88f88c:	e037883a 	mov	sp,fp
  88f890:	dfc00117 	ldw	ra,4(sp)
  88f894:	df000017 	ldw	fp,0(sp)
  88f898:	dec00204 	addi	sp,sp,8
  88f89c:	f800283a 	ret

0088f8a0 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  88f8a0:	defffb04 	addi	sp,sp,-20
  88f8a4:	dfc00415 	stw	ra,16(sp)
  88f8a8:	df000315 	stw	fp,12(sp)
  88f8ac:	df000304 	addi	fp,sp,12
  88f8b0:	e13ffe15 	stw	r4,-8(fp)
  88f8b4:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
  88f8b8:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
  88f8bc:	e0bffe17 	ldw	r2,-8(fp)
  88f8c0:	00802f16 	blt	zero,r2,88f980 <kill+0xe0>
  {
    switch (sig)
  88f8c4:	e0bfff17 	ldw	r2,-4(fp)
  88f8c8:	10800828 	cmpgeui	r2,r2,32
  88f8cc:	1000291e 	bne	r2,zero,88f974 <kill+0xd4>
  88f8d0:	e0bfff17 	ldw	r2,-4(fp)
  88f8d4:	100690ba 	slli	r3,r2,2
  88f8d8:	00802274 	movhi	r2,137
  88f8dc:	10be3b04 	addi	r2,r2,-1812
  88f8e0:	1885883a 	add	r2,r3,r2
  88f8e4:	10800017 	ldw	r2,0(r2)
  88f8e8:	1000683a 	jmp	r2
  88f8ec:	0088f994 	movui	r2,9190
  88f8f0:	0088f974 	movhi	r2,9189
  88f8f4:	0088f974 	movhi	r2,9189
  88f8f8:	0088f96c 	andhi	r2,zero,9189
  88f8fc:	0088f96c 	andhi	r2,zero,9189
  88f900:	0088f96c 	andhi	r2,zero,9189
  88f904:	0088f96c 	andhi	r2,zero,9189
  88f908:	0088f974 	movhi	r2,9189
  88f90c:	0088f96c 	andhi	r2,zero,9189
  88f910:	0088f96c 	andhi	r2,zero,9189
  88f914:	0088f96c 	andhi	r2,zero,9189
  88f918:	0088f96c 	andhi	r2,zero,9189
  88f91c:	0088f96c 	andhi	r2,zero,9189
  88f920:	0088f96c 	andhi	r2,zero,9189
  88f924:	0088f96c 	andhi	r2,zero,9189
  88f928:	0088f96c 	andhi	r2,zero,9189
  88f92c:	0088f994 	movui	r2,9190
  88f930:	0088f974 	movhi	r2,9189
  88f934:	0088f974 	movhi	r2,9189
  88f938:	0088f974 	movhi	r2,9189
  88f93c:	0088f994 	movui	r2,9190
  88f940:	0088f974 	movhi	r2,9189
  88f944:	0088f974 	movhi	r2,9189
  88f948:	0088f96c 	andhi	r2,zero,9189
  88f94c:	0088f96c 	andhi	r2,zero,9189
  88f950:	0088f96c 	andhi	r2,zero,9189
  88f954:	0088f96c 	andhi	r2,zero,9189
  88f958:	0088f96c 	andhi	r2,zero,9189
  88f95c:	0088f974 	movhi	r2,9189
  88f960:	0088f974 	movhi	r2,9189
  88f964:	0088f96c 	andhi	r2,zero,9189
  88f968:	0088f96c 	andhi	r2,zero,9189
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  88f96c:	0009883a 	mov	r4,zero
  88f970:	088f6440 	call	88f644 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  88f974:	00800584 	movi	r2,22
  88f978:	e0bffd15 	stw	r2,-12(fp)
  88f97c:	00000606 	br	88f998 <kill+0xf8>
    }
  }

  else if (pid > 0)
  88f980:	e0bffe17 	ldw	r2,-8(fp)
  88f984:	0080040e 	bge	zero,r2,88f998 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  88f988:	008000c4 	movi	r2,3
  88f98c:	e0bffd15 	stw	r2,-12(fp)
  88f990:	00000106 	br	88f998 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
  88f994:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
  88f998:	e0bffd17 	ldw	r2,-12(fp)
  88f99c:	10000626 	beq	r2,zero,88f9b8 <kill+0x118>
  {
    ALT_ERRNO = status;
  88f9a0:	088f8640 	call	88f864 <alt_get_errno>
  88f9a4:	1007883a 	mov	r3,r2
  88f9a8:	e0bffd17 	ldw	r2,-12(fp)
  88f9ac:	18800015 	stw	r2,0(r3)
    return -1;
  88f9b0:	00bfffc4 	movi	r2,-1
  88f9b4:	00000106 	br	88f9bc <kill+0x11c>
  }

  return 0;
  88f9b8:	0005883a 	mov	r2,zero
}
  88f9bc:	e037883a 	mov	sp,fp
  88f9c0:	dfc00117 	ldw	ra,4(sp)
  88f9c4:	df000017 	ldw	fp,0(sp)
  88f9c8:	dec00204 	addi	sp,sp,8
  88f9cc:	f800283a 	ret

0088f9d0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  88f9d0:	defffc04 	addi	sp,sp,-16
  88f9d4:	df000315 	stw	fp,12(sp)
  88f9d8:	df000304 	addi	fp,sp,12
  88f9dc:	e13ffd15 	stw	r4,-12(fp)
  88f9e0:	e17ffe15 	stw	r5,-8(fp)
  88f9e4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  88f9e8:	e0fffe17 	ldw	r3,-8(fp)
  88f9ec:	e0bffd17 	ldw	r2,-12(fp)
  88f9f0:	18800c26 	beq	r3,r2,88fa24 <alt_load_section+0x54>
  {
    while( to != end )
  88f9f4:	00000806 	br	88fa18 <alt_load_section+0x48>
    {
      *to++ = *from++;
  88f9f8:	e0bffe17 	ldw	r2,-8(fp)
  88f9fc:	10c00104 	addi	r3,r2,4
  88fa00:	e0fffe15 	stw	r3,-8(fp)
  88fa04:	e0fffd17 	ldw	r3,-12(fp)
  88fa08:	19000104 	addi	r4,r3,4
  88fa0c:	e13ffd15 	stw	r4,-12(fp)
  88fa10:	18c00017 	ldw	r3,0(r3)
  88fa14:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  88fa18:	e0fffe17 	ldw	r3,-8(fp)
  88fa1c:	e0bfff17 	ldw	r2,-4(fp)
  88fa20:	18bff51e 	bne	r3,r2,88f9f8 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
  88fa24:	0001883a 	nop
  88fa28:	e037883a 	mov	sp,fp
  88fa2c:	df000017 	ldw	fp,0(sp)
  88fa30:	dec00104 	addi	sp,sp,4
  88fa34:	f800283a 	ret

0088fa38 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  88fa38:	defffe04 	addi	sp,sp,-8
  88fa3c:	dfc00115 	stw	ra,4(sp)
  88fa40:	df000015 	stw	fp,0(sp)
  88fa44:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  88fa48:	01802274 	movhi	r6,137
  88fa4c:	31912f04 	addi	r6,r6,17596
  88fa50:	01402274 	movhi	r5,137
  88fa54:	294a5e04 	addi	r5,r5,10616
  88fa58:	01002274 	movhi	r4,137
  88fa5c:	21112f04 	addi	r4,r4,17596
  88fa60:	088f9d00 	call	88f9d0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  88fa64:	01802234 	movhi	r6,136
  88fa68:	31809204 	addi	r6,r6,584
  88fa6c:	01402234 	movhi	r5,136
  88fa70:	29400804 	addi	r5,r5,32
  88fa74:	01002234 	movhi	r4,136
  88fa78:	21000804 	addi	r4,r4,32
  88fa7c:	088f9d00 	call	88f9d0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  88fa80:	01802274 	movhi	r6,137
  88fa84:	318a5e04 	addi	r6,r6,10616
  88fa88:	01402274 	movhi	r5,137
  88fa8c:	29487404 	addi	r5,r5,8656
  88fa90:	01002274 	movhi	r4,137
  88fa94:	21087404 	addi	r4,r4,8656
  88fa98:	088f9d00 	call	88f9d0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  88fa9c:	08911c80 	call	8911c8 <alt_dcache_flush_all>
  alt_icache_flush_all();
  88faa0:	08913b00 	call	8913b0 <alt_icache_flush_all>
}
  88faa4:	0001883a 	nop
  88faa8:	e037883a 	mov	sp,fp
  88faac:	dfc00117 	ldw	ra,4(sp)
  88fab0:	df000017 	ldw	fp,0(sp)
  88fab4:	dec00204 	addi	sp,sp,8
  88fab8:	f800283a 	ret

0088fabc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88fabc:	defffe04 	addi	sp,sp,-8
  88fac0:	dfc00115 	stw	ra,4(sp)
  88fac4:	df000015 	stw	fp,0(sp)
  88fac8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88facc:	d0a01517 	ldw	r2,-32684(gp)
  88fad0:	10000326 	beq	r2,zero,88fae0 <alt_get_errno+0x24>
  88fad4:	d0a01517 	ldw	r2,-32684(gp)
  88fad8:	103ee83a 	callr	r2
  88fadc:	00000106 	br	88fae4 <alt_get_errno+0x28>
  88fae0:	d0a6f104 	addi	r2,gp,-25660
}
  88fae4:	e037883a 	mov	sp,fp
  88fae8:	dfc00117 	ldw	ra,4(sp)
  88faec:	df000017 	ldw	fp,0(sp)
  88faf0:	dec00204 	addi	sp,sp,8
  88faf4:	f800283a 	ret

0088faf8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  88faf8:	defff904 	addi	sp,sp,-28
  88fafc:	dfc00615 	stw	ra,24(sp)
  88fb00:	df000515 	stw	fp,20(sp)
  88fb04:	df000504 	addi	fp,sp,20
  88fb08:	e13ffd15 	stw	r4,-12(fp)
  88fb0c:	e17ffe15 	stw	r5,-8(fp)
  88fb10:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  88fb14:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  88fb18:	e0bffd17 	ldw	r2,-12(fp)
  88fb1c:	10000616 	blt	r2,zero,88fb38 <lseek+0x40>
  88fb20:	e0bffd17 	ldw	r2,-12(fp)
  88fb24:	10c00324 	muli	r3,r2,12
  88fb28:	00802274 	movhi	r2,137
  88fb2c:	108c9104 	addi	r2,r2,12868
  88fb30:	1885883a 	add	r2,r3,r2
  88fb34:	00000106 	br	88fb3c <lseek+0x44>
  88fb38:	0005883a 	mov	r2,zero
  88fb3c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  88fb40:	e0bffc17 	ldw	r2,-16(fp)
  88fb44:	10001026 	beq	r2,zero,88fb88 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  88fb48:	e0bffc17 	ldw	r2,-16(fp)
  88fb4c:	10800017 	ldw	r2,0(r2)
  88fb50:	10800717 	ldw	r2,28(r2)
  88fb54:	10000926 	beq	r2,zero,88fb7c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  88fb58:	e0bffc17 	ldw	r2,-16(fp)
  88fb5c:	10800017 	ldw	r2,0(r2)
  88fb60:	10800717 	ldw	r2,28(r2)
  88fb64:	e1bfff17 	ldw	r6,-4(fp)
  88fb68:	e17ffe17 	ldw	r5,-8(fp)
  88fb6c:	e13ffc17 	ldw	r4,-16(fp)
  88fb70:	103ee83a 	callr	r2
  88fb74:	e0bffb15 	stw	r2,-20(fp)
  88fb78:	00000506 	br	88fb90 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  88fb7c:	00bfde84 	movi	r2,-134
  88fb80:	e0bffb15 	stw	r2,-20(fp)
  88fb84:	00000206 	br	88fb90 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  88fb88:	00bfebc4 	movi	r2,-81
  88fb8c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  88fb90:	e0bffb17 	ldw	r2,-20(fp)
  88fb94:	1000070e 	bge	r2,zero,88fbb4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  88fb98:	088fabc0 	call	88fabc <alt_get_errno>
  88fb9c:	1007883a 	mov	r3,r2
  88fba0:	e0bffb17 	ldw	r2,-20(fp)
  88fba4:	0085c83a 	sub	r2,zero,r2
  88fba8:	18800015 	stw	r2,0(r3)
    rc = -1;
  88fbac:	00bfffc4 	movi	r2,-1
  88fbb0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  88fbb4:	e0bffb17 	ldw	r2,-20(fp)
}
  88fbb8:	e037883a 	mov	sp,fp
  88fbbc:	dfc00117 	ldw	ra,4(sp)
  88fbc0:	df000017 	ldw	fp,0(sp)
  88fbc4:	dec00204 	addi	sp,sp,8
  88fbc8:	f800283a 	ret

0088fbcc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  88fbcc:	defffd04 	addi	sp,sp,-12
  88fbd0:	dfc00215 	stw	ra,8(sp)
  88fbd4:	df000115 	stw	fp,4(sp)
  88fbd8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  88fbdc:	0009883a 	mov	r4,zero
  88fbe0:	08900440 	call	890044 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  88fbe4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  88fbe8:	089007c0 	call	89007c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  88fbec:	01802274 	movhi	r6,137
  88fbf0:	3189eb04 	addi	r6,r6,10156
  88fbf4:	01402274 	movhi	r5,137
  88fbf8:	2949eb04 	addi	r5,r5,10156
  88fbfc:	01002274 	movhi	r4,137
  88fc00:	2109eb04 	addi	r4,r4,10156
  88fc04:	08914a80 	call	8914a8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  88fc08:	08912f00 	call	8912f0 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  88fc0c:	01002274 	movhi	r4,137
  88fc10:	2104d404 	addi	r4,r4,4944
  88fc14:	0891e280 	call	891e28 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  88fc18:	d0a6f517 	ldw	r2,-25644(gp)
  88fc1c:	d0e6f617 	ldw	r3,-25640(gp)
  88fc20:	d126f717 	ldw	r4,-25636(gp)
  88fc24:	200d883a 	mov	r6,r4
  88fc28:	180b883a 	mov	r5,r3
  88fc2c:	1009883a 	mov	r4,r2
  88fc30:	08802940 	call	880294 <main>
  88fc34:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  88fc38:	01000044 	movi	r4,1
  88fc3c:	088f5480 	call	88f548 <close>
  exit (result);
  88fc40:	e13fff17 	ldw	r4,-4(fp)
  88fc44:	0891e3c0 	call	891e3c <exit>

0088fc48 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  88fc48:	defffe04 	addi	sp,sp,-8
  88fc4c:	df000115 	stw	fp,4(sp)
  88fc50:	df000104 	addi	fp,sp,4
  88fc54:	e13fff15 	stw	r4,-4(fp)
}
  88fc58:	0001883a 	nop
  88fc5c:	e037883a 	mov	sp,fp
  88fc60:	df000017 	ldw	fp,0(sp)
  88fc64:	dec00104 	addi	sp,sp,4
  88fc68:	f800283a 	ret

0088fc6c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  88fc6c:	defffe04 	addi	sp,sp,-8
  88fc70:	df000115 	stw	fp,4(sp)
  88fc74:	df000104 	addi	fp,sp,4
  88fc78:	e13fff15 	stw	r4,-4(fp)
}
  88fc7c:	0001883a 	nop
  88fc80:	e037883a 	mov	sp,fp
  88fc84:	df000017 	ldw	fp,0(sp)
  88fc88:	dec00104 	addi	sp,sp,4
  88fc8c:	f800283a 	ret

0088fc90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88fc90:	defffe04 	addi	sp,sp,-8
  88fc94:	dfc00115 	stw	ra,4(sp)
  88fc98:	df000015 	stw	fp,0(sp)
  88fc9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88fca0:	d0a01517 	ldw	r2,-32684(gp)
  88fca4:	10000326 	beq	r2,zero,88fcb4 <alt_get_errno+0x24>
  88fca8:	d0a01517 	ldw	r2,-32684(gp)
  88fcac:	103ee83a 	callr	r2
  88fcb0:	00000106 	br	88fcb8 <alt_get_errno+0x28>
  88fcb4:	d0a6f104 	addi	r2,gp,-25660
}
  88fcb8:	e037883a 	mov	sp,fp
  88fcbc:	dfc00117 	ldw	ra,4(sp)
  88fcc0:	df000017 	ldw	fp,0(sp)
  88fcc4:	dec00204 	addi	sp,sp,8
  88fcc8:	f800283a 	ret

0088fccc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  88fccc:	defff904 	addi	sp,sp,-28
  88fcd0:	dfc00615 	stw	ra,24(sp)
  88fcd4:	df000515 	stw	fp,20(sp)
  88fcd8:	df000504 	addi	fp,sp,20
  88fcdc:	e13ffd15 	stw	r4,-12(fp)
  88fce0:	e17ffe15 	stw	r5,-8(fp)
  88fce4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  88fce8:	e0bffd17 	ldw	r2,-12(fp)
  88fcec:	10000616 	blt	r2,zero,88fd08 <read+0x3c>
  88fcf0:	e0bffd17 	ldw	r2,-12(fp)
  88fcf4:	10c00324 	muli	r3,r2,12
  88fcf8:	00802274 	movhi	r2,137
  88fcfc:	108c9104 	addi	r2,r2,12868
  88fd00:	1885883a 	add	r2,r3,r2
  88fd04:	00000106 	br	88fd0c <read+0x40>
  88fd08:	0005883a 	mov	r2,zero
  88fd0c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  88fd10:	e0bffb17 	ldw	r2,-20(fp)
  88fd14:	10002226 	beq	r2,zero,88fda0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  88fd18:	e0bffb17 	ldw	r2,-20(fp)
  88fd1c:	10800217 	ldw	r2,8(r2)
  88fd20:	108000cc 	andi	r2,r2,3
  88fd24:	10800060 	cmpeqi	r2,r2,1
  88fd28:	1000181e 	bne	r2,zero,88fd8c <read+0xc0>
        (fd->dev->read))
  88fd2c:	e0bffb17 	ldw	r2,-20(fp)
  88fd30:	10800017 	ldw	r2,0(r2)
  88fd34:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  88fd38:	10001426 	beq	r2,zero,88fd8c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  88fd3c:	e0bffb17 	ldw	r2,-20(fp)
  88fd40:	10800017 	ldw	r2,0(r2)
  88fd44:	10800517 	ldw	r2,20(r2)
  88fd48:	e0ffff17 	ldw	r3,-4(fp)
  88fd4c:	180d883a 	mov	r6,r3
  88fd50:	e17ffe17 	ldw	r5,-8(fp)
  88fd54:	e13ffb17 	ldw	r4,-20(fp)
  88fd58:	103ee83a 	callr	r2
  88fd5c:	e0bffc15 	stw	r2,-16(fp)
  88fd60:	e0bffc17 	ldw	r2,-16(fp)
  88fd64:	1000070e 	bge	r2,zero,88fd84 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  88fd68:	088fc900 	call	88fc90 <alt_get_errno>
  88fd6c:	1007883a 	mov	r3,r2
  88fd70:	e0bffc17 	ldw	r2,-16(fp)
  88fd74:	0085c83a 	sub	r2,zero,r2
  88fd78:	18800015 	stw	r2,0(r3)
          return -1;
  88fd7c:	00bfffc4 	movi	r2,-1
  88fd80:	00000c06 	br	88fdb4 <read+0xe8>
        }
        return rval;
  88fd84:	e0bffc17 	ldw	r2,-16(fp)
  88fd88:	00000a06 	br	88fdb4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  88fd8c:	088fc900 	call	88fc90 <alt_get_errno>
  88fd90:	1007883a 	mov	r3,r2
  88fd94:	00800344 	movi	r2,13
  88fd98:	18800015 	stw	r2,0(r3)
  88fd9c:	00000406 	br	88fdb0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  88fda0:	088fc900 	call	88fc90 <alt_get_errno>
  88fda4:	1007883a 	mov	r3,r2
  88fda8:	00801444 	movi	r2,81
  88fdac:	18800015 	stw	r2,0(r3)
  }
  return -1;
  88fdb0:	00bfffc4 	movi	r2,-1
}
  88fdb4:	e037883a 	mov	sp,fp
  88fdb8:	dfc00117 	ldw	ra,4(sp)
  88fdbc:	df000017 	ldw	fp,0(sp)
  88fdc0:	dec00204 	addi	sp,sp,8
  88fdc4:	f800283a 	ret

0088fdc8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  88fdc8:	defffe04 	addi	sp,sp,-8
  88fdcc:	df000115 	stw	fp,4(sp)
  88fdd0:	df000104 	addi	fp,sp,4
  88fdd4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  88fdd8:	e0bfff17 	ldw	r2,-4(fp)
  88fddc:	108000d0 	cmplti	r2,r2,3
  88fde0:	10000d1e 	bne	r2,zero,88fe18 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  88fde4:	00802274 	movhi	r2,137
  88fde8:	108c9104 	addi	r2,r2,12868
  88fdec:	e0ffff17 	ldw	r3,-4(fp)
  88fdf0:	18c00324 	muli	r3,r3,12
  88fdf4:	10c5883a 	add	r2,r2,r3
  88fdf8:	10800204 	addi	r2,r2,8
  88fdfc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  88fe00:	00802274 	movhi	r2,137
  88fe04:	108c9104 	addi	r2,r2,12868
  88fe08:	e0ffff17 	ldw	r3,-4(fp)
  88fe0c:	18c00324 	muli	r3,r3,12
  88fe10:	10c5883a 	add	r2,r2,r3
  88fe14:	10000015 	stw	zero,0(r2)
  }
}
  88fe18:	0001883a 	nop
  88fe1c:	e037883a 	mov	sp,fp
  88fe20:	df000017 	ldw	fp,0(sp)
  88fe24:	dec00104 	addi	sp,sp,4
  88fe28:	f800283a 	ret

0088fe2c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  88fe2c:	defff904 	addi	sp,sp,-28
  88fe30:	df000615 	stw	fp,24(sp)
  88fe34:	df000604 	addi	fp,sp,24
  88fe38:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  88fe3c:	0005303a 	rdctl	r2,status
  88fe40:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  88fe44:	e0fffe17 	ldw	r3,-8(fp)
  88fe48:	00bfff84 	movi	r2,-2
  88fe4c:	1884703a 	and	r2,r3,r2
  88fe50:	1001703a 	wrctl	status,r2
  
  return context;
  88fe54:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  88fe58:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  88fe5c:	d0a01617 	ldw	r2,-32680(gp)
  88fe60:	10c000c4 	addi	r3,r2,3
  88fe64:	00bfff04 	movi	r2,-4
  88fe68:	1884703a 	and	r2,r3,r2
  88fe6c:	d0a01615 	stw	r2,-32680(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  88fe70:	d0e01617 	ldw	r3,-32680(gp)
  88fe74:	e0bfff17 	ldw	r2,-4(fp)
  88fe78:	1887883a 	add	r3,r3,r2
  88fe7c:	008023b4 	movhi	r2,142
  88fe80:	1086a004 	addi	r2,r2,6784
  88fe84:	10c0062e 	bgeu	r2,r3,88fea0 <sbrk+0x74>
  88fe88:	e0bffb17 	ldw	r2,-20(fp)
  88fe8c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  88fe90:	e0bffa17 	ldw	r2,-24(fp)
  88fe94:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  88fe98:	00bfffc4 	movi	r2,-1
  88fe9c:	00000b06 	br	88fecc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  88fea0:	d0a01617 	ldw	r2,-32680(gp)
  88fea4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  88fea8:	d0e01617 	ldw	r3,-32680(gp)
  88feac:	e0bfff17 	ldw	r2,-4(fp)
  88feb0:	1885883a 	add	r2,r3,r2
  88feb4:	d0a01615 	stw	r2,-32680(gp)
  88feb8:	e0bffb17 	ldw	r2,-20(fp)
  88febc:	e0bffc15 	stw	r2,-16(fp)
  88fec0:	e0bffc17 	ldw	r2,-16(fp)
  88fec4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  88fec8:	e0bffd17 	ldw	r2,-12(fp)
} 
  88fecc:	e037883a 	mov	sp,fp
  88fed0:	df000017 	ldw	fp,0(sp)
  88fed4:	dec00104 	addi	sp,sp,4
  88fed8:	f800283a 	ret

0088fedc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  88fedc:	defffe04 	addi	sp,sp,-8
  88fee0:	dfc00115 	stw	ra,4(sp)
  88fee4:	df000015 	stw	fp,0(sp)
  88fee8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  88feec:	d0a01517 	ldw	r2,-32684(gp)
  88fef0:	10000326 	beq	r2,zero,88ff00 <alt_get_errno+0x24>
  88fef4:	d0a01517 	ldw	r2,-32684(gp)
  88fef8:	103ee83a 	callr	r2
  88fefc:	00000106 	br	88ff04 <alt_get_errno+0x28>
  88ff00:	d0a6f104 	addi	r2,gp,-25660
}
  88ff04:	e037883a 	mov	sp,fp
  88ff08:	dfc00117 	ldw	ra,4(sp)
  88ff0c:	df000017 	ldw	fp,0(sp)
  88ff10:	dec00204 	addi	sp,sp,8
  88ff14:	f800283a 	ret

0088ff18 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  88ff18:	defff904 	addi	sp,sp,-28
  88ff1c:	dfc00615 	stw	ra,24(sp)
  88ff20:	df000515 	stw	fp,20(sp)
  88ff24:	df000504 	addi	fp,sp,20
  88ff28:	e13ffd15 	stw	r4,-12(fp)
  88ff2c:	e17ffe15 	stw	r5,-8(fp)
  88ff30:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  88ff34:	e0bffd17 	ldw	r2,-12(fp)
  88ff38:	10000616 	blt	r2,zero,88ff54 <write+0x3c>
  88ff3c:	e0bffd17 	ldw	r2,-12(fp)
  88ff40:	10c00324 	muli	r3,r2,12
  88ff44:	00802274 	movhi	r2,137
  88ff48:	108c9104 	addi	r2,r2,12868
  88ff4c:	1885883a 	add	r2,r3,r2
  88ff50:	00000106 	br	88ff58 <write+0x40>
  88ff54:	0005883a 	mov	r2,zero
  88ff58:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  88ff5c:	e0bffb17 	ldw	r2,-20(fp)
  88ff60:	10002126 	beq	r2,zero,88ffe8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  88ff64:	e0bffb17 	ldw	r2,-20(fp)
  88ff68:	10800217 	ldw	r2,8(r2)
  88ff6c:	108000cc 	andi	r2,r2,3
  88ff70:	10001826 	beq	r2,zero,88ffd4 <write+0xbc>
  88ff74:	e0bffb17 	ldw	r2,-20(fp)
  88ff78:	10800017 	ldw	r2,0(r2)
  88ff7c:	10800617 	ldw	r2,24(r2)
  88ff80:	10001426 	beq	r2,zero,88ffd4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  88ff84:	e0bffb17 	ldw	r2,-20(fp)
  88ff88:	10800017 	ldw	r2,0(r2)
  88ff8c:	10800617 	ldw	r2,24(r2)
  88ff90:	e0ffff17 	ldw	r3,-4(fp)
  88ff94:	180d883a 	mov	r6,r3
  88ff98:	e17ffe17 	ldw	r5,-8(fp)
  88ff9c:	e13ffb17 	ldw	r4,-20(fp)
  88ffa0:	103ee83a 	callr	r2
  88ffa4:	e0bffc15 	stw	r2,-16(fp)
  88ffa8:	e0bffc17 	ldw	r2,-16(fp)
  88ffac:	1000070e 	bge	r2,zero,88ffcc <write+0xb4>
      {
        ALT_ERRNO = -rval;
  88ffb0:	088fedc0 	call	88fedc <alt_get_errno>
  88ffb4:	1007883a 	mov	r3,r2
  88ffb8:	e0bffc17 	ldw	r2,-16(fp)
  88ffbc:	0085c83a 	sub	r2,zero,r2
  88ffc0:	18800015 	stw	r2,0(r3)
        return -1;
  88ffc4:	00bfffc4 	movi	r2,-1
  88ffc8:	00000c06 	br	88fffc <write+0xe4>
      }
      return rval;
  88ffcc:	e0bffc17 	ldw	r2,-16(fp)
  88ffd0:	00000a06 	br	88fffc <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  88ffd4:	088fedc0 	call	88fedc <alt_get_errno>
  88ffd8:	1007883a 	mov	r3,r2
  88ffdc:	00800344 	movi	r2,13
  88ffe0:	18800015 	stw	r2,0(r3)
  88ffe4:	00000406 	br	88fff8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  88ffe8:	088fedc0 	call	88fedc <alt_get_errno>
  88ffec:	1007883a 	mov	r3,r2
  88fff0:	00801444 	movi	r2,81
  88fff4:	18800015 	stw	r2,0(r3)
  }
  return -1;
  88fff8:	00bfffc4 	movi	r2,-1
}
  88fffc:	e037883a 	mov	sp,fp
  890000:	dfc00117 	ldw	ra,4(sp)
  890004:	df000017 	ldw	fp,0(sp)
  890008:	dec00204 	addi	sp,sp,8
  89000c:	f800283a 	ret

00890010 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  890010:	defffd04 	addi	sp,sp,-12
  890014:	dfc00215 	stw	ra,8(sp)
  890018:	df000115 	stw	fp,4(sp)
  89001c:	df000104 	addi	fp,sp,4
  890020:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  890024:	d1601204 	addi	r5,gp,-32696
  890028:	e13fff17 	ldw	r4,-4(fp)
  89002c:	089124c0 	call	89124c <alt_dev_llist_insert>
}
  890030:	e037883a 	mov	sp,fp
  890034:	dfc00117 	ldw	ra,4(sp)
  890038:	df000017 	ldw	fp,0(sp)
  89003c:	dec00204 	addi	sp,sp,8
  890040:	f800283a 	ret

00890044 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  890044:	defffd04 	addi	sp,sp,-12
  890048:	dfc00215 	stw	ra,8(sp)
  89004c:	df000115 	stw	fp,4(sp)
  890050:	df000104 	addi	fp,sp,4
  890054:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  890058:	0891a9c0 	call	891a9c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  89005c:	00800044 	movi	r2,1
  890060:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  890064:	0001883a 	nop
  890068:	e037883a 	mov	sp,fp
  89006c:	dfc00117 	ldw	ra,4(sp)
  890070:	df000017 	ldw	fp,0(sp)
  890074:	dec00204 	addi	sp,sp,8
  890078:	f800283a 	ret

0089007c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  89007c:	defffe04 	addi	sp,sp,-8
  890080:	dfc00115 	stw	ra,4(sp)
  890084:	df000015 	stw	fp,0(sp)
  890088:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  89008c:	01800044 	movi	r6,1
  890090:	000b883a 	mov	r5,zero
  890094:	01002274 	movhi	r4,137
  890098:	210cfb04 	addi	r4,r4,13292
  89009c:	08902340 	call	890234 <altera_avalon_jtag_uart_init>
  8900a0:	01002274 	movhi	r4,137
  8900a4:	210cf104 	addi	r4,r4,13252
  8900a8:	08900100 	call	890010 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO_0, audio_0);
  8900ac:	01002274 	movhi	r4,137
  8900b0:	21110904 	addi	r4,r4,17444
  8900b4:	08900100 	call	890010 <alt_dev_reg>
}
  8900b8:	0001883a 	nop
  8900bc:	e037883a 	mov	sp,fp
  8900c0:	dfc00117 	ldw	ra,4(sp)
  8900c4:	df000017 	ldw	fp,0(sp)
  8900c8:	dec00204 	addi	sp,sp,8
  8900cc:	f800283a 	ret

008900d0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  8900d0:	defffa04 	addi	sp,sp,-24
  8900d4:	dfc00515 	stw	ra,20(sp)
  8900d8:	df000415 	stw	fp,16(sp)
  8900dc:	df000404 	addi	fp,sp,16
  8900e0:	e13ffd15 	stw	r4,-12(fp)
  8900e4:	e17ffe15 	stw	r5,-8(fp)
  8900e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8900ec:	e0bffd17 	ldw	r2,-12(fp)
  8900f0:	10800017 	ldw	r2,0(r2)
  8900f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  8900f8:	e0bffc17 	ldw	r2,-16(fp)
  8900fc:	10c00a04 	addi	r3,r2,40
  890100:	e0bffd17 	ldw	r2,-12(fp)
  890104:	10800217 	ldw	r2,8(r2)
  890108:	100f883a 	mov	r7,r2
  89010c:	e1bfff17 	ldw	r6,-4(fp)
  890110:	e17ffe17 	ldw	r5,-8(fp)
  890114:	1809883a 	mov	r4,r3
  890118:	08906f00 	call	8906f0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  89011c:	e037883a 	mov	sp,fp
  890120:	dfc00117 	ldw	ra,4(sp)
  890124:	df000017 	ldw	fp,0(sp)
  890128:	dec00204 	addi	sp,sp,8
  89012c:	f800283a 	ret

00890130 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  890130:	defffa04 	addi	sp,sp,-24
  890134:	dfc00515 	stw	ra,20(sp)
  890138:	df000415 	stw	fp,16(sp)
  89013c:	df000404 	addi	fp,sp,16
  890140:	e13ffd15 	stw	r4,-12(fp)
  890144:	e17ffe15 	stw	r5,-8(fp)
  890148:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  89014c:	e0bffd17 	ldw	r2,-12(fp)
  890150:	10800017 	ldw	r2,0(r2)
  890154:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  890158:	e0bffc17 	ldw	r2,-16(fp)
  89015c:	10c00a04 	addi	r3,r2,40
  890160:	e0bffd17 	ldw	r2,-12(fp)
  890164:	10800217 	ldw	r2,8(r2)
  890168:	100f883a 	mov	r7,r2
  89016c:	e1bfff17 	ldw	r6,-4(fp)
  890170:	e17ffe17 	ldw	r5,-8(fp)
  890174:	1809883a 	mov	r4,r3
  890178:	089090c0 	call	89090c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  89017c:	e037883a 	mov	sp,fp
  890180:	dfc00117 	ldw	ra,4(sp)
  890184:	df000017 	ldw	fp,0(sp)
  890188:	dec00204 	addi	sp,sp,8
  89018c:	f800283a 	ret

00890190 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  890190:	defffc04 	addi	sp,sp,-16
  890194:	dfc00315 	stw	ra,12(sp)
  890198:	df000215 	stw	fp,8(sp)
  89019c:	df000204 	addi	fp,sp,8
  8901a0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8901a4:	e0bfff17 	ldw	r2,-4(fp)
  8901a8:	10800017 	ldw	r2,0(r2)
  8901ac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  8901b0:	e0bffe17 	ldw	r2,-8(fp)
  8901b4:	10c00a04 	addi	r3,r2,40
  8901b8:	e0bfff17 	ldw	r2,-4(fp)
  8901bc:	10800217 	ldw	r2,8(r2)
  8901c0:	100b883a 	mov	r5,r2
  8901c4:	1809883a 	mov	r4,r3
  8901c8:	08905980 	call	890598 <altera_avalon_jtag_uart_close>
}
  8901cc:	e037883a 	mov	sp,fp
  8901d0:	dfc00117 	ldw	ra,4(sp)
  8901d4:	df000017 	ldw	fp,0(sp)
  8901d8:	dec00204 	addi	sp,sp,8
  8901dc:	f800283a 	ret

008901e0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  8901e0:	defffa04 	addi	sp,sp,-24
  8901e4:	dfc00515 	stw	ra,20(sp)
  8901e8:	df000415 	stw	fp,16(sp)
  8901ec:	df000404 	addi	fp,sp,16
  8901f0:	e13ffd15 	stw	r4,-12(fp)
  8901f4:	e17ffe15 	stw	r5,-8(fp)
  8901f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  8901fc:	e0bffd17 	ldw	r2,-12(fp)
  890200:	10800017 	ldw	r2,0(r2)
  890204:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  890208:	e0bffc17 	ldw	r2,-16(fp)
  89020c:	10800a04 	addi	r2,r2,40
  890210:	e1bfff17 	ldw	r6,-4(fp)
  890214:	e17ffe17 	ldw	r5,-8(fp)
  890218:	1009883a 	mov	r4,r2
  89021c:	08906000 	call	890600 <altera_avalon_jtag_uart_ioctl>
}
  890220:	e037883a 	mov	sp,fp
  890224:	dfc00117 	ldw	ra,4(sp)
  890228:	df000017 	ldw	fp,0(sp)
  89022c:	dec00204 	addi	sp,sp,8
  890230:	f800283a 	ret

00890234 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  890234:	defffb04 	addi	sp,sp,-20
  890238:	dfc00415 	stw	ra,16(sp)
  89023c:	df000315 	stw	fp,12(sp)
  890240:	df000304 	addi	fp,sp,12
  890244:	e13ffd15 	stw	r4,-12(fp)
  890248:	e17ffe15 	stw	r5,-8(fp)
  89024c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  890250:	e0bffd17 	ldw	r2,-12(fp)
  890254:	00c00044 	movi	r3,1
  890258:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  89025c:	e0bffd17 	ldw	r2,-12(fp)
  890260:	10800017 	ldw	r2,0(r2)
  890264:	10800104 	addi	r2,r2,4
  890268:	1007883a 	mov	r3,r2
  89026c:	e0bffd17 	ldw	r2,-12(fp)
  890270:	10800817 	ldw	r2,32(r2)
  890274:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
  890278:	e0bfff17 	ldw	r2,-4(fp)
  89027c:	01802274 	movhi	r6,137
  890280:	3180ba04 	addi	r6,r6,744
  890284:	e17ffd17 	ldw	r5,-12(fp)
  890288:	1009883a 	mov	r4,r2
  89028c:	08915240 	call	891524 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  890290:	e0bffd17 	ldw	r2,-12(fp)
  890294:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  890298:	e0bffd17 	ldw	r2,-12(fp)
  89029c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  8902a0:	d0e6f917 	ldw	r3,-25628(gp)
  8902a4:	e1fffd17 	ldw	r7,-12(fp)
  8902a8:	01802274 	movhi	r6,137
  8902ac:	31813e04 	addi	r6,r6,1272
  8902b0:	180b883a 	mov	r5,r3
  8902b4:	1009883a 	mov	r4,r2
  8902b8:	089109c0 	call	89109c <alt_alarm_start>
  8902bc:	1000040e 	bge	r2,zero,8902d0 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  8902c0:	e0fffd17 	ldw	r3,-12(fp)
  8902c4:	00a00034 	movhi	r2,32768
  8902c8:	10bfffc4 	addi	r2,r2,-1
  8902cc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  8902d0:	0001883a 	nop
  8902d4:	e037883a 	mov	sp,fp
  8902d8:	dfc00117 	ldw	ra,4(sp)
  8902dc:	df000017 	ldw	fp,0(sp)
  8902e0:	dec00204 	addi	sp,sp,8
  8902e4:	f800283a 	ret

008902e8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  8902e8:	defff704 	addi	sp,sp,-36
  8902ec:	df000815 	stw	fp,32(sp)
  8902f0:	df000804 	addi	fp,sp,32
  8902f4:	e13ffe15 	stw	r4,-8(fp)
  8902f8:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  8902fc:	e0bffe17 	ldw	r2,-8(fp)
  890300:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
  890304:	e0bffa17 	ldw	r2,-24(fp)
  890308:	10800017 	ldw	r2,0(r2)
  89030c:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  890310:	e0bffb17 	ldw	r2,-20(fp)
  890314:	10800104 	addi	r2,r2,4
  890318:	10800037 	ldwio	r2,0(r2)
  89031c:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  890320:	e0bffc17 	ldw	r2,-16(fp)
  890324:	1080c00c 	andi	r2,r2,768
  890328:	10006d26 	beq	r2,zero,8904e0 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  89032c:	e0bffc17 	ldw	r2,-16(fp)
  890330:	1080400c 	andi	r2,r2,256
  890334:	10003526 	beq	r2,zero,89040c <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  890338:	00800074 	movhi	r2,1
  89033c:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  890340:	e0bffa17 	ldw	r2,-24(fp)
  890344:	10800a17 	ldw	r2,40(r2)
  890348:	10800044 	addi	r2,r2,1
  89034c:	1081ffcc 	andi	r2,r2,2047
  890350:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
  890354:	e0bffa17 	ldw	r2,-24(fp)
  890358:	10c00b17 	ldw	r3,44(r2)
  89035c:	e0bffd17 	ldw	r2,-12(fp)
  890360:	18801526 	beq	r3,r2,8903b8 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  890364:	e0bffb17 	ldw	r2,-20(fp)
  890368:	10800037 	ldwio	r2,0(r2)
  89036c:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  890370:	e0bff817 	ldw	r2,-32(fp)
  890374:	10a0000c 	andi	r2,r2,32768
  890378:	10001126 	beq	r2,zero,8903c0 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  89037c:	e0bffa17 	ldw	r2,-24(fp)
  890380:	10800a17 	ldw	r2,40(r2)
  890384:	e0fff817 	ldw	r3,-32(fp)
  890388:	1809883a 	mov	r4,r3
  89038c:	e0fffa17 	ldw	r3,-24(fp)
  890390:	1885883a 	add	r2,r3,r2
  890394:	10800e04 	addi	r2,r2,56
  890398:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  89039c:	e0bffa17 	ldw	r2,-24(fp)
  8903a0:	10800a17 	ldw	r2,40(r2)
  8903a4:	10800044 	addi	r2,r2,1
  8903a8:	10c1ffcc 	andi	r3,r2,2047
  8903ac:	e0bffa17 	ldw	r2,-24(fp)
  8903b0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  8903b4:	003fe206 	br	890340 <altera_avalon_jtag_uart_irq+0x58>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  8903b8:	0001883a 	nop
  8903bc:	00000106 	br	8903c4 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  8903c0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  8903c4:	e0bff817 	ldw	r2,-32(fp)
  8903c8:	10bfffec 	andhi	r2,r2,65535
  8903cc:	10000f26 	beq	r2,zero,89040c <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8903d0:	e0bffa17 	ldw	r2,-24(fp)
  8903d4:	10c00817 	ldw	r3,32(r2)
  8903d8:	00bfff84 	movi	r2,-2
  8903dc:	1886703a 	and	r3,r3,r2
  8903e0:	e0bffa17 	ldw	r2,-24(fp)
  8903e4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  8903e8:	e0bffb17 	ldw	r2,-20(fp)
  8903ec:	10800104 	addi	r2,r2,4
  8903f0:	1007883a 	mov	r3,r2
  8903f4:	e0bffa17 	ldw	r2,-24(fp)
  8903f8:	10800817 	ldw	r2,32(r2)
  8903fc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  890400:	e0bffb17 	ldw	r2,-20(fp)
  890404:	10800104 	addi	r2,r2,4
  890408:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  89040c:	e0bffc17 	ldw	r2,-16(fp)
  890410:	1080800c 	andi	r2,r2,512
  890414:	103fbe26 	beq	r2,zero,890310 <altera_avalon_jtag_uart_irq+0x28>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  890418:	e0bffc17 	ldw	r2,-16(fp)
  89041c:	1004d43a 	srli	r2,r2,16
  890420:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  890424:	00001406 	br	890478 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  890428:	e0bffb17 	ldw	r2,-20(fp)
  89042c:	e0fffa17 	ldw	r3,-24(fp)
  890430:	18c00d17 	ldw	r3,52(r3)
  890434:	e13ffa17 	ldw	r4,-24(fp)
  890438:	20c7883a 	add	r3,r4,r3
  89043c:	18c20e04 	addi	r3,r3,2104
  890440:	18c00003 	ldbu	r3,0(r3)
  890444:	18c03fcc 	andi	r3,r3,255
  890448:	18c0201c 	xori	r3,r3,128
  89044c:	18ffe004 	addi	r3,r3,-128
  890450:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  890454:	e0bffa17 	ldw	r2,-24(fp)
  890458:	10800d17 	ldw	r2,52(r2)
  89045c:	10800044 	addi	r2,r2,1
  890460:	10c1ffcc 	andi	r3,r2,2047
  890464:	e0bffa17 	ldw	r2,-24(fp)
  890468:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  89046c:	e0bff917 	ldw	r2,-28(fp)
  890470:	10bfffc4 	addi	r2,r2,-1
  890474:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  890478:	e0bff917 	ldw	r2,-28(fp)
  89047c:	10000526 	beq	r2,zero,890494 <altera_avalon_jtag_uart_irq+0x1ac>
  890480:	e0bffa17 	ldw	r2,-24(fp)
  890484:	10c00d17 	ldw	r3,52(r2)
  890488:	e0bffa17 	ldw	r2,-24(fp)
  89048c:	10800c17 	ldw	r2,48(r2)
  890490:	18bfe51e 	bne	r3,r2,890428 <altera_avalon_jtag_uart_irq+0x140>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  890494:	e0bff917 	ldw	r2,-28(fp)
  890498:	103f9d26 	beq	r2,zero,890310 <altera_avalon_jtag_uart_irq+0x28>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  89049c:	e0bffa17 	ldw	r2,-24(fp)
  8904a0:	10c00817 	ldw	r3,32(r2)
  8904a4:	00bfff44 	movi	r2,-3
  8904a8:	1886703a 	and	r3,r3,r2
  8904ac:	e0bffa17 	ldw	r2,-24(fp)
  8904b0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  8904b4:	e0bffa17 	ldw	r2,-24(fp)
  8904b8:	10800017 	ldw	r2,0(r2)
  8904bc:	10800104 	addi	r2,r2,4
  8904c0:	1007883a 	mov	r3,r2
  8904c4:	e0bffa17 	ldw	r2,-24(fp)
  8904c8:	10800817 	ldw	r2,32(r2)
  8904cc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  8904d0:	e0bffb17 	ldw	r2,-20(fp)
  8904d4:	10800104 	addi	r2,r2,4
  8904d8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  8904dc:	003f8c06 	br	890310 <altera_avalon_jtag_uart_irq+0x28>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  8904e0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  8904e4:	0001883a 	nop
  8904e8:	e037883a 	mov	sp,fp
  8904ec:	df000017 	ldw	fp,0(sp)
  8904f0:	dec00104 	addi	sp,sp,4
  8904f4:	f800283a 	ret

008904f8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  8904f8:	defff804 	addi	sp,sp,-32
  8904fc:	df000715 	stw	fp,28(sp)
  890500:	df000704 	addi	fp,sp,28
  890504:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  890508:	e0bffb17 	ldw	r2,-20(fp)
  89050c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  890510:	e0bff917 	ldw	r2,-28(fp)
  890514:	10800017 	ldw	r2,0(r2)
  890518:	10800104 	addi	r2,r2,4
  89051c:	10800037 	ldwio	r2,0(r2)
  890520:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  890524:	e0bffa17 	ldw	r2,-24(fp)
  890528:	1081000c 	andi	r2,r2,1024
  89052c:	10000b26 	beq	r2,zero,89055c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  890530:	e0bff917 	ldw	r2,-28(fp)
  890534:	10800017 	ldw	r2,0(r2)
  890538:	10800104 	addi	r2,r2,4
  89053c:	1007883a 	mov	r3,r2
  890540:	e0bff917 	ldw	r2,-28(fp)
  890544:	10800817 	ldw	r2,32(r2)
  890548:	10810014 	ori	r2,r2,1024
  89054c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  890550:	e0bff917 	ldw	r2,-28(fp)
  890554:	10000915 	stw	zero,36(r2)
  890558:	00000a06 	br	890584 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  89055c:	e0bff917 	ldw	r2,-28(fp)
  890560:	10c00917 	ldw	r3,36(r2)
  890564:	00a00034 	movhi	r2,32768
  890568:	10bfff04 	addi	r2,r2,-4
  89056c:	10c00536 	bltu	r2,r3,890584 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  890570:	e0bff917 	ldw	r2,-28(fp)
  890574:	10800917 	ldw	r2,36(r2)
  890578:	10c00044 	addi	r3,r2,1
  89057c:	e0bff917 	ldw	r2,-28(fp)
  890580:	10c00915 	stw	r3,36(r2)
  890584:	d0a6f917 	ldw	r2,-25628(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  890588:	e037883a 	mov	sp,fp
  89058c:	df000017 	ldw	fp,0(sp)
  890590:	dec00104 	addi	sp,sp,4
  890594:	f800283a 	ret

00890598 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  890598:	defffd04 	addi	sp,sp,-12
  89059c:	df000215 	stw	fp,8(sp)
  8905a0:	df000204 	addi	fp,sp,8
  8905a4:	e13ffe15 	stw	r4,-8(fp)
  8905a8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8905ac:	00000506 	br	8905c4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  8905b0:	e0bfff17 	ldw	r2,-4(fp)
  8905b4:	1090000c 	andi	r2,r2,16384
  8905b8:	10000226 	beq	r2,zero,8905c4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  8905bc:	00bffd44 	movi	r2,-11
  8905c0:	00000b06 	br	8905f0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8905c4:	e0bffe17 	ldw	r2,-8(fp)
  8905c8:	10c00d17 	ldw	r3,52(r2)
  8905cc:	e0bffe17 	ldw	r2,-8(fp)
  8905d0:	10800c17 	ldw	r2,48(r2)
  8905d4:	18800526 	beq	r3,r2,8905ec <altera_avalon_jtag_uart_close+0x54>
  8905d8:	e0bffe17 	ldw	r2,-8(fp)
  8905dc:	10c00917 	ldw	r3,36(r2)
  8905e0:	e0bffe17 	ldw	r2,-8(fp)
  8905e4:	10800117 	ldw	r2,4(r2)
  8905e8:	18bff136 	bltu	r3,r2,8905b0 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  8905ec:	0005883a 	mov	r2,zero
}
  8905f0:	e037883a 	mov	sp,fp
  8905f4:	df000017 	ldw	fp,0(sp)
  8905f8:	dec00104 	addi	sp,sp,4
  8905fc:	f800283a 	ret

00890600 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  890600:	defffa04 	addi	sp,sp,-24
  890604:	df000515 	stw	fp,20(sp)
  890608:	df000504 	addi	fp,sp,20
  89060c:	e13ffd15 	stw	r4,-12(fp)
  890610:	e17ffe15 	stw	r5,-8(fp)
  890614:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  890618:	00bff9c4 	movi	r2,-25
  89061c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  890620:	e0bffe17 	ldw	r2,-8(fp)
  890624:	10da8060 	cmpeqi	r3,r2,27137
  890628:	1800031e 	bne	r3,zero,890638 <altera_avalon_jtag_uart_ioctl+0x38>
  89062c:	109a80a0 	cmpeqi	r2,r2,27138
  890630:	1000181e 	bne	r2,zero,890694 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  890634:	00002906 	br	8906dc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  890638:	e0bffd17 	ldw	r2,-12(fp)
  89063c:	10c00117 	ldw	r3,4(r2)
  890640:	00a00034 	movhi	r2,32768
  890644:	10bfffc4 	addi	r2,r2,-1
  890648:	18802126 	beq	r3,r2,8906d0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  89064c:	e0bfff17 	ldw	r2,-4(fp)
  890650:	10800017 	ldw	r2,0(r2)
  890654:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  890658:	e0bffc17 	ldw	r2,-16(fp)
  89065c:	10800090 	cmplti	r2,r2,2
  890660:	1000061e 	bne	r2,zero,89067c <altera_avalon_jtag_uart_ioctl+0x7c>
  890664:	e0fffc17 	ldw	r3,-16(fp)
  890668:	00a00034 	movhi	r2,32768
  89066c:	10bfffc4 	addi	r2,r2,-1
  890670:	18800226 	beq	r3,r2,89067c <altera_avalon_jtag_uart_ioctl+0x7c>
  890674:	e0bffc17 	ldw	r2,-16(fp)
  890678:	00000206 	br	890684 <altera_avalon_jtag_uart_ioctl+0x84>
  89067c:	00a00034 	movhi	r2,32768
  890680:	10bfff84 	addi	r2,r2,-2
  890684:	e0fffd17 	ldw	r3,-12(fp)
  890688:	18800115 	stw	r2,4(r3)
      rc = 0;
  89068c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  890690:	00000f06 	br	8906d0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  890694:	e0bffd17 	ldw	r2,-12(fp)
  890698:	10c00117 	ldw	r3,4(r2)
  89069c:	00a00034 	movhi	r2,32768
  8906a0:	10bfffc4 	addi	r2,r2,-1
  8906a4:	18800c26 	beq	r3,r2,8906d8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  8906a8:	e0bffd17 	ldw	r2,-12(fp)
  8906ac:	10c00917 	ldw	r3,36(r2)
  8906b0:	e0bffd17 	ldw	r2,-12(fp)
  8906b4:	10800117 	ldw	r2,4(r2)
  8906b8:	1885803a 	cmpltu	r2,r3,r2
  8906bc:	10c03fcc 	andi	r3,r2,255
  8906c0:	e0bfff17 	ldw	r2,-4(fp)
  8906c4:	10c00015 	stw	r3,0(r2)
      rc = 0;
  8906c8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8906cc:	00000206 	br	8906d8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  8906d0:	0001883a 	nop
  8906d4:	00000106 	br	8906dc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  8906d8:	0001883a 	nop

  default:
    break;
  }

  return rc;
  8906dc:	e0bffb17 	ldw	r2,-20(fp)
}
  8906e0:	e037883a 	mov	sp,fp
  8906e4:	df000017 	ldw	fp,0(sp)
  8906e8:	dec00104 	addi	sp,sp,4
  8906ec:	f800283a 	ret

008906f0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  8906f0:	defff304 	addi	sp,sp,-52
  8906f4:	dfc00c15 	stw	ra,48(sp)
  8906f8:	df000b15 	stw	fp,44(sp)
  8906fc:	df000b04 	addi	fp,sp,44
  890700:	e13ffc15 	stw	r4,-16(fp)
  890704:	e17ffd15 	stw	r5,-12(fp)
  890708:	e1bffe15 	stw	r6,-8(fp)
  89070c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  890710:	e0bffd17 	ldw	r2,-12(fp)
  890714:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  890718:	00004706 	br	890838 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  89071c:	e0bffc17 	ldw	r2,-16(fp)
  890720:	10800a17 	ldw	r2,40(r2)
  890724:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  890728:	e0bffc17 	ldw	r2,-16(fp)
  89072c:	10800b17 	ldw	r2,44(r2)
  890730:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  890734:	e0fff717 	ldw	r3,-36(fp)
  890738:	e0bff817 	ldw	r2,-32(fp)
  89073c:	18800536 	bltu	r3,r2,890754 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  890740:	e0fff717 	ldw	r3,-36(fp)
  890744:	e0bff817 	ldw	r2,-32(fp)
  890748:	1885c83a 	sub	r2,r3,r2
  89074c:	e0bff615 	stw	r2,-40(fp)
  890750:	00000406 	br	890764 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  890754:	00c20004 	movi	r3,2048
  890758:	e0bff817 	ldw	r2,-32(fp)
  89075c:	1885c83a 	sub	r2,r3,r2
  890760:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  890764:	e0bff617 	ldw	r2,-40(fp)
  890768:	10001e26 	beq	r2,zero,8907e4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  89076c:	e0fffe17 	ldw	r3,-8(fp)
  890770:	e0bff617 	ldw	r2,-40(fp)
  890774:	1880022e 	bgeu	r3,r2,890780 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  890778:	e0bffe17 	ldw	r2,-8(fp)
  89077c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  890780:	e0bffc17 	ldw	r2,-16(fp)
  890784:	10c00e04 	addi	r3,r2,56
  890788:	e0bff817 	ldw	r2,-32(fp)
  89078c:	1885883a 	add	r2,r3,r2
  890790:	e1bff617 	ldw	r6,-40(fp)
  890794:	100b883a 	mov	r5,r2
  890798:	e13ff517 	ldw	r4,-44(fp)
  89079c:	08883bc0 	call	8883bc <memcpy>
      ptr   += n;
  8907a0:	e0fff517 	ldw	r3,-44(fp)
  8907a4:	e0bff617 	ldw	r2,-40(fp)
  8907a8:	1885883a 	add	r2,r3,r2
  8907ac:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  8907b0:	e0fffe17 	ldw	r3,-8(fp)
  8907b4:	e0bff617 	ldw	r2,-40(fp)
  8907b8:	1885c83a 	sub	r2,r3,r2
  8907bc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8907c0:	e0fff817 	ldw	r3,-32(fp)
  8907c4:	e0bff617 	ldw	r2,-40(fp)
  8907c8:	1885883a 	add	r2,r3,r2
  8907cc:	10c1ffcc 	andi	r3,r2,2047
  8907d0:	e0bffc17 	ldw	r2,-16(fp)
  8907d4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  8907d8:	e0bffe17 	ldw	r2,-8(fp)
  8907dc:	00bfcf16 	blt	zero,r2,89071c <altera_avalon_jtag_uart_read+0x2c>
  8907e0:	00000106 	br	8907e8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  8907e4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  8907e8:	e0fff517 	ldw	r3,-44(fp)
  8907ec:	e0bffd17 	ldw	r2,-12(fp)
  8907f0:	1880141e 	bne	r3,r2,890844 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  8907f4:	e0bfff17 	ldw	r2,-4(fp)
  8907f8:	1090000c 	andi	r2,r2,16384
  8907fc:	1000131e 	bne	r2,zero,89084c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  890800:	0001883a 	nop
  890804:	e0bffc17 	ldw	r2,-16(fp)
  890808:	10c00a17 	ldw	r3,40(r2)
  89080c:	e0bff717 	ldw	r2,-36(fp)
  890810:	1880051e 	bne	r3,r2,890828 <altera_avalon_jtag_uart_read+0x138>
  890814:	e0bffc17 	ldw	r2,-16(fp)
  890818:	10c00917 	ldw	r3,36(r2)
  89081c:	e0bffc17 	ldw	r2,-16(fp)
  890820:	10800117 	ldw	r2,4(r2)
  890824:	18bff736 	bltu	r3,r2,890804 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  890828:	e0bffc17 	ldw	r2,-16(fp)
  89082c:	10c00a17 	ldw	r3,40(r2)
  890830:	e0bff717 	ldw	r2,-36(fp)
  890834:	18800726 	beq	r3,r2,890854 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  890838:	e0bffe17 	ldw	r2,-8(fp)
  89083c:	00bfb716 	blt	zero,r2,89071c <altera_avalon_jtag_uart_read+0x2c>
  890840:	00000506 	br	890858 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  890844:	0001883a 	nop
  890848:	00000306 	br	890858 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  89084c:	0001883a 	nop
  890850:	00000106 	br	890858 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  890854:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  890858:	e0fff517 	ldw	r3,-44(fp)
  89085c:	e0bffd17 	ldw	r2,-12(fp)
  890860:	18801826 	beq	r3,r2,8908c4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  890864:	0005303a 	rdctl	r2,status
  890868:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  89086c:	e0fffb17 	ldw	r3,-20(fp)
  890870:	00bfff84 	movi	r2,-2
  890874:	1884703a 	and	r2,r3,r2
  890878:	1001703a 	wrctl	status,r2
  
  return context;
  89087c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  890880:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  890884:	e0bffc17 	ldw	r2,-16(fp)
  890888:	10800817 	ldw	r2,32(r2)
  89088c:	10c00054 	ori	r3,r2,1
  890890:	e0bffc17 	ldw	r2,-16(fp)
  890894:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  890898:	e0bffc17 	ldw	r2,-16(fp)
  89089c:	10800017 	ldw	r2,0(r2)
  8908a0:	10800104 	addi	r2,r2,4
  8908a4:	1007883a 	mov	r3,r2
  8908a8:	e0bffc17 	ldw	r2,-16(fp)
  8908ac:	10800817 	ldw	r2,32(r2)
  8908b0:	18800035 	stwio	r2,0(r3)
  8908b4:	e0bffa17 	ldw	r2,-24(fp)
  8908b8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8908bc:	e0bff917 	ldw	r2,-28(fp)
  8908c0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  8908c4:	e0fff517 	ldw	r3,-44(fp)
  8908c8:	e0bffd17 	ldw	r2,-12(fp)
  8908cc:	18800426 	beq	r3,r2,8908e0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  8908d0:	e0fff517 	ldw	r3,-44(fp)
  8908d4:	e0bffd17 	ldw	r2,-12(fp)
  8908d8:	1885c83a 	sub	r2,r3,r2
  8908dc:	00000606 	br	8908f8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  8908e0:	e0bfff17 	ldw	r2,-4(fp)
  8908e4:	1090000c 	andi	r2,r2,16384
  8908e8:	10000226 	beq	r2,zero,8908f4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  8908ec:	00bffd44 	movi	r2,-11
  8908f0:	00000106 	br	8908f8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  8908f4:	00bffec4 	movi	r2,-5
}
  8908f8:	e037883a 	mov	sp,fp
  8908fc:	dfc00117 	ldw	ra,4(sp)
  890900:	df000017 	ldw	fp,0(sp)
  890904:	dec00204 	addi	sp,sp,8
  890908:	f800283a 	ret

0089090c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  89090c:	defff304 	addi	sp,sp,-52
  890910:	dfc00c15 	stw	ra,48(sp)
  890914:	df000b15 	stw	fp,44(sp)
  890918:	df000b04 	addi	fp,sp,44
  89091c:	e13ffc15 	stw	r4,-16(fp)
  890920:	e17ffd15 	stw	r5,-12(fp)
  890924:	e1bffe15 	stw	r6,-8(fp)
  890928:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  89092c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  890930:	e0bffd17 	ldw	r2,-12(fp)
  890934:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  890938:	00003706 	br	890a18 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  89093c:	e0bffc17 	ldw	r2,-16(fp)
  890940:	10800c17 	ldw	r2,48(r2)
  890944:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  890948:	e0bffc17 	ldw	r2,-16(fp)
  89094c:	10800d17 	ldw	r2,52(r2)
  890950:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  890954:	e0fff917 	ldw	r3,-28(fp)
  890958:	e0bff517 	ldw	r2,-44(fp)
  89095c:	1880062e 	bgeu	r3,r2,890978 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  890960:	e0fff517 	ldw	r3,-44(fp)
  890964:	e0bff917 	ldw	r2,-28(fp)
  890968:	1885c83a 	sub	r2,r3,r2
  89096c:	10bfffc4 	addi	r2,r2,-1
  890970:	e0bff615 	stw	r2,-40(fp)
  890974:	00000b06 	br	8909a4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  890978:	e0bff517 	ldw	r2,-44(fp)
  89097c:	10000526 	beq	r2,zero,890994 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  890980:	00c20004 	movi	r3,2048
  890984:	e0bff917 	ldw	r2,-28(fp)
  890988:	1885c83a 	sub	r2,r3,r2
  89098c:	e0bff615 	stw	r2,-40(fp)
  890990:	00000406 	br	8909a4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  890994:	00c1ffc4 	movi	r3,2047
  890998:	e0bff917 	ldw	r2,-28(fp)
  89099c:	1885c83a 	sub	r2,r3,r2
  8909a0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  8909a4:	e0bff617 	ldw	r2,-40(fp)
  8909a8:	10001e26 	beq	r2,zero,890a24 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  8909ac:	e0fffe17 	ldw	r3,-8(fp)
  8909b0:	e0bff617 	ldw	r2,-40(fp)
  8909b4:	1880022e 	bgeu	r3,r2,8909c0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  8909b8:	e0bffe17 	ldw	r2,-8(fp)
  8909bc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  8909c0:	e0bffc17 	ldw	r2,-16(fp)
  8909c4:	10c20e04 	addi	r3,r2,2104
  8909c8:	e0bff917 	ldw	r2,-28(fp)
  8909cc:	1885883a 	add	r2,r3,r2
  8909d0:	e1bff617 	ldw	r6,-40(fp)
  8909d4:	e17ffd17 	ldw	r5,-12(fp)
  8909d8:	1009883a 	mov	r4,r2
  8909dc:	08883bc0 	call	8883bc <memcpy>
      ptr   += n;
  8909e0:	e0fffd17 	ldw	r3,-12(fp)
  8909e4:	e0bff617 	ldw	r2,-40(fp)
  8909e8:	1885883a 	add	r2,r3,r2
  8909ec:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  8909f0:	e0fffe17 	ldw	r3,-8(fp)
  8909f4:	e0bff617 	ldw	r2,-40(fp)
  8909f8:	1885c83a 	sub	r2,r3,r2
  8909fc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  890a00:	e0fff917 	ldw	r3,-28(fp)
  890a04:	e0bff617 	ldw	r2,-40(fp)
  890a08:	1885883a 	add	r2,r3,r2
  890a0c:	10c1ffcc 	andi	r3,r2,2047
  890a10:	e0bffc17 	ldw	r2,-16(fp)
  890a14:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  890a18:	e0bffe17 	ldw	r2,-8(fp)
  890a1c:	00bfc716 	blt	zero,r2,89093c <altera_avalon_jtag_uart_write+0x30>
  890a20:	00000106 	br	890a28 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  890a24:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  890a28:	0005303a 	rdctl	r2,status
  890a2c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  890a30:	e0fffb17 	ldw	r3,-20(fp)
  890a34:	00bfff84 	movi	r2,-2
  890a38:	1884703a 	and	r2,r3,r2
  890a3c:	1001703a 	wrctl	status,r2
  
  return context;
  890a40:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  890a44:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  890a48:	e0bffc17 	ldw	r2,-16(fp)
  890a4c:	10800817 	ldw	r2,32(r2)
  890a50:	10c00094 	ori	r3,r2,2
  890a54:	e0bffc17 	ldw	r2,-16(fp)
  890a58:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  890a5c:	e0bffc17 	ldw	r2,-16(fp)
  890a60:	10800017 	ldw	r2,0(r2)
  890a64:	10800104 	addi	r2,r2,4
  890a68:	1007883a 	mov	r3,r2
  890a6c:	e0bffc17 	ldw	r2,-16(fp)
  890a70:	10800817 	ldw	r2,32(r2)
  890a74:	18800035 	stwio	r2,0(r3)
  890a78:	e0bffa17 	ldw	r2,-24(fp)
  890a7c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  890a80:	e0bff817 	ldw	r2,-32(fp)
  890a84:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  890a88:	e0bffe17 	ldw	r2,-8(fp)
  890a8c:	0080100e 	bge	zero,r2,890ad0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  890a90:	e0bfff17 	ldw	r2,-4(fp)
  890a94:	1090000c 	andi	r2,r2,16384
  890a98:	1000101e 	bne	r2,zero,890adc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  890a9c:	0001883a 	nop
  890aa0:	e0bffc17 	ldw	r2,-16(fp)
  890aa4:	10c00d17 	ldw	r3,52(r2)
  890aa8:	e0bff517 	ldw	r2,-44(fp)
  890aac:	1880051e 	bne	r3,r2,890ac4 <altera_avalon_jtag_uart_write+0x1b8>
  890ab0:	e0bffc17 	ldw	r2,-16(fp)
  890ab4:	10c00917 	ldw	r3,36(r2)
  890ab8:	e0bffc17 	ldw	r2,-16(fp)
  890abc:	10800117 	ldw	r2,4(r2)
  890ac0:	18bff736 	bltu	r3,r2,890aa0 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  890ac4:	e0bffc17 	ldw	r2,-16(fp)
  890ac8:	10800917 	ldw	r2,36(r2)
  890acc:	1000051e 	bne	r2,zero,890ae4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  890ad0:	e0bffe17 	ldw	r2,-8(fp)
  890ad4:	00bfd016 	blt	zero,r2,890a18 <altera_avalon_jtag_uart_write+0x10c>
  890ad8:	00000306 	br	890ae8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  890adc:	0001883a 	nop
  890ae0:	00000106 	br	890ae8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  890ae4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  890ae8:	e0fffd17 	ldw	r3,-12(fp)
  890aec:	e0bff717 	ldw	r2,-36(fp)
  890af0:	18800426 	beq	r3,r2,890b04 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  890af4:	e0fffd17 	ldw	r3,-12(fp)
  890af8:	e0bff717 	ldw	r2,-36(fp)
  890afc:	1885c83a 	sub	r2,r3,r2
  890b00:	00000606 	br	890b1c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  890b04:	e0bfff17 	ldw	r2,-4(fp)
  890b08:	1090000c 	andi	r2,r2,16384
  890b0c:	10000226 	beq	r2,zero,890b18 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  890b10:	00bffd44 	movi	r2,-11
  890b14:	00000106 	br	890b1c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  890b18:	00bffec4 	movi	r2,-5
}
  890b1c:	e037883a 	mov	sp,fp
  890b20:	dfc00117 	ldw	ra,4(sp)
  890b24:	df000017 	ldw	fp,0(sp)
  890b28:	dec00204 	addi	sp,sp,8
  890b2c:	f800283a 	ret

00890b30 <_ZN12Frame_BufferC1Embi>:
#include "Frame_Buffer.hpp"

#include <cassert>

Frame_Buffer::Frame_Buffer(unsigned long base_address, bool writer_interface, int irq_number) :
  890b30:	deffe404 	addi	sp,sp,-112
  890b34:	dfc01b15 	stw	ra,108(sp)
  890b38:	df001a15 	stw	fp,104(sp)
  890b3c:	ddc01915 	stw	r23,100(sp)
  890b40:	dd801815 	stw	r22,96(sp)
  890b44:	dd401715 	stw	r21,92(sp)
  890b48:	dd001615 	stw	r20,88(sp)
  890b4c:	dcc01515 	stw	r19,84(sp)
  890b50:	dc801415 	stw	r18,80(sp)
  890b54:	dc401315 	stw	r17,76(sp)
  890b58:	dc001215 	stw	r16,72(sp)
  890b5c:	df001a04 	addi	fp,sp,104
  890b60:	e13fe615 	stw	r4,-104(fp)
  890b64:	e17fe715 	stw	r5,-100(fp)
  890b68:	3005883a 	mov	r2,r6
  890b6c:	e1ffe915 	stw	r7,-92(fp)
  890b70:	e0bfe805 	stb	r2,-96(fp)
  890b74:	00802234 	movhi	r2,136
  890b78:	10835d04 	addi	r2,r2,3444
  890b7c:	e0bff015 	stw	r2,-64(fp)
  890b80:	00802274 	movhi	r2,137
  890b84:	10887144 	addi	r2,r2,8645
  890b88:	e0bff115 	stw	r2,-60(fp)
  890b8c:	e0bff204 	addi	r2,fp,-56
  890b90:	e0ffe604 	addi	r3,fp,-104
  890b94:	10c00015 	stw	r3,0(r2)
  890b98:	00c02274 	movhi	r3,137
  890b9c:	18c30004 	addi	r3,r3,3072
  890ba0:	10c00115 	stw	r3,4(r2)
  890ba4:	16c00215 	stw	sp,8(r2)
  890ba8:	e0bfea04 	addi	r2,fp,-88
  890bac:	1009883a 	mov	r4,r2
  890bb0:	08825740 	call	882574 <_Unwind_SjLj_Register>
    VipCore(base_address, irq_number), misc_reg(0) {
  890bb4:	e0ffe617 	ldw	r3,-104(fp)
  890bb8:	00bfffc4 	movi	r2,-1
  890bbc:	e0bfeb15 	stw	r2,-84(fp)
  890bc0:	e1bfe917 	ldw	r6,-92(fp)
  890bc4:	e17fe717 	ldw	r5,-100(fp)
  890bc8:	1809883a 	mov	r4,r3
  890bcc:	0890e100 	call	890e10 <_ZN7VipCoreC1Emi>
  890bd0:	e0bfe617 	ldw	r2,-104(fp)
  890bd4:	10000515 	stw	zero,20(r2)
    do_write(VFB_MISC, misc_reg);
  890bd8:	e0ffe617 	ldw	r3,-104(fp)
  890bdc:	e0bfe617 	ldw	r2,-104(fp)
  890be0:	11000517 	ldw	r4,20(r2)
  890be4:	00800044 	movi	r2,1
  890be8:	e0bfeb15 	stw	r2,-84(fp)
  890bec:	200d883a 	mov	r6,r4
  890bf0:	01400204 	movi	r5,8
  890bf4:	1809883a 	mov	r4,r3
  890bf8:	0890d880 	call	890d88 <_ZN7VipCore8do_writeEjj>
}
  890bfc:	00000c06 	br	890c30 <_ZN12Frame_BufferC1Embi+0x100>
  890c00:	e7001a04 	addi	fp,fp,104
  890c04:	e0bfec17 	ldw	r2,-80(fp)
  890c08:	e0bff715 	stw	r2,-36(fp)
#include "Frame_Buffer.hpp"

#include <cassert>

Frame_Buffer::Frame_Buffer(unsigned long base_address, bool writer_interface, int irq_number) :
    VipCore(base_address, irq_number), misc_reg(0) {
  890c0c:	e0bfe617 	ldw	r2,-104(fp)
  890c10:	e03feb15 	stw	zero,-84(fp)
  890c14:	1009883a 	mov	r4,r2
  890c18:	0890eb80 	call	890eb8 <_ZN7VipCoreD1Ev>
  890c1c:	e0fff717 	ldw	r3,-36(fp)
  890c20:	00bfffc4 	movi	r2,-1
  890c24:	e0bfeb15 	stw	r2,-84(fp)
  890c28:	1809883a 	mov	r4,r3
  890c2c:	08827700 	call	882770 <_Unwind_SjLj_Resume>
  890c30:	e0bfea04 	addi	r2,fp,-88
  890c34:	1009883a 	mov	r4,r2
  890c38:	088258c0 	call	88258c <_Unwind_SjLj_Unregister>
    do_write(VFB_MISC, misc_reg);
}
  890c3c:	e6fff804 	addi	sp,fp,-32
  890c40:	dfc00917 	ldw	ra,36(sp)
  890c44:	df000817 	ldw	fp,32(sp)
  890c48:	ddc00717 	ldw	r23,28(sp)
  890c4c:	dd800617 	ldw	r22,24(sp)
  890c50:	dd400517 	ldw	r21,20(sp)
  890c54:	dd000417 	ldw	r20,16(sp)
  890c58:	dcc00317 	ldw	r19,12(sp)
  890c5c:	dc800217 	ldw	r18,8(sp)
  890c60:	dc400117 	ldw	r17,4(sp)
  890c64:	dc000017 	ldw	r16,0(sp)
  890c68:	dec00a04 	addi	sp,sp,40
  890c6c:	f800283a 	ret

00890c70 <_ZN12Frame_Buffer24set_user_packet_affinityENS_18UserPacketAffinityE>:

void Frame_Buffer::set_user_packet_affinity(UserPacketAffinity user_packet_affinity) {
  890c70:	defffc04 	addi	sp,sp,-16
  890c74:	dfc00315 	stw	ra,12(sp)
  890c78:	df000215 	stw	fp,8(sp)
  890c7c:	df000204 	addi	fp,sp,8
  890c80:	e13ffe15 	stw	r4,-8(fp)
  890c84:	e17fff15 	stw	r5,-4(fp)
    if (user_packet_affinity == DROP_OR_REPEAT_WITH_ASSOCIATED_FRAME) {
  890c88:	e0bfff17 	ldw	r2,-4(fp)
  890c8c:	1000071e 	bne	r2,zero,890cac <_ZN12Frame_Buffer24set_user_packet_affinityENS_18UserPacketAffinityE+0x3c>
        misc_reg = misc_reg & ~(1 << USER_PACKET_AFFINITY);
  890c90:	e0bffe17 	ldw	r2,-8(fp)
  890c94:	10c00517 	ldw	r3,20(r2)
  890c98:	00bfff44 	movi	r2,-3
  890c9c:	1886703a 	and	r3,r3,r2
  890ca0:	e0bffe17 	ldw	r2,-8(fp)
  890ca4:	10c00515 	stw	r3,20(r2)
  890ca8:	00000506 	br	890cc0 <_ZN12Frame_Buffer24set_user_packet_affinityENS_18UserPacketAffinityE+0x50>
    } else {
        misc_reg = misc_reg | (1 << USER_PACKET_AFFINITY);
  890cac:	e0bffe17 	ldw	r2,-8(fp)
  890cb0:	10800517 	ldw	r2,20(r2)
  890cb4:	10c00094 	ori	r3,r2,2
  890cb8:	e0bffe17 	ldw	r2,-8(fp)
  890cbc:	10c00515 	stw	r3,20(r2)
    }
    do_write(VFB_MISC, misc_reg);
  890cc0:	e0fffe17 	ldw	r3,-8(fp)
  890cc4:	e0bffe17 	ldw	r2,-8(fp)
  890cc8:	10800517 	ldw	r2,20(r2)
  890ccc:	100d883a 	mov	r6,r2
  890cd0:	01400204 	movi	r5,8
  890cd4:	1809883a 	mov	r4,r3
  890cd8:	0890d880 	call	890d88 <_ZN7VipCore8do_writeEjj>
}
  890cdc:	0001883a 	nop
  890ce0:	e037883a 	mov	sp,fp
  890ce4:	dfc00117 	ldw	ra,4(sp)
  890ce8:	df000017 	ldw	fp,0(sp)
  890cec:	dec00204 	addi	sp,sp,8
  890cf0:	f800283a 	ret

00890cf4 <_ZN12Frame_Buffer15set_frame_delayEj>:

void Frame_Buffer::set_frame_delay(unsigned int delay) {
  890cf4:	defffc04 	addi	sp,sp,-16
  890cf8:	dfc00315 	stw	ra,12(sp)
  890cfc:	df000215 	stw	fp,8(sp)
  890d00:	df000204 	addi	fp,sp,8
  890d04:	e13ffe15 	stw	r4,-8(fp)
  890d08:	e17fff15 	stw	r5,-4(fp)
    assert(delay >= 1);
  890d0c:	e0bfff17 	ldw	r2,-4(fp)
  890d10:	1000081e 	bne	r2,zero,890d34 <_ZN12Frame_Buffer15set_frame_delayEj+0x40>
  890d14:	01c02274 	movhi	r7,137
  890d18:	39ca0804 	addi	r7,r7,10272
  890d1c:	01802274 	movhi	r6,137
  890d20:	318a2504 	addi	r6,r6,10388
  890d24:	01400504 	movi	r5,20
  890d28:	01002274 	movhi	r4,137
  890d2c:	210a0b04 	addi	r4,r4,10284
  890d30:	08828a40 	call	8828a4 <__assert_func>
    misc_reg = (misc_reg & ((1 << FRAME_DELAY_BASE) - 1)) | (delay << FRAME_DELAY_BASE);
  890d34:	e0bffe17 	ldw	r2,-8(fp)
  890d38:	10800517 	ldw	r2,20(r2)
  890d3c:	10ffffcc 	andi	r3,r2,65535
  890d40:	e0bfff17 	ldw	r2,-4(fp)
  890d44:	1004943a 	slli	r2,r2,16
  890d48:	1886b03a 	or	r3,r3,r2
  890d4c:	e0bffe17 	ldw	r2,-8(fp)
  890d50:	10c00515 	stw	r3,20(r2)
    do_write(VFB_MISC, misc_reg);
  890d54:	e0fffe17 	ldw	r3,-8(fp)
  890d58:	e0bffe17 	ldw	r2,-8(fp)
  890d5c:	10800517 	ldw	r2,20(r2)
  890d60:	100d883a 	mov	r6,r2
  890d64:	01400204 	movi	r5,8
  890d68:	1809883a 	mov	r4,r3
  890d6c:	0890d880 	call	890d88 <_ZN7VipCore8do_writeEjj>
}
  890d70:	0001883a 	nop
  890d74:	e037883a 	mov	sp,fp
  890d78:	dfc00117 	ldw	ra,4(sp)
  890d7c:	df000017 	ldw	fp,0(sp)
  890d80:	dec00204 	addi	sp,sp,8
  890d84:	f800283a 	ret

00890d88 <_ZN7VipCore8do_writeEjj>:
     * @brief   Write to the specified register
     * @param   offset    the register number
     * @param   value     new register content
     * @pre     offset > 2. Use write_control_register() and write_interrupt_register() for direct access to the base registers
     */
    inline void do_write(unsigned int offset, unsigned int value)
  890d88:	defffb04 	addi	sp,sp,-20
  890d8c:	dfc00415 	stw	ra,16(sp)
  890d90:	df000315 	stw	fp,12(sp)
  890d94:	df000304 	addi	fp,sp,12
  890d98:	e13ffd15 	stw	r4,-12(fp)
  890d9c:	e17ffe15 	stw	r5,-8(fp)
  890da0:	e1bfff15 	stw	r6,-4(fp)
    {
        assert(offset > 2); // This is not the appropriate function to modify the control/status/interrupt registers
  890da4:	e0bffe17 	ldw	r2,-8(fp)
  890da8:	108000e8 	cmpgeui	r2,r2,3
  890dac:	1000081e 	bne	r2,zero,890dd0 <_ZN7VipCore8do_writeEjj+0x48>
  890db0:	01c02274 	movhi	r7,137
  890db4:	39c9f904 	addi	r7,r7,10212
  890db8:	01802274 	movhi	r6,137
  890dbc:	318a1804 	addi	r6,r6,10336
  890dc0:	01404d44 	movi	r5,309
  890dc4:	01002274 	movhi	r4,137
  890dc8:	2109fc04 	addi	r4,r4,10224
  890dcc:	08828a40 	call	8828a4 <__assert_func>
        IOWR(base_address, offset, value);
  890dd0:	e0bffe17 	ldw	r2,-8(fp)
  890dd4:	1085883a 	add	r2,r2,r2
  890dd8:	1085883a 	add	r2,r2,r2
  890ddc:	1007883a 	mov	r3,r2
  890de0:	e0bffd17 	ldw	r2,-12(fp)
  890de4:	10800017 	ldw	r2,0(r2)
  890de8:	1885883a 	add	r2,r3,r2
  890dec:	1007883a 	mov	r3,r2
  890df0:	e0bfff17 	ldw	r2,-4(fp)
  890df4:	18800035 	stwio	r2,0(r3)
    }
  890df8:	0001883a 	nop
  890dfc:	e037883a 	mov	sp,fp
  890e00:	dfc00117 	ldw	ra,4(sp)
  890e04:	df000017 	ldw	fp,0(sp)
  890e08:	dec00204 	addi	sp,sp,8
  890e0c:	f800283a 	ret

00890e10 <_ZN7VipCoreC1Emi>:
#include "VipCore.hpp"

#include "VipUtil.hpp"

VipCore::VipCore(unsigned long base_address, int irq_number)
  890e10:	defffb04 	addi	sp,sp,-20
  890e14:	dfc00415 	stw	ra,16(sp)
  890e18:	df000315 	stw	fp,12(sp)
  890e1c:	df000304 	addi	fp,sp,12
  890e20:	e13ffd15 	stw	r4,-12(fp)
  890e24:	e17ffe15 	stw	r5,-8(fp)
  890e28:	e1bfff15 	stw	r6,-4(fp)
: base_address(base_address), irq_number(irq_number) {
  890e2c:	e0bffd17 	ldw	r2,-12(fp)
  890e30:	e0fffe17 	ldw	r3,-8(fp)
  890e34:	10c00015 	stw	r3,0(r2)
  890e38:	e0bffd17 	ldw	r2,-12(fp)
  890e3c:	e0ffff17 	ldw	r3,-4(fp)
  890e40:	10c00115 	stw	r3,4(r2)
    // Stop the core, reset to default state
    control_reg = 0;
  890e44:	e0bffd17 	ldw	r2,-12(fp)
  890e48:	10000215 	stw	zero,8(r2)
    reg_write(REGISTER_CONTROL, control_reg);
  890e4c:	e0bffd17 	ldw	r2,-12(fp)
  890e50:	10800217 	ldw	r2,8(r2)
  890e54:	100d883a 	mov	r6,r2
  890e58:	000b883a 	mov	r5,zero
  890e5c:	e13ffd17 	ldw	r4,-12(fp)
  890e60:	08805000 	call	880500 <_ZN7VipCore9reg_writeEjj>
    user_isr = NULL;
  890e64:	e0bffd17 	ldw	r2,-12(fp)
  890e68:	10000315 	stw	zero,12(r2)

    if (irq_number != -1) {
  890e6c:	e0bfff17 	ldw	r2,-4(fp)
  890e70:	10bfffe0 	cmpeqi	r2,r2,-1
  890e74:	10000a1e 	bne	r2,zero,890ea0 <_ZN7VipCoreC1Emi+0x90>
        // Clear all interrupts
        reg_write(REGISTER_INTERRUPT, -1);
  890e78:	01bfffc4 	movi	r6,-1
  890e7c:	01400084 	movi	r5,2
  890e80:	e13ffd17 	ldw	r4,-12(fp)
  890e84:	08805000 	call	880500 <_ZN7VipCore9reg_writeEjj>
        //  extern int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, void *isr_context, void *flags);
        alt_ic_isr_register(0, irq_number, genericISR, this, NULL);
#else
        // Legacy mode, use prototype:
        // extern int alt_irq_register (alt_u32 id, void* context, alt_isr_func handler)
        alt_irq_register(irq_number, this, genericISR_legacy);
  890e88:	e0bfff17 	ldw	r2,-4(fp)
  890e8c:	01802274 	movhi	r6,137
  890e90:	3183c304 	addi	r6,r6,3852
  890e94:	e17ffd17 	ldw	r5,-12(fp)
  890e98:	1009883a 	mov	r4,r2
  890e9c:	08915240 	call	891524 <alt_irq_register>
#endif
    }
}
  890ea0:	0001883a 	nop
  890ea4:	e037883a 	mov	sp,fp
  890ea8:	dfc00117 	ldw	ra,4(sp)
  890eac:	df000017 	ldw	fp,0(sp)
  890eb0:	dec00204 	addi	sp,sp,8
  890eb4:	f800283a 	ret

00890eb8 <_ZN7VipCoreD1Ev>:

VipCore::~VipCore()
  890eb8:	defffd04 	addi	sp,sp,-12
  890ebc:	dfc00215 	stw	ra,8(sp)
  890ec0:	df000115 	stw	fp,4(sp)
  890ec4:	df000104 	addi	fp,sp,4
  890ec8:	e13fff15 	stw	r4,-4(fp)
{
    // Deregister the ISR
    if (irq_number != -1) {
  890ecc:	e0bfff17 	ldw	r2,-4(fp)
  890ed0:	10800117 	ldw	r2,4(r2)
  890ed4:	10bfffe0 	cmpeqi	r2,r2,-1
  890ed8:	1000061e 	bne	r2,zero,890ef4 <_ZN7VipCoreD1Ev+0x3c>
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_ic_isr_register(0, irq_number, NULL, this, NULL);
#else
        alt_irq_register(irq_number, this, NULL);
  890edc:	e0bfff17 	ldw	r2,-4(fp)
  890ee0:	10800117 	ldw	r2,4(r2)
  890ee4:	000d883a 	mov	r6,zero
  890ee8:	e17fff17 	ldw	r5,-4(fp)
  890eec:	1009883a 	mov	r4,r2
  890ef0:	08915240 	call	891524 <alt_irq_register>
#endif
    }
}
  890ef4:	0001883a 	nop
  890ef8:	e037883a 	mov	sp,fp
  890efc:	dfc00117 	ldw	ra,4(sp)
  890f00:	df000017 	ldw	fp,0(sp)
  890f04:	dec00204 	addi	sp,sp,8
  890f08:	f800283a 	ret

00890f0c <_ZN7VipCore17genericISR_legacyEPvm>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
void VipCore::genericISR(void* context)
#else
void VipCore::genericISR_legacy(void* context, alt_u32 id)
#endif
{
  890f0c:	defffb04 	addi	sp,sp,-20
  890f10:	dfc00415 	stw	ra,16(sp)
  890f14:	df000315 	stw	fp,12(sp)
  890f18:	df000304 	addi	fp,sp,12
  890f1c:	e13ffe15 	stw	r4,-8(fp)
  890f20:	e17fff15 	stw	r5,-4(fp)
    VipCore* core = (VipCore*)context;
  890f24:	e0bffe17 	ldw	r2,-8(fp)
  890f28:	e0bffd15 	stw	r2,-12(fp)
    core->isr();
  890f2c:	e13ffd17 	ldw	r4,-12(fp)
  890f30:	0890f4c0 	call	890f4c <_ZN7VipCore3isrEv>
}
  890f34:	0001883a 	nop
  890f38:	e037883a 	mov	sp,fp
  890f3c:	dfc00117 	ldw	ra,4(sp)
  890f40:	df000017 	ldw	fp,0(sp)
  890f44:	dec00204 	addi	sp,sp,8
  890f48:	f800283a 	ret

00890f4c <_ZN7VipCore3isrEv>:

void VipCore::isr()
{
  890f4c:	defffc04 	addi	sp,sp,-16
  890f50:	dfc00315 	stw	ra,12(sp)
  890f54:	df000215 	stw	fp,8(sp)
  890f58:	df000204 	addi	fp,sp,8
  890f5c:	e13fff15 	stw	r4,-4(fp)
    // Get the status that triggered the interrupt
    unsigned int interrupt_status = read_interrupt_register();
  890f60:	e13fff17 	ldw	r4,-4(fp)
  890f64:	0890fb40 	call	890fb4 <_ZNK7VipCore23read_interrupt_registerEv>
  890f68:	e0bffe15 	stw	r2,-8(fp)
    // User callback (optional)
    if (user_isr) {
  890f6c:	e0bfff17 	ldw	r2,-4(fp)
  890f70:	10800317 	ldw	r2,12(r2)
  890f74:	10000626 	beq	r2,zero,890f90 <_ZN7VipCore3isrEv+0x44>
        interrupt_status = user_isr(this, interrupt_status);
  890f78:	e0bfff17 	ldw	r2,-4(fp)
  890f7c:	10800317 	ldw	r2,12(r2)
  890f80:	e17ffe17 	ldw	r5,-8(fp)
  890f84:	e13fff17 	ldw	r4,-4(fp)
  890f88:	103ee83a 	callr	r2
  890f8c:	e0bffe15 	stw	r2,-8(fp)
    }
    // Clear the interrupt(s)
    write_interrupt_register(interrupt_status);
  890f90:	e17ffe17 	ldw	r5,-8(fp)
  890f94:	e13fff17 	ldw	r4,-4(fp)
  890f98:	0890fe80 	call	890fe8 <_ZN7VipCore24write_interrupt_registerEj>
}
  890f9c:	0001883a 	nop
  890fa0:	e037883a 	mov	sp,fp
  890fa4:	dfc00117 	ldw	ra,4(sp)
  890fa8:	df000017 	ldw	fp,0(sp)
  890fac:	dec00204 	addi	sp,sp,8
  890fb0:	f800283a 	ret

00890fb4 <_ZNK7VipCore23read_interrupt_registerEv>:
    /**
     * @brief   Read the interrupt register
     * @return  Current interrupt register value
     *
     */
    inline unsigned int read_interrupt_register() const
  890fb4:	defffd04 	addi	sp,sp,-12
  890fb8:	dfc00215 	stw	ra,8(sp)
  890fbc:	df000115 	stw	fp,4(sp)
  890fc0:	df000104 	addi	fp,sp,4
  890fc4:	e13fff15 	stw	r4,-4(fp)
    {
        return reg_read(REGISTER_INTERRUPT);
  890fc8:	01400084 	movi	r5,2
  890fcc:	e13fff17 	ldw	r4,-4(fp)
  890fd0:	08910280 	call	891028 <_ZNK7VipCore8reg_readEj>
    }
  890fd4:	e037883a 	mov	sp,fp
  890fd8:	dfc00117 	ldw	ra,4(sp)
  890fdc:	df000017 	ldw	fp,0(sp)
  890fe0:	dec00204 	addi	sp,sp,8
  890fe4:	f800283a 	ret

00890fe8 <_ZN7VipCore24write_interrupt_registerEj>:
    /**
     * @brief   Write to the interrupt register
     * @param   interrupt_mask   the value to write to the interrupt register
     * @post    Typically, this action clears the interrupts flagged in interrupt_mask
     */
    inline void write_interrupt_register(unsigned int interrupt_mask)
  890fe8:	defffc04 	addi	sp,sp,-16
  890fec:	dfc00315 	stw	ra,12(sp)
  890ff0:	df000215 	stw	fp,8(sp)
  890ff4:	df000204 	addi	fp,sp,8
  890ff8:	e13ffe15 	stw	r4,-8(fp)
  890ffc:	e17fff15 	stw	r5,-4(fp)
    {
        reg_write(REGISTER_INTERRUPT, interrupt_mask);
  891000:	e1bfff17 	ldw	r6,-4(fp)
  891004:	01400084 	movi	r5,2
  891008:	e13ffe17 	ldw	r4,-8(fp)
  89100c:	08805000 	call	880500 <_ZN7VipCore9reg_writeEjj>
    }
  891010:	0001883a 	nop
  891014:	e037883a 	mov	sp,fp
  891018:	dfc00117 	ldw	ra,4(sp)
  89101c:	df000017 	ldw	fp,0(sp)
  891020:	dec00204 	addi	sp,sp,8
  891024:	f800283a 	ret

00891028 <_ZNK7VipCore8reg_readEj>:
    }

    /**
     * @brief  An internal non-public version of do_read that may also be used for the status and interrupt register
     */
    inline unsigned int reg_read(unsigned int offset) const
  891028:	defffc04 	addi	sp,sp,-16
  89102c:	dfc00315 	stw	ra,12(sp)
  891030:	df000215 	stw	fp,8(sp)
  891034:	df000204 	addi	fp,sp,8
  891038:	e13ffe15 	stw	r4,-8(fp)
  89103c:	e17fff15 	stw	r5,-4(fp)
    {
        assert(offset != 0);
  891040:	e0bfff17 	ldw	r2,-4(fp)
  891044:	1000081e 	bne	r2,zero,891068 <_ZNK7VipCore8reg_readEj+0x40>
  891048:	01c02274 	movhi	r7,137
  89104c:	39ca4104 	addi	r7,r7,10500
  891050:	01802274 	movhi	r6,137
  891054:	318a5104 	addi	r6,r6,10564
  891058:	01405584 	movi	r5,342
  89105c:	01002274 	movhi	r4,137
  891060:	210a3504 	addi	r4,r4,10452
  891064:	08828a40 	call	8828a4 <__assert_func>
        return IORD(base_address, offset);
  891068:	e0bfff17 	ldw	r2,-4(fp)
  89106c:	1085883a 	add	r2,r2,r2
  891070:	1085883a 	add	r2,r2,r2
  891074:	1007883a 	mov	r3,r2
  891078:	e0bffe17 	ldw	r2,-8(fp)
  89107c:	10800017 	ldw	r2,0(r2)
  891080:	1885883a 	add	r2,r3,r2
  891084:	10800037 	ldwio	r2,0(r2)
    }
  891088:	e037883a 	mov	sp,fp
  89108c:	dfc00117 	ldw	ra,4(sp)
  891090:	df000017 	ldw	fp,0(sp)
  891094:	dec00204 	addi	sp,sp,8
  891098:	f800283a 	ret

0089109c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  89109c:	defff504 	addi	sp,sp,-44
  8910a0:	df000a15 	stw	fp,40(sp)
  8910a4:	df000a04 	addi	fp,sp,40
  8910a8:	e13ffc15 	stw	r4,-16(fp)
  8910ac:	e17ffd15 	stw	r5,-12(fp)
  8910b0:	e1bffe15 	stw	r6,-8(fp)
  8910b4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  8910b8:	e03ff615 	stw	zero,-40(fp)
  8910bc:	d0a6f917 	ldw	r2,-25628(gp)
  
  if (alt_ticks_per_second ())
  8910c0:	10003c26 	beq	r2,zero,8911b4 <alt_alarm_start+0x118>
  {
    if (alarm)
  8910c4:	e0bffc17 	ldw	r2,-16(fp)
  8910c8:	10003826 	beq	r2,zero,8911ac <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  8910cc:	e0bffc17 	ldw	r2,-16(fp)
  8910d0:	e0fffe17 	ldw	r3,-8(fp)
  8910d4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  8910d8:	e0bffc17 	ldw	r2,-16(fp)
  8910dc:	e0ffff17 	ldw	r3,-4(fp)
  8910e0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8910e4:	0005303a 	rdctl	r2,status
  8910e8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8910ec:	e0fff917 	ldw	r3,-28(fp)
  8910f0:	00bfff84 	movi	r2,-2
  8910f4:	1884703a 	and	r2,r3,r2
  8910f8:	1001703a 	wrctl	status,r2
  
  return context;
  8910fc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  891100:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  891104:	d0a6fa17 	ldw	r2,-25624(gp)
      
      current_nticks = alt_nticks();
  891108:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  89110c:	e0fffd17 	ldw	r3,-12(fp)
  891110:	e0bff617 	ldw	r2,-40(fp)
  891114:	1885883a 	add	r2,r3,r2
  891118:	10c00044 	addi	r3,r2,1
  89111c:	e0bffc17 	ldw	r2,-16(fp)
  891120:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  891124:	e0bffc17 	ldw	r2,-16(fp)
  891128:	10c00217 	ldw	r3,8(r2)
  89112c:	e0bff617 	ldw	r2,-40(fp)
  891130:	1880042e 	bgeu	r3,r2,891144 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  891134:	e0bffc17 	ldw	r2,-16(fp)
  891138:	00c00044 	movi	r3,1
  89113c:	10c00405 	stb	r3,16(r2)
  891140:	00000206 	br	89114c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  891144:	e0bffc17 	ldw	r2,-16(fp)
  891148:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  89114c:	e0bffc17 	ldw	r2,-16(fp)
  891150:	d0e01804 	addi	r3,gp,-32672
  891154:	e0fffa15 	stw	r3,-24(fp)
  891158:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  89115c:	e0bffb17 	ldw	r2,-20(fp)
  891160:	e0fffa17 	ldw	r3,-24(fp)
  891164:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  891168:	e0bffa17 	ldw	r2,-24(fp)
  89116c:	10c00017 	ldw	r3,0(r2)
  891170:	e0bffb17 	ldw	r2,-20(fp)
  891174:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  891178:	e0bffa17 	ldw	r2,-24(fp)
  89117c:	10800017 	ldw	r2,0(r2)
  891180:	e0fffb17 	ldw	r3,-20(fp)
  891184:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  891188:	e0bffa17 	ldw	r2,-24(fp)
  89118c:	e0fffb17 	ldw	r3,-20(fp)
  891190:	10c00015 	stw	r3,0(r2)
  891194:	e0bff817 	ldw	r2,-32(fp)
  891198:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  89119c:	e0bff717 	ldw	r2,-36(fp)
  8911a0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  8911a4:	0005883a 	mov	r2,zero
  8911a8:	00000306 	br	8911b8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  8911ac:	00bffa84 	movi	r2,-22
  8911b0:	00000106 	br	8911b8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  8911b4:	00bfde84 	movi	r2,-134
  }
}
  8911b8:	e037883a 	mov	sp,fp
  8911bc:	df000017 	ldw	fp,0(sp)
  8911c0:	dec00104 	addi	sp,sp,4
  8911c4:	f800283a 	ret

008911c8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  8911c8:	defffe04 	addi	sp,sp,-8
  8911cc:	df000115 	stw	fp,4(sp)
  8911d0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  8911d4:	e03fff15 	stw	zero,-4(fp)
  8911d8:	00000506 	br	8911f0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  8911dc:	e0bfff17 	ldw	r2,-4(fp)
  8911e0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  8911e4:	e0bfff17 	ldw	r2,-4(fp)
  8911e8:	10800804 	addi	r2,r2,32
  8911ec:	e0bfff15 	stw	r2,-4(fp)
  8911f0:	e0bfff17 	ldw	r2,-4(fp)
  8911f4:	10820030 	cmpltui	r2,r2,2048
  8911f8:	103ff81e 	bne	r2,zero,8911dc <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  8911fc:	0001883a 	nop
  891200:	e037883a 	mov	sp,fp
  891204:	df000017 	ldw	fp,0(sp)
  891208:	dec00104 	addi	sp,sp,4
  89120c:	f800283a 	ret

00891210 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  891210:	defffe04 	addi	sp,sp,-8
  891214:	dfc00115 	stw	ra,4(sp)
  891218:	df000015 	stw	fp,0(sp)
  89121c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  891220:	d0a01517 	ldw	r2,-32684(gp)
  891224:	10000326 	beq	r2,zero,891234 <alt_get_errno+0x24>
  891228:	d0a01517 	ldw	r2,-32684(gp)
  89122c:	103ee83a 	callr	r2
  891230:	00000106 	br	891238 <alt_get_errno+0x28>
  891234:	d0a6f104 	addi	r2,gp,-25660
}
  891238:	e037883a 	mov	sp,fp
  89123c:	dfc00117 	ldw	ra,4(sp)
  891240:	df000017 	ldw	fp,0(sp)
  891244:	dec00204 	addi	sp,sp,8
  891248:	f800283a 	ret

0089124c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  89124c:	defffa04 	addi	sp,sp,-24
  891250:	dfc00515 	stw	ra,20(sp)
  891254:	df000415 	stw	fp,16(sp)
  891258:	df000404 	addi	fp,sp,16
  89125c:	e13ffe15 	stw	r4,-8(fp)
  891260:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  891264:	e0bffe17 	ldw	r2,-8(fp)
  891268:	10000326 	beq	r2,zero,891278 <alt_dev_llist_insert+0x2c>
  89126c:	e0bffe17 	ldw	r2,-8(fp)
  891270:	10800217 	ldw	r2,8(r2)
  891274:	1000061e 	bne	r2,zero,891290 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  891278:	08912100 	call	891210 <alt_get_errno>
  89127c:	1007883a 	mov	r3,r2
  891280:	00800584 	movi	r2,22
  891284:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  891288:	00bffa84 	movi	r2,-22
  89128c:	00001306 	br	8912dc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  891290:	e0bffe17 	ldw	r2,-8(fp)
  891294:	e0ffff17 	ldw	r3,-4(fp)
  891298:	e0fffc15 	stw	r3,-16(fp)
  89129c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  8912a0:	e0bffd17 	ldw	r2,-12(fp)
  8912a4:	e0fffc17 	ldw	r3,-16(fp)
  8912a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  8912ac:	e0bffc17 	ldw	r2,-16(fp)
  8912b0:	10c00017 	ldw	r3,0(r2)
  8912b4:	e0bffd17 	ldw	r2,-12(fp)
  8912b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  8912bc:	e0bffc17 	ldw	r2,-16(fp)
  8912c0:	10800017 	ldw	r2,0(r2)
  8912c4:	e0fffd17 	ldw	r3,-12(fp)
  8912c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  8912cc:	e0bffc17 	ldw	r2,-16(fp)
  8912d0:	e0fffd17 	ldw	r3,-12(fp)
  8912d4:	10c00015 	stw	r3,0(r2)

  return 0;  
  8912d8:	0005883a 	mov	r2,zero
}
  8912dc:	e037883a 	mov	sp,fp
  8912e0:	dfc00117 	ldw	ra,4(sp)
  8912e4:	df000017 	ldw	fp,0(sp)
  8912e8:	dec00204 	addi	sp,sp,8
  8912ec:	f800283a 	ret

008912f0 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  8912f0:	defffd04 	addi	sp,sp,-12
  8912f4:	dfc00215 	stw	ra,8(sp)
  8912f8:	df000115 	stw	fp,4(sp)
  8912fc:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  891300:	00802274 	movhi	r2,137
  891304:	10887304 	addi	r2,r2,8652
  891308:	e0bfff15 	stw	r2,-4(fp)
  89130c:	00000606 	br	891328 <_do_ctors+0x38>
        (*ctor) (); 
  891310:	e0bfff17 	ldw	r2,-4(fp)
  891314:	10800017 	ldw	r2,0(r2)
  891318:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  89131c:	e0bfff17 	ldw	r2,-4(fp)
  891320:	10bfff04 	addi	r2,r2,-4
  891324:	e0bfff15 	stw	r2,-4(fp)
  891328:	e0ffff17 	ldw	r3,-4(fp)
  89132c:	00802274 	movhi	r2,137
  891330:	108872c4 	addi	r2,r2,8651
  891334:	18bff62e 	bgeu	r3,r2,891310 <_do_ctors+0x20>
        (*ctor) (); 
}
  891338:	0001883a 	nop
  89133c:	e037883a 	mov	sp,fp
  891340:	dfc00117 	ldw	ra,4(sp)
  891344:	df000017 	ldw	fp,0(sp)
  891348:	dec00204 	addi	sp,sp,8
  89134c:	f800283a 	ret

00891350 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  891350:	defffd04 	addi	sp,sp,-12
  891354:	dfc00215 	stw	ra,8(sp)
  891358:	df000115 	stw	fp,4(sp)
  89135c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  891360:	00802274 	movhi	r2,137
  891364:	10887304 	addi	r2,r2,8652
  891368:	e0bfff15 	stw	r2,-4(fp)
  89136c:	00000606 	br	891388 <_do_dtors+0x38>
        (*dtor) (); 
  891370:	e0bfff17 	ldw	r2,-4(fp)
  891374:	10800017 	ldw	r2,0(r2)
  891378:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  89137c:	e0bfff17 	ldw	r2,-4(fp)
  891380:	10bfff04 	addi	r2,r2,-4
  891384:	e0bfff15 	stw	r2,-4(fp)
  891388:	e0ffff17 	ldw	r3,-4(fp)
  89138c:	00802274 	movhi	r2,137
  891390:	10887404 	addi	r2,r2,8656
  891394:	18bff62e 	bgeu	r3,r2,891370 <_do_dtors+0x20>
        (*dtor) (); 
}
  891398:	0001883a 	nop
  89139c:	e037883a 	mov	sp,fp
  8913a0:	dfc00117 	ldw	ra,4(sp)
  8913a4:	df000017 	ldw	fp,0(sp)
  8913a8:	dec00204 	addi	sp,sp,8
  8913ac:	f800283a 	ret

008913b0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  8913b0:	defffe04 	addi	sp,sp,-8
  8913b4:	dfc00115 	stw	ra,4(sp)
  8913b8:	df000015 	stw	fp,0(sp)
  8913bc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  8913c0:	01440004 	movi	r5,4096
  8913c4:	0009883a 	mov	r4,zero
  8913c8:	0891cfc0 	call	891cfc <alt_icache_flush>
#endif
}
  8913cc:	0001883a 	nop
  8913d0:	e037883a 	mov	sp,fp
  8913d4:	dfc00117 	ldw	ra,4(sp)
  8913d8:	df000017 	ldw	fp,0(sp)
  8913dc:	dec00204 	addi	sp,sp,8
  8913e0:	f800283a 	ret

008913e4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  8913e4:	defff904 	addi	sp,sp,-28
  8913e8:	dfc00615 	stw	ra,24(sp)
  8913ec:	df000515 	stw	fp,20(sp)
  8913f0:	df000504 	addi	fp,sp,20
  8913f4:	e13ffc15 	stw	r4,-16(fp)
  8913f8:	e17ffd15 	stw	r5,-12(fp)
  8913fc:	e1bffe15 	stw	r6,-8(fp)
  891400:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  891404:	e1bfff17 	ldw	r6,-4(fp)
  891408:	e17ffe17 	ldw	r5,-8(fp)
  89140c:	e13ffd17 	ldw	r4,-12(fp)
  891410:	08917a40 	call	8917a4 <open>
  891414:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  891418:	e0bffb17 	ldw	r2,-20(fp)
  89141c:	10001c16 	blt	r2,zero,891490 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  891420:	00802274 	movhi	r2,137
  891424:	108c9104 	addi	r2,r2,12868
  891428:	e0fffb17 	ldw	r3,-20(fp)
  89142c:	18c00324 	muli	r3,r3,12
  891430:	10c5883a 	add	r2,r2,r3
  891434:	10c00017 	ldw	r3,0(r2)
  891438:	e0bffc17 	ldw	r2,-16(fp)
  89143c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  891440:	00802274 	movhi	r2,137
  891444:	108c9104 	addi	r2,r2,12868
  891448:	e0fffb17 	ldw	r3,-20(fp)
  89144c:	18c00324 	muli	r3,r3,12
  891450:	10c5883a 	add	r2,r2,r3
  891454:	10800104 	addi	r2,r2,4
  891458:	10c00017 	ldw	r3,0(r2)
  89145c:	e0bffc17 	ldw	r2,-16(fp)
  891460:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  891464:	00802274 	movhi	r2,137
  891468:	108c9104 	addi	r2,r2,12868
  89146c:	e0fffb17 	ldw	r3,-20(fp)
  891470:	18c00324 	muli	r3,r3,12
  891474:	10c5883a 	add	r2,r2,r3
  891478:	10800204 	addi	r2,r2,8
  89147c:	10c00017 	ldw	r3,0(r2)
  891480:	e0bffc17 	ldw	r2,-16(fp)
  891484:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  891488:	e13ffb17 	ldw	r4,-20(fp)
  89148c:	088fdc80 	call	88fdc8 <alt_release_fd>
  }
} 
  891490:	0001883a 	nop
  891494:	e037883a 	mov	sp,fp
  891498:	dfc00117 	ldw	ra,4(sp)
  89149c:	df000017 	ldw	fp,0(sp)
  8914a0:	dec00204 	addi	sp,sp,8
  8914a4:	f800283a 	ret

008914a8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  8914a8:	defffb04 	addi	sp,sp,-20
  8914ac:	dfc00415 	stw	ra,16(sp)
  8914b0:	df000315 	stw	fp,12(sp)
  8914b4:	df000304 	addi	fp,sp,12
  8914b8:	e13ffd15 	stw	r4,-12(fp)
  8914bc:	e17ffe15 	stw	r5,-8(fp)
  8914c0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  8914c4:	01c07fc4 	movi	r7,511
  8914c8:	01800044 	movi	r6,1
  8914cc:	e17ffd17 	ldw	r5,-12(fp)
  8914d0:	01002274 	movhi	r4,137
  8914d4:	210c9404 	addi	r4,r4,12880
  8914d8:	08913e40 	call	8913e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  8914dc:	01c07fc4 	movi	r7,511
  8914e0:	000d883a 	mov	r6,zero
  8914e4:	e17ffe17 	ldw	r5,-8(fp)
  8914e8:	01002274 	movhi	r4,137
  8914ec:	210c9104 	addi	r4,r4,12868
  8914f0:	08913e40 	call	8913e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  8914f4:	01c07fc4 	movi	r7,511
  8914f8:	01800044 	movi	r6,1
  8914fc:	e17fff17 	ldw	r5,-4(fp)
  891500:	01002274 	movhi	r4,137
  891504:	210c9704 	addi	r4,r4,12892
  891508:	08913e40 	call	8913e4 <alt_open_fd>
}  
  89150c:	0001883a 	nop
  891510:	e037883a 	mov	sp,fp
  891514:	dfc00117 	ldw	ra,4(sp)
  891518:	df000017 	ldw	fp,0(sp)
  89151c:	dec00204 	addi	sp,sp,8
  891520:	f800283a 	ret

00891524 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  891524:	defff004 	addi	sp,sp,-64
  891528:	df000f15 	stw	fp,60(sp)
  89152c:	df000f04 	addi	fp,sp,60
  891530:	e13ffd15 	stw	r4,-12(fp)
  891534:	e17ffe15 	stw	r5,-8(fp)
  891538:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
  89153c:	00bffa84 	movi	r2,-22
  891540:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  891544:	e0bffd17 	ldw	r2,-12(fp)
  891548:	10800828 	cmpgeui	r2,r2,32
  89154c:	1000501e 	bne	r2,zero,891690 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  891550:	0005303a 	rdctl	r2,status
  891554:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  891558:	e0fff617 	ldw	r3,-40(fp)
  89155c:	00bfff84 	movi	r2,-2
  891560:	1884703a 	and	r2,r3,r2
  891564:	1001703a 	wrctl	status,r2
  
  return context;
  891568:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
  89156c:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
  891570:	00802274 	movhi	r2,137
  891574:	10981f04 	addi	r2,r2,24700
  891578:	e0fffd17 	ldw	r3,-12(fp)
  89157c:	180690fa 	slli	r3,r3,3
  891580:	10c5883a 	add	r2,r2,r3
  891584:	e0ffff17 	ldw	r3,-4(fp)
  891588:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
  89158c:	00802274 	movhi	r2,137
  891590:	10981f04 	addi	r2,r2,24700
  891594:	e0fffd17 	ldw	r3,-12(fp)
  891598:	180690fa 	slli	r3,r3,3
  89159c:	10c5883a 	add	r2,r2,r3
  8915a0:	10800104 	addi	r2,r2,4
  8915a4:	e0fffe17 	ldw	r3,-8(fp)
  8915a8:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
  8915ac:	e0bfff17 	ldw	r2,-4(fp)
  8915b0:	10001926 	beq	r2,zero,891618 <alt_irq_register+0xf4>
  8915b4:	e0bffd17 	ldw	r2,-12(fp)
  8915b8:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8915bc:	0005303a 	rdctl	r2,status
  8915c0:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8915c4:	e0fff717 	ldw	r3,-36(fp)
  8915c8:	00bfff84 	movi	r2,-2
  8915cc:	1884703a 	and	r2,r3,r2
  8915d0:	1001703a 	wrctl	status,r2
  
  return context;
  8915d4:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  8915d8:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
  8915dc:	00c00044 	movi	r3,1
  8915e0:	e0bff217 	ldw	r2,-56(fp)
  8915e4:	1884983a 	sll	r2,r3,r2
  8915e8:	1007883a 	mov	r3,r2
  8915ec:	d0a6f817 	ldw	r2,-25632(gp)
  8915f0:	1884b03a 	or	r2,r3,r2
  8915f4:	d0a6f815 	stw	r2,-25632(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8915f8:	d0a6f817 	ldw	r2,-25632(gp)
  8915fc:	100170fa 	wrctl	ienable,r2
  891600:	e0bff817 	ldw	r2,-32(fp)
  891604:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  891608:	e0bff917 	ldw	r2,-28(fp)
  89160c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  891610:	0005883a 	mov	r2,zero
  891614:	00001906 	br	89167c <alt_irq_register+0x158>
  891618:	e0bffd17 	ldw	r2,-12(fp)
  89161c:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  891620:	0005303a 	rdctl	r2,status
  891624:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  891628:	e0fffa17 	ldw	r3,-24(fp)
  89162c:	00bfff84 	movi	r2,-2
  891630:	1884703a 	and	r2,r3,r2
  891634:	1001703a 	wrctl	status,r2
  
  return context;
  891638:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  89163c:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
  891640:	00c00044 	movi	r3,1
  891644:	e0bff417 	ldw	r2,-48(fp)
  891648:	1884983a 	sll	r2,r3,r2
  89164c:	0084303a 	nor	r2,zero,r2
  891650:	1007883a 	mov	r3,r2
  891654:	d0a6f817 	ldw	r2,-25632(gp)
  891658:	1884703a 	and	r2,r3,r2
  89165c:	d0a6f815 	stw	r2,-25632(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  891660:	d0a6f817 	ldw	r2,-25632(gp)
  891664:	100170fa 	wrctl	ienable,r2
  891668:	e0bffb17 	ldw	r2,-20(fp)
  89166c:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  891670:	e0bffc17 	ldw	r2,-16(fp)
  891674:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  891678:	0005883a 	mov	r2,zero
  89167c:	e0bff115 	stw	r2,-60(fp)
  891680:	e0bff317 	ldw	r2,-52(fp)
  891684:	e0bff515 	stw	r2,-44(fp)
  891688:	e0bff517 	ldw	r2,-44(fp)
  89168c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
  891690:	e0bff117 	ldw	r2,-60(fp)
}
  891694:	e037883a 	mov	sp,fp
  891698:	df000017 	ldw	fp,0(sp)
  89169c:	dec00104 	addi	sp,sp,4
  8916a0:	f800283a 	ret

008916a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8916a4:	defffe04 	addi	sp,sp,-8
  8916a8:	dfc00115 	stw	ra,4(sp)
  8916ac:	df000015 	stw	fp,0(sp)
  8916b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8916b4:	d0a01517 	ldw	r2,-32684(gp)
  8916b8:	10000326 	beq	r2,zero,8916c8 <alt_get_errno+0x24>
  8916bc:	d0a01517 	ldw	r2,-32684(gp)
  8916c0:	103ee83a 	callr	r2
  8916c4:	00000106 	br	8916cc <alt_get_errno+0x28>
  8916c8:	d0a6f104 	addi	r2,gp,-25660
}
  8916cc:	e037883a 	mov	sp,fp
  8916d0:	dfc00117 	ldw	ra,4(sp)
  8916d4:	df000017 	ldw	fp,0(sp)
  8916d8:	dec00204 	addi	sp,sp,8
  8916dc:	f800283a 	ret

008916e0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  8916e0:	defffd04 	addi	sp,sp,-12
  8916e4:	df000215 	stw	fp,8(sp)
  8916e8:	df000204 	addi	fp,sp,8
  8916ec:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  8916f0:	e0bfff17 	ldw	r2,-4(fp)
  8916f4:	10800217 	ldw	r2,8(r2)
  8916f8:	10d00034 	orhi	r3,r2,16384
  8916fc:	e0bfff17 	ldw	r2,-4(fp)
  891700:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  891704:	e03ffe15 	stw	zero,-8(fp)
  891708:	00001d06 	br	891780 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  89170c:	00802274 	movhi	r2,137
  891710:	108c9104 	addi	r2,r2,12868
  891714:	e0fffe17 	ldw	r3,-8(fp)
  891718:	18c00324 	muli	r3,r3,12
  89171c:	10c5883a 	add	r2,r2,r3
  891720:	10c00017 	ldw	r3,0(r2)
  891724:	e0bfff17 	ldw	r2,-4(fp)
  891728:	10800017 	ldw	r2,0(r2)
  89172c:	1880111e 	bne	r3,r2,891774 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  891730:	00802274 	movhi	r2,137
  891734:	108c9104 	addi	r2,r2,12868
  891738:	e0fffe17 	ldw	r3,-8(fp)
  89173c:	18c00324 	muli	r3,r3,12
  891740:	10c5883a 	add	r2,r2,r3
  891744:	10800204 	addi	r2,r2,8
  891748:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  89174c:	1000090e 	bge	r2,zero,891774 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  891750:	e0bffe17 	ldw	r2,-8(fp)
  891754:	10c00324 	muli	r3,r2,12
  891758:	00802274 	movhi	r2,137
  89175c:	108c9104 	addi	r2,r2,12868
  891760:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  891764:	e0bfff17 	ldw	r2,-4(fp)
  891768:	18800226 	beq	r3,r2,891774 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  89176c:	00bffcc4 	movi	r2,-13
  891770:	00000806 	br	891794 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  891774:	e0bffe17 	ldw	r2,-8(fp)
  891778:	10800044 	addi	r2,r2,1
  89177c:	e0bffe15 	stw	r2,-8(fp)
  891780:	d0a01417 	ldw	r2,-32688(gp)
  891784:	1007883a 	mov	r3,r2
  891788:	e0bffe17 	ldw	r2,-8(fp)
  89178c:	18bfdf2e 	bgeu	r3,r2,89170c <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  891790:	0005883a 	mov	r2,zero
}
  891794:	e037883a 	mov	sp,fp
  891798:	df000017 	ldw	fp,0(sp)
  89179c:	dec00104 	addi	sp,sp,4
  8917a0:	f800283a 	ret

008917a4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  8917a4:	defff604 	addi	sp,sp,-40
  8917a8:	dfc00915 	stw	ra,36(sp)
  8917ac:	df000815 	stw	fp,32(sp)
  8917b0:	df000804 	addi	fp,sp,32
  8917b4:	e13ffd15 	stw	r4,-12(fp)
  8917b8:	e17ffe15 	stw	r5,-8(fp)
  8917bc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  8917c0:	00bfffc4 	movi	r2,-1
  8917c4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  8917c8:	00bffb44 	movi	r2,-19
  8917cc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  8917d0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8917d4:	d1601204 	addi	r5,gp,-32696
  8917d8:	e13ffd17 	ldw	r4,-12(fp)
  8917dc:	0891ac00 	call	891ac0 <alt_find_dev>
  8917e0:	e0bff815 	stw	r2,-32(fp)
  8917e4:	e0bff817 	ldw	r2,-32(fp)
  8917e8:	1000051e 	bne	r2,zero,891800 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8917ec:	e13ffd17 	ldw	r4,-12(fp)
  8917f0:	0891b500 	call	891b50 <alt_find_file>
  8917f4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  8917f8:	00800044 	movi	r2,1
  8917fc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  891800:	e0bff817 	ldw	r2,-32(fp)
  891804:	10002926 	beq	r2,zero,8918ac <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  891808:	e13ff817 	ldw	r4,-32(fp)
  89180c:	0891c580 	call	891c58 <alt_get_fd>
  891810:	e0bff915 	stw	r2,-28(fp)
  891814:	e0bff917 	ldw	r2,-28(fp)
  891818:	1000030e 	bge	r2,zero,891828 <open+0x84>
    {
      status = index;
  89181c:	e0bff917 	ldw	r2,-28(fp)
  891820:	e0bffa15 	stw	r2,-24(fp)
  891824:	00002306 	br	8918b4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  891828:	e0bff917 	ldw	r2,-28(fp)
  89182c:	10c00324 	muli	r3,r2,12
  891830:	00802274 	movhi	r2,137
  891834:	108c9104 	addi	r2,r2,12868
  891838:	1885883a 	add	r2,r3,r2
  89183c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  891840:	e0fffe17 	ldw	r3,-8(fp)
  891844:	00900034 	movhi	r2,16384
  891848:	10bfffc4 	addi	r2,r2,-1
  89184c:	1886703a 	and	r3,r3,r2
  891850:	e0bffc17 	ldw	r2,-16(fp)
  891854:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  891858:	e0bffb17 	ldw	r2,-20(fp)
  89185c:	1000051e 	bne	r2,zero,891874 <open+0xd0>
  891860:	e13ffc17 	ldw	r4,-16(fp)
  891864:	08916e00 	call	8916e0 <alt_file_locked>
  891868:	e0bffa15 	stw	r2,-24(fp)
  89186c:	e0bffa17 	ldw	r2,-24(fp)
  891870:	10001016 	blt	r2,zero,8918b4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  891874:	e0bff817 	ldw	r2,-32(fp)
  891878:	10800317 	ldw	r2,12(r2)
  89187c:	10000826 	beq	r2,zero,8918a0 <open+0xfc>
  891880:	e0bff817 	ldw	r2,-32(fp)
  891884:	10800317 	ldw	r2,12(r2)
  891888:	e1ffff17 	ldw	r7,-4(fp)
  89188c:	e1bffe17 	ldw	r6,-8(fp)
  891890:	e17ffd17 	ldw	r5,-12(fp)
  891894:	e13ffc17 	ldw	r4,-16(fp)
  891898:	103ee83a 	callr	r2
  89189c:	00000106 	br	8918a4 <open+0x100>
  8918a0:	0005883a 	mov	r2,zero
  8918a4:	e0bffa15 	stw	r2,-24(fp)
  8918a8:	00000206 	br	8918b4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  8918ac:	00bffb44 	movi	r2,-19
  8918b0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  8918b4:	e0bffa17 	ldw	r2,-24(fp)
  8918b8:	1000090e 	bge	r2,zero,8918e0 <open+0x13c>
  {
    alt_release_fd (index);  
  8918bc:	e13ff917 	ldw	r4,-28(fp)
  8918c0:	088fdc80 	call	88fdc8 <alt_release_fd>
    ALT_ERRNO = -status;
  8918c4:	08916a40 	call	8916a4 <alt_get_errno>
  8918c8:	1007883a 	mov	r3,r2
  8918cc:	e0bffa17 	ldw	r2,-24(fp)
  8918d0:	0085c83a 	sub	r2,zero,r2
  8918d4:	18800015 	stw	r2,0(r3)
    return -1;
  8918d8:	00bfffc4 	movi	r2,-1
  8918dc:	00000106 	br	8918e4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  8918e0:	e0bff917 	ldw	r2,-28(fp)
}
  8918e4:	e037883a 	mov	sp,fp
  8918e8:	dfc00117 	ldw	ra,4(sp)
  8918ec:	df000017 	ldw	fp,0(sp)
  8918f0:	dec00204 	addi	sp,sp,8
  8918f4:	f800283a 	ret

008918f8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8918f8:	defffa04 	addi	sp,sp,-24
  8918fc:	df000515 	stw	fp,20(sp)
  891900:	df000504 	addi	fp,sp,20
  891904:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  891908:	0005303a 	rdctl	r2,status
  89190c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  891910:	e0fffc17 	ldw	r3,-16(fp)
  891914:	00bfff84 	movi	r2,-2
  891918:	1884703a 	and	r2,r3,r2
  89191c:	1001703a 	wrctl	status,r2
  
  return context;
  891920:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  891924:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  891928:	e0bfff17 	ldw	r2,-4(fp)
  89192c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  891930:	e0bffd17 	ldw	r2,-12(fp)
  891934:	10800017 	ldw	r2,0(r2)
  891938:	e0fffd17 	ldw	r3,-12(fp)
  89193c:	18c00117 	ldw	r3,4(r3)
  891940:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  891944:	e0bffd17 	ldw	r2,-12(fp)
  891948:	10800117 	ldw	r2,4(r2)
  89194c:	e0fffd17 	ldw	r3,-12(fp)
  891950:	18c00017 	ldw	r3,0(r3)
  891954:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  891958:	e0bffd17 	ldw	r2,-12(fp)
  89195c:	e0fffd17 	ldw	r3,-12(fp)
  891960:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  891964:	e0bffd17 	ldw	r2,-12(fp)
  891968:	e0fffd17 	ldw	r3,-12(fp)
  89196c:	10c00015 	stw	r3,0(r2)
  891970:	e0bffb17 	ldw	r2,-20(fp)
  891974:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  891978:	e0bffe17 	ldw	r2,-8(fp)
  89197c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  891980:	0001883a 	nop
  891984:	e037883a 	mov	sp,fp
  891988:	df000017 	ldw	fp,0(sp)
  89198c:	dec00104 	addi	sp,sp,4
  891990:	f800283a 	ret

00891994 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  891994:	defffb04 	addi	sp,sp,-20
  891998:	dfc00415 	stw	ra,16(sp)
  89199c:	df000315 	stw	fp,12(sp)
  8919a0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  8919a4:	d0a01817 	ldw	r2,-32672(gp)
  8919a8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  8919ac:	d0a6fa17 	ldw	r2,-25624(gp)
  8919b0:	10800044 	addi	r2,r2,1
  8919b4:	d0a6fa15 	stw	r2,-25624(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  8919b8:	00002e06 	br	891a74 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  8919bc:	e0bffd17 	ldw	r2,-12(fp)
  8919c0:	10800017 	ldw	r2,0(r2)
  8919c4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  8919c8:	e0bffd17 	ldw	r2,-12(fp)
  8919cc:	10800403 	ldbu	r2,16(r2)
  8919d0:	10803fcc 	andi	r2,r2,255
  8919d4:	10000426 	beq	r2,zero,8919e8 <alt_tick+0x54>
  8919d8:	d0a6fa17 	ldw	r2,-25624(gp)
  8919dc:	1000021e 	bne	r2,zero,8919e8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  8919e0:	e0bffd17 	ldw	r2,-12(fp)
  8919e4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  8919e8:	e0bffd17 	ldw	r2,-12(fp)
  8919ec:	10800217 	ldw	r2,8(r2)
  8919f0:	d0e6fa17 	ldw	r3,-25624(gp)
  8919f4:	18801d36 	bltu	r3,r2,891a6c <alt_tick+0xd8>
  8919f8:	e0bffd17 	ldw	r2,-12(fp)
  8919fc:	10800403 	ldbu	r2,16(r2)
  891a00:	10803fcc 	andi	r2,r2,255
  891a04:	1000191e 	bne	r2,zero,891a6c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  891a08:	e0bffd17 	ldw	r2,-12(fp)
  891a0c:	10800317 	ldw	r2,12(r2)
  891a10:	e0fffd17 	ldw	r3,-12(fp)
  891a14:	18c00517 	ldw	r3,20(r3)
  891a18:	1809883a 	mov	r4,r3
  891a1c:	103ee83a 	callr	r2
  891a20:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  891a24:	e0bfff17 	ldw	r2,-4(fp)
  891a28:	1000031e 	bne	r2,zero,891a38 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  891a2c:	e13ffd17 	ldw	r4,-12(fp)
  891a30:	08918f80 	call	8918f8 <alt_alarm_stop>
  891a34:	00000d06 	br	891a6c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  891a38:	e0bffd17 	ldw	r2,-12(fp)
  891a3c:	10c00217 	ldw	r3,8(r2)
  891a40:	e0bfff17 	ldw	r2,-4(fp)
  891a44:	1887883a 	add	r3,r3,r2
  891a48:	e0bffd17 	ldw	r2,-12(fp)
  891a4c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  891a50:	e0bffd17 	ldw	r2,-12(fp)
  891a54:	10c00217 	ldw	r3,8(r2)
  891a58:	d0a6fa17 	ldw	r2,-25624(gp)
  891a5c:	1880032e 	bgeu	r3,r2,891a6c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  891a60:	e0bffd17 	ldw	r2,-12(fp)
  891a64:	00c00044 	movi	r3,1
  891a68:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  891a6c:	e0bffe17 	ldw	r2,-8(fp)
  891a70:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  891a74:	e0fffd17 	ldw	r3,-12(fp)
  891a78:	d0a01804 	addi	r2,gp,-32672
  891a7c:	18bfcf1e 	bne	r3,r2,8919bc <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  891a80:	0001883a 	nop
}
  891a84:	0001883a 	nop
  891a88:	e037883a 	mov	sp,fp
  891a8c:	dfc00117 	ldw	ra,4(sp)
  891a90:	df000017 	ldw	fp,0(sp)
  891a94:	dec00204 	addi	sp,sp,8
  891a98:	f800283a 	ret

00891a9c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  891a9c:	deffff04 	addi	sp,sp,-4
  891aa0:	df000015 	stw	fp,0(sp)
  891aa4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  891aa8:	000170fa 	wrctl	ienable,zero
}
  891aac:	0001883a 	nop
  891ab0:	e037883a 	mov	sp,fp
  891ab4:	df000017 	ldw	fp,0(sp)
  891ab8:	dec00104 	addi	sp,sp,4
  891abc:	f800283a 	ret

00891ac0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  891ac0:	defffa04 	addi	sp,sp,-24
  891ac4:	dfc00515 	stw	ra,20(sp)
  891ac8:	df000415 	stw	fp,16(sp)
  891acc:	df000404 	addi	fp,sp,16
  891ad0:	e13ffe15 	stw	r4,-8(fp)
  891ad4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  891ad8:	e0bfff17 	ldw	r2,-4(fp)
  891adc:	10800017 	ldw	r2,0(r2)
  891ae0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  891ae4:	e13ffe17 	ldw	r4,-8(fp)
  891ae8:	08896b00 	call	8896b0 <strlen>
  891aec:	10800044 	addi	r2,r2,1
  891af0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  891af4:	00000d06 	br	891b2c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  891af8:	e0bffc17 	ldw	r2,-16(fp)
  891afc:	10800217 	ldw	r2,8(r2)
  891b00:	e0fffd17 	ldw	r3,-12(fp)
  891b04:	180d883a 	mov	r6,r3
  891b08:	e17ffe17 	ldw	r5,-8(fp)
  891b0c:	1009883a 	mov	r4,r2
  891b10:	0891e740 	call	891e74 <memcmp>
  891b14:	1000021e 	bne	r2,zero,891b20 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  891b18:	e0bffc17 	ldw	r2,-16(fp)
  891b1c:	00000706 	br	891b3c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  891b20:	e0bffc17 	ldw	r2,-16(fp)
  891b24:	10800017 	ldw	r2,0(r2)
  891b28:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  891b2c:	e0fffc17 	ldw	r3,-16(fp)
  891b30:	e0bfff17 	ldw	r2,-4(fp)
  891b34:	18bff01e 	bne	r3,r2,891af8 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  891b38:	0005883a 	mov	r2,zero
}
  891b3c:	e037883a 	mov	sp,fp
  891b40:	dfc00117 	ldw	ra,4(sp)
  891b44:	df000017 	ldw	fp,0(sp)
  891b48:	dec00204 	addi	sp,sp,8
  891b4c:	f800283a 	ret

00891b50 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  891b50:	defffb04 	addi	sp,sp,-20
  891b54:	dfc00415 	stw	ra,16(sp)
  891b58:	df000315 	stw	fp,12(sp)
  891b5c:	df000304 	addi	fp,sp,12
  891b60:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  891b64:	d0a01017 	ldw	r2,-32704(gp)
  891b68:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  891b6c:	00003106 	br	891c34 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  891b70:	e0bffd17 	ldw	r2,-12(fp)
  891b74:	10800217 	ldw	r2,8(r2)
  891b78:	1009883a 	mov	r4,r2
  891b7c:	08896b00 	call	8896b0 <strlen>
  891b80:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  891b84:	e0bffd17 	ldw	r2,-12(fp)
  891b88:	10c00217 	ldw	r3,8(r2)
  891b8c:	e0bffe17 	ldw	r2,-8(fp)
  891b90:	10bfffc4 	addi	r2,r2,-1
  891b94:	1885883a 	add	r2,r3,r2
  891b98:	10800003 	ldbu	r2,0(r2)
  891b9c:	10803fcc 	andi	r2,r2,255
  891ba0:	1080201c 	xori	r2,r2,128
  891ba4:	10bfe004 	addi	r2,r2,-128
  891ba8:	10800bd8 	cmpnei	r2,r2,47
  891bac:	1000031e 	bne	r2,zero,891bbc <alt_find_file+0x6c>
    {
      len -= 1;
  891bb0:	e0bffe17 	ldw	r2,-8(fp)
  891bb4:	10bfffc4 	addi	r2,r2,-1
  891bb8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  891bbc:	e0bffe17 	ldw	r2,-8(fp)
  891bc0:	e0ffff17 	ldw	r3,-4(fp)
  891bc4:	1885883a 	add	r2,r3,r2
  891bc8:	10800003 	ldbu	r2,0(r2)
  891bcc:	10803fcc 	andi	r2,r2,255
  891bd0:	1080201c 	xori	r2,r2,128
  891bd4:	10bfe004 	addi	r2,r2,-128
  891bd8:	10800be0 	cmpeqi	r2,r2,47
  891bdc:	1000081e 	bne	r2,zero,891c00 <alt_find_file+0xb0>
  891be0:	e0bffe17 	ldw	r2,-8(fp)
  891be4:	e0ffff17 	ldw	r3,-4(fp)
  891be8:	1885883a 	add	r2,r3,r2
  891bec:	10800003 	ldbu	r2,0(r2)
  891bf0:	10803fcc 	andi	r2,r2,255
  891bf4:	1080201c 	xori	r2,r2,128
  891bf8:	10bfe004 	addi	r2,r2,-128
  891bfc:	10000a1e 	bne	r2,zero,891c28 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  891c00:	e0bffd17 	ldw	r2,-12(fp)
  891c04:	10800217 	ldw	r2,8(r2)
  891c08:	e0fffe17 	ldw	r3,-8(fp)
  891c0c:	180d883a 	mov	r6,r3
  891c10:	e17fff17 	ldw	r5,-4(fp)
  891c14:	1009883a 	mov	r4,r2
  891c18:	0891e740 	call	891e74 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  891c1c:	1000021e 	bne	r2,zero,891c28 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  891c20:	e0bffd17 	ldw	r2,-12(fp)
  891c24:	00000706 	br	891c44 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  891c28:	e0bffd17 	ldw	r2,-12(fp)
  891c2c:	10800017 	ldw	r2,0(r2)
  891c30:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  891c34:	e0fffd17 	ldw	r3,-12(fp)
  891c38:	d0a01004 	addi	r2,gp,-32704
  891c3c:	18bfcc1e 	bne	r3,r2,891b70 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  891c40:	0005883a 	mov	r2,zero
}
  891c44:	e037883a 	mov	sp,fp
  891c48:	dfc00117 	ldw	ra,4(sp)
  891c4c:	df000017 	ldw	fp,0(sp)
  891c50:	dec00204 	addi	sp,sp,8
  891c54:	f800283a 	ret

00891c58 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  891c58:	defffc04 	addi	sp,sp,-16
  891c5c:	df000315 	stw	fp,12(sp)
  891c60:	df000304 	addi	fp,sp,12
  891c64:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  891c68:	00bffa04 	movi	r2,-24
  891c6c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  891c70:	e03ffd15 	stw	zero,-12(fp)
  891c74:	00001906 	br	891cdc <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  891c78:	00802274 	movhi	r2,137
  891c7c:	108c9104 	addi	r2,r2,12868
  891c80:	e0fffd17 	ldw	r3,-12(fp)
  891c84:	18c00324 	muli	r3,r3,12
  891c88:	10c5883a 	add	r2,r2,r3
  891c8c:	10800017 	ldw	r2,0(r2)
  891c90:	10000f1e 	bne	r2,zero,891cd0 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  891c94:	00802274 	movhi	r2,137
  891c98:	108c9104 	addi	r2,r2,12868
  891c9c:	e0fffd17 	ldw	r3,-12(fp)
  891ca0:	18c00324 	muli	r3,r3,12
  891ca4:	10c5883a 	add	r2,r2,r3
  891ca8:	e0ffff17 	ldw	r3,-4(fp)
  891cac:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  891cb0:	d0e01417 	ldw	r3,-32688(gp)
  891cb4:	e0bffd17 	ldw	r2,-12(fp)
  891cb8:	1880020e 	bge	r3,r2,891cc4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  891cbc:	e0bffd17 	ldw	r2,-12(fp)
  891cc0:	d0a01415 	stw	r2,-32688(gp)
      }
      rc = i;
  891cc4:	e0bffd17 	ldw	r2,-12(fp)
  891cc8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  891ccc:	00000606 	br	891ce8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  891cd0:	e0bffd17 	ldw	r2,-12(fp)
  891cd4:	10800044 	addi	r2,r2,1
  891cd8:	e0bffd15 	stw	r2,-12(fp)
  891cdc:	e0bffd17 	ldw	r2,-12(fp)
  891ce0:	10800810 	cmplti	r2,r2,32
  891ce4:	103fe41e 	bne	r2,zero,891c78 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  891ce8:	e0bffe17 	ldw	r2,-8(fp)
}
  891cec:	e037883a 	mov	sp,fp
  891cf0:	df000017 	ldw	fp,0(sp)
  891cf4:	dec00104 	addi	sp,sp,4
  891cf8:	f800283a 	ret

00891cfc <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  891cfc:	defffb04 	addi	sp,sp,-20
  891d00:	df000415 	stw	fp,16(sp)
  891d04:	df000404 	addi	fp,sp,16
  891d08:	e13ffe15 	stw	r4,-8(fp)
  891d0c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  891d10:	e0bfff17 	ldw	r2,-4(fp)
  891d14:	10840070 	cmpltui	r2,r2,4097
  891d18:	1000021e 	bne	r2,zero,891d24 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  891d1c:	00840004 	movi	r2,4096
  891d20:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  891d24:	e0fffe17 	ldw	r3,-8(fp)
  891d28:	e0bfff17 	ldw	r2,-4(fp)
  891d2c:	1885883a 	add	r2,r3,r2
  891d30:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  891d34:	e0bffe17 	ldw	r2,-8(fp)
  891d38:	e0bffc15 	stw	r2,-16(fp)
  891d3c:	00000506 	br	891d54 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  891d40:	e0bffc17 	ldw	r2,-16(fp)
  891d44:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  891d48:	e0bffc17 	ldw	r2,-16(fp)
  891d4c:	10800804 	addi	r2,r2,32
  891d50:	e0bffc15 	stw	r2,-16(fp)
  891d54:	e0fffc17 	ldw	r3,-16(fp)
  891d58:	e0bffd17 	ldw	r2,-12(fp)
  891d5c:	18bff836 	bltu	r3,r2,891d40 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  891d60:	e0bffe17 	ldw	r2,-8(fp)
  891d64:	108007cc 	andi	r2,r2,31
  891d68:	10000226 	beq	r2,zero,891d74 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  891d6c:	e0bffc17 	ldw	r2,-16(fp)
  891d70:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  891d74:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  891d78:	0001883a 	nop
  891d7c:	e037883a 	mov	sp,fp
  891d80:	df000017 	ldw	fp,0(sp)
  891d84:	dec00104 	addi	sp,sp,4
  891d88:	f800283a 	ret

00891d8c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  891d8c:	defffe04 	addi	sp,sp,-8
  891d90:	df000115 	stw	fp,4(sp)
  891d94:	df000104 	addi	fp,sp,4
  891d98:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  891d9c:	e0bfff17 	ldw	r2,-4(fp)
  891da0:	10bffe84 	addi	r2,r2,-6
  891da4:	10c00428 	cmpgeui	r3,r2,16
  891da8:	18001a1e 	bne	r3,zero,891e14 <alt_exception_cause_generated_bad_addr+0x88>
  891dac:	100690ba 	slli	r3,r2,2
  891db0:	00802274 	movhi	r2,137
  891db4:	10877104 	addi	r2,r2,7620
  891db8:	1885883a 	add	r2,r3,r2
  891dbc:	10800017 	ldw	r2,0(r2)
  891dc0:	1000683a 	jmp	r2
  891dc4:	00891e04 	movi	r2,9336
  891dc8:	00891e04 	movi	r2,9336
  891dcc:	00891e14 	movui	r2,9336
  891dd0:	00891e14 	movui	r2,9336
  891dd4:	00891e14 	movui	r2,9336
  891dd8:	00891e04 	movi	r2,9336
  891ddc:	00891e0c 	andi	r2,zero,9336
  891de0:	00891e14 	movui	r2,9336
  891de4:	00891e04 	movi	r2,9336
  891de8:	00891e04 	movi	r2,9336
  891dec:	00891e14 	movui	r2,9336
  891df0:	00891e04 	movi	r2,9336
  891df4:	00891e0c 	andi	r2,zero,9336
  891df8:	00891e14 	movui	r2,9336
  891dfc:	00891e14 	movui	r2,9336
  891e00:	00891e04 	movi	r2,9336
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  891e04:	00800044 	movi	r2,1
  891e08:	00000306 	br	891e18 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  891e0c:	0005883a 	mov	r2,zero
  891e10:	00000106 	br	891e18 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  891e14:	0005883a 	mov	r2,zero
  }
}
  891e18:	e037883a 	mov	sp,fp
  891e1c:	df000017 	ldw	fp,0(sp)
  891e20:	dec00104 	addi	sp,sp,4
  891e24:	f800283a 	ret

00891e28 <atexit>:
  891e28:	200b883a 	mov	r5,r4
  891e2c:	000f883a 	mov	r7,zero
  891e30:	000d883a 	mov	r6,zero
  891e34:	0009883a 	mov	r4,zero
  891e38:	0891ef01 	jmpi	891ef0 <__register_exitproc>

00891e3c <exit>:
  891e3c:	defffe04 	addi	sp,sp,-8
  891e40:	000b883a 	mov	r5,zero
  891e44:	dc000015 	stw	r16,0(sp)
  891e48:	dfc00115 	stw	ra,4(sp)
  891e4c:	2021883a 	mov	r16,r4
  891e50:	08920080 	call	892008 <__call_exitprocs>
  891e54:	00802274 	movhi	r2,137
  891e58:	10911f04 	addi	r2,r2,17532
  891e5c:	11000017 	ldw	r4,0(r2)
  891e60:	20800f17 	ldw	r2,60(r4)
  891e64:	10000126 	beq	r2,zero,891e6c <exit+0x30>
  891e68:	103ee83a 	callr	r2
  891e6c:	8009883a 	mov	r4,r16
  891e70:	088f6440 	call	88f644 <_exit>

00891e74 <memcmp>:
  891e74:	01c000c4 	movi	r7,3
  891e78:	3980192e 	bgeu	r7,r6,891ee0 <memcmp+0x6c>
  891e7c:	2144b03a 	or	r2,r4,r5
  891e80:	11c4703a 	and	r2,r2,r7
  891e84:	10000f26 	beq	r2,zero,891ec4 <memcmp+0x50>
  891e88:	20800003 	ldbu	r2,0(r4)
  891e8c:	28c00003 	ldbu	r3,0(r5)
  891e90:	10c0151e 	bne	r2,r3,891ee8 <memcmp+0x74>
  891e94:	31bfff84 	addi	r6,r6,-2
  891e98:	01ffffc4 	movi	r7,-1
  891e9c:	00000406 	br	891eb0 <memcmp+0x3c>
  891ea0:	20800003 	ldbu	r2,0(r4)
  891ea4:	28c00003 	ldbu	r3,0(r5)
  891ea8:	31bfffc4 	addi	r6,r6,-1
  891eac:	10c00e1e 	bne	r2,r3,891ee8 <memcmp+0x74>
  891eb0:	21000044 	addi	r4,r4,1
  891eb4:	29400044 	addi	r5,r5,1
  891eb8:	31fff91e 	bne	r6,r7,891ea0 <memcmp+0x2c>
  891ebc:	0005883a 	mov	r2,zero
  891ec0:	f800283a 	ret
  891ec4:	20c00017 	ldw	r3,0(r4)
  891ec8:	28800017 	ldw	r2,0(r5)
  891ecc:	18bfee1e 	bne	r3,r2,891e88 <memcmp+0x14>
  891ed0:	31bfff04 	addi	r6,r6,-4
  891ed4:	21000104 	addi	r4,r4,4
  891ed8:	29400104 	addi	r5,r5,4
  891edc:	39bff936 	bltu	r7,r6,891ec4 <memcmp+0x50>
  891ee0:	303fe91e 	bne	r6,zero,891e88 <memcmp+0x14>
  891ee4:	003ff506 	br	891ebc <memcmp+0x48>
  891ee8:	10c5c83a 	sub	r2,r2,r3
  891eec:	f800283a 	ret

00891ef0 <__register_exitproc>:
  891ef0:	defffa04 	addi	sp,sp,-24
  891ef4:	dc000315 	stw	r16,12(sp)
  891ef8:	04002274 	movhi	r16,137
  891efc:	84111f04 	addi	r16,r16,17532
  891f00:	80c00017 	ldw	r3,0(r16)
  891f04:	dc400415 	stw	r17,16(sp)
  891f08:	dfc00515 	stw	ra,20(sp)
  891f0c:	18805217 	ldw	r2,328(r3)
  891f10:	2023883a 	mov	r17,r4
  891f14:	10003726 	beq	r2,zero,891ff4 <__register_exitproc+0x104>
  891f18:	10c00117 	ldw	r3,4(r2)
  891f1c:	010007c4 	movi	r4,31
  891f20:	20c00e16 	blt	r4,r3,891f5c <__register_exitproc+0x6c>
  891f24:	1a000044 	addi	r8,r3,1
  891f28:	8800221e 	bne	r17,zero,891fb4 <__register_exitproc+0xc4>
  891f2c:	18c00084 	addi	r3,r3,2
  891f30:	18c7883a 	add	r3,r3,r3
  891f34:	18c7883a 	add	r3,r3,r3
  891f38:	12000115 	stw	r8,4(r2)
  891f3c:	10c7883a 	add	r3,r2,r3
  891f40:	19400015 	stw	r5,0(r3)
  891f44:	0005883a 	mov	r2,zero
  891f48:	dfc00517 	ldw	ra,20(sp)
  891f4c:	dc400417 	ldw	r17,16(sp)
  891f50:	dc000317 	ldw	r16,12(sp)
  891f54:	dec00604 	addi	sp,sp,24
  891f58:	f800283a 	ret
  891f5c:	00802234 	movhi	r2,136
  891f60:	108a5f04 	addi	r2,r2,10620
  891f64:	10002626 	beq	r2,zero,892000 <__register_exitproc+0x110>
  891f68:	01006404 	movi	r4,400
  891f6c:	d9400015 	stw	r5,0(sp)
  891f70:	d9800115 	stw	r6,4(sp)
  891f74:	d9c00215 	stw	r7,8(sp)
  891f78:	088297c0 	call	88297c <malloc>
  891f7c:	d9400017 	ldw	r5,0(sp)
  891f80:	d9800117 	ldw	r6,4(sp)
  891f84:	d9c00217 	ldw	r7,8(sp)
  891f88:	10001d26 	beq	r2,zero,892000 <__register_exitproc+0x110>
  891f8c:	81000017 	ldw	r4,0(r16)
  891f90:	10000115 	stw	zero,4(r2)
  891f94:	02000044 	movi	r8,1
  891f98:	22405217 	ldw	r9,328(r4)
  891f9c:	0007883a 	mov	r3,zero
  891fa0:	12400015 	stw	r9,0(r2)
  891fa4:	20805215 	stw	r2,328(r4)
  891fa8:	10006215 	stw	zero,392(r2)
  891fac:	10006315 	stw	zero,396(r2)
  891fb0:	883fde26 	beq	r17,zero,891f2c <__register_exitproc+0x3c>
  891fb4:	18c9883a 	add	r4,r3,r3
  891fb8:	2109883a 	add	r4,r4,r4
  891fbc:	1109883a 	add	r4,r2,r4
  891fc0:	21802215 	stw	r6,136(r4)
  891fc4:	01800044 	movi	r6,1
  891fc8:	12406217 	ldw	r9,392(r2)
  891fcc:	30cc983a 	sll	r6,r6,r3
  891fd0:	4992b03a 	or	r9,r9,r6
  891fd4:	12406215 	stw	r9,392(r2)
  891fd8:	21c04215 	stw	r7,264(r4)
  891fdc:	01000084 	movi	r4,2
  891fe0:	893fd21e 	bne	r17,r4,891f2c <__register_exitproc+0x3c>
  891fe4:	11006317 	ldw	r4,396(r2)
  891fe8:	218cb03a 	or	r6,r4,r6
  891fec:	11806315 	stw	r6,396(r2)
  891ff0:	003fce06 	br	891f2c <__register_exitproc+0x3c>
  891ff4:	18805304 	addi	r2,r3,332
  891ff8:	18805215 	stw	r2,328(r3)
  891ffc:	003fc606 	br	891f18 <__register_exitproc+0x28>
  892000:	00bfffc4 	movi	r2,-1
  892004:	003fd006 	br	891f48 <__register_exitproc+0x58>

00892008 <__call_exitprocs>:
  892008:	defff504 	addi	sp,sp,-44
  89200c:	df000915 	stw	fp,36(sp)
  892010:	dd400615 	stw	r21,24(sp)
  892014:	dc800315 	stw	r18,12(sp)
  892018:	dfc00a15 	stw	ra,40(sp)
  89201c:	ddc00815 	stw	r23,32(sp)
  892020:	dd800715 	stw	r22,28(sp)
  892024:	dd000515 	stw	r20,20(sp)
  892028:	dcc00415 	stw	r19,16(sp)
  89202c:	dc400215 	stw	r17,8(sp)
  892030:	dc000115 	stw	r16,4(sp)
  892034:	d9000015 	stw	r4,0(sp)
  892038:	2839883a 	mov	fp,r5
  89203c:	04800044 	movi	r18,1
  892040:	057fffc4 	movi	r21,-1
  892044:	00802274 	movhi	r2,137
  892048:	10911f04 	addi	r2,r2,17532
  89204c:	12000017 	ldw	r8,0(r2)
  892050:	45005217 	ldw	r20,328(r8)
  892054:	44c05204 	addi	r19,r8,328
  892058:	a0001c26 	beq	r20,zero,8920cc <__call_exitprocs+0xc4>
  89205c:	a0800117 	ldw	r2,4(r20)
  892060:	15ffffc4 	addi	r23,r2,-1
  892064:	b8000d16 	blt	r23,zero,89209c <__call_exitprocs+0x94>
  892068:	14000044 	addi	r16,r2,1
  89206c:	8421883a 	add	r16,r16,r16
  892070:	8421883a 	add	r16,r16,r16
  892074:	84402004 	addi	r17,r16,128
  892078:	a463883a 	add	r17,r20,r17
  89207c:	a421883a 	add	r16,r20,r16
  892080:	e0001e26 	beq	fp,zero,8920fc <__call_exitprocs+0xf4>
  892084:	80804017 	ldw	r2,256(r16)
  892088:	e0801c26 	beq	fp,r2,8920fc <__call_exitprocs+0xf4>
  89208c:	bdffffc4 	addi	r23,r23,-1
  892090:	843fff04 	addi	r16,r16,-4
  892094:	8c7fff04 	addi	r17,r17,-4
  892098:	bd7ff91e 	bne	r23,r21,892080 <__call_exitprocs+0x78>
  89209c:	00802234 	movhi	r2,136
  8920a0:	108a6404 	addi	r2,r2,10640
  8920a4:	10000926 	beq	r2,zero,8920cc <__call_exitprocs+0xc4>
  8920a8:	a0800117 	ldw	r2,4(r20)
  8920ac:	1000301e 	bne	r2,zero,892170 <__call_exitprocs+0x168>
  8920b0:	a0800017 	ldw	r2,0(r20)
  8920b4:	10003226 	beq	r2,zero,892180 <__call_exitprocs+0x178>
  8920b8:	a009883a 	mov	r4,r20
  8920bc:	98800015 	stw	r2,0(r19)
  8920c0:	08829900 	call	882990 <free>
  8920c4:	9d000017 	ldw	r20,0(r19)
  8920c8:	a03fe41e 	bne	r20,zero,89205c <__call_exitprocs+0x54>
  8920cc:	dfc00a17 	ldw	ra,40(sp)
  8920d0:	df000917 	ldw	fp,36(sp)
  8920d4:	ddc00817 	ldw	r23,32(sp)
  8920d8:	dd800717 	ldw	r22,28(sp)
  8920dc:	dd400617 	ldw	r21,24(sp)
  8920e0:	dd000517 	ldw	r20,20(sp)
  8920e4:	dcc00417 	ldw	r19,16(sp)
  8920e8:	dc800317 	ldw	r18,12(sp)
  8920ec:	dc400217 	ldw	r17,8(sp)
  8920f0:	dc000117 	ldw	r16,4(sp)
  8920f4:	dec00b04 	addi	sp,sp,44
  8920f8:	f800283a 	ret
  8920fc:	a0800117 	ldw	r2,4(r20)
  892100:	80c00017 	ldw	r3,0(r16)
  892104:	10bfffc4 	addi	r2,r2,-1
  892108:	15c01426 	beq	r2,r23,89215c <__call_exitprocs+0x154>
  89210c:	80000015 	stw	zero,0(r16)
  892110:	183fde26 	beq	r3,zero,89208c <__call_exitprocs+0x84>
  892114:	95c8983a 	sll	r4,r18,r23
  892118:	a0806217 	ldw	r2,392(r20)
  89211c:	a5800117 	ldw	r22,4(r20)
  892120:	2084703a 	and	r2,r4,r2
  892124:	10000b26 	beq	r2,zero,892154 <__call_exitprocs+0x14c>
  892128:	a0806317 	ldw	r2,396(r20)
  89212c:	2088703a 	and	r4,r4,r2
  892130:	20000c1e 	bne	r4,zero,892164 <__call_exitprocs+0x15c>
  892134:	89400017 	ldw	r5,0(r17)
  892138:	d9000017 	ldw	r4,0(sp)
  89213c:	183ee83a 	callr	r3
  892140:	a0800117 	ldw	r2,4(r20)
  892144:	15bfbf1e 	bne	r2,r22,892044 <__call_exitprocs+0x3c>
  892148:	98800017 	ldw	r2,0(r19)
  89214c:	153fcf26 	beq	r2,r20,89208c <__call_exitprocs+0x84>
  892150:	003fbc06 	br	892044 <__call_exitprocs+0x3c>
  892154:	183ee83a 	callr	r3
  892158:	003ff906 	br	892140 <__call_exitprocs+0x138>
  89215c:	a5c00115 	stw	r23,4(r20)
  892160:	003feb06 	br	892110 <__call_exitprocs+0x108>
  892164:	89000017 	ldw	r4,0(r17)
  892168:	183ee83a 	callr	r3
  89216c:	003ff406 	br	892140 <__call_exitprocs+0x138>
  892170:	a0800017 	ldw	r2,0(r20)
  892174:	a027883a 	mov	r19,r20
  892178:	1029883a 	mov	r20,r2
  89217c:	003fb606 	br	892058 <__call_exitprocs+0x50>
  892180:	0005883a 	mov	r2,zero
  892184:	003ffb06 	br	892174 <__call_exitprocs+0x16c>
  892188:	0201ffff 	0x201ffff
  89218c:	883a0000 	call	883a000 <__alt_data_end+0x7f58580>
  892190:	010d0bff 	0x10d0bff
  892194:	01010002 	0x1010002
	...
  8921a0:	010d0bff 	0x10d0bff
  8921a4:	01010004 	movi	r4,1024
  8921a8:	00000100 	call	10 <__alt_mem_new_sdram_controller_0+0x10>
  8921ac:	00000000 	call	0 <__alt_mem_new_sdram_controller_0>
  8921b0:	01110bff 	0x1110bff
  8921b4:	01010004 	movi	r4,1024
  8921b8:	7f000105 	stb	fp,4(r15)
  8921bc:	007d0000 	call	7d000 <__alt_mem_new_sdram_controller_0+0x7d000>
  8921c0:	00000000 	call	0 <__alt_mem_new_sdram_controller_0>
  8921c4:	01ffff00 	call	1ffff0 <__alt_mem_new_sdram_controller_0+0x1ffff0>
  8921c8:	3a000002 	0x3a000002
  8921cc:	00881c3c 	xorhi	r2,zero,8304
